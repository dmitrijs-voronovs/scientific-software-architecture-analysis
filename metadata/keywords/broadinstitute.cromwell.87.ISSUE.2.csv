id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/broadinstitute/cromwell/issues/1763:65,Testability,test,test,65,"GOTC was running the test for staging PAPI (Pipelines API). This test is launching 50 Single Sample workflows at once and 4 of our workflows failed with this error.; ```; ""message"": ""429 Too Many Requests\n{\n \""code\"" : 429,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""reason\"" : \""rateLimitExceeded\""\n } ],\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""status\"" : \""RESOURCE_EXHAUSTED\""\n}""; ```. All 4 of the jobs that failed were non-premptible whereas there are preemptible jobs that ran into this error and just went from attempt 1 to attempt 2 or w/e. . I don't think we would want this error to count towards our attempt count and we definitely don't want it to fail non preemptible tasks. @kcibul for prioritization",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1763
https://github.com/broadinstitute/cromwell/issues/1763:384,Testability,sandbox,sandbox,384,"GOTC was running the test for staging PAPI (Pipelines API). This test is launching 50 Single Sample workflows at once and 4 of our workflows failed with this error.; ```; ""message"": ""429 Too Many Requests\n{\n \""code\"" : 429,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""reason\"" : \""rateLimitExceeded\""\n } ],\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""status\"" : \""RESOURCE_EXHAUSTED\""\n}""; ```. All 4 of the jobs that failed were non-premptible whereas there are preemptible jobs that ran into this error and just went from attempt 1 to attempt 2 or w/e. . I don't think we would want this error to count towards our attempt count and we definitely don't want it to fail non preemptible tasks. @kcibul for prioritization",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1763
https://github.com/broadinstitute/cromwell/issues/1763:620,Testability,sandbox,sandbox,620,"GOTC was running the test for staging PAPI (Pipelines API). This test is launching 50 Single Sample workflows at once and 4 of our workflows failed with this error.; ```; ""message"": ""429 Too Many Requests\n{\n \""code\"" : 429,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""reason\"" : \""rateLimitExceeded\""\n } ],\n \""message\"" : \""Insufficient tokens for quota group and limit 'defaultUSER-100s' of service 'staging-genomics.sandbox.googleapis.com', using the limit by ID '628662467800@1088569555438'.\"",\n \""status\"" : \""RESOURCE_EXHAUSTED\""\n}""; ```. All 4 of the jobs that failed were non-premptible whereas there are preemptible jobs that ran into this error and just went from attempt 1 to attempt 2 or w/e. . I don't think we would want this error to count towards our attempt count and we definitely don't want it to fail non preemptible tasks. @kcibul for prioritization",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1763
https://github.com/broadinstitute/cromwell/issues/1765:558,Availability,ERROR,ERROR,558,"In 0.22 you could have something like this in config backend:; ```; runtime_attributes = """"""; String? pbs_email; """"""; ```; And then reference `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(T",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:1120,Availability,Error,Error,1120,"erence `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateComm",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:3978,Availability,robust,robustExecuteOrRecover,3978,gAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceiv,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:4170,Availability,robust,robustExecuteOrRecover,4170,impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.process,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:4531,Availability,robust,robustExecuteOrRecover,4531,r.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:46,Modifiability,config,config,46,"In 0.22 you could have something like this in config backend:; ```; runtime_attributes = """"""; String? pbs_email; """"""; ```; And then reference `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(T",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2356,Modifiability,config,config,2356,nfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystem,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2363,Modifiability,Config,ConfigAsyncJobExecutionActor,2363,nd$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2414,Modifiability,Config,ConfigAsyncJobExecutionActor,2414,07); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.S,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2484,Modifiability,config,config,2484,apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2546,Modifiability,Config,ConfigAsyncJobExecutionActor,2546,fun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2617,Modifiability,config,config,2617,versableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFile,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2624,Modifiability,Config,ConfigAsyncJobExecutionActor,2624,$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2671,Modifiability,Config,ConfigAsyncJobExecutionActor,2671,); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedF,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2741,Modifiability,config,config,2741,); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2810,Modifiability,Config,ConfigAsyncJobExecutionActor,2810,; 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrReco,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2881,Modifiability,config,config,2881,); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:2939,Modifiability,Config,ConfigAsyncJobExecutionActor,2939,:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$A,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:3145,Modifiability,config,config,3145,Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBacke,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:3205,Modifiability,Config,ConfigAsyncJobExecutionActor,3205,ply(Task.scala:107); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:107); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.writeTaskScript(ConfigAsyncJobExecutionActor.scala:55); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.writeTaskScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.ConfigAsyncJobExecutionActor$class.processArgs(ConfigAsyncJobExecutionActor.scala:39); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:3754,Modifiability,config,config,3754,dConfigAsyncJobExecutionActor.processArgs$lzycompute(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:3817,Modifiability,Config,ConfigAsyncJobExecutionActor,3817,bExecutionActor.scala:124); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.processArgs(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeScript(SharedFileSystemAsyncJobExecutionActor.scala:220); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeScript(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$executeOrRecover$2.apply(SharedFileSystemAsyncJobExecutionActor.scala:189); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.executeOrRecover(SharedFileSystemAsyncJobExecutionActor.scala:188); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:124); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:4886,Modifiability,config,config,4886,"cBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlS",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:4946,Modifiability,Config,ConfigAsyncJobExecutionActor,4946,"ackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:7139,Modifiability,Variab,VariableNotFoundException,7139,"Task.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at scala.util.Success.flatMap(Try.scala:231); 	at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:54); 	at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:87); 	at wdl4s.WdlExpression.evaluate(WdlExpression.scala:163); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:37); ```. The problem appears to be in wdl4s now that optionals are first class citizens the `evaluate` [here](https://github.com/broadinstitute/wdl4s/blob/4e236a7e6e2202cd62e2a5fee991faf9829b3e67/src/main/scala/wdl4s/command/ParameterCommandPart.scala#L38) is failing with `WdlExpressionException` because you can't add `WdlOptionalValue` to `WdlString`, rather than the `VariableNotFoundException` that is handled a couple of lines below, which usefully used to return an empty string when you tried evaluate an expression with an unsupplied ""?"" variable.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:7314,Modifiability,variab,variable,7314,"Task.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at scala.util.Success.flatMap(Try.scala:231); 	at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:54); 	at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:87); 	at wdl4s.WdlExpression.evaluate(WdlExpression.scala:163); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:37); ```. The problem appears to be in wdl4s now that optionals are first class citizens the `evaluate` [here](https://github.com/broadinstitute/wdl4s/blob/4e236a7e6e2202cd62e2a5fee991faf9829b3e67/src/main/scala/wdl4s/command/ParameterCommandPart.scala#L38) is failing with `WdlExpressionException` because you can't add `WdlOptionalValue` to `WdlString`, rather than the `VariableNotFoundException` that is handled a couple of lines below, which usefully used to return an empty string when you tried evaluate an expression with an unsupplied ""?"" variable.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:5275,Performance,concurren,concurrent,5275,"ry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at w",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:5349,Performance,concurren,concurrent,5349,"or$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.sc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:5435,Performance,concurren,concurrent,5435,".AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:5513,Performance,concurren,concurrent,5513,"cutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:45); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at scala.util.Success.flatMap(Try.scala:231); 	at wdl4s.expression",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:5638,Performance,perform,perform,5638,"eive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:69); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.DispatchedConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:124); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: wdl4s.WdlExpressionException: Cannot perform operation: -m ea -M + WdlOptionalValue(WdlStringType,Some(WdlString(conrad.leonard@qimrberghofer.edu.au))); 	at wdl4s.values.WdlValue$class.invalid(WdlValue.scala:12); 	at wdl4s.values.WdlString.invalid(WdlString.scala:7); 	at wdl4s.values.WdlString.add(WdlString.scala:15); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3$$anonfun$apply$1.apply(ValueEvaluator.scala:54); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$3.apply(ValueEvaluator.scala:54); 	at scala.util.Success.flatMap(Try.scala:231); 	at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:54); 	at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:87); 	at wdl4s.WdlExpression.evaluate(Wd",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:896,Testability,test,testMe,896,"In 0.22 you could have something like this in config backend:; ```; runtime_attributes = """"""; String? pbs_email; """"""; ```; And then reference `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(T",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:986,Testability,test,testMe,986,"In 0.22 you could have something like this in config backend:; ```; runtime_attributes = """"""; String? pbs_email; """"""; ```; And then reference `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(T",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1765:1099,Testability,test,testMe,1099,"fig backend:; ```; runtime_attributes = """"""; String? pbs_email; """"""; ```; And then reference `pbs_email` inside an expression in the `submit` definition like so:; ```; submit = """"""; qsub ${""-me ea -M"" + pbs_email}; """"""; ```; so that if `pbs_email` isn't supplied, neither are the preceding option flags (as documented in `Optional Parameters and Type Constraints -> Prepending a String to an Optional Parameter` at https://software.broadinstitute.org/wdl/devzone.php). This doesn't work anymore in 23:; ```; [ERROR] [12/09/2016 11:09:29.763] [cromwell-system-akka.dispatchers.backend-dispatcher-19] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-71ccb54a-f88c-49b2-aeee-1af92749e337/WorkflowExecutionActor-71ccb54a-f88c-49b2-aeee-1af92749e337/71ccb54a-f88c-49b2-aeee-1af92749e337-EngineJobExecutionActor-testMe.worker:NA:1/71ccb54a-f88c-49b2-aeee-1af92749e337-BackendJobExecutionActor-71ccb54a:testMe.worker:-1:1/SharedFileSystemAsyncJobExecutionActor] SharedFileSystemAsyncJobExecutionActor [UUID(71ccb54a)testMe.worker:NA:1]: Error attempting to Execute the script; java.lang.UnsupportedOperationException: Could not evaluate expression: ""-m ea -M "" + pbs_email; 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:49); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:107); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1765
https://github.com/broadinstitute/cromwell/issues/1768:193,Deployability,release,release,193,"@katevoss commented on [Thu Dec 08 2016](https://github.com/broadinstitute/dsde-docs/issues/1515). - [ ] Link to [Dev Docs](https://software.broadinstitute.org/wdl/devzone), latest version and release notes, blog, contact us (Slack and Forum), WDL Spec, [WDL website](https://software.broadinstitute.org/wdl/), [GATK website](https://software.broadinstitute.org/gatk/); - [ ] Link and describe the following files: [Authors](https://github.com/broadinstitute/cromwell/blob/develop/AUTHORS), [Changelog](https://github.com/broadinstitute/cromwell/blob/develop/CHANGELOG.md), [Apache License](https://github.com/broadinstitute/cromwell/blob/develop/LICENSE-ASL-2.0), [Broad License](https://github.com/broadinstitute/cromwell/blob/develop/LICENSE.txt), [Migration](https://github.com/broadinstitute/cromwell/blob/develop/MIGRATION.md), [Making a Backend](https://github.com/broadinstitute/cromwell/blob/develop/MakingABackend.MD), [Notice](https://github.com/broadinstitute/cromwell/blob/develop/NOTICE), [Security](https://github.com/broadinstitute/cromwell/blob/develop/SecurityRecommendations.md).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1768
https://github.com/broadinstitute/cromwell/issues/1768:1004,Security,Secur,Security,1004,"@katevoss commented on [Thu Dec 08 2016](https://github.com/broadinstitute/dsde-docs/issues/1515). - [ ] Link to [Dev Docs](https://software.broadinstitute.org/wdl/devzone), latest version and release notes, blog, contact us (Slack and Forum), WDL Spec, [WDL website](https://software.broadinstitute.org/wdl/), [GATK website](https://software.broadinstitute.org/gatk/); - [ ] Link and describe the following files: [Authors](https://github.com/broadinstitute/cromwell/blob/develop/AUTHORS), [Changelog](https://github.com/broadinstitute/cromwell/blob/develop/CHANGELOG.md), [Apache License](https://github.com/broadinstitute/cromwell/blob/develop/LICENSE-ASL-2.0), [Broad License](https://github.com/broadinstitute/cromwell/blob/develop/LICENSE.txt), [Migration](https://github.com/broadinstitute/cromwell/blob/develop/MIGRATION.md), [Making a Backend](https://github.com/broadinstitute/cromwell/blob/develop/MakingABackend.MD), [Notice](https://github.com/broadinstitute/cromwell/blob/develop/NOTICE), [Security](https://github.com/broadinstitute/cromwell/blob/develop/SecurityRecommendations.md).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1768
https://github.com/broadinstitute/cromwell/issues/1768:1070,Security,Secur,SecurityRecommendations,1070,"@katevoss commented on [Thu Dec 08 2016](https://github.com/broadinstitute/dsde-docs/issues/1515). - [ ] Link to [Dev Docs](https://software.broadinstitute.org/wdl/devzone), latest version and release notes, blog, contact us (Slack and Forum), WDL Spec, [WDL website](https://software.broadinstitute.org/wdl/), [GATK website](https://software.broadinstitute.org/gatk/); - [ ] Link and describe the following files: [Authors](https://github.com/broadinstitute/cromwell/blob/develop/AUTHORS), [Changelog](https://github.com/broadinstitute/cromwell/blob/develop/CHANGELOG.md), [Apache License](https://github.com/broadinstitute/cromwell/blob/develop/LICENSE-ASL-2.0), [Broad License](https://github.com/broadinstitute/cromwell/blob/develop/LICENSE.txt), [Migration](https://github.com/broadinstitute/cromwell/blob/develop/MIGRATION.md), [Making a Backend](https://github.com/broadinstitute/cromwell/blob/develop/MakingABackend.MD), [Notice](https://github.com/broadinstitute/cromwell/blob/develop/NOTICE), [Security](https://github.com/broadinstitute/cromwell/blob/develop/SecurityRecommendations.md).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1768
https://github.com/broadinstitute/cromwell/issues/1770:80,Integrability,message,message,80,`handleWorkflowSuccess` in `WorkflowExecutionActor` attempts to print out a log message which include the outputs. This doesn't go so well when the outputs are ginormous.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1770
https://github.com/broadinstitute/cromwell/issues/1770:76,Testability,log,log,76,`handleWorkflowSuccess` in `WorkflowExecutionActor` attempts to print out a log message which include the outputs. This doesn't go so well when the outputs are ginormous.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1770
https://github.com/broadinstitute/cromwell/issues/1773:415,Availability,error,error,415,"- 0.23; - Single Workflow; - SGE backend. Task fails, but cromwell, never realizes and simply hangs. SGE has already exited cleanly. In this case, I believe cromwell would simply exit with non-zero return code. stderr:; ```; /var/spool/sge/node1403/job_scripts/9226232: line 16: warning: here-document at line 4 delimited by end-of-file (wanted `CODE'); /var/spool/sge/node1403/job_scripts/9226232: line 17: syntax error: unexpected end of file. ```. Task is broken due to unforeseen tab issues (unlikely to be reproduced correctly here):. ```wdl; command {; python <<CODE; 	 	import shutil; 		import os; 		str_file_list = """"""${sep=""\n"" files}""""""; 		fp = fopen(${output_file}, 'w'); 		fp.write(str_file_list); 		fp.close(); CODE; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1773
https://github.com/broadinstitute/cromwell/issues/1773:87,Usability,simpl,simply,87,"- 0.23; - Single Workflow; - SGE backend. Task fails, but cromwell, never realizes and simply hangs. SGE has already exited cleanly. In this case, I believe cromwell would simply exit with non-zero return code. stderr:; ```; /var/spool/sge/node1403/job_scripts/9226232: line 16: warning: here-document at line 4 delimited by end-of-file (wanted `CODE'); /var/spool/sge/node1403/job_scripts/9226232: line 17: syntax error: unexpected end of file. ```. Task is broken due to unforeseen tab issues (unlikely to be reproduced correctly here):. ```wdl; command {; python <<CODE; 	 	import shutil; 		import os; 		str_file_list = """"""${sep=""\n"" files}""""""; 		fp = fopen(${output_file}, 'w'); 		fp.write(str_file_list); 		fp.close(); CODE; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1773
https://github.com/broadinstitute/cromwell/issues/1773:172,Usability,simpl,simply,172,"- 0.23; - Single Workflow; - SGE backend. Task fails, but cromwell, never realizes and simply hangs. SGE has already exited cleanly. In this case, I believe cromwell would simply exit with non-zero return code. stderr:; ```; /var/spool/sge/node1403/job_scripts/9226232: line 16: warning: here-document at line 4 delimited by end-of-file (wanted `CODE'); /var/spool/sge/node1403/job_scripts/9226232: line 17: syntax error: unexpected end of file. ```. Task is broken due to unforeseen tab issues (unlikely to be reproduced correctly here):. ```wdl; command {; python <<CODE; 	 	import shutil; 		import os; 		str_file_list = """"""${sep=""\n"" files}""""""; 		fp = fopen(${output_file}, 'w'); 		fp.write(str_file_list); 		fp.close(); CODE; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1773
https://github.com/broadinstitute/cromwell/issues/1774:207,Availability,error,error,207,"- 0.23; - SGE backend; - single workflow; - no docker. The wdl in question (a simpler WDL can be made easily). Look at how it scatters over a variable that does not exist. I would expect cromwell to give an error message and exit.; ```; # This is **broken.wdl**; # This simple, *unsupported* WDL takes in a VCF from M2 and a tumor bam file.; # It produces a new VCF with the filtering results. workflow test_ob_filter {; # tsv; # entity_id vcf tumor_bam_file; File input_table; Array[Array[String]] m2_vcfs = read_tsv(input_table); File db_snp; String gatk_jar; File ref_fasta. scatter (row in THIS_VAR_DOES_NOT_EXIST) {; call CollectSequencingArtifactMetrics {; input:; entity_id=row[0],; bam_file=row[2],; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; output_location_prepend=row[0]; }; call FilterByOrientationBias {; input:; entity_id=row[0],; gatk_jar=gatk_jar,; m2_vcf=row[1],; pre_adapter_detail_metrics=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics; }; }. call MakeSummaryFileList {; input:; files=FilterByOrientationBias.orientation_bias_vcf_summary,; output_file=""summary_table.txt""; }; }. task CollectSequencingArtifactMetrics {; String entity_id; File bam_file; String output_location_prepend; String gatk_jar; # /seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta; File ref_fasta. command {; java -jar ${gatk_jar} CollectSequencingArtifactMetrics -I ${bam_file} -O ${output_location_prepend} -R ${ref_fasta} --VALIDATION_STRINGENCY SILENT; }. output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. task FilterByOrientationBias {; String entity_id; String gatk_jar; File m2_vcf; File pre_adapter_detail_metrics. command {; java -jar ${ga",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:213,Integrability,message,message,213,"- 0.23; - SGE backend; - single workflow; - no docker. The wdl in question (a simpler WDL can be made easily). Look at how it scatters over a variable that does not exist. I would expect cromwell to give an error message and exit.; ```; # This is **broken.wdl**; # This simple, *unsupported* WDL takes in a VCF from M2 and a tumor bam file.; # It produces a new VCF with the filtering results. workflow test_ob_filter {; # tsv; # entity_id vcf tumor_bam_file; File input_table; Array[Array[String]] m2_vcfs = read_tsv(input_table); File db_snp; String gatk_jar; File ref_fasta. scatter (row in THIS_VAR_DOES_NOT_EXIST) {; call CollectSequencingArtifactMetrics {; input:; entity_id=row[0],; bam_file=row[2],; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; output_location_prepend=row[0]; }; call FilterByOrientationBias {; input:; entity_id=row[0],; gatk_jar=gatk_jar,; m2_vcf=row[1],; pre_adapter_detail_metrics=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics; }; }. call MakeSummaryFileList {; input:; files=FilterByOrientationBias.orientation_bias_vcf_summary,; output_file=""summary_table.txt""; }; }. task CollectSequencingArtifactMetrics {; String entity_id; File bam_file; String output_location_prepend; String gatk_jar; # /seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta; File ref_fasta. command {; java -jar ${gatk_jar} CollectSequencingArtifactMetrics -I ${bam_file} -O ${output_location_prepend} -R ${ref_fasta} --VALIDATION_STRINGENCY SILENT; }. output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. task FilterByOrientationBias {; String entity_id; String gatk_jar; File m2_vcf; File pre_adapter_detail_metrics. command {; java -jar ${ga",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:142,Modifiability,variab,variable,142,"- 0.23; - SGE backend; - single workflow; - no docker. The wdl in question (a simpler WDL can be made easily). Look at how it scatters over a variable that does not exist. I would expect cromwell to give an error message and exit.; ```; # This is **broken.wdl**; # This simple, *unsupported* WDL takes in a VCF from M2 and a tumor bam file.; # It produces a new VCF with the filtering results. workflow test_ob_filter {; # tsv; # entity_id vcf tumor_bam_file; File input_table; Array[Array[String]] m2_vcfs = read_tsv(input_table); File db_snp; String gatk_jar; File ref_fasta. scatter (row in THIS_VAR_DOES_NOT_EXIST) {; call CollectSequencingArtifactMetrics {; input:; entity_id=row[0],; bam_file=row[2],; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; output_location_prepend=row[0]; }; call FilterByOrientationBias {; input:; entity_id=row[0],; gatk_jar=gatk_jar,; m2_vcf=row[1],; pre_adapter_detail_metrics=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics; }; }. call MakeSummaryFileList {; input:; files=FilterByOrientationBias.orientation_bias_vcf_summary,; output_file=""summary_table.txt""; }; }. task CollectSequencingArtifactMetrics {; String entity_id; File bam_file; String output_location_prepend; String gatk_jar; # /seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta; File ref_fasta. command {; java -jar ${gatk_jar} CollectSequencingArtifactMetrics -I ${bam_file} -O ${output_location_prepend} -R ${ref_fasta} --VALIDATION_STRINGENCY SILENT; }. output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. task FilterByOrientationBias {; String entity_id; String gatk_jar; File m2_vcf; File pre_adapter_detail_metrics. command {; java -jar ${ga",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:2746,Performance,load,loaded,2746,"detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. task FilterByOrientationBias {; String entity_id; String gatk_jar; File m2_vcf; File pre_adapter_detail_metrics. command {; java -jar ${gatk_jar} FilterByOrientationBias -V ${m2_vcf} -P ${pre_adapter_detail_metrics} --output ${entity_id}.ob_filtered.vcf; }. output {; File orientation_bias_vcf = ""${entity_id}.ob_filtered.vcf""; File orientation_bias_vcf_summary = ""${entity_id}.ob_filtered.vcf.summary""; }; }. task MakeSummaryFileList {; Array[File] files; String output_file. command {; python <<CODE; 	 	 import shutil; 		 import os; 	 	 str_file_list = """"""${sep=""\n"" files}""""""; 	 	 fp = fopen(${output_file}, 'w'); 	 	 fp.write(str_file_list); 	 	 fp.close(); CODE; }. output {; File summary_file_list = ""${output_file}""; }; }; ```. output:; ```; lichtens@gsa5 /dsde/working/lichtens/test_oxoq$ bash broken_command.sh; Prepending: .hdfview-2.9 (ok); Prepending: Java-1.8 (already loaded); Prepending: .r-3.1.3-gatk-only (ok); [2016-12-12 11:13:32,51] [info] RUN sub-command; [2016-12-12 11:13:32,60] [info] WDL file: /dsde/working/lichtens/test_oxoq/broken.wdl; [2016-12-12 11:13:32,60] [info] Inputs: /dsde/working/lichtens/test_oxoq/test_ob_filter.json; [2016-12-12 11:13:32,60] [info] Workflow Options: /dsde/working/lichtens/test_oxoq/sge_runtimes; [2016-12-12 11:13:32,60] [info] Workflow Metadata Output: /dsde/working/lichtens/test_oxoq/test_ob_filter.metadata; [INFO] [12/12/2016 11:13:32.627] [cromwell-system-akka.actor.default-dispatcher-2] [akka://cromwell-system/user/SingleWorkflowRunnerActor] SingleWorkflowRunnerActor: Submitting workflow; [INFO] [12/12/2016 11:13:32.667] [cromwell-system-akka.actor.default-dispatcher-2] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowStoreActor] Workflow 414b9671-8880-4c37-802b-9c665f2feca4 submitted.; [INFO] [12/12/2016 11:13:32.667] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/Si",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:6053,Security,Validat,Validation,6053,"every 2 seconds.; [INFO] [12/12/2016 11:13:42.185] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowStoreActor] 1 new workflows fetched; [INFO] [12/12/2016 11:13:42.186] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Starting workflow UUID(414b9671-8880-4c37-802b-9c665f2feca4); [INFO] [12/12/2016 11:13:42.190] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Successfully started WorkflowActor-414b9671-8880-4c37-802b-9c665f2feca4; [INFO] [12/12/2016 11:13:42.191] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] Retrieved 1 workflows from the WorkflowStoreActor; [INFO] [12/12/2016 11:13:42.958] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-414b9671-8880-4c37-802b-9c665f2feca4/MaterializeWorkflowDescriptorActor] MaterializeWorkflowDescriptorActor [UUID(414b9671)]: Call-to-Backend assignments: test_ob_filter.MakeSummaryFileList -> SGE, test_ob_filter.CollectSequencingArtifactMetrics -> SGE, test_ob_filter.FilterByOrientationBias -> SGE; ...<hangs here>...; ```. shell command:; ```bash; lichtens@gsa5 /dsde/working/lichtens/test_oxoq$ cat broken_command.sh; #!/bin/bash -l; . /broad/tools/scripts/useuse; reuse -q GridEngine8; use .hdfview-2.9; use Java-1.8; use .r-3.1.3-gatk-only. ###############. java -Xmx6G -Dconfig.file=${PWD}/sge_application.conf -jar \; cromwell.jar \; run broken.wdl \; test_ob_filter.json \; sge_runtimes \; test_ob_filter.metadata. ```. Validation:; ```; lichtens@gsa5 /dsde/working/lichtens/test_oxoq$ java -jar wdltool-0.4.jar validate broken.wdl. lichtens@gsa5 /dsde/working/lichtens/test_oxoq$. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:6145,Security,validat,validate,6145,"every 2 seconds.; [INFO] [12/12/2016 11:13:42.185] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowStoreActor] 1 new workflows fetched; [INFO] [12/12/2016 11:13:42.186] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Starting workflow UUID(414b9671-8880-4c37-802b-9c665f2feca4); [INFO] [12/12/2016 11:13:42.190] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Successfully started WorkflowActor-414b9671-8880-4c37-802b-9c665f2feca4; [INFO] [12/12/2016 11:13:42.191] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] Retrieved 1 workflows from the WorkflowStoreActor; [INFO] [12/12/2016 11:13:42.958] [cromwell-system-akka.dispatchers.engine-dispatcher-58] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-414b9671-8880-4c37-802b-9c665f2feca4/MaterializeWorkflowDescriptorActor] MaterializeWorkflowDescriptorActor [UUID(414b9671)]: Call-to-Backend assignments: test_ob_filter.MakeSummaryFileList -> SGE, test_ob_filter.CollectSequencingArtifactMetrics -> SGE, test_ob_filter.FilterByOrientationBias -> SGE; ...<hangs here>...; ```. shell command:; ```bash; lichtens@gsa5 /dsde/working/lichtens/test_oxoq$ cat broken_command.sh; #!/bin/bash -l; . /broad/tools/scripts/useuse; reuse -q GridEngine8; use .hdfview-2.9; use Java-1.8; use .r-3.1.3-gatk-only. ###############. java -Xmx6G -Dconfig.file=${PWD}/sge_application.conf -jar \; cromwell.jar \; run broken.wdl \; test_ob_filter.json \; sge_runtimes \; test_ob_filter.metadata. ```. Validation:; ```; lichtens@gsa5 /dsde/working/lichtens/test_oxoq$ java -jar wdltool-0.4.jar validate broken.wdl. lichtens@gsa5 /dsde/working/lichtens/test_oxoq$. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:78,Usability,simpl,simpler,78,"- 0.23; - SGE backend; - single workflow; - no docker. The wdl in question (a simpler WDL can be made easily). Look at how it scatters over a variable that does not exist. I would expect cromwell to give an error message and exit.; ```; # This is **broken.wdl**; # This simple, *unsupported* WDL takes in a VCF from M2 and a tumor bam file.; # It produces a new VCF with the filtering results. workflow test_ob_filter {; # tsv; # entity_id vcf tumor_bam_file; File input_table; Array[Array[String]] m2_vcfs = read_tsv(input_table); File db_snp; String gatk_jar; File ref_fasta. scatter (row in THIS_VAR_DOES_NOT_EXIST) {; call CollectSequencingArtifactMetrics {; input:; entity_id=row[0],; bam_file=row[2],; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; output_location_prepend=row[0]; }; call FilterByOrientationBias {; input:; entity_id=row[0],; gatk_jar=gatk_jar,; m2_vcf=row[1],; pre_adapter_detail_metrics=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics; }; }. call MakeSummaryFileList {; input:; files=FilterByOrientationBias.orientation_bias_vcf_summary,; output_file=""summary_table.txt""; }; }. task CollectSequencingArtifactMetrics {; String entity_id; File bam_file; String output_location_prepend; String gatk_jar; # /seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta; File ref_fasta. command {; java -jar ${gatk_jar} CollectSequencingArtifactMetrics -I ${bam_file} -O ${output_location_prepend} -R ${ref_fasta} --VALIDATION_STRINGENCY SILENT; }. output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. task FilterByOrientationBias {; String entity_id; String gatk_jar; File m2_vcf; File pre_adapter_detail_metrics. command {; java -jar ${ga",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1774:270,Usability,simpl,simple,270,"- 0.23; - SGE backend; - single workflow; - no docker. The wdl in question (a simpler WDL can be made easily). Look at how it scatters over a variable that does not exist. I would expect cromwell to give an error message and exit.; ```; # This is **broken.wdl**; # This simple, *unsupported* WDL takes in a VCF from M2 and a tumor bam file.; # It produces a new VCF with the filtering results. workflow test_ob_filter {; # tsv; # entity_id vcf tumor_bam_file; File input_table; Array[Array[String]] m2_vcfs = read_tsv(input_table); File db_snp; String gatk_jar; File ref_fasta. scatter (row in THIS_VAR_DOES_NOT_EXIST) {; call CollectSequencingArtifactMetrics {; input:; entity_id=row[0],; bam_file=row[2],; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; output_location_prepend=row[0]; }; call FilterByOrientationBias {; input:; entity_id=row[0],; gatk_jar=gatk_jar,; m2_vcf=row[1],; pre_adapter_detail_metrics=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics; }; }. call MakeSummaryFileList {; input:; files=FilterByOrientationBias.orientation_bias_vcf_summary,; output_file=""summary_table.txt""; }; }. task CollectSequencingArtifactMetrics {; String entity_id; File bam_file; String output_location_prepend; String gatk_jar; # /seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.fasta; File ref_fasta. command {; java -jar ${gatk_jar} CollectSequencingArtifactMetrics -I ${bam_file} -O ${output_location_prepend} -R ${ref_fasta} --VALIDATION_STRINGENCY SILENT; }. output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. task FilterByOrientationBias {; String entity_id; String gatk_jar; File m2_vcf; File pre_adapter_detail_metrics. command {; java -jar ${ga",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1774
https://github.com/broadinstitute/cromwell/issues/1775:210,Availability,error,error,210,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:249,Availability,error,error,249,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:469,Availability,error,errors,469,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:259,Integrability,message,message,259,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:168,Safety,abort,abort,168,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:622,Safety,Abort,Abort,622,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:638,Safety,Abort,Aborting,638,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:784,Safety,Abort,Abort,784,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:800,Safety,Abort,Aborting,800,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:946,Safety,Abort,Abort,946,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:962,Safety,Abort,Aborting,962,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1108,Safety,Abort,Abort,1108,"mwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Ab",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1124,Safety,Abort,Aborting,1124,"swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1270,Safety,Abort,Abort,1270,"tus"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Ab",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1286,Safety,Abort,Aborting,1286,"ponse to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-ak",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1432,Safety,Abort,Abort,1432,"ciated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1448,Safety,Abort,Aborting,1448,"the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-ak",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1594,Safety,Abort,Abort,1594,"er-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1610,Safety,Abort,Aborting,1610,"rting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1756,Safety,Abort,Abort,1756,"her-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1772,Safety,Abort,Aborting,1772,"rting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1918,Safety,Abort,Abort,1918,"her-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Ab",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:1934,Safety,Abort,Aborting,1934,"rting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2079,Safety,Abort,Abort,2079,"cher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2095,Safety,Abort,Aborting,2095,"orting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2241,Safety,Abort,Abort,2241,"cher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Ab",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2257,Safety,Abort,Aborting,2257,"orting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2403,Safety,Abort,Abort,2403,"her-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2419,Safety,Abort,Aborting,2419,"orting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2565,Safety,Abort,Abort,2565,"her-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2581,Safety,Abort,Aborting,2581,"orting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2726,Safety,Abort,Abort,2726,"tcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2742,Safety,Abort,Aborting,2742,"borting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akk",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2888,Safety,Abort,Abort,2888,"cher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:2904,Safety,Abort,Aborting,2904,"borting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3049,Safety,Abort,Abort,3049,"tcher-120 INFO - WorkflowExecutionActor [UUID(c2caa0f6)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3065,Safety,Abort,Aborting,3065,"borting 7 EJEAs; 2016-12-12 18:33:30,399 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3211,Safety,Abort,Abort,3211,"cher-1282 INFO - WorkflowExecutionActor [UUID(17a61aa5)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3227,Safety,Abort,Aborting,3227,"borting 4 EJEAs; 2016-12-12 18:33:42,564 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3372,Safety,Abort,Abort,3372,"tcher-1282 INFO - WorkflowExecutionActor [UUID(f6bef34c)]: Abort received. Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3388,Safety,Abort,Aborting,3388,"Aborting 9 EJEAs; 2016-12-12 18:34:05,494 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3534,Safety,Abort,Abort,3534,"tcher-1282 INFO - WorkflowExecutionActor [UUID(44318e55)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3550,Safety,Abort,Aborting,3550,"Aborting 7 EJEAs; 2016-12-12 18:34:16,741 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3696,Safety,Abort,Abort,3696,"tcher-120 INFO - WorkflowExecutionActor [UUID(28d5b663)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3712,Safety,Abort,Aborting,3712,"borting 1 EJEAs; 2016-12-12 18:34:28,999 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3857,Safety,Abort,Abort,3857,"tcher-1282 INFO - WorkflowExecutionActor [UUID(7c8b62e6)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:3873,Safety,Abort,Aborting,3873,"Aborting 1 EJEAs; 2016-12-12 18:34:40,026 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4018,Safety,Abort,Abort,4018,"atcher-120 INFO - WorkflowExecutionActor [UUID(3206b2df)]: Abort received. Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4034,Safety,Abort,Aborting,4034,"Aborting 1 EJEAs; 2016-12-12 18:35:03,235 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4180,Safety,Abort,Abort,4180,"tcher-1282 INFO - WorkflowExecutionActor [UUID(63064089)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4196,Safety,Abort,Aborting,4196,"Aborting 6 EJEAs; 2016-12-12 18:35:13,509 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4342,Safety,Abort,Abort,4342,"tcher-120 INFO - WorkflowExecutionActor [UUID(812336d3)]: Abort received. Aborting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4358,Safety,Abort,Aborting,4358,"borting 14 EJEAs; 2016-12-12 18:35:23,568 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4503,Safety,Abort,Abort,4503,"atcher-177 INFO - WorkflowExecutionActor [UUID(197caaf2)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4519,Safety,Abort,Aborting,4519,"Aborting 7 EJEAs; 2016-12-12 18:35:36,241 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4664,Safety,Abort,Abort,4664,"atcher-1282 INFO - WorkflowExecutionActor [UUID(98068011)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4680,Safety,Abort,Aborting,4680," Aborting 4 EJEAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4825,Safety,Abort,Abort,4825,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4841,Safety,Abort,Aborting,4841,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:4986,Safety,Abort,Abort,4986,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5002,Safety,Abort,Aborting,5002,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5147,Safety,Abort,Abort,5147,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5163,Safety,Abort,Aborting,5163,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5309,Safety,Abort,Abort,5309,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5325,Safety,Abort,Aborting,5325,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5471,Safety,Abort,Abort,5471,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5487,Safety,Abort,Aborting,5487,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5633,Safety,Abort,Abort,5633,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5649,Safety,Abort,Aborting,5649,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:5679,Security,hash,hash,5679,"EAs; 2016-12-12 18:35:46,427 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(b5d75f00)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:35:56,417 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(0891d5a0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:05,640 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(51571dc0)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:36:15,513 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(c43b628c)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:36:24,633 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(50785284)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:36:34,764 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(8dd2fe57)]: Abort received. Aborting 2 EJEAs; 2016-12-12 18:36:45,132 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(7f1250f8)]: Abort received. Aborting 8 EJEAs; 2016-12-12 18:37:06,029 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(3d36fdc3)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:37:14,145 cromwell-system-akka.dispatchers.engine-dispatcher-177 INFO - WorkflowExecutionActor [UUID(60ec6228)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:23,720 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(a442dc1c)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:37:31,421 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(17bed42e)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:37:40,098 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(e9851ba1)]: Abort received. Aborting 3 EJEAs; `; Cromwell hash: 192ea6025613df967d60e9e975693144035379d7",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1775:483,Testability,log,logs,483,"https://cromwell.gotc-int.broadinstitute.org/swagger/index.html?url=/swagger/cromwell.yaml#!/Workflows/post_workflows_version_id_abort. When going through swagger, the abort takes a long time and then gives an error: ; Response Code 500; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request."". The workflow is removed from WORKFLOW_STORE_ENTRY but the associated jobs are still present in JOB_STORE_ENTRY. . There are no errors in the logs: ; `; 2016-12-12 18:22:26,139 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(8a965a5e)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:29:42,727 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(73be7f27)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:31:29,146 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(13965e09)]: Abort received. Aborting 10 EJEAs; 2016-12-12 18:31:46,093 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(804a56b6)]: Abort received. Aborting 11 EJEAs; 2016-12-12 18:32:05,063 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(2c6302c8)]: Abort received. Aborting 6 EJEAs; 2016-12-12 18:32:25,094 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(793dd16f)]: Abort received. Aborting 5 EJEAs; 2016-12-12 18:32:38,555 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(4fddebd4)]: Abort received. Aborting 13 EJEAs; 2016-12-12 18:32:50,674 cromwell-system-akka.dispatchers.engine-dispatcher-120 INFO - WorkflowExecutionActor [UUID(aadd5082)]: Abort received. Aborting 7 EJEAs; 2016-12-12 18:33:01,265 cromwell-system-akka.dispatchers.engine-dispatcher-1282 INFO - WorkflowExecutionActor [UUID(edaa9993)]: Abort received. Aborting 4 EJEAs; 2016-12-12 18:33:12,453 cromwell-system-akka.disp",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1775
https://github.com/broadinstitute/cromwell/issues/1776:51,Availability,down,down,51,"For large output arrays this can get really bogged down as it's processing single threaded. At first glance it looks like it should be monoid-y, perhaps we can farm this out to multiple workers?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1776
https://github.com/broadinstitute/cromwell/issues/1777:1223,Availability,down,downstream,1223,"Any details I provide are only definitely true w/ the jes backend, haven't looked at others but I'm assuming they're similar. Also glob processing is backend-specific which leads to further problems I'll also address. Even if other backends aren't similar I think the same problems will manifest in other ways so there should still be similarity of solution. When a glob returns there's a FOFN on JES and that path is stored in a WdlGlobFile. In `JesAsyncBackendJobExecutionActor.postProcess` the function `evaluateOutputs` is called which effectively decomposes the `WdlGlobFile` into a `WdlArray[WdlSingleFile]` and then this array is carried around in memory in perpetuity (for the workflow). Much CPU and memory are spent for this conversion both at creation time and trying to stuff these things into the metadata service (see the very patriotic #1776). . I'm wondering if we could do something sneaky here and maintain the `WdlGlobFile` as-is and evaluate only what's necessary when necessary. Some thoughts as examples, some are contradictory I'm sure. - Allow that `Array[WdlFile]` to have both `WdlGlobFile` and `WdlSingleFile` with the former being dynamically expanded; - When we need the full list of files for downstream tasks perhaps we can stream them somehow instead of holding in memory; - In an example like a scatter/gather perhaps we could perform the collection on the glob files themselves via merging the stored glob file; - Perhaps we could *always* store an Array[WdlFile] as a FOFN on disk?; - Presumably we'll want to always expand to the full list of single files stored in the metadata for output reporting purposes. Could we stream the strings directly (and then remove) into the DB instead of all of the multiple boxings/unwrappings/etc?. Beyond ""this is all a bunch of work"" some issues that pop out:. - As stated not all backends might be handling globs the same. ; - What if Backend 1 generates a `WdlGlobFile` but that gets handed to Backend 2?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1777
https://github.com/broadinstitute/cromwell/issues/1777:1360,Performance,perform,perform,1360,"Any details I provide are only definitely true w/ the jes backend, haven't looked at others but I'm assuming they're similar. Also glob processing is backend-specific which leads to further problems I'll also address. Even if other backends aren't similar I think the same problems will manifest in other ways so there should still be similarity of solution. When a glob returns there's a FOFN on JES and that path is stored in a WdlGlobFile. In `JesAsyncBackendJobExecutionActor.postProcess` the function `evaluateOutputs` is called which effectively decomposes the `WdlGlobFile` into a `WdlArray[WdlSingleFile]` and then this array is carried around in memory in perpetuity (for the workflow). Much CPU and memory are spent for this conversion both at creation time and trying to stuff these things into the metadata service (see the very patriotic #1776). . I'm wondering if we could do something sneaky here and maintain the `WdlGlobFile` as-is and evaluate only what's necessary when necessary. Some thoughts as examples, some are contradictory I'm sure. - Allow that `Array[WdlFile]` to have both `WdlGlobFile` and `WdlSingleFile` with the former being dynamically expanded; - When we need the full list of files for downstream tasks perhaps we can stream them somehow instead of holding in memory; - In an example like a scatter/gather perhaps we could perform the collection on the glob files themselves via merging the stored glob file; - Perhaps we could *always* store an Array[WdlFile] as a FOFN on disk?; - Presumably we'll want to always expand to the full list of single files stored in the metadata for output reporting purposes. Could we stream the strings directly (and then remove) into the DB instead of all of the multiple boxings/unwrappings/etc?. Beyond ""this is all a bunch of work"" some issues that pop out:. - As stated not all backends might be handling globs the same. ; - What if Backend 1 generates a `WdlGlobFile` but that gets handed to Backend 2?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1777
https://github.com/broadinstitute/cromwell/pull/1778:471,Testability,log,logs,471,"Reworks the stats actor to passively receive information about workflows / jobs instead of asking for them.; Job status changes are published every time the execution store is modified.; Workflow status changes are published every time the WA changes state. When a workflow execution completes (ie the WEA sends back a terminal response), jobs run by this workflow are removed from the count.; When a workflow completes (ie the WA dies) it's removed from the count. Also logs periodically (in single workflow mode only) the number of jobs in each status.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1778
https://github.com/broadinstitute/cromwell/pull/1780:133,Deployability,release,release,133,"It will not be merged into Cromwell, just assumed this was the easiest way to get it reviewed. It's simply a start at automating the release process, lots of feedback is welcome. . Warning: Not been completely tested.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1780
https://github.com/broadinstitute/cromwell/pull/1780:210,Testability,test,tested,210,"It will not be merged into Cromwell, just assumed this was the easiest way to get it reviewed. It's simply a start at automating the release process, lots of feedback is welcome. . Warning: Not been completely tested.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1780
https://github.com/broadinstitute/cromwell/pull/1780:100,Usability,simpl,simply,100,"It will not be merged into Cromwell, just assumed this was the easiest way to get it reviewed. It's simply a start at automating the release process, lots of feedback is welcome. . Warning: Not been completely tested.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1780
https://github.com/broadinstitute/cromwell/pull/1780:158,Usability,feedback,feedback,158,"It will not be merged into Cromwell, just assumed this was the easiest way to get it reviewed. It's simply a start at automating the release process, lots of feedback is welcome. . Warning: Not been completely tested.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1780
https://github.com/broadinstitute/cromwell/pull/1781:27,Availability,down,down,27,Moved supervision from JES down into Standard trait.; Fixed some vals in the Standard trait.; Fixed non-Travised integration test `JesAttributesSpec`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1781
https://github.com/broadinstitute/cromwell/pull/1781:113,Deployability,integrat,integration,113,Moved supervision from JES down into Standard trait.; Fixed some vals in the Standard trait.; Fixed non-Travised integration test `JesAttributesSpec`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1781
https://github.com/broadinstitute/cromwell/pull/1781:113,Integrability,integrat,integration,113,Moved supervision from JES down into Standard trait.; Fixed some vals in the Standard trait.; Fixed non-Travised integration test `JesAttributesSpec`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1781
https://github.com/broadinstitute/cromwell/pull/1781:125,Testability,test,test,125,Moved supervision from JES down into Standard trait.; Fixed some vals in the Standard trait.; Fixed non-Travised integration test `JesAttributesSpec`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1781
https://github.com/broadinstitute/cromwell/issues/1782:241,Availability,error,error,241,"Now and then we see jobs get wedged in a state where the following exception kicks in infinitely (as far as we've seen - at least several hours). Restarting cromwell and reattaching those jobs will immediately resolve it - implying that the error wasn't ""real"" at least not any more and that something was bonkers on our side. Standard logging doesn't reveal anything interesting that I've seen. It's not something I've found a way to reproduce reliably - at least not consistently. ```2016-12-09 16:45:21,896 cromwell-system-akka.dispatchers.backend-dispatcher-28 WARN - JesAsyncBackendJobExecutionActor [UUID(50f9b932)JointGenotyping.SplitGlob:72:1]: could not download return code file, retrying:; com.google.cloud.storage.StorageException: Remote host closed connection during handshake; at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:322); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:182); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:179); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:179); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:193); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:144); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:53); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:258); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:222); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.Files.readAllBytes(Files.java:315",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:445,Availability,reliab,reliably,445,"Now and then we see jobs get wedged in a state where the following exception kicks in infinitely (as far as we've seen - at least several hours). Restarting cromwell and reattaching those jobs will immediately resolve it - implying that the error wasn't ""real"" at least not any more and that something was bonkers on our side. Standard logging doesn't reveal anything interesting that I've seen. It's not something I've found a way to reproduce reliably - at least not consistently. ```2016-12-09 16:45:21,896 cromwell-system-akka.dispatchers.backend-dispatcher-28 WARN - JesAsyncBackendJobExecutionActor [UUID(50f9b932)JointGenotyping.SplitGlob:72:1]: could not download return code file, retrying:; com.google.cloud.storage.StorageException: Remote host closed connection during handshake; at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:322); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:182); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:179); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:179); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:193); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:144); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:53); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:258); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:222); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.Files.readAllBytes(Files.java:315",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:663,Availability,down,download,663,"Now and then we see jobs get wedged in a state where the following exception kicks in infinitely (as far as we've seen - at least several hours). Restarting cromwell and reattaching those jobs will immediately resolve it - implying that the error wasn't ""real"" at least not any more and that something was bonkers on our side. Standard logging doesn't reveal anything interesting that I've seen. It's not something I've found a way to reproduce reliably - at least not consistently. ```2016-12-09 16:45:21,896 cromwell-system-akka.dispatchers.backend-dispatcher-28 WARN - JesAsyncBackendJobExecutionActor [UUID(50f9b932)JointGenotyping.SplitGlob:72:1]: could not download return code file, retrying:; com.google.cloud.storage.StorageException: Remote host closed connection during handshake; at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:322); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:182); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:179); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:179); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:193); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:144); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:53); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:258); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:222); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.Files.readAllBytes(Files.java:315",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:5291,Availability,down,down,5291,askInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; at sun.security.ssl.InputRecord.read(InputRecord.java:505); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:961); ... 43 more```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4336,Integrability,protocol,protocol,4336,ure.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; at sun.security.ssl.InputRecord.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4414,Integrability,protocol,protocol,4414,uture.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; at sun.security.ssl.InputRecord.read(InputRecord.java:505); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4533,Integrability,protocol,protocol,4533,askInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; at sun.security.ssl.InputRecord.read(InputRecord.java:505); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:961); ... 43 more```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:2026,Performance,load,loadBytes,2026, at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:179); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:179); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:193); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:144); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:53); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:258); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:222); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.Files.readAllBytes(Files.java:3152); at better.files.File.loadBytes(File.scala:163); at better.files.File.byteArray(File.scala:166); at better.files.File.contentAsString(File.scala:206); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$1.apply(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$1.apply(JesAsyncBackendJobExecutionActor.scala:111); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$lzycompute(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobEx,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:3274,Performance,concurren,concurrent,3274,Actor$$returnCodeContents$1.apply(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$1.apply(JesAsyncBackendJobExecutionActor.scala:111); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$lzycompute(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:3364,Performance,concurren,concurrent,3364,.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$1.apply(JesAsyncBackendJobExecutionActor.scala:111); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$lzycompute(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterCo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:3609,Performance,concurren,concurrent,3609,backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents$lzycompute(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:3682,Performance,concurren,concurrent,3682,es$JesAsyncBackendJobExecutionActor$$returnCodeContents$lzycompute(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:3767,Performance,concurren,concurrent,3767,ExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:3844,Performance,concurren,concurrent,3844,cutionActor.cromwell$backend$impl$jes$JesAsyncBackendJobExecutionActor$$returnCodeContents(JesAsyncBackendJobExecutionActor.scala:111); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execu,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4121,Performance,perform,performInitialHandshake,4121,kend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.jav,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4024,Security,secur,security,4024,dJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4094,Security,secur,security,4094,ExecutionActor.scala:549); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientReques,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4178,Security,secur,security,4178,ctor$$anonfun$executionResult$1.apply(JesAsyncBackendJobExecutionActor.scala:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.Def,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:4253,Security,secur,security,4253,a:539); at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: jav,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:5316,Security,secur,security,5316,askInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; at sun.security.ssl.InputRecord.read(InputRecord.java:505); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:961); ... 43 more```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:5376,Security,secur,security,5376,askInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.net.ssl.SSLHandshakeException: Remote host closed connection during handshake; at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:980); at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1363); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1391); at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1375); at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:563); at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185); at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:93); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.execute(AbstractGoogleClientRequest.java:469); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:320); ... 31 more; Caused by: java.io.EOFException: SSL peer shut down incorrectly; at sun.security.ssl.InputRecord.read(InputRecord.java:505); at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:961); ... 43 more```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1782:336,Testability,log,logging,336,"Now and then we see jobs get wedged in a state where the following exception kicks in infinitely (as far as we've seen - at least several hours). Restarting cromwell and reattaching those jobs will immediately resolve it - implying that the error wasn't ""real"" at least not any more and that something was bonkers on our side. Standard logging doesn't reveal anything interesting that I've seen. It's not something I've found a way to reproduce reliably - at least not consistently. ```2016-12-09 16:45:21,896 cromwell-system-akka.dispatchers.backend-dispatcher-28 WARN - JesAsyncBackendJobExecutionActor [UUID(50f9b932)JointGenotyping.SplitGlob:72:1]: could not download return code file, retrying:; com.google.cloud.storage.StorageException: Remote host closed connection during handshake; at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); at com.google.cloud.storage.spi.DefaultStorageRpc.get(DefaultStorageRpc.java:322); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:182); at com.google.cloud.storage.StorageImpl$5.call(StorageImpl.java:179); at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:179); at com.google.cloud.storage.StorageImpl.get(StorageImpl.java:193); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.fetchSize(CloudStorageReadChannel.java:144); at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.create(CloudStorageReadChannel.java:53); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newReadChannel(CloudStorageFileSystemProvider.java:258); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFileSystemProvider.java:222); at java.nio.file.Files.newByteChannel(Files.java:361); at java.nio.file.Files.newByteChannel(Files.java:407); at java.nio.file.Files.readAllBytes(Files.java:315",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1782
https://github.com/broadinstitute/cromwell/issues/1785:151,Modifiability,variab,variable,151,As per the test case in https://github.com/broadinstitute/centaur/pull/123. If you assign an alias to a subworkflow call (e.g. `call subwf as subwfA`) variable resolution is not working for providing the inputs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1785
https://github.com/broadinstitute/cromwell/issues/1785:11,Testability,test,test,11,As per the test case in https://github.com/broadinstitute/centaur/pull/123. If you assign an alias to a subworkflow call (e.g. `call subwf as subwfA`) variable resolution is not working for providing the inputs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1785
https://github.com/broadinstitute/cromwell/issues/1791:111,Availability,error,errors,111,"(No links to failed builds, as clicking Travis ""Retry Build"" erased the logs.). Travis has been having network errors recently attempting to download artifacts from maven central, and in at least one case downloading the ubuntu:latest docker image. In the various scripts under src/bin/travis, the scripts should retry:. - `sbt update` before any other sbt commands; - `docker pull ubuntu:latest`; - possibly: `sudo apt-get …`. The retries should wait some time (60 seconds?) between failures, and try at least twice? Possibly this could be put into a utility bash script.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1791
https://github.com/broadinstitute/cromwell/issues/1791:141,Availability,down,download,141,"(No links to failed builds, as clicking Travis ""Retry Build"" erased the logs.). Travis has been having network errors recently attempting to download artifacts from maven central, and in at least one case downloading the ubuntu:latest docker image. In the various scripts under src/bin/travis, the scripts should retry:. - `sbt update` before any other sbt commands; - `docker pull ubuntu:latest`; - possibly: `sudo apt-get …`. The retries should wait some time (60 seconds?) between failures, and try at least twice? Possibly this could be put into a utility bash script.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1791
https://github.com/broadinstitute/cromwell/issues/1791:205,Availability,down,downloading,205,"(No links to failed builds, as clicking Travis ""Retry Build"" erased the logs.). Travis has been having network errors recently attempting to download artifacts from maven central, and in at least one case downloading the ubuntu:latest docker image. In the various scripts under src/bin/travis, the scripts should retry:. - `sbt update` before any other sbt commands; - `docker pull ubuntu:latest`; - possibly: `sudo apt-get …`. The retries should wait some time (60 seconds?) between failures, and try at least twice? Possibly this could be put into a utility bash script.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1791
https://github.com/broadinstitute/cromwell/issues/1791:484,Availability,failure,failures,484,"(No links to failed builds, as clicking Travis ""Retry Build"" erased the logs.). Travis has been having network errors recently attempting to download artifacts from maven central, and in at least one case downloading the ubuntu:latest docker image. In the various scripts under src/bin/travis, the scripts should retry:. - `sbt update` before any other sbt commands; - `docker pull ubuntu:latest`; - possibly: `sudo apt-get …`. The retries should wait some time (60 seconds?) between failures, and try at least twice? Possibly this could be put into a utility bash script.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1791
https://github.com/broadinstitute/cromwell/issues/1791:328,Deployability,update,update,328,"(No links to failed builds, as clicking Travis ""Retry Build"" erased the logs.). Travis has been having network errors recently attempting to download artifacts from maven central, and in at least one case downloading the ubuntu:latest docker image. In the various scripts under src/bin/travis, the scripts should retry:. - `sbt update` before any other sbt commands; - `docker pull ubuntu:latest`; - possibly: `sudo apt-get …`. The retries should wait some time (60 seconds?) between failures, and try at least twice? Possibly this could be put into a utility bash script.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1791
https://github.com/broadinstitute/cromwell/issues/1791:72,Testability,log,logs,72,"(No links to failed builds, as clicking Travis ""Retry Build"" erased the logs.). Travis has been having network errors recently attempting to download artifacts from maven central, and in at least one case downloading the ubuntu:latest docker image. In the various scripts under src/bin/travis, the scripts should retry:. - `sbt update` before any other sbt commands; - `docker pull ubuntu:latest`; - possibly: `sudo apt-get …`. The retries should wait some time (60 seconds?) between failures, and try at least twice? Possibly this could be put into a utility bash script.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1791
https://github.com/broadinstitute/cromwell/pull/1792:47,Energy Efficiency,green,green,47,Don't bother reviewing this - once travis goes green i'm going to push it,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1792
https://github.com/broadinstitute/cromwell/issues/1793:144,Availability,avail,available,144,"Currently, as far as I can tell, the paging functionality is pretty hard to use since there is no notation of the total records (given filters) available. Returning page and pagesize or at least starting record would be helpful. Finally, being able to do this relies some kind of reproducible ordering of records; I assume that ordering is deterministic.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1793
https://github.com/broadinstitute/cromwell/issues/1795:97,Modifiability,config,config,97,I haven't been able to discern from the documentation if specifying GCE zones in the application config is possible. I see that it is listed as runtime config. Sorry if I am misunderstanding.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1795
https://github.com/broadinstitute/cromwell/issues/1795:152,Modifiability,config,config,152,I haven't been able to discern from the documentation if specifying GCE zones in the application config is possible. I see that it is listed as runtime config. Sorry if I am misunderstanding.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1795
https://github.com/broadinstitute/cromwell/issues/1798:536,Energy Efficiency,meter,metered,536,"Much like our operation polling the creation of new runs in jes winds up being a problem when lots of jobs are created at once as we wind up with a ton of threads gumming up the works but still can only submit at the rate of the genomics api qps. It'd be way more fun to use those threads for things like DB access, mining bitcoins, skynet, etc. Transform the JesPollingActor & friends such that that structure manages both create and get operations (the batch API allows for heterogenous requests) are going through the same structure metered by the QPS supplied by the config file.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1798
https://github.com/broadinstitute/cromwell/issues/1798:571,Modifiability,config,config,571,"Much like our operation polling the creation of new runs in jes winds up being a problem when lots of jobs are created at once as we wind up with a ton of threads gumming up the works but still can only submit at the rate of the genomics api qps. It'd be way more fun to use those threads for things like DB access, mining bitcoins, skynet, etc. Transform the JesPollingActor & friends such that that structure manages both create and get operations (the batch API allows for heterogenous requests) are going through the same structure metered by the QPS supplied by the config file.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1798
https://github.com/broadinstitute/cromwell/issues/1798:308,Security,access,access,308,"Much like our operation polling the creation of new runs in jes winds up being a problem when lots of jobs are created at once as we wind up with a ton of threads gumming up the works but still can only submit at the rate of the genomics api qps. It'd be way more fun to use those threads for things like DB access, mining bitcoins, skynet, etc. Transform the JesPollingActor & friends such that that structure manages both create and get operations (the batch API allows for heterogenous requests) are going through the same structure metered by the QPS supplied by the config file.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1798
https://github.com/broadinstitute/cromwell/issues/1799:1151,Availability,ERROR,ERROR,1151,"s.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(Materialize",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:1315,Availability,error,error,1315,"s.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(Materialize",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:1467,Availability,error,error,1467,"encies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.arou",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:180,Integrability,depend,dependency,180,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:229,Integrability,depend,dependencies,229,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:303,Integrability,depend,dependencies,303,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:436,Integrability,depend,dependencies,436,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:899,Integrability,depend,dependecies,899,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:2893,Performance,concurren,concurrent,2893,9-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:2967,Performance,concurren,concurrent,2967,9-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:3053,Performance,concurren,concurrent,3053,9-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:3131,Performance,concurren,concurrent,3131,9-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:481,Testability,log,logging,481,"Using jar built from 5155e6f and the ""main.wdl"" and ""sub_wdl.wdl"" from the documentation example at https://github.com/broadinstitute/cromwell#sub-workflows with the ""sub_wdl.wdl"" dependency zipped up in a directory in the file [dependencies.zip](https://github.com/broadinstitute/cromwell/files/662706/dependencies.zip) I can run this:; ```; java -jar workspace/cromwell/target/scala-2.11/cromwell-24-5155e6f-SNAP.jar run main.wdl - - dependencies.zip; ```. and it succeeds, i.e. logging ends with; ```; [2016-12-20 13:24:52,24] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""main_output"": ""Hello sub world!""; },; ""id"": ""8a414771-fdef-43f8-85f3-a0b738fd28fc""; }; ```. but when I run in server mode with the exact same jar and WDL files submitted via REST API:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@main.wdl -FwdlDependencies=dependecies.zip; ```. it fails:; ```; 2016-12-20 13:28:19,319 cromwell-system-akka.dispatchers.engine-dispatcher-22 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$act",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:2004,Testability,Log,LoggingFSM,2004," 1 workflows from the WorkflowStoreActor; 2016-12-20 13:28:19,365 cromwell-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.j",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1799:2097,Testability,Log,LoggingFSM,2097,-system-akka.dispatchers.engine-dispatcher-22 ERROR - WorkflowManagerActor Workflow cbde1e8b-00df-405e-be19-ac4f4b3ea5b8 failed (during MaterializingWorkflowDescriptorState): Workflow input processing failed:; error in opening zip file; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; error in opening zip file; 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:138); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1799
https://github.com/broadinstitute/cromwell/issues/1802:253,Usability,simpl,simpler,253,"I have a workflow containing scatters that worked in 5155e6f and earlier versions e.g. tags/22,23 but doesn't work anymore with 340a5cf.; [Edited]; see [comment below](https://github.com/broadinstitute/cromwell/issues/1802#issuecomment-268422512) for a simpler, more generic example",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1802
https://github.com/broadinstitute/cromwell/issues/1804:991,Availability,echo,echo,991,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:1571,Availability,failure,failure,1571,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:40,Deployability,configurat,configurations,40,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:336,Deployability,configurat,configurations,336,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:822,Integrability,message,message,822,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:40,Modifiability,config,configurations,40,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:336,Modifiability,config,configurations,336,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1804:393,Modifiability,parameteriz,parameterizing,393,"In DSDE methods, there are four backend configurations we would like to support.; - local w/ docker; - local w/o docker; - SGE (req: no docker); - JES (req: docker). But we would like to support these without having to change the WDL file itself. Currently, this is done with complex scripts that choose default options and application configurations. But perhaps there is an easier way... by parameterizing runtime attributes. I hear cromwell already supports that, except for the case where we do not want to run in docker at all (e.g. local w/o docker backends). Assuming that you can specify runtime parameters as part of a workflow. In other words, assuming that the following is valid:. ```wdl. workflow yo {; String msg; String docker_image. call task1 {; input:; msg=msg,; docker_image=docker_image; }; }. # Run a message in an arbitrary docker container (e.g. ""broadinstitute/eval-gatk-protected:crsp_validation_latest""); task task1 {; String msg; String docker_image; ; command {; echo ${msg}; } ; ; runtime {; docker: ""${docker_image}""; memory: ""1GB""; }; }; ```; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": ""broadinstitute/eval-gatk-protected:crsp_validation_latest""; }; ```; The above WDL+json should work for JES and ""local w/ docker"" backends. However, to support local w/o docker, we need to be able to specify a ""null"" value, which cromwell will interpret as, ""do not use docker"" or ""docker was never specified"". For example:; ```; {; ""yo.msg"": ""foo""; ""yo.docker_image"": """"; }; ```; My understanding of cromwell is that this json + WDL above will cause a failure in cromwell. If this functionality already exists, please close this issue. This would make our WDLs more complicated, but it would increase flexibility and move runtime specification into the json file (which is easier than juggling default options).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1804
https://github.com/broadinstitute/cromwell/issues/1807:486,Energy Efficiency,drain,drain,486,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1807:31,Performance,perform,performance,31,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1807:43,Performance,scalab,scalability,43,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1807:144,Performance,throughput,throughput,144,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1807:117,Testability,log,logging,117,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1807:251,Testability,log,logging,251,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1807:465,Testability,log,logging,465,"While playing around with some performance/scalability stuff today I saw various first hand examples just how costly logging can be in terms of throughput. . For instance, while submitting workflows in a tight loop removing the ""workflow X submitted"" logging consistently improved overall requests per second (as per apache bench) by roughly 20%. This example is likely the largest offender but we should start looking at stuff like this and think carefully if the logging is worth the drain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1807
https://github.com/broadinstitute/cromwell/issues/1808:93,Testability,log,logging,93,This is built in to akka and is a tunable setting: http://doc.akka.io/docs/akka/current/java/logging.html#Auxiliary_logging_options,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1808
https://github.com/broadinstitute/cromwell/issues/1809:211,Integrability,message,messages,211,See http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/ for an example. It looks like AsyncAppender could help improve our logging performance albeit with some potential for messages to be dropped.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809
https://github.com/broadinstitute/cromwell/issues/1809:168,Performance,perform,performance,168,See http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/ for an example. It looks like AsyncAppender could help improve our logging performance albeit with some potential for messages to be dropped.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809
https://github.com/broadinstitute/cromwell/issues/1809:62,Testability,log,logging-with-,62,See http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/ for an example. It looks like AsyncAppender could help improve our logging performance albeit with some potential for messages to be dropped.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809
https://github.com/broadinstitute/cromwell/issues/1809:77,Testability,log,logback-tweaks,77,See http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/ for an example. It looks like AsyncAppender could help improve our logging performance albeit with some potential for messages to be dropped.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809
https://github.com/broadinstitute/cromwell/issues/1809:160,Testability,log,logging,160,See http://blog.takipi.com/how-to-instantly-improve-your-java-logging-with-7-logback-tweaks/ for an example. It looks like AsyncAppender could help improve our logging performance albeit with some potential for messages to be dropped.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1809
https://github.com/broadinstitute/cromwell/issues/1810:170,Availability,down,down,170,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1810:220,Availability,down,down,220,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1810:36,Modifiability,enhance,enhancements,36,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1810:24,Performance,perform,performance,24,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1810:142,Performance,perform,performance,142,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1810:342,Performance,load,load,342,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1810:6,Testability,benchmark,benchmarking,6,"While benchmarking some performance enhancements I've been playing with I kept noticing that no matter how fast I could get things eventually performance would drop back down to baseline levels from develop. I traced it down to the `WriteMetadataActor`, specifically it appears that writing boatloads of individual events (not atypical under load) can cause a lot of problems (not particularly surprising, but ...). It seems like some sort of batching/work pulling scheme could work wonders here although presumably it'd then come at the cost of memory (to buffer the unwritten values). That's just one thought, not a prescription",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1810
https://github.com/broadinstitute/cromwell/issues/1811:152,Integrability,message,messages,152,Based on a quick search I believe these are ignored 100% of the time. Considering the enormous mass of metadata writes going on this generates a lot of messages which can wind up backing up things which are actually used.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1811
https://github.com/broadinstitute/cromwell/pull/1812:11,Integrability,message,message,11,See commit message for more info.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1812
https://github.com/broadinstitute/cromwell/issues/1813:88,Deployability,pipeline,pipeline,88,"This is a much smaller ticket than the entire epic. In this case, when a each task in a pipeline is run on the JES backend, we want to apply a label (key = cromwell_workflow_id, value = <the workflow id>) to the pipeline operation (job). This will enable the billing use case for FireCloud as they can then query the billing data and slice by cromwell workflow id.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1813
https://github.com/broadinstitute/cromwell/issues/1813:212,Deployability,pipeline,pipeline,212,"This is a much smaller ticket than the entire epic. In this case, when a each task in a pipeline is run on the JES backend, we want to apply a label (key = cromwell_workflow_id, value = <the workflow id>) to the pipeline operation (job). This will enable the billing use case for FireCloud as they can then query the billing data and slice by cromwell workflow id.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1813
https://github.com/broadinstitute/cromwell/issues/1814:385,Security,hash,hash,385,"When I use cromwell, I often would like to be able to refer to the most recent files that we produced while also keeping earlier versions. This way a user could refer to a file as,; cromwell-executions/Workflow/current/call-Job/shard-3/execution/filename; instead of; cromwell-executions/Workflow/ebbf651b-2dc6-4066-9e8d-b4e2ca722c1e/call-Job/shard-3/execution/filename; or some other hash that is subject to change.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1814
https://github.com/broadinstitute/cromwell/pull/1816:542,Modifiability,refactor,refactor,542,"This is a prototype backend that communicates via the GA4GH task execution [schema](https://github.com/ga4gh/task-execution-schemas). The reference implementation of the task server that we have been developing against is [here](https://github.com/bmeg/task-execution-server/tree/develop). This is a work in progress and definitely could use some feedback from you with regards to how to better fit this in with your current code base and future development plans. . In the coming weeks we plan to implement unit tests, add documentation and refactor the code based on your recommendations.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1816
https://github.com/broadinstitute/cromwell/pull/1816:513,Testability,test,tests,513,"This is a prototype backend that communicates via the GA4GH task execution [schema](https://github.com/ga4gh/task-execution-schemas). The reference implementation of the task server that we have been developing against is [here](https://github.com/bmeg/task-execution-server/tree/develop). This is a work in progress and definitely could use some feedback from you with regards to how to better fit this in with your current code base and future development plans. . In the coming weeks we plan to implement unit tests, add documentation and refactor the code based on your recommendations.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1816
https://github.com/broadinstitute/cromwell/pull/1816:347,Usability,feedback,feedback,347,"This is a prototype backend that communicates via the GA4GH task execution [schema](https://github.com/ga4gh/task-execution-schemas). The reference implementation of the task server that we have been developing against is [here](https://github.com/bmeg/task-execution-server/tree/develop). This is a work in progress and definitely could use some feedback from you with regards to how to better fit this in with your current code base and future development plans. . In the coming weeks we plan to implement unit tests, add documentation and refactor the code based on your recommendations.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1816
https://github.com/broadinstitute/cromwell/issues/1817:83,Availability,error,error,83,"When I run a workflow and a task fails because the exit code is non-zero, I get an error message (good!) followed by a Cromwell runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:387,Availability,error,error,387,"When I run a workflow and a task fails because the exit code is non-zero, I get an error message (good!) followed by a Cromwell runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:1794,Availability,robust,robustPoll,1794,cala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:1974,Availability,robust,robustPoll,1974,StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.sc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:2323,Availability,robust,robustPoll,2323,ardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.Fork,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:89,Integrability,message,message,89,"When I run a workflow and a task fails because the exit code is non-zero, I get an error message (good!) followed by a Cromwell runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:795,Modifiability,config,config,795,"When I run a workflow and a task fails because the exit code is non-zero, I get an error message (good!) followed by a Cromwell runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:863,Modifiability,Config,ConfigAsyncJobExecutionActor,863,"When I run a workflow and a task fails because the exit code is non-zero, I get an error message (good!) followed by a Cromwell runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:1056,Modifiability,config,config,1056,"e is non-zero, I get an error message (good!) followed by a Cromwell runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Re",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:1120,Modifiability,Config,ConfigAsyncJobExecutionActor,1120,"ll runtime exception (bad!). I don't really care where in the cromwell code the exit code if zero is handled ;). If anything, I would like to see the stderr of the task that failed... but really just don't display that stacktrace. E.g. [2017-01-06 07:21:10,22] [error] WorkflowManagerActor Workflow 122adad6-115e-4c3a-8e83-0782145cf3e3 failed (during ExecutingWorkflowState): Call BamToUnmappedBams.SortSam:0:1: return code was 1; java.lang.RuntimeException: Call BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:1582,Modifiability,config,config,1582,all BamToUnmappedBams.SortSam:0:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:1633,Modifiability,Config,ConfigAsyncJobExecutionActor,1633,omwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:418); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:356); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:320); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$1.apply(StandardAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromw,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:2666,Modifiability,config,config,2666,dAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:2726,Modifiability,Config,ConfigAsyncJobExecutionActor,2726,dAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:3055,Performance,concurren,concurrent,3055,dAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:3129,Performance,concurren,concurrent,3129,dAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:3215,Performance,concurren,concurrent,3215,dAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1817:3293,Performance,concurren,concurrent,3293,dAsyncExecutionActor.scala:314); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.poll(StandardAsyncExecutionActor.scala:313); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.poll(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:41); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustPoll(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:70); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1817
https://github.com/broadinstitute/cromwell/issues/1819:363,Availability,echo,echo,363,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:440,Availability,echo,echo,440,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:816,Availability,error,error,816,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:837,Availability,failure,failures,837,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:822,Integrability,message,message,822,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:853,Integrability,message,message,853,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:909,Performance,load,load,909,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:217,Testability,test,test,217,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1819:284,Testability,test,test,284,"The wdl below doesn't pass input processing. It's a valid bash command. I suspect it has to do with the @ sign? . This wdl (also copied below) reproduces the issue:; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.wdl; /humgen/gsa-hpprojects/dev/tsato/m2-evaluation/wdl/test/hello.json. #### wdl ####. task hello {; String addressee; ; command <<<; echo ""Hello ${addressee}!""; array=(one two three); for i in ${array[@]}; do; echo $i; done; >>>. runtime {; docker: ""ubuntu:latest""; }; output {; String salutation = read_string(stdout()); }; }. workflow hello_and_goodbye {; String hello_and_goodbye_input. call hello {input: addressee = hello_and_goodbye_input }. output {; String hello_output = hello.salutation; }; }. #### json ####; {; ""hello_and_goodbye.hello_and_goodbye_input"": ""Takuto""; }; #### error message ####; ""failures"": [{; ""message"": ""Workflow input processing failed:\nUnable to load namespace from workflow: Unrecognized token on line 7, column 22:\n\n for i in ${array[@]}; do\n ^""; }]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1819
https://github.com/broadinstitute/cromwell/issues/1820:34,Availability,failure,failure,34,"GOTC keeps track of very workflow failure in a spreadsheet, and summarizes. @bradtaylor has shown it to me before, so he might be the place to start. The task here is to review that spreadsheet, provide a summary of the top failure modes and schedule a tech/design meeting to define the tickets that would have prevented these failures.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1820
https://github.com/broadinstitute/cromwell/issues/1820:224,Availability,failure,failure,224,"GOTC keeps track of very workflow failure in a spreadsheet, and summarizes. @bradtaylor has shown it to me before, so he might be the place to start. The task here is to review that spreadsheet, provide a summary of the top failure modes and schedule a tech/design meeting to define the tickets that would have prevented these failures.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1820
https://github.com/broadinstitute/cromwell/issues/1820:327,Availability,failure,failures,327,"GOTC keeps track of very workflow failure in a spreadsheet, and summarizes. @bradtaylor has shown it to me before, so he might be the place to start. The task here is to review that spreadsheet, provide a summary of the top failure modes and schedule a tech/design meeting to define the tickets that would have prevented these failures.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1820
https://github.com/broadinstitute/cromwell/issues/1820:242,Energy Efficiency,schedul,schedule,242,"GOTC keeps track of very workflow failure in a spreadsheet, and summarizes. @bradtaylor has shown it to me before, so he might be the place to start. The task here is to review that spreadsheet, provide a summary of the top failure modes and schedule a tech/design meeting to define the tickets that would have prevented these failures.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1820
https://github.com/broadinstitute/cromwell/issues/1821:112,Availability,failure,failure,112,"Similar to #1820 -- Talk with FireCloud Analysis PO ( @abaumann ) to specifically see if we can gather workflow failure cases for Chet's FireCloud 1000 sample run which had several non-user failures. Incorporate these findings into the same meeting as #1820 . With those errors, attempt to quantify how often this happens in FireCloud by mining the FireCloud Cromwell DBs (e.g. how often does a job fail with JES error code X). Use good judgement to strike a balance of effort vs value here.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1821
https://github.com/broadinstitute/cromwell/issues/1821:190,Availability,failure,failures,190,"Similar to #1820 -- Talk with FireCloud Analysis PO ( @abaumann ) to specifically see if we can gather workflow failure cases for Chet's FireCloud 1000 sample run which had several non-user failures. Incorporate these findings into the same meeting as #1820 . With those errors, attempt to quantify how often this happens in FireCloud by mining the FireCloud Cromwell DBs (e.g. how often does a job fail with JES error code X). Use good judgement to strike a balance of effort vs value here.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1821
https://github.com/broadinstitute/cromwell/issues/1821:271,Availability,error,errors,271,"Similar to #1820 -- Talk with FireCloud Analysis PO ( @abaumann ) to specifically see if we can gather workflow failure cases for Chet's FireCloud 1000 sample run which had several non-user failures. Incorporate these findings into the same meeting as #1820 . With those errors, attempt to quantify how often this happens in FireCloud by mining the FireCloud Cromwell DBs (e.g. how often does a job fail with JES error code X). Use good judgement to strike a balance of effort vs value here.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1821
https://github.com/broadinstitute/cromwell/issues/1821:413,Availability,error,error,413,"Similar to #1820 -- Talk with FireCloud Analysis PO ( @abaumann ) to specifically see if we can gather workflow failure cases for Chet's FireCloud 1000 sample run which had several non-user failures. Incorporate these findings into the same meeting as #1820 . With those errors, attempt to quantify how often this happens in FireCloud by mining the FireCloud Cromwell DBs (e.g. how often does a job fail with JES error code X). Use good judgement to strike a balance of effort vs value here.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1821
https://github.com/broadinstitute/cromwell/issues/1822:27,Availability,reliab,reliability,27,"The goal here is to gather reliability metrics on Cromwell. The theme here is basic.. the data is the most important artifact. Create something (e.g. a bash or python script) that ; ; - launches N (e.g. 50) workflows; - polls for workflow completion; - upon workflow completion, log workflow id + status (success/failure) and launch a new workflow. If a workflow fails, perhaps also grab the metadata for the workflow and write it out (although we could also query Cromwell for this later). This should run until we kill it. . Then start it up and let it run. Each day investigate workflow failures and generate a findings document which will feed into reliability ticket creation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822
https://github.com/broadinstitute/cromwell/issues/1822:313,Availability,failure,failure,313,"The goal here is to gather reliability metrics on Cromwell. The theme here is basic.. the data is the most important artifact. Create something (e.g. a bash or python script) that ; ; - launches N (e.g. 50) workflows; - polls for workflow completion; - upon workflow completion, log workflow id + status (success/failure) and launch a new workflow. If a workflow fails, perhaps also grab the metadata for the workflow and write it out (although we could also query Cromwell for this later). This should run until we kill it. . Then start it up and let it run. Each day investigate workflow failures and generate a findings document which will feed into reliability ticket creation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822
https://github.com/broadinstitute/cromwell/issues/1822:590,Availability,failure,failures,590,"The goal here is to gather reliability metrics on Cromwell. The theme here is basic.. the data is the most important artifact. Create something (e.g. a bash or python script) that ; ; - launches N (e.g. 50) workflows; - polls for workflow completion; - upon workflow completion, log workflow id + status (success/failure) and launch a new workflow. If a workflow fails, perhaps also grab the metadata for the workflow and write it out (although we could also query Cromwell for this later). This should run until we kill it. . Then start it up and let it run. Each day investigate workflow failures and generate a findings document which will feed into reliability ticket creation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822
https://github.com/broadinstitute/cromwell/issues/1822:653,Availability,reliab,reliability,653,"The goal here is to gather reliability metrics on Cromwell. The theme here is basic.. the data is the most important artifact. Create something (e.g. a bash or python script) that ; ; - launches N (e.g. 50) workflows; - polls for workflow completion; - upon workflow completion, log workflow id + status (success/failure) and launch a new workflow. If a workflow fails, perhaps also grab the metadata for the workflow and write it out (although we could also query Cromwell for this later). This should run until we kill it. . Then start it up and let it run. Each day investigate workflow failures and generate a findings document which will feed into reliability ticket creation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822
https://github.com/broadinstitute/cromwell/issues/1822:279,Testability,log,log,279,"The goal here is to gather reliability metrics on Cromwell. The theme here is basic.. the data is the most important artifact. Create something (e.g. a bash or python script) that ; ; - launches N (e.g. 50) workflows; - polls for workflow completion; - upon workflow completion, log workflow id + status (success/failure) and launch a new workflow. If a workflow fails, perhaps also grab the metadata for the workflow and write it out (although we could also query Cromwell for this later). This should run until we kill it. . Then start it up and let it run. Each day investigate workflow failures and generate a findings document which will feed into reliability ticket creation",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1822
https://github.com/broadinstitute/cromwell/pull/1823:307,Modifiability,Refactor,Refactored,307,"MetadataValue.apply was throwing an NPE exception when passed null, even though it had a call to .getOrElse("""").; Consolidated standard backend runtimeAttributeDefinitions implementation.; Added a GoogleAuthModeSpec.assumeHasApplicationDefaultCredentials in tests that use application default credentials.; Refactored away JesBackendLifecycleActorFactory's toJes, only used in one place where a similar standard method now exists.; Refactored away JesBackendLifecycleActorFactory's staticRuntimeAttributeDefinitions, only used in specs.; CromwellServer no longer hard codes the binding timeout.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1823
https://github.com/broadinstitute/cromwell/pull/1823:432,Modifiability,Refactor,Refactored,432,"MetadataValue.apply was throwing an NPE exception when passed null, even though it had a call to .getOrElse("""").; Consolidated standard backend runtimeAttributeDefinitions implementation.; Added a GoogleAuthModeSpec.assumeHasApplicationDefaultCredentials in tests that use application default credentials.; Refactored away JesBackendLifecycleActorFactory's toJes, only used in one place where a similar standard method now exists.; Refactored away JesBackendLifecycleActorFactory's staticRuntimeAttributeDefinitions, only used in specs.; CromwellServer no longer hard codes the binding timeout.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1823
https://github.com/broadinstitute/cromwell/pull/1823:586,Safety,timeout,timeout,586,"MetadataValue.apply was throwing an NPE exception when passed null, even though it had a call to .getOrElse("""").; Consolidated standard backend runtimeAttributeDefinitions implementation.; Added a GoogleAuthModeSpec.assumeHasApplicationDefaultCredentials in tests that use application default credentials.; Refactored away JesBackendLifecycleActorFactory's toJes, only used in one place where a similar standard method now exists.; Refactored away JesBackendLifecycleActorFactory's staticRuntimeAttributeDefinitions, only used in specs.; CromwellServer no longer hard codes the binding timeout.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1823
https://github.com/broadinstitute/cromwell/pull/1823:258,Testability,test,tests,258,"MetadataValue.apply was throwing an NPE exception when passed null, even though it had a call to .getOrElse("""").; Consolidated standard backend runtimeAttributeDefinitions implementation.; Added a GoogleAuthModeSpec.assumeHasApplicationDefaultCredentials in tests that use application default credentials.; Refactored away JesBackendLifecycleActorFactory's toJes, only used in one place where a similar standard method now exists.; Refactored away JesBackendLifecycleActorFactory's staticRuntimeAttributeDefinitions, only used in specs.; CromwellServer no longer hard codes the binding timeout.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1823
https://github.com/broadinstitute/cromwell/issues/1825:347,Availability,error,error,347,"A user (@helgridly) was flummoxed when they tried to use `read_json` to read a result back into WDL after running a python task. They had designed a method around the idea of being able to serialize and deserialize to/from JSON and had a bad experience at the last minute when these functions turned out to not be implemented. The less-than-ideal error message did not help matters. Although the general-purpose `read_json` might be dangerous, we could at least support something like `read_json_array`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1825
https://github.com/broadinstitute/cromwell/issues/1825:353,Integrability,message,message,353,"A user (@helgridly) was flummoxed when they tried to use `read_json` to read a result back into WDL after running a python task. They had designed a method around the idea of being able to serialize and deserialize to/from JSON and had a bad experience at the last minute when these functions turned out to not be implemented. The less-than-ideal error message did not help matters. Although the general-purpose `read_json` might be dangerous, we could at least support something like `read_json_array`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1825
https://github.com/broadinstitute/cromwell/issues/1826:4073,Modifiability,variab,variables,4073,"${CLEAN_SAMPLE}.bai"", ""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bai""]; 		 File genotypes = ""/seq/references/reference_genotypes/non-hapmap/${PROJECT}/Homo_sapiens_assembly19/${CLEAN_SAMPLE}.vcf"". 		 call Fingerprint {; 		 	input:; 		 		PICARD=PICARD,; 		 		input_bam=bams[0],; 		 		input_bam_index=indexes[0],; 			 haplotype_database_file=haplotype_database_file,; 		 	 	genotypes=genotypes,; 				sample=SAMPLE,; 		 }. 		 call Fingerprint as FingerprintOther {; 		 	input:; 		 		PICARD=PICARD,; 		 		input_bam=bams[1],; 		 		input_bam_index=indexes[1],; 			 haplotype_database_file=haplotype_database_file,; 		 	 	genotypes=genotypes,; 				sample=COMPARE_SAMPLE,; 		 }. 		 call CrossCheckFingerprints {; 	 		input:; 	 			PICARD=PICARD,; 	 			input_bams=bams,; 	 			input_bam_indexes=indexes,; 	 			haplotype_database_file=haplotype_database_file,; 	 			metrics_filename=CLEAN_SAMPLE+""_and_""+CLEAN_COMPARE_SAMPLE+"".crosscheck""; 		 }. 		 output {; 		 	Fingerprint.*; 		 	FingerprintOther.*; 		 	CrossCheckFingerprints.*; 		 }; 	}; }; ```. And a json to go with it:; ```; {; ""FingerprintSamples.PICARD"": ""/seq/software/picard/current/bin/picard.jar"",; ""FingerprintSamples.haplotype_database_file"": ""/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.haplotype_database.txt"",; ""FingerprintSamples.SamplesTSV"": ""sampleSetTest.txt""; }; ```. This is sampleSetTest.txt: ; [SampleSetTest.txt](https://github.com/broadinstitute/cromwell/files/694627/SampleSetTest.txt). All of the individual tasks seem to work, but when it begins the scatter it fails to start most of the tasks. I don't see a pattern to which it seems to start. It then reports QueuedInCromwell on the started tasks, even though they seem to have finished with output. This fails **both** in SGE and Local backends. There is a suspicion that this might be due to declaring variables inside of the scatter? I'm going to try extracting all variable declaration into a task to see if that works.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1826
https://github.com/broadinstitute/cromwell/issues/1826:4138,Modifiability,variab,variable,4138,"${CLEAN_SAMPLE}.bai"", ""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bai""]; 		 File genotypes = ""/seq/references/reference_genotypes/non-hapmap/${PROJECT}/Homo_sapiens_assembly19/${CLEAN_SAMPLE}.vcf"". 		 call Fingerprint {; 		 	input:; 		 		PICARD=PICARD,; 		 		input_bam=bams[0],; 		 		input_bam_index=indexes[0],; 			 haplotype_database_file=haplotype_database_file,; 		 	 	genotypes=genotypes,; 				sample=SAMPLE,; 		 }. 		 call Fingerprint as FingerprintOther {; 		 	input:; 		 		PICARD=PICARD,; 		 		input_bam=bams[1],; 		 		input_bam_index=indexes[1],; 			 haplotype_database_file=haplotype_database_file,; 		 	 	genotypes=genotypes,; 				sample=COMPARE_SAMPLE,; 		 }. 		 call CrossCheckFingerprints {; 	 		input:; 	 			PICARD=PICARD,; 	 			input_bams=bams,; 	 			input_bam_indexes=indexes,; 	 			haplotype_database_file=haplotype_database_file,; 	 			metrics_filename=CLEAN_SAMPLE+""_and_""+CLEAN_COMPARE_SAMPLE+"".crosscheck""; 		 }. 		 output {; 		 	Fingerprint.*; 		 	FingerprintOther.*; 		 	CrossCheckFingerprints.*; 		 }; 	}; }; ```. And a json to go with it:; ```; {; ""FingerprintSamples.PICARD"": ""/seq/software/picard/current/bin/picard.jar"",; ""FingerprintSamples.haplotype_database_file"": ""/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.haplotype_database.txt"",; ""FingerprintSamples.SamplesTSV"": ""sampleSetTest.txt""; }; ```. This is sampleSetTest.txt: ; [SampleSetTest.txt](https://github.com/broadinstitute/cromwell/files/694627/SampleSetTest.txt). All of the individual tasks seem to work, but when it begins the scatter it fails to start most of the tasks. I don't see a pattern to which it seems to start. It then reports QueuedInCromwell on the started tasks, even though they seem to have finished with output. This fails **both** in SGE and Local backends. There is a suspicion that this might be due to declaring variables inside of the scatter? I'm going to try extracting all variable declaration into a task to see if that works.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1826
https://github.com/broadinstitute/cromwell/issues/1826:3878,Performance,Queue,QueuedInCromwell,3878,"${CLEAN_SAMPLE}.bai"", ""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bai""]; 		 File genotypes = ""/seq/references/reference_genotypes/non-hapmap/${PROJECT}/Homo_sapiens_assembly19/${CLEAN_SAMPLE}.vcf"". 		 call Fingerprint {; 		 	input:; 		 		PICARD=PICARD,; 		 		input_bam=bams[0],; 		 		input_bam_index=indexes[0],; 			 haplotype_database_file=haplotype_database_file,; 		 	 	genotypes=genotypes,; 				sample=SAMPLE,; 		 }. 		 call Fingerprint as FingerprintOther {; 		 	input:; 		 		PICARD=PICARD,; 		 		input_bam=bams[1],; 		 		input_bam_index=indexes[1],; 			 haplotype_database_file=haplotype_database_file,; 		 	 	genotypes=genotypes,; 				sample=COMPARE_SAMPLE,; 		 }. 		 call CrossCheckFingerprints {; 	 		input:; 	 			PICARD=PICARD,; 	 			input_bams=bams,; 	 			input_bam_indexes=indexes,; 	 			haplotype_database_file=haplotype_database_file,; 	 			metrics_filename=CLEAN_SAMPLE+""_and_""+CLEAN_COMPARE_SAMPLE+"".crosscheck""; 		 }. 		 output {; 		 	Fingerprint.*; 		 	FingerprintOther.*; 		 	CrossCheckFingerprints.*; 		 }; 	}; }; ```. And a json to go with it:; ```; {; ""FingerprintSamples.PICARD"": ""/seq/software/picard/current/bin/picard.jar"",; ""FingerprintSamples.haplotype_database_file"": ""/seq/references/Homo_sapiens_assembly19/v1/Homo_sapiens_assembly19.haplotype_database.txt"",; ""FingerprintSamples.SamplesTSV"": ""sampleSetTest.txt""; }; ```. This is sampleSetTest.txt: ; [SampleSetTest.txt](https://github.com/broadinstitute/cromwell/files/694627/SampleSetTest.txt). All of the individual tasks seem to work, but when it begins the scatter it fails to start most of the tasks. I don't see a pattern to which it seems to start. It then reports QueuedInCromwell on the started tasks, even though they seem to have finished with output. This fails **both** in SGE and Local backends. There is a suspicion that this might be due to declaring variables inside of the scatter? I'm going to try extracting all variable declaration into a task to see if that works.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1826
https://github.com/broadinstitute/cromwell/issues/1828:32,Testability,test,tested,32,Currently this behavior is only tested in CromwellApiServiceSpec and I intend to remove that toot sweet as that's not part of CromwellApiService.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1828
https://github.com/broadinstitute/cromwell/issues/1829:32,Safety,Timeout,Timeout,32,In particular the behavior for `Timeout` is indirectly tested currently by CromwellApiServiceSpec. Test this behavior directly in the (currently nonexistent) CromwellServerActorSpec instead,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1829
https://github.com/broadinstitute/cromwell/issues/1829:55,Testability,test,tested,55,In particular the behavior for `Timeout` is indirectly tested currently by CromwellApiServiceSpec. Test this behavior directly in the (currently nonexistent) CromwellServerActorSpec instead,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1829
https://github.com/broadinstitute/cromwell/issues/1829:99,Testability,Test,Test,99,In particular the behavior for `Timeout` is indirectly tested currently by CromwellApiServiceSpec. Test this behavior directly in the (currently nonexistent) CromwellServerActorSpec instead,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1829
https://github.com/broadinstitute/cromwell/issues/1830:194,Availability,ERROR,ERROR,194,"I have a wdl task that doesn't handle an optional parameter as it should.; The wdl validates (wdltool-0.8.jar), but when I submit to my server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stoppin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/issues/1830:740,Availability,Error,Error,740,"I have a wdl task that doesn't handle an optional parameter as it should.; The wdl validates (wdltool-0.8.jar), but when I submit to my server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stoppin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/issues/1830:83,Security,validat,validates,83,"I have a wdl task that doesn't handle an optional parameter as it should.; The wdl validates (wdltool-0.8.jar), but when I submit to my server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stoppin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/issues/1830:523,Testability,test,testHC,523,"I have a wdl task that doesn't handle an optional parameter as it should.; The wdl validates (wdltool-0.8.jar), but when I submit to my server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stoppin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/issues/1830:613,Testability,test,testHC,613,"I have a wdl task that doesn't handle an optional parameter as it should.; The wdl validates (wdltool-0.8.jar), but when I submit to my server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stoppin",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/issues/1830:2056,Testability,log,log,2056," server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stopping the exception being thrown.; Would it be possible to log the exception just once so that it doesn't clog up the server logs?; Thanks",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/issues/1830:2122,Testability,log,logs,2122," server, an exception is thrown over and over again. ```; [ERROR] [01/10/2017 15:07:12.214] [cromwell-system-akka.actor.default-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-98777f84-7e; 14-4408-b31e-9b57db5d813b/WorkflowExecutionActor-98777f84-7e14-4408-b31e-9b57db5d813b/98777f84-7e14-4408-b31e-9b57db5d813b-EngineJobExecutionActor-snps.testHC:NA:1/98777f84-7e1; 4-4408-b31e-9b57db5d813b-BackendJobExecutionActor-98777f84:snps.testHC:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(98777f84)snps.t; estHC:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlStringType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); at wdl4s.Task.instantiateCommand(Task.scala:108); ...; ```. Restarting the service seems to be the only way of stopping the exception being thrown.; Would it be possible to log the exception just once so that it doesn't clog up the server logs?; Thanks",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1830
https://github.com/broadinstitute/cromwell/pull/1831:185,Availability,reliab,reliability,185,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1585,Availability,failure,failure,1585,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1762,Availability,avail,available,1762,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1131,Deployability,integrat,integrate,1131," that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:844,Integrability,interface,interface,844,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:862,Integrability,message,messages,862,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1043,Integrability,message,message,1043,"ore the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1131,Integrability,integrat,integrate,1131," that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1209,Integrability,message,message,1209," that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1269,Integrability,rout,router,1269,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1422,Integrability,message,message,1422,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1460,Integrability,depend,depending,1460,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1636,Integrability,message,message,1636,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1656,Integrability,rout,router,1656,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1715,Integrability,message,message,1715,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:197,Performance,scalab,scalability,197,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:492,Performance,cache,cache,492,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:1339,Performance,perform,perform,1339,"at one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as possible (considering exponentially long waiting times in between retries) until a threshold amount of time has passed since the first try (10 minutes by default).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:137,Testability,test,tests,137,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/pull/1831:645,Testability,test,test,645,"Before the break I was playing around trying to async-ify Cromwell's IO a bit more. It's not complete and needs clean up / refinements / tests, but considering that one of the goals is reliability/scalability, I thought I'd make a PR out of it since it might provide a base for discussion. This branch has an IO Actor that handles *some* of the IO that has to be done both on the engine and the backend side. Specifically the script.sh upload, rc file reading, stderr file size reading, call cache copying (on JES), workflow outputs copying is done using this mechanism.; The actor is under the service registry umbrella, that was to be able to test it more rapidly (as the service registry is already wired up pretty much everywhere), but it should probably be it's own top level actor. Due to the Future-based approach we took in the backend interface, the IO messages (copy, read, write, delete file...) are declined into 2 different flavors:; - A classic Command -> Response; - A Promise based version, that takes a promise in the command message itself to be completed when the operation finishes. This allow for the actor to integrate with parts of the code that can't (easily) handle the response as a message. The underlying implementation of the IO Actor is a router, but could be swapped for something else. Each worker tries to perform the operation, and once it's complete (successfully or not) either sends a message back or completes the promise depending on the command flavor.; Retries are handled by keeping an exponential backoff object in the command itself. If the failure is retryable, the worker sends the command message back to the router after waiting for the appropriate backoff time. The message will then be rerouted when a worker is available.; Note that the actual time before the command is picked up again by another worker could be longer than intended if all workers are busy and the command spends time in the mailbox. ; A command will be retried as many times as po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1831
https://github.com/broadinstitute/cromwell/issues/1832:26,Security,validat,validate,26,"In other words, we should validate `docker` as an optional string so that we can do things like this:. ```; task foo {; String? dockerName; command { ... }; runtime {; docker: dockerName; }; output { ... }; }; ```. The expected behaviour here is:; - If `dockerName` is set, use docker and use the specified image name; - If `dockerName` is not set, do not use docker.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1832
https://github.com/broadinstitute/cromwell/pull/1833:23,Testability,test,tests,23,Reopening after moving tests over to wdl4s and bumping the wdl4s version.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1833
https://github.com/broadinstitute/cromwell/issues/1835:94,Modifiability,config,config,94,After careful perusal of the code it appears that this should be in `services.MetadataService.config` but since the code which uses it does an end run around the service config it wound up in `services.MetadataService` proper.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1835
https://github.com/broadinstitute/cromwell/issues/1835:170,Modifiability,config,config,170,After careful perusal of the code it appears that this should be in `services.MetadataService.config` but since the code which uses it does an end run around the service config it wound up in `services.MetadataService` proper.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1835
https://github.com/broadinstitute/cromwell/pull/1836:118,Availability,failure,failure,118,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:395,Deployability,integrat,integration,395,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:173,Integrability,message,messages,173,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:395,Integrability,integrat,integration,395,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:5,Performance,perform,performance,5,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:32,Performance,load,load,32,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:348,Testability,test,testing,348,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:407,Testability,test,test,407,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:448,Testability,test,tests,448,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:539,Testability,test,tests,539,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/pull/1836:607,Testability,test,tested,607,"…old performance increase under load prior to DB gumming up. . Things to note:; - Effectively removes Metadata acks & failure notices (see #1811) via no longer emitting the messages but does not fully remove them. They still technically exist, I'll remove them as part of a separate PR; - Completely reworks `CromwellApiServiceSpec` to actually be testing `CromwellApiService` and not a general integration test of our REST endpoints. Two specific tests didn't make the cut (#1828 and #1829) I'll address in separate PRs. There were other tests which did not make the cut but were already effectively being tested in their appropriate units.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1836
https://github.com/broadinstitute/cromwell/issues/1837:291,Availability,failure,failure,291,"In the cromwell README...; ```wdltool 0.4```. ```; import ""sub_wdl.wdl"" as sub. workflow main_workflow {. call sub.hello_and_goodbye { input: hello_and_goodbye_input = ""sub world"" }. # call myTask { input: hello_and_goodbye.hello_output }. output {; # I believe this will cause a validation failure. This is what is currently in the README...; String main_output = hello_and_goodbye.hello_output. # I believe this will NOT cause a validation failure. ; hello_and_goodbye.hello_output; }; }; ```. My real-world example:. ```; workflow dl_ob_training {. File bam_file; File bam_file_index; File gatk_jar; File ref_fasta; File oncotated_m1; String entity_id; File createOxoGIntervalList. call CollectSequencingArtifactMetrics {; input:; entity_id=entity_id,; bam_file=bam_file,; output_location_prepend=entity_id,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta; }. call CreateObIntervalList {; input:; oncotated_m1=oncotated_m1,; entity_id=entity_id,; createOxoGIntervalList=createOxoGIntervalList; }. call ExtractReadInfo {; input:; bam_file=bam_file,; bam_file_index=bam_file_index,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; pre_adapter_file=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics,; interval_list=CreateObIntervalList.interval_list,; }. output {; # VALIDATES; ExtractReadInfo.read_infos. # DOES NOT VALIDATE; Array[File] read_infos = ExtractReadInfo.read_infos; }; }; .....snip.... task ExtractReadInfo {; File gatk_jar; File pre_adapter_file; File interval_list; File bam_file; File bam_file_index; File ref_fasta. command {; java -jar ${gatk_jar} ExtractReadInfo \; -P ${pre_adapter_file} \; -L ${interval_list} \; -I ${bam_file} \; -R ${ref_fasta} \; -OP out/; }. output {; Array[File] read_infos = glob(""out/*""); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1837
https://github.com/broadinstitute/cromwell/issues/1837:442,Availability,failure,failure,442,"In the cromwell README...; ```wdltool 0.4```. ```; import ""sub_wdl.wdl"" as sub. workflow main_workflow {. call sub.hello_and_goodbye { input: hello_and_goodbye_input = ""sub world"" }. # call myTask { input: hello_and_goodbye.hello_output }. output {; # I believe this will cause a validation failure. This is what is currently in the README...; String main_output = hello_and_goodbye.hello_output. # I believe this will NOT cause a validation failure. ; hello_and_goodbye.hello_output; }; }; ```. My real-world example:. ```; workflow dl_ob_training {. File bam_file; File bam_file_index; File gatk_jar; File ref_fasta; File oncotated_m1; String entity_id; File createOxoGIntervalList. call CollectSequencingArtifactMetrics {; input:; entity_id=entity_id,; bam_file=bam_file,; output_location_prepend=entity_id,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta; }. call CreateObIntervalList {; input:; oncotated_m1=oncotated_m1,; entity_id=entity_id,; createOxoGIntervalList=createOxoGIntervalList; }. call ExtractReadInfo {; input:; bam_file=bam_file,; bam_file_index=bam_file_index,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; pre_adapter_file=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics,; interval_list=CreateObIntervalList.interval_list,; }. output {; # VALIDATES; ExtractReadInfo.read_infos. # DOES NOT VALIDATE; Array[File] read_infos = ExtractReadInfo.read_infos; }; }; .....snip.... task ExtractReadInfo {; File gatk_jar; File pre_adapter_file; File interval_list; File bam_file; File bam_file_index; File ref_fasta. command {; java -jar ${gatk_jar} ExtractReadInfo \; -P ${pre_adapter_file} \; -L ${interval_list} \; -I ${bam_file} \; -R ${ref_fasta} \; -OP out/; }. output {; Array[File] read_infos = glob(""out/*""); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1837
https://github.com/broadinstitute/cromwell/issues/1837:280,Security,validat,validation,280,"In the cromwell README...; ```wdltool 0.4```. ```; import ""sub_wdl.wdl"" as sub. workflow main_workflow {. call sub.hello_and_goodbye { input: hello_and_goodbye_input = ""sub world"" }. # call myTask { input: hello_and_goodbye.hello_output }. output {; # I believe this will cause a validation failure. This is what is currently in the README...; String main_output = hello_and_goodbye.hello_output. # I believe this will NOT cause a validation failure. ; hello_and_goodbye.hello_output; }; }; ```. My real-world example:. ```; workflow dl_ob_training {. File bam_file; File bam_file_index; File gatk_jar; File ref_fasta; File oncotated_m1; String entity_id; File createOxoGIntervalList. call CollectSequencingArtifactMetrics {; input:; entity_id=entity_id,; bam_file=bam_file,; output_location_prepend=entity_id,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta; }. call CreateObIntervalList {; input:; oncotated_m1=oncotated_m1,; entity_id=entity_id,; createOxoGIntervalList=createOxoGIntervalList; }. call ExtractReadInfo {; input:; bam_file=bam_file,; bam_file_index=bam_file_index,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; pre_adapter_file=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics,; interval_list=CreateObIntervalList.interval_list,; }. output {; # VALIDATES; ExtractReadInfo.read_infos. # DOES NOT VALIDATE; Array[File] read_infos = ExtractReadInfo.read_infos; }; }; .....snip.... task ExtractReadInfo {; File gatk_jar; File pre_adapter_file; File interval_list; File bam_file; File bam_file_index; File ref_fasta. command {; java -jar ${gatk_jar} ExtractReadInfo \; -P ${pre_adapter_file} \; -L ${interval_list} \; -I ${bam_file} \; -R ${ref_fasta} \; -OP out/; }. output {; Array[File] read_infos = glob(""out/*""); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1837
https://github.com/broadinstitute/cromwell/issues/1837:431,Security,validat,validation,431,"In the cromwell README...; ```wdltool 0.4```. ```; import ""sub_wdl.wdl"" as sub. workflow main_workflow {. call sub.hello_and_goodbye { input: hello_and_goodbye_input = ""sub world"" }. # call myTask { input: hello_and_goodbye.hello_output }. output {; # I believe this will cause a validation failure. This is what is currently in the README...; String main_output = hello_and_goodbye.hello_output. # I believe this will NOT cause a validation failure. ; hello_and_goodbye.hello_output; }; }; ```. My real-world example:. ```; workflow dl_ob_training {. File bam_file; File bam_file_index; File gatk_jar; File ref_fasta; File oncotated_m1; String entity_id; File createOxoGIntervalList. call CollectSequencingArtifactMetrics {; input:; entity_id=entity_id,; bam_file=bam_file,; output_location_prepend=entity_id,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta; }. call CreateObIntervalList {; input:; oncotated_m1=oncotated_m1,; entity_id=entity_id,; createOxoGIntervalList=createOxoGIntervalList; }. call ExtractReadInfo {; input:; bam_file=bam_file,; bam_file_index=bam_file_index,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; pre_adapter_file=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics,; interval_list=CreateObIntervalList.interval_list,; }. output {; # VALIDATES; ExtractReadInfo.read_infos. # DOES NOT VALIDATE; Array[File] read_infos = ExtractReadInfo.read_infos; }; }; .....snip.... task ExtractReadInfo {; File gatk_jar; File pre_adapter_file; File interval_list; File bam_file; File bam_file_index; File ref_fasta. command {; java -jar ${gatk_jar} ExtractReadInfo \; -P ${pre_adapter_file} \; -L ${interval_list} \; -I ${bam_file} \; -R ${ref_fasta} \; -OP out/; }. output {; Array[File] read_infos = glob(""out/*""); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1837
https://github.com/broadinstitute/cromwell/issues/1837:1264,Security,VALIDAT,VALIDATES,1264,"In the cromwell README...; ```wdltool 0.4```. ```; import ""sub_wdl.wdl"" as sub. workflow main_workflow {. call sub.hello_and_goodbye { input: hello_and_goodbye_input = ""sub world"" }. # call myTask { input: hello_and_goodbye.hello_output }. output {; # I believe this will cause a validation failure. This is what is currently in the README...; String main_output = hello_and_goodbye.hello_output. # I believe this will NOT cause a validation failure. ; hello_and_goodbye.hello_output; }; }; ```. My real-world example:. ```; workflow dl_ob_training {. File bam_file; File bam_file_index; File gatk_jar; File ref_fasta; File oncotated_m1; String entity_id; File createOxoGIntervalList. call CollectSequencingArtifactMetrics {; input:; entity_id=entity_id,; bam_file=bam_file,; output_location_prepend=entity_id,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta; }. call CreateObIntervalList {; input:; oncotated_m1=oncotated_m1,; entity_id=entity_id,; createOxoGIntervalList=createOxoGIntervalList; }. call ExtractReadInfo {; input:; bam_file=bam_file,; bam_file_index=bam_file_index,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; pre_adapter_file=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics,; interval_list=CreateObIntervalList.interval_list,; }. output {; # VALIDATES; ExtractReadInfo.read_infos. # DOES NOT VALIDATE; Array[File] read_infos = ExtractReadInfo.read_infos; }; }; .....snip.... task ExtractReadInfo {; File gatk_jar; File pre_adapter_file; File interval_list; File bam_file; File bam_file_index; File ref_fasta. command {; java -jar ${gatk_jar} ExtractReadInfo \; -P ${pre_adapter_file} \; -L ${interval_list} \; -I ${bam_file} \; -R ${ref_fasta} \; -OP out/; }. output {; Array[File] read_infos = glob(""out/*""); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1837
https://github.com/broadinstitute/cromwell/issues/1837:1314,Security,VALIDAT,VALIDATE,1314,"In the cromwell README...; ```wdltool 0.4```. ```; import ""sub_wdl.wdl"" as sub. workflow main_workflow {. call sub.hello_and_goodbye { input: hello_and_goodbye_input = ""sub world"" }. # call myTask { input: hello_and_goodbye.hello_output }. output {; # I believe this will cause a validation failure. This is what is currently in the README...; String main_output = hello_and_goodbye.hello_output. # I believe this will NOT cause a validation failure. ; hello_and_goodbye.hello_output; }; }; ```. My real-world example:. ```; workflow dl_ob_training {. File bam_file; File bam_file_index; File gatk_jar; File ref_fasta; File oncotated_m1; String entity_id; File createOxoGIntervalList. call CollectSequencingArtifactMetrics {; input:; entity_id=entity_id,; bam_file=bam_file,; output_location_prepend=entity_id,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta; }. call CreateObIntervalList {; input:; oncotated_m1=oncotated_m1,; entity_id=entity_id,; createOxoGIntervalList=createOxoGIntervalList; }. call ExtractReadInfo {; input:; bam_file=bam_file,; bam_file_index=bam_file_index,; gatk_jar=gatk_jar,; ref_fasta=ref_fasta,; pre_adapter_file=CollectSequencingArtifactMetrics.pre_adapter_detail_metrics,; interval_list=CreateObIntervalList.interval_list,; }. output {; # VALIDATES; ExtractReadInfo.read_infos. # DOES NOT VALIDATE; Array[File] read_infos = ExtractReadInfo.read_infos; }; }; .....snip.... task ExtractReadInfo {; File gatk_jar; File pre_adapter_file; File interval_list; File bam_file; File bam_file_index; File ref_fasta. command {; java -jar ${gatk_jar} ExtractReadInfo \; -P ${pre_adapter_file} \; -L ${interval_list} \; -I ${bam_file} \; -R ${ref_fasta} \; -OP out/; }. output {; Array[File] read_infos = glob(""out/*""); }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1837
https://github.com/broadinstitute/cromwell/issues/1841:165,Modifiability,config,config,165,The `concurrent-job-limit` option is in the CHANGELOG but never appears in the documentation:. ```; backend {; ...; providers {; BackendName {; actor-factory = ...; config {; concurrent-job-limit = 5; ```. It should probably also make an appearance in the reference.conf file,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1841
https://github.com/broadinstitute/cromwell/issues/1841:5,Performance,concurren,concurrent-job-limit,5,The `concurrent-job-limit` option is in the CHANGELOG but never appears in the documentation:. ```; backend {; ...; providers {; BackendName {; actor-factory = ...; config {; concurrent-job-limit = 5; ```. It should probably also make an appearance in the reference.conf file,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1841
https://github.com/broadinstitute/cromwell/issues/1841:175,Performance,concurren,concurrent-job-limit,175,The `concurrent-job-limit` option is in the CHANGELOG but never appears in the documentation:. ```; backend {; ...; providers {; BackendName {; actor-factory = ...; config {; concurrent-job-limit = 5; ```. It should probably also make an appearance in the reference.conf file,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1841
https://github.com/broadinstitute/cromwell/issues/1842:603,Availability,error,errorAllowed,603,"- Fix broken calls to any workflow that is already in the workflow call tree (including itself).; - This would allow the equivalent of `do-while` loops via recursion and conditionals. E.g. we could iteratively improve a result until it is ""good enough""; - Here's an example that would allow us to work out square roots to a predefined accuracy:; ```; task refine {; 	Int number; 	Float currentApproximation. 	command {}. 	output {; 		Float nextApproximation = 0.5 * (currentApproximation + (1.0 / currentApproximation * number)); 	}; }. workflow sqrt {; 	Int number; 	Float currentApproximation. 	Float errorAllowed = 0.05 . 	if (currentApproximation * currentApproximation - number > errorAllowed) {; 		call refine { input: number = number, currentApproximation = currentApproximation }; 		call sqrt as recurse { input: number = number, currentApproximation = refine.nextApproximation }; 	}. 	output {; 		Float result = select_first( [ recurse.result, currentApproximation ] ); 	}; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1842
https://github.com/broadinstitute/cromwell/issues/1842:685,Availability,error,errorAllowed,685,"- Fix broken calls to any workflow that is already in the workflow call tree (including itself).; - This would allow the equivalent of `do-while` loops via recursion and conditionals. E.g. we could iteratively improve a result until it is ""good enough""; - Here's an example that would allow us to work out square roots to a predefined accuracy:; ```; task refine {; 	Int number; 	Float currentApproximation. 	command {}. 	output {; 		Float nextApproximation = 0.5 * (currentApproximation + (1.0 / currentApproximation * number)); 	}; }. workflow sqrt {; 	Int number; 	Float currentApproximation. 	Float errorAllowed = 0.05 . 	if (currentApproximation * currentApproximation - number > errorAllowed) {; 		call refine { input: number = number, currentApproximation = currentApproximation }; 		call sqrt as recurse { input: number = number, currentApproximation = refine.nextApproximation }; 	}. 	output {; 		Float result = select_first( [ recurse.result, currentApproximation ] ); 	}; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1842
https://github.com/broadinstitute/cromwell/issues/1843:66,Security,hash,hashing-strategy,66,It would be great to be able to include last modified date in the hashing-strategy when using the current `path` strategy. This would prevent having incorrect output from a task if the file was modified but the path was not.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1843
https://github.com/broadinstitute/cromwell/issues/1844:23,Availability,recover,recover,23,"When cromwell needs to recover many jobs at once, or check many caches at once it seems to only do one at a time. I found this with the following wdl, scattered by about 300 ways, run on broad filesystem with the SGE backend. I'd be happy to provide the json and list of inputs if needed. ```; task Decapitate {; 	File inputFile; 	String outputFilename. 	command {; 		tail -n+2 ${inputFile}; 	}; 	runtime {; 		memory: ""4 GB""; 	}; 	output {; 		Array[Array[String]] outputMatrix=read_tsv(stdout()); 	}; }. task BreakUpRow {; 	String PROJECT; 	String SAMPLE; 	String DATA_TYPE; 	String COMPARE_SAMPLE ; 	String COMPARE_PROJECT; 	String CLEAN_SAMPLE; 	String CLEAN_COMPARE_SAMPLE. 	command {; 		#do nothing; 	}; 	runtime {; 		memory: ""1 GB""; 	}; 	output {; 		Array[File] bams = [""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bam"", ""/seq/picard_aggregation/${COMPARE_PROJECT}/${CLEAN_COMPARE_SAMPLE}/current/${CLEAN_COMPARE_SAMPLE}.bam""]; 		Array[File] indexes = [""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bai"", ""/seq/picard_aggregation/${COMPARE_PROJECT}/${CLEAN_COMPARE_SAMPLE}/current/${CLEAN_COMPARE_SAMPLE}.bai""]; 		File genotypes = ""/seq/references/reference_genotypes/non-hapmap/${PROJECT}/Homo_sapiens_assembly19/${CLEAN_SAMPLE}.vcf""; 		String PROJECT_out = ""${PROJECT}""; 		String SAMPLE_out = ""${SAMPLE}""; 		String DATA_TYPE_out = ""${DATA_TYPE}""; 		String COMPARE_SAMPLE_out = ""${COMPARE_SAMPLE}""; 		String COMPARE_PROJECT_out = ""${COMPARE_PROJECT}""; 		String CLEAN_SAMPLE_out = ""${CLEAN_SAMPLE}""; 		String CLEAN_COMPARE_SAMPLE_out = ""${CLEAN_COMPARE_SAMPLE}""; 	}. }. task Fingerprint {; String PICARD; File input_bam; File input_bam_index; File haplotype_database_file; File genotypes; String vcf_sample; String output_name; ; command {; java -Dsamjdk.buffer_size=131072 -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10 -Xmx1024m \; -jar ${PICARD} \; CheckFingerprint \; INPUT=${input_bam} \; OUTPUT=${output_name} \; GENOTYPES=${genotypes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1844
https://github.com/broadinstitute/cromwell/issues/1844:64,Performance,cache,caches,64,"When cromwell needs to recover many jobs at once, or check many caches at once it seems to only do one at a time. I found this with the following wdl, scattered by about 300 ways, run on broad filesystem with the SGE backend. I'd be happy to provide the json and list of inputs if needed. ```; task Decapitate {; 	File inputFile; 	String outputFilename. 	command {; 		tail -n+2 ${inputFile}; 	}; 	runtime {; 		memory: ""4 GB""; 	}; 	output {; 		Array[Array[String]] outputMatrix=read_tsv(stdout()); 	}; }. task BreakUpRow {; 	String PROJECT; 	String SAMPLE; 	String DATA_TYPE; 	String COMPARE_SAMPLE ; 	String COMPARE_PROJECT; 	String CLEAN_SAMPLE; 	String CLEAN_COMPARE_SAMPLE. 	command {; 		#do nothing; 	}; 	runtime {; 		memory: ""1 GB""; 	}; 	output {; 		Array[File] bams = [""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bam"", ""/seq/picard_aggregation/${COMPARE_PROJECT}/${CLEAN_COMPARE_SAMPLE}/current/${CLEAN_COMPARE_SAMPLE}.bam""]; 		Array[File] indexes = [""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bai"", ""/seq/picard_aggregation/${COMPARE_PROJECT}/${CLEAN_COMPARE_SAMPLE}/current/${CLEAN_COMPARE_SAMPLE}.bai""]; 		File genotypes = ""/seq/references/reference_genotypes/non-hapmap/${PROJECT}/Homo_sapiens_assembly19/${CLEAN_SAMPLE}.vcf""; 		String PROJECT_out = ""${PROJECT}""; 		String SAMPLE_out = ""${SAMPLE}""; 		String DATA_TYPE_out = ""${DATA_TYPE}""; 		String COMPARE_SAMPLE_out = ""${COMPARE_SAMPLE}""; 		String COMPARE_PROJECT_out = ""${COMPARE_PROJECT}""; 		String CLEAN_SAMPLE_out = ""${CLEAN_SAMPLE}""; 		String CLEAN_COMPARE_SAMPLE_out = ""${CLEAN_COMPARE_SAMPLE}""; 	}. }. task Fingerprint {; String PICARD; File input_bam; File input_bam_index; File haplotype_database_file; File genotypes; String vcf_sample; String output_name; ; command {; java -Dsamjdk.buffer_size=131072 -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10 -Xmx1024m \; -jar ${PICARD} \; CheckFingerprint \; INPUT=${input_bam} \; OUTPUT=${output_name} \; GENOTYPES=${genotypes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1844
https://github.com/broadinstitute/cromwell/issues/1844:23,Safety,recover,recover,23,"When cromwell needs to recover many jobs at once, or check many caches at once it seems to only do one at a time. I found this with the following wdl, scattered by about 300 ways, run on broad filesystem with the SGE backend. I'd be happy to provide the json and list of inputs if needed. ```; task Decapitate {; 	File inputFile; 	String outputFilename. 	command {; 		tail -n+2 ${inputFile}; 	}; 	runtime {; 		memory: ""4 GB""; 	}; 	output {; 		Array[Array[String]] outputMatrix=read_tsv(stdout()); 	}; }. task BreakUpRow {; 	String PROJECT; 	String SAMPLE; 	String DATA_TYPE; 	String COMPARE_SAMPLE ; 	String COMPARE_PROJECT; 	String CLEAN_SAMPLE; 	String CLEAN_COMPARE_SAMPLE. 	command {; 		#do nothing; 	}; 	runtime {; 		memory: ""1 GB""; 	}; 	output {; 		Array[File] bams = [""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bam"", ""/seq/picard_aggregation/${COMPARE_PROJECT}/${CLEAN_COMPARE_SAMPLE}/current/${CLEAN_COMPARE_SAMPLE}.bam""]; 		Array[File] indexes = [""/seq/picard_aggregation/${PROJECT}/${CLEAN_SAMPLE}/current/${CLEAN_SAMPLE}.bai"", ""/seq/picard_aggregation/${COMPARE_PROJECT}/${CLEAN_COMPARE_SAMPLE}/current/${CLEAN_COMPARE_SAMPLE}.bai""]; 		File genotypes = ""/seq/references/reference_genotypes/non-hapmap/${PROJECT}/Homo_sapiens_assembly19/${CLEAN_SAMPLE}.vcf""; 		String PROJECT_out = ""${PROJECT}""; 		String SAMPLE_out = ""${SAMPLE}""; 		String DATA_TYPE_out = ""${DATA_TYPE}""; 		String COMPARE_SAMPLE_out = ""${COMPARE_SAMPLE}""; 		String COMPARE_PROJECT_out = ""${COMPARE_PROJECT}""; 		String CLEAN_SAMPLE_out = ""${CLEAN_SAMPLE}""; 		String CLEAN_COMPARE_SAMPLE_out = ""${CLEAN_COMPARE_SAMPLE}""; 	}. }. task Fingerprint {; String PICARD; File input_bam; File input_bam_index; File haplotype_database_file; File genotypes; String vcf_sample; String output_name; ; command {; java -Dsamjdk.buffer_size=131072 -XX:GCTimeLimit=50 -XX:GCHeapFreeLimit=10 -Xmx1024m \; -jar ${PICARD} \; CheckFingerprint \; INPUT=${input_bam} \; OUTPUT=${output_name} \; GENOTYPES=${genotypes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1844
https://github.com/broadinstitute/cromwell/issues/1846:217,Availability,down,down,217,"Currently, after a backend job completes successfully, if something goes wrong trying to read the RC file and / or the stderr file size, the previous ""handle"" is sent back which triggers a new status poll and it goes down the same code path again, trying to re-read the RC file / stderr.; If for some reason one or both of those files is permanently damaged and can never be read, the actor will be stuck in an infinite retry loop.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1846
https://github.com/broadinstitute/cromwell/issues/1847:29,Availability,failure,failures,29,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1847:70,Availability,error,errors,70,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1847:188,Availability,failure,failure,188,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1847:389,Energy Efficiency,monitor,monitor,389,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1847:406,Energy Efficiency,monitor,monitoring,406,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1847:350,Modifiability,variab,variable,350,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1847:430,Safety,detect,detect,430,"A significant amount of GotC failures are due to out of memory / disk errors.; Design a mechanism that allow to specify custom retry strategies that can modify runtime parameters based on failure modes. For example, “Retry on return code X with double the amount of memory and / or disk”. Thoughts:; - `currentAttempt()` wdl function to be used as a variable in a memory / disk formula; - monitor the job (monitoring script ?) to detect disk / memory overflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1847
https://github.com/broadinstitute/cromwell/issues/1848:211,Availability,error,error,211,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/issues/1848:275,Availability,error,error,275,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/issues/1848:325,Availability,error,error,325,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/issues/1848:493,Availability,error,error,493,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/issues/1848:509,Availability,error,error,509,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/issues/1848:618,Availability,avail,available,618,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/issues/1848:217,Integrability,message,message,217,"In JES, the use case where a task exits without producing 1 or more expected output files will end up with the JES job in a failed status (because of non-existing output files failed to be delocalized), and the error message ""Failed to delocalize files"".; This looks like an error from JES where it's actually most likely an error of the task failing to produce some outputs.; If the job fails Cromwell never tries to read the RC file which makes it difficult for a user to know if it's a JES error or a task error. 1) Make sure that JES will delocalize the RC file first before trying to delocalize outputs - so it's available in the bucket.; 2) Have cromwell try to read the file even if the job failed and make sure it's present in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1848
https://github.com/broadinstitute/cromwell/pull/1854:20,Integrability,rout,route,20,… instead of in the route tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1854
https://github.com/broadinstitute/cromwell/pull/1854:26,Testability,test,tests,26,… instead of in the route tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1854
https://github.com/broadinstitute/cromwell/issues/1855:170,Deployability,update,update,170,"As in, a nice easy-to-use client API for the Cromwell REST endpoint. So if anything RESTy changes in the future (like the shift to multipart forms...) a user must simply update their client API version, rather than modifying their own code.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1855
https://github.com/broadinstitute/cromwell/issues/1855:163,Usability,simpl,simply,163,"As in, a nice easy-to-use client API for the Cromwell REST endpoint. So if anything RESTy changes in the future (like the shift to multipart forms...) a user must simply update their client API version, rather than modifying their own code.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1855
https://github.com/broadinstitute/cromwell/pull/1856:51,Availability,error,errors,51,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:97,Availability,error,error,97,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:188,Availability,error,error,188,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:351,Availability,avail,available,351,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:468,Availability,down,downloading,468,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:103,Integrability,message,messages,103,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:194,Integrability,message,messages,194,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:136,Safety,avoid,avoid,136,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/pull/1856:113,Usability,Simpl,Simplistic,113,- Adds a `JesError` class that maps some known JES errors to custom Exceptions to provide better error messages. Simplistic for now but avoid unnecessary stacktrace and give more explicit error messages.; - Tries to read the return code regardless of the final status of the JES job (even if it failed). If it can read it then the return code will be available in metadata.; - Sets the exec.sh content-type to `text/plain` in gcs so it opens in the browser instead of downloading a files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1856
https://github.com/broadinstitute/cromwell/issues/1860:407,Testability,log,log,407,"(Note: this is from running workflows on FireCloud, which is currently running Cromwell 21). We have a task that is filling up its boot disk and presumably failing. We know how to address this issue. But, in debugging this issue we observed a couple of things:. 1. Cromwell reports the ""failed"" task as being in the Running state. It is clearly ""stuck"" in this state as there is no activity reported on the log files.; 2. The workflow timing diagram reports the task as being in some kind of retry state: the failed task is VEP, but the workflow timing diagram reports the task as VEP_Task.retry-1. Does this mean that Cromwell retried this task? I thought that cromwell only retried tasks that failed due to preemption.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1860
https://github.com/broadinstitute/cromwell/issues/1860:337,Usability,clear,clearly,337,"(Note: this is from running workflows on FireCloud, which is currently running Cromwell 21). We have a task that is filling up its boot disk and presumably failing. We know how to address this issue. But, in debugging this issue we observed a couple of things:. 1. Cromwell reports the ""failed"" task as being in the Running state. It is clearly ""stuck"" in this state as there is no activity reported on the log files.; 2. The workflow timing diagram reports the task as being in some kind of retry state: the failed task is VEP, but the workflow timing diagram reports the task as VEP_Task.retry-1. Does this mean that Cromwell retried this task? I thought that cromwell only retried tasks that failed due to preemption.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1860
https://github.com/broadinstitute/cromwell/issues/1861:104,Energy Efficiency,monitor,monitoring,104,"Right now if a workflow fails and Cromwell is in fail fast mode, the workflow gets marked as failed and monitoring stops. What this means is if one task fails, but another is ""Running"", that other task will always be in a ""Running"" state. This leads to many user questions (e.g. ""Is this still running and costing me money?""). . Every task should be monitored to its final state rather than only workflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1861
https://github.com/broadinstitute/cromwell/issues/1861:350,Energy Efficiency,monitor,monitored,350,"Right now if a workflow fails and Cromwell is in fail fast mode, the workflow gets marked as failed and monitoring stops. What this means is if one task fails, but another is ""Running"", that other task will always be in a ""Running"" state. This leads to many user questions (e.g. ""Is this still running and costing me money?""). . Every task should be monitored to its final state rather than only workflows.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1861
https://github.com/broadinstitute/cromwell/issues/1862:2889,Performance,concurren,concurrent,2889,m.zaxxer.hikari.proxy.PreparedStatementProxy.executeUpdate(PreparedStatementProxy.java:61); at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.executeUpdate(PreparedStatementJavassistProxy.java); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:520); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.List.foreach(List.scala:381); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.immutable.List.map(List.scala:285); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1862
https://github.com/broadinstitute/cromwell/issues/1862:2973,Performance,concurren,concurrent,2973,m.zaxxer.hikari.proxy.PreparedStatementProxy.executeUpdate(PreparedStatementProxy.java:61); at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.executeUpdate(PreparedStatementJavassistProxy.java); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:520); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.List.foreach(List.scala:381); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.immutable.List.map(List.scala:285); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1862
https://github.com/broadinstitute/cromwell/issues/1862:2536,Usability,Simpl,SimpleJdbcDriverAction,2536,m.zaxxer.hikari.proxy.PreparedStatementProxy.executeUpdate(PreparedStatementProxy.java:61); at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.executeUpdate(PreparedStatementJavassistProxy.java); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:520); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.List.foreach(List.scala:381); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.immutable.List.map(List.scala:285); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1862
https://github.com/broadinstitute/cromwell/issues/1862:2630,Usability,Simpl,SimpleJdbcDriverAction,2630,m.zaxxer.hikari.proxy.PreparedStatementProxy.executeUpdate(PreparedStatementProxy.java:61); at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.executeUpdate(PreparedStatementJavassistProxy.java); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:520); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.immutable.List.foreach(List.scala:381); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.immutable.List.map(List.scala:285); at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); at java.lang.Thread.run(Thread.java:745). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1862
https://github.com/broadinstitute/cromwell/pull/1863:86,Availability,error,error,86,Won't go green until https://github.com/broadinstitute/wdl4s/pull/67. Includes better error messages and halting failure for RuntimeExceptions during expression evaluation.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1863
https://github.com/broadinstitute/cromwell/pull/1863:113,Availability,failure,failure,113,Won't go green until https://github.com/broadinstitute/wdl4s/pull/67. Includes better error messages and halting failure for RuntimeExceptions during expression evaluation.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1863
https://github.com/broadinstitute/cromwell/pull/1863:9,Energy Efficiency,green,green,9,Won't go green until https://github.com/broadinstitute/wdl4s/pull/67. Includes better error messages and halting failure for RuntimeExceptions during expression evaluation.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1863
https://github.com/broadinstitute/cromwell/pull/1863:92,Integrability,message,messages,92,Won't go green until https://github.com/broadinstitute/wdl4s/pull/67. Includes better error messages and halting failure for RuntimeExceptions during expression evaluation.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1863
https://github.com/broadinstitute/cromwell/pull/1865:35,Modifiability,config,config,35,"Note these fixes only apply to the config backend; JES does not currently seem to have a provision for specifying users other than root. This uses `/cromwell-executions` rather than `/root` as the execution root inside the container. Permissions of files and directories are liberalized for the users inside and outside of the container. All tests pass if I change `reference.conf` to say `String docker_user = ""nobody""`, but I've currently left `docker_user` as an unfilled (old-fashioned) `String?`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1865
https://github.com/broadinstitute/cromwell/pull/1865:342,Testability,test,tests,342,"Note these fixes only apply to the config backend; JES does not currently seem to have a provision for specifying users other than root. This uses `/cromwell-executions` rather than `/root` as the execution root inside the container. Permissions of files and directories are liberalized for the users inside and outside of the container. All tests pass if I change `reference.conf` to say `String docker_user = ""nobody""`, but I've currently left `docker_user` as an unfilled (old-fashioned) `String?`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1865
https://github.com/broadinstitute/cromwell/issues/1867:29,Modifiability,config,configurable,29,"currently set to 2k, make it configurable",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1867
https://github.com/broadinstitute/cromwell/issues/1868:400,Availability,reliab,reliability,400,We've seen in centaur local testing that we fail at times because cromwell is reading an output file before all of its contents has been written and we have no way to detect this (except via the artificial expectation management of centaur). There was some handwaving about filesystems and putting in sleeps but both of these seem like the wrong path. @kcibul this seems like this could go under the reliability umbrella?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1868
https://github.com/broadinstitute/cromwell/issues/1868:167,Safety,detect,detect,167,We've seen in centaur local testing that we fail at times because cromwell is reading an output file before all of its contents has been written and we have no way to detect this (except via the artificial expectation management of centaur). There was some handwaving about filesystems and putting in sleeps but both of these seem like the wrong path. @kcibul this seems like this could go under the reliability umbrella?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1868
https://github.com/broadinstitute/cromwell/issues/1868:28,Testability,test,testing,28,We've seen in centaur local testing that we fail at times because cromwell is reading an output file before all of its contents has been written and we have no way to detect this (except via the artificial expectation management of centaur). There was some handwaving about filesystems and putting in sleeps but both of these seem like the wrong path. @kcibul this seems like this could go under the reliability umbrella?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1868
https://github.com/broadinstitute/cromwell/issues/1874:474,Availability,error,errors,474,"In a conversation with @hjfbynara he referenced seeing an issue a few more times which had come up in the past. I remembered that @kshakir posted the following in slack and wanted to capture it for posterity here:. the firecloud thingy is “worked around”. cromwell 1 and 2 were restarted, and both started running jobs again. ruchi and I glanced at the supervision in the CromwellRootActor of the WorkflowStoreActor, and didn’t see anything special that would catch 100% of errors*. However— it was only a hypothesis that the WorkflowStoreActor was dead, as doug and henry reported little to no cpu activity from cromwell if I recall correctly. * The WorkflowStoreActor appears to be supervised for initialization exceptions, but the rest are handled with a “default”. It looks like default might be equal restart, but as of this second I don’t know what exact state a new instance of a WSA actor/fsm restarts based on the akka spec. Also there was some error logging on db futures within the WSA, but it’s possible an exception was throws before the `Future` got a chance to wrap the exception in a failure? All guesses at this point that could be way off target.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1874
https://github.com/broadinstitute/cromwell/issues/1874:954,Availability,error,error,954,"In a conversation with @hjfbynara he referenced seeing an issue a few more times which had come up in the past. I remembered that @kshakir posted the following in slack and wanted to capture it for posterity here:. the firecloud thingy is “worked around”. cromwell 1 and 2 were restarted, and both started running jobs again. ruchi and I glanced at the supervision in the CromwellRootActor of the WorkflowStoreActor, and didn’t see anything special that would catch 100% of errors*. However— it was only a hypothesis that the WorkflowStoreActor was dead, as doug and henry reported little to no cpu activity from cromwell if I recall correctly. * The WorkflowStoreActor appears to be supervised for initialization exceptions, but the rest are handled with a “default”. It looks like default might be equal restart, but as of this second I don’t know what exact state a new instance of a WSA actor/fsm restarts based on the akka spec. Also there was some error logging on db futures within the WSA, but it’s possible an exception was throws before the `Future` got a chance to wrap the exception in a failure? All guesses at this point that could be way off target.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1874
https://github.com/broadinstitute/cromwell/issues/1874:1100,Availability,failure,failure,1100,"In a conversation with @hjfbynara he referenced seeing an issue a few more times which had come up in the past. I remembered that @kshakir posted the following in slack and wanted to capture it for posterity here:. the firecloud thingy is “worked around”. cromwell 1 and 2 were restarted, and both started running jobs again. ruchi and I glanced at the supervision in the CromwellRootActor of the WorkflowStoreActor, and didn’t see anything special that would catch 100% of errors*. However— it was only a hypothesis that the WorkflowStoreActor was dead, as doug and henry reported little to no cpu activity from cromwell if I recall correctly. * The WorkflowStoreActor appears to be supervised for initialization exceptions, but the rest are handled with a “default”. It looks like default might be equal restart, but as of this second I don’t know what exact state a new instance of a WSA actor/fsm restarts based on the akka spec. Also there was some error logging on db futures within the WSA, but it’s possible an exception was throws before the `Future` got a chance to wrap the exception in a failure? All guesses at this point that could be way off target.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1874
https://github.com/broadinstitute/cromwell/issues/1874:1076,Integrability,wrap,wrap,1076,"In a conversation with @hjfbynara he referenced seeing an issue a few more times which had come up in the past. I remembered that @kshakir posted the following in slack and wanted to capture it for posterity here:. the firecloud thingy is “worked around”. cromwell 1 and 2 were restarted, and both started running jobs again. ruchi and I glanced at the supervision in the CromwellRootActor of the WorkflowStoreActor, and didn’t see anything special that would catch 100% of errors*. However— it was only a hypothesis that the WorkflowStoreActor was dead, as doug and henry reported little to no cpu activity from cromwell if I recall correctly. * The WorkflowStoreActor appears to be supervised for initialization exceptions, but the rest are handled with a “default”. It looks like default might be equal restart, but as of this second I don’t know what exact state a new instance of a WSA actor/fsm restarts based on the akka spec. Also there was some error logging on db futures within the WSA, but it’s possible an exception was throws before the `Future` got a chance to wrap the exception in a failure? All guesses at this point that could be way off target.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1874
https://github.com/broadinstitute/cromwell/issues/1874:960,Testability,log,logging,960,"In a conversation with @hjfbynara he referenced seeing an issue a few more times which had come up in the past. I remembered that @kshakir posted the following in slack and wanted to capture it for posterity here:. the firecloud thingy is “worked around”. cromwell 1 and 2 were restarted, and both started running jobs again. ruchi and I glanced at the supervision in the CromwellRootActor of the WorkflowStoreActor, and didn’t see anything special that would catch 100% of errors*. However— it was only a hypothesis that the WorkflowStoreActor was dead, as doug and henry reported little to no cpu activity from cromwell if I recall correctly. * The WorkflowStoreActor appears to be supervised for initialization exceptions, but the rest are handled with a “default”. It looks like default might be equal restart, but as of this second I don’t know what exact state a new instance of a WSA actor/fsm restarts based on the akka spec. Also there was some error logging on db futures within the WSA, but it’s possible an exception was throws before the `Future` got a chance to wrap the exception in a failure? All guesses at this point that could be way off target.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1874
https://github.com/broadinstitute/cromwell/issues/1875:16024,Availability,failure,failure,16024,"ate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. I should also mention that this was in v21, when I attempted in v24, I got a more spectacular failure - `java.lang.UnsupportedOperationException: Could not evaluate expression: ""--maf2 "" + write_lines(maf2)`, and then what appeared to be an infinite loop of the exact same stack trace over and over, which after a standard `ctrl-c` kill became `Waiting for 1 workflows to abort...` over and over again, which finally necessitated a `kill -9`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:16302,Safety,abort,abort,16302,"ate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. I should also mention that this was in v21, when I attempted in v24, I got a more spectacular failure - `java.lang.UnsupportedOperationException: Could not evaluate expression: ""--maf2 "" + write_lines(maf2)`, and then what appeared to be an infinite loop of the exact same stack trace over and over, which after a standard `ctrl-c` kill became `Waiting for 1 workflows to abort...` over and over again, which finally necessitated a `kill -9`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1066,Testability,test,test,1066,"	Array[File]? maf2; 	Array[File]? maf3; 	Array[File]? maf4; 	String out_prefix; 	String? out_suffix; ; 	command {; 		python /src/Merge_MAFs.py --maf1 ${write_lines(maf1)} ${""--maf2 "" + write_lines(maf2)} ${""--maf3 "" + write_lines(maf3)} ${""--maf4 "" + write_lines(maf4)} ${""--suffix "" + out_suffix} ${out_prefix}; 	}. 	output {; 		File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; 	}. 	runtime {; 		docker : ""broadgdac/aggregate_mafs:1""; 	}. 	meta {; 		author : ""David Heiman""; 		email : ""dheiman@broadinstitute.org""; 	}; 	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1184,Testability,test,tests,1184,"n /src/Merge_MAFs.py --maf1 ${write_lines(maf1)} ${""--maf2 "" + write_lines(maf2)} ${""--maf3 "" + write_lines(maf3)} ${""--maf4 "" + write_lines(maf4)} ${""--suffix "" + out_suffix} ${out_prefix}; 	}. 	output {; 		File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; 	}. 	runtime {; 		docker : ""broadgdac/aggregate_mafs:1""; 	}. 	meta {; 		author : ""David Heiman""; 		email : ""dheiman@broadinstitute.org""; 	}; 	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A2",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1266,Testability,test,tests,1266,"{""--maf3 "" + write_lines(maf3)} ${""--maf4 "" + write_lines(maf4)} ${""--suffix "" + out_suffix} ${out_prefix}; 	}. 	output {; 		File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; 	}. 	runtime {; 		docker : ""broadgdac/aggregate_mafs:1""; 	}. 	meta {; 		author : ""David Heiman""; 		email : ""dheiman@broadinstitute.org""; 	}; 	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1348,Testability,test,tests,1348,"ut_suffix} ${out_prefix}; 	}. 	output {; 		File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; 	}. 	runtime {; 		docker : ""broadgdac/aggregate_mafs:1""; 	}. 	meta {; 		author : ""David Heiman""; 		email : ""dheiman@broadinstitute.org""; 	}; 	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1430,Testability,test,tests,1430,".' + out_suffix}.maf""; 	}. 	runtime {; 		docker : ""broadgdac/aggregate_mafs:1""; 	}. 	meta {; 		author : ""David Heiman""; 		email : ""dheiman@broadinstitute.org""; 	}; 	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1512,Testability,test,tests,1512,". 	meta {; 		author : ""David Heiman""; 		email : ""dheiman@broadinstitute.org""; 	}; 	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1594,Testability,test,tests,1594,"	; 	parameter_meta {; 		maf1 : ""Paths to MAF files.""; 		maf2 : ""Paths to MAF files.""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1676,Testability,test,tests,1676,".""; 		maf3 : ""Paths to MAF files.""; 		maf4 : ""Paths to MAF files.""; 		out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1758,Testability,test,tests,1758," ""Identifying prefix. Usually the set entity this is run on.""; 		out_suffix : ""Descriptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1840,Testability,test,tests,1840,"criptive text to precede the .maf suffix.""; 	}. }. workflow aggregate_mafs_workflow {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:1922,Testability,test,tests,1922,"w {; 	call aggregate_mafs; }; ```. With this input.json:; ```javascript; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2004,Testability,test,tests,2004,"gate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2086,Testability,test,tests,2086,"ggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.maf1"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2168,Testability,test,tests,2168,"[""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2250,Testability,test,tests,2250,",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2332,Testability,test,tests,2332,",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2414,Testability,test,tests,2414,",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2496,Testability,test,tests,2496,",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2578,Testability,test,tests,2578,",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2660,Testability,test,tests,2660,",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2742,Testability,test,tests,2742,",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2824,Testability,test,tests,2824,",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2906,Testability,test,tests,2906,",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:2988,Testability,test,tests,2988,",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3070,Testability,test,tests,3070,",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3152,Testability,test,tests,3152,",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3234,Testability,test,tests,3234,",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3316,Testability,test,tests,3316,",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3398,Testability,test,tests,3398,",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3480,Testability,test,tests,3480,",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3562,Testability,test,tests,3562,",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3644,Testability,test,tests,3644,",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3726,Testability,test,tests,3726,",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3808,Testability,test,tests,3808,",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3890,Testability,test,tests,3890,",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:3972,Testability,test,tests,3972,",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4054,Testability,test,tests,4054,",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4136,Testability,test,tests,4136,",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4218,Testability,test,tests,4218,",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4300,Testability,test,tests,4300,",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4382,Testability,test,tests,4382,",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4464,Testability,test,tests,4464,",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4546,Testability,test,tests,4546,",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4628,Testability,test,tests,4628,",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4710,Testability,test,tests,4710,",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4792,Testability,test,tests,4792,",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4874,Testability,test,tests,4874,",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:4956,Testability,test,tests,4956,",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5038,Testability,test,tests,5038,",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5120,Testability,test,tests,5120,",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5202,Testability,test,tests,5202,",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5284,Testability,test,tests,5284,",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5366,Testability,test,tests,5366,",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5448,Testability,test,tests,5448,",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5530,Testability,test,tests,5530,",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5612,Testability,test,tests,5612,",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5694,Testability,test,tests,5694,",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5776,Testability,test,tests,5776,",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5858,Testability,test,tests,5858,",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:5940,Testability,test,tests,5940,",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6022,Testability,test,tests,6022,",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6104,Testability,test,tests,6104,",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6186,Testability,test,tests,6186,",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6268,Testability,test,tests,6268,",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6350,Testability,test,tests,6350,",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6432,Testability,test,tests,6432,",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6514,Testability,test,tests,6514,",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6596,Testability,test,tests,6596,",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6678,Testability,test,tests,6678,",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6760,Testability,test,tests,6760,",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6842,Testability,test,tests,6842,",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:6924,Testability,test,tests,6924,",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7006,Testability,test,tests,7006,",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggr",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7088,Testability,test,tests,7088,",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7170,Testability,test,tests,7170,",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7252,Testability,test,tests,7252,",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7334,Testability,test,tests,7334,",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7416,Testability,test,tests,7416,",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7498,Testability,test,tests,7498,",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7580,Testability,test,tests,7580,",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7662,Testability,test,tests,7662,",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7744,Testability,test,tests,7744,",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-365",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7826,Testability,test,tests,7826,",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /sr",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:7908,Testability,test,tests,7908,",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8041,Testability,test,tests,8041,"-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-f",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8123,Testability,test,tests,8123,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8205,Testability,test,tests,8205,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8287,Testability,test,tests,8287,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sen",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8369,Testability,test,tests,8369,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8451,Testability,test,tests,8451,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths app",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8533,Testability,test,tests,8533,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wd",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8615,Testability,test,tests,8615,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gda",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:8697,Testability,test,tests,8697,"4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""],; ""aggregate_mafs_workflow.aggregate_mafs.maf3"": [""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641c",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:9249,Testability,test,test,9249,"4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:9841,Testability,test,tests,9841,".ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. When executed, the resulting command is:; `python /src/Merge_MAFs.py --maf1 /root/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp --maf3 /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:10171,Testability,test,tests,10171,"d/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/execution/wdlarray878369f939ccad896ec89c922763ea10.tmp --suffix test ACC`. The path for the `--maf1` option makes sense, however the path for `--maf3` option does not, and in fact causes the script to fail when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:10501,Testability,test,tests,10501,"when it is not found. Moreover, the paths within the files of filepaths appear to be relative to my local filesystem rather than the docker -; ```; $ head wdlarray0fed6cde2fd8ebbe5d372126fbd17682.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:10831,Testability,test,tests,10831,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:11161,Testability,test,tests,11161,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:11491,Testability,test,tests,11491,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:11821,Testability,test,tests,11821,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:12151,Testability,test,tests,12151,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```; ```; $ head wdlarray878369f939ccad896ec89c922763ea10.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:12481,Testability,test,tests,12481,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```; ```; $ head wdlarray878369f939ccad896ec89c922763ea10.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:12811,Testability,test,tests,12811,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```; ```; $ head wdlarray878369f939ccad896ec89c922763ea10.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:13204,Testability,test,tests,13204,/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```; ```; $ head wdlarray878369f939ccad896ec89c922763ea10.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:13534,Testability,test,tests,13534,/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```; ```; $ head wdlarray878369f939ccad896ec89c922763ea10.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:13864,Testability,test,tests,13864,/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```; ```; $ head wdlarray878369f939ccad896ec89c922763ea10.tmp; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:14194,Testability,test,tests,14194,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:14524,Testability,test,tests,14524,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:14854,Testability,test,tests,14854,42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:15184,Testability,test,tests,15184,"42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. I should also mention that this was in v21, when I attempted in v24, I got a more spectacular failure - `java.lang.UnsupportedOperationException:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:15514,Testability,test,tests,15514,"ate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. I should also mention that this was in v21, when I attempted in v24, I got a more spectacular failure - `java.lang.UnsupportedOperationException: Could not evaluate expression: ""--maf2 "" + write_lines(maf2)`, and then what appeared to be an infinite loop of the exact same stack trace over and over, which after a standard `ctrl-c` kill became `Waiting for 1 workflows to abort...` over and over again, which finally necessitated a `kill -9`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1875:15844,Testability,test,tests,15844,"ate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/1641cccf-e6f1-42fd-9f17-9fd7d355ce3c/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. I should also mention that this was in v21, when I attempted in v24, I got a more spectacular failure - `java.lang.UnsupportedOperationException: Could not evaluate expression: ""--maf2 "" + write_lines(maf2)`, and then what appeared to be an infinite loop of the exact same stack trace over and over, which after a standard `ctrl-c` kill became `Waiting for 1 workflows to abort...` over and over again, which finally necessitated a `kill -9`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1875
https://github.com/broadinstitute/cromwell/issues/1876:102,Availability,error,errors,102,"- 0.24; - SGE backend. When used for a list of files (as Strings), I received a lot of file not found errors. Seems like CRLF (0D0A) is interpreted as two lines. Proposed solution: have ``read_lines`` do a strip/trim on each line before returning the Array of String/File. Offending WDL:. `` Array[String] oncotated_m1_files = read_lines(input_oncotated_m1)``",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1876
https://github.com/broadinstitute/cromwell/issues/1877:41,Testability,log,logs,41,"We had a regression in the copy workflow logs actor which would have been caught by exercising this in centaur. . Test `final_workflow_log_dir`, `final_call_logs_dir`, `final_workflow_outputs_dir`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1877
https://github.com/broadinstitute/cromwell/issues/1877:114,Testability,Test,Test,114,"We had a regression in the copy workflow logs actor which would have been caught by exercising this in centaur. . Test `final_workflow_log_dir`, `final_call_logs_dir`, `final_workflow_outputs_dir`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1877
https://github.com/broadinstitute/cromwell/pull/1879:66,Integrability,depend,dependency,66,"Happy Birthday Ruchi! Also, fix `prefix` by upgrading the `wdl4s` dependency.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1879
https://github.com/broadinstitute/cromwell/issues/1882:752,Availability,error,error,752,"During code review for #1836 @cjllanwarne noted that `processSource` in what is currently named `WorkflowStoreActor` and most likely `WorfklowStoreSubmitActor` by the time this is acted upon looked suspicious as we had (we think) intended json validation to not happen until later and a workflow ID would always be handed back to the user. Further, the failed Future doesn't appear to be getting handed back to the API at all (I think), which would lead to a timeout response. Further since the sources are being processed monadically it is possible for a user to have multiple borked files but only the first will be reported (if we were reporting). Check into what's up here - either don't perform this check on submission or ensure that appropriate error messages are handed back",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1882
https://github.com/broadinstitute/cromwell/issues/1882:758,Integrability,message,messages,758,"During code review for #1836 @cjllanwarne noted that `processSource` in what is currently named `WorkflowStoreActor` and most likely `WorfklowStoreSubmitActor` by the time this is acted upon looked suspicious as we had (we think) intended json validation to not happen until later and a workflow ID would always be handed back to the user. Further, the failed Future doesn't appear to be getting handed back to the API at all (I think), which would lead to a timeout response. Further since the sources are being processed monadically it is possible for a user to have multiple borked files but only the first will be reported (if we were reporting). Check into what's up here - either don't perform this check on submission or ensure that appropriate error messages are handed back",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1882
https://github.com/broadinstitute/cromwell/issues/1882:692,Performance,perform,perform,692,"During code review for #1836 @cjllanwarne noted that `processSource` in what is currently named `WorkflowStoreActor` and most likely `WorfklowStoreSubmitActor` by the time this is acted upon looked suspicious as we had (we think) intended json validation to not happen until later and a workflow ID would always be handed back to the user. Further, the failed Future doesn't appear to be getting handed back to the API at all (I think), which would lead to a timeout response. Further since the sources are being processed monadically it is possible for a user to have multiple borked files but only the first will be reported (if we were reporting). Check into what's up here - either don't perform this check on submission or ensure that appropriate error messages are handed back",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1882
https://github.com/broadinstitute/cromwell/issues/1882:459,Safety,timeout,timeout,459,"During code review for #1836 @cjllanwarne noted that `processSource` in what is currently named `WorkflowStoreActor` and most likely `WorfklowStoreSubmitActor` by the time this is acted upon looked suspicious as we had (we think) intended json validation to not happen until later and a workflow ID would always be handed back to the user. Further, the failed Future doesn't appear to be getting handed back to the API at all (I think), which would lead to a timeout response. Further since the sources are being processed monadically it is possible for a user to have multiple borked files but only the first will be reported (if we were reporting). Check into what's up here - either don't perform this check on submission or ensure that appropriate error messages are handed back",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1882
https://github.com/broadinstitute/cromwell/issues/1882:244,Security,validat,validation,244,"During code review for #1836 @cjllanwarne noted that `processSource` in what is currently named `WorkflowStoreActor` and most likely `WorfklowStoreSubmitActor` by the time this is acted upon looked suspicious as we had (we think) intended json validation to not happen until later and a workflow ID would always be handed back to the user. Further, the failed Future doesn't appear to be getting handed back to the API at all (I think), which would lead to a timeout response. Further since the sources are being processed monadically it is possible for a user to have multiple borked files but only the first will be reported (if we were reporting). Check into what's up here - either don't perform this check on submission or ensure that appropriate error messages are handed back",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1882
https://github.com/broadinstitute/cromwell/issues/1883:79,Integrability,message,message,79,"- 0.24; - Single workflow mode; - SGE backend. Can you eliminate or reword the message below? I see this a lot and it is hard to decipher. Can't it just say, ""Dispatching workflow 2c9b89c2-27ef-448a-b5af-1d090e76ada1 task sub-workflow: dl_ob_training shard 213"" ?. ```; [INFO] [01/20/2017 09:08:22.441] [cromwell-system-akka.dispatchers.backend-dispatcher-225] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-2c9b89c2-27ef-448a-b5af-1d090e76ada1/WorkflowExecutionActor-2c9b89c2-27ef-448a-b5af-1d090e76ada1/SubWorkflowExecutionActor-SubWorkflow-dl_ob_training:213:1/ea0b6d84-117f-4cfe-88b4-26b621e60b8c-SubWorkflowActor-SubWorkflow-dl_ob_training:213:1/ea0b6d84-117f-4cfe-88b4-26b621e60b8c-EngineJobExecutionActor-dl_ob_training.dl_ob_training.CreateObIntervalList:NA:1/ea0b6d84-117f-4cfe-88b4-26b621e60b8c-BackendJobExecutionActor-ea0b6d84:dl_ob_training.dl_ob_training.CreateObIntervalList:-1:1/DispatchedConfigAsyncJobExecutionActor] DispatchedConfigAsyncJobExecutionActor [UUID(ea0b6d84)dl_ob_training.dl_ob_training.CreateObIntervalList:NA:1]: DispatchedConfigAsyncJobExecutionActor [UUID(ea0b6d84):dl_ob_training.dl_ob_training.CreateObIntervalList:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true). ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1883
https://github.com/broadinstitute/cromwell/issues/1885:864,Availability,echo,echo,864,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:151,Performance,race condition,race condition,151,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:17,Safety,abort,abort,17,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:177,Safety,abort,abort,177,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:255,Security,Authoriz,Authorization,255,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:296,Security,access,access-token,296,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:559,Security,Authoriz,Authorization,559,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:600,Security,access,access-token,600,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:765,Testability,test,test,765,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:984,Testability,test,test,984,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:1371,Testability,log,logs,1371,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:1401,Testability,test,test,1401,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1885:1237,Usability,clear,cleared,1237,"We are trying to abort a job in FireCloud using cromwell .21. The workflow appears stuck in submitted state. It appears to have no calls. Is there are race condition that is we abort too soon the job is stuck?. ```; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/status; {; ""status"": ""Submitted"",; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d""; }(dvoet@wm163-585) 14:55; ~/projects/rawls [develop*] $ curl -H ""Authorization: Bearer `gcloud auth print-access-token`"" https://cromwell2.dsde-alpha.broadinstitute.org/api/workflows/v1/b29c0ef3-e988-4d70-8093-bdd1a039170d/metadata; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-ceb841f8-e512-4f70-831b-eb2c43af9b42/d938c20b-916d-4bd5-a132-533c72a84eb0\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""b29c0ef3-e988-4d70-8093-bdd1a039170d"",; ""inputs"": {. },; ""submission"": ""2017-01-20T16:37:31.589Z""; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1885
https://github.com/broadinstitute/cromwell/issues/1886:203,Availability,failure,failure,203,"I ran 123 workflows as part of a single submission in FireCloud which means, same WDL and identical inputs aside from the BAM and sample name. They all started around the same time. . 3 failed with this failure:. `Google credentials are invalid: connect timed out`. Here is the deep-link to the FireCloud run:. https://api.firecloud.org/api/workspaces/engle-macarthur-ccdd/genomes-reprocessing/submissions/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflows/a714b11b-0162-4585-afa5-abbd7433af51. Here is the full metadata for the failed workflow:. {; ""workflowName"": ""BamToUnmappedBams"",; ""submittedFiles"": {; ""inputs"": ""{\""BamToUnmappedBams.input_bam\"":\""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam\""}"",; ""workflow"": ""task RevertSam {\n File input_bam\n String revert_bam_name\n Int disk_size\n\n # TODO: why is SORT_ORDER=coordinate set below since we sort it again in the next step?\n # TODO: why did we need this line?\n # OUTPUT_MAP=${output_map} \\\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n RevertSam \\\n INPUT=${input_bam} \\\n OUTPUT=${revert_bam_name} \\\n VALIDATION_STRINGENCY=LENIENT \\\n ATTRIBUTE_TO_CLEAR=FT \\\n ATTRIBUTE_TO_CLEAR=XS \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000 \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File unmapped_bam = \""${revert_bam_name}\""\n }\n}\n\ntask SortSam {\n File input_bam\n String sorted_bam_name\n Int disk_size\n\n # TODO: why not use samtools sort as it is multi-threaded?\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n SortSam \\\n INPUT=${input_bam} \\\n OUTPUT=${sorted_bam_name} \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000\n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File sorted_bam = \""${sorted_bam_name}\""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:4250,Availability,failure,failures,4250,"*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs/workflow.a714b11b-0162-4585-afa5-abbd7433af51.log"",; ""end"": ""2017-01-19T18:17:39.673Z"",; ""start"": ""2017-01-19T18:17:19.606Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:4266,Integrability,message,message,4266,"*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs/workflow.a714b11b-0162-4585-afa5-abbd7433af51.log"",; ""end"": ""2017-01-19T18:17:39.673Z"",; ""start"": ""2017-01-19T18:17:19.606Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:1594,Performance,multi-thread,multi-threaded,1594," Here is the full metadata for the failed workflow:. {; ""workflowName"": ""BamToUnmappedBams"",; ""submittedFiles"": {; ""inputs"": ""{\""BamToUnmappedBams.input_bam\"":\""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam\""}"",; ""workflow"": ""task RevertSam {\n File input_bam\n String revert_bam_name\n Int disk_size\n\n # TODO: why is SORT_ORDER=coordinate set below since we sort it again in the next step?\n # TODO: why did we need this line?\n # OUTPUT_MAP=${output_map} \\\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n RevertSam \\\n INPUT=${input_bam} \\\n OUTPUT=${revert_bam_name} \\\n VALIDATION_STRINGENCY=LENIENT \\\n ATTRIBUTE_TO_CLEAR=FT \\\n ATTRIBUTE_TO_CLEAR=XS \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000 \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File unmapped_bam = \""${revert_bam_name}\""\n }\n}\n\ntask SortSam {\n File input_bam\n String sorted_bam_name\n Int disk_size\n\n # TODO: why not use samtools sort as it is multi-threaded?\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n SortSam \\\n INPUT=${input_bam} \\\n OUTPUT=${sorted_bam_name} \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000\n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File sorted_bam = \""${sorted_bam_name}\""\n }\n}\n\ntask ValidateSamFile {\n File input_bam\n String report_filename\n Int disk_size\n\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n ValidateSamFile \\\n INPUT=${input_bam} \\\n OUTPUT=${report_filename} \\\n MODE=VERBOSE \\\n IS_BISULFITE_SEQUENCED=false \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File report = \""${report_filename}\""\n }\",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:2017,Security,Validat,ValidateSamFile,2017,"000m -jar /usr/gitc/picard.jar \\\n RevertSam \\\n INPUT=${input_bam} \\\n OUTPUT=${revert_bam_name} \\\n VALIDATION_STRINGENCY=LENIENT \\\n ATTRIBUTE_TO_CLEAR=FT \\\n ATTRIBUTE_TO_CLEAR=XS \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000 \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File unmapped_bam = \""${revert_bam_name}\""\n }\n}\n\ntask SortSam {\n File input_bam\n String sorted_bam_name\n Int disk_size\n\n # TODO: why not use samtools sort as it is multi-threaded?\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n SortSam \\\n INPUT=${input_bam} \\\n OUTPUT=${sorted_bam_name} \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000\n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File sorted_bam = \""${sorted_bam_name}\""\n }\n}\n\ntask ValidateSamFile {\n File input_bam\n String report_filename\n Int disk_size\n\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n ValidateSamFile \\\n INPUT=${input_bam} \\\n OUTPUT=${report_filename} \\\n MODE=VERBOSE \\\n IS_BISULFITE_SEQUENCED=false \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File report = \""${report_filename}\""\n }\n}\n\nworkflow BamToUnmappedBams {\n File input_bam\n String dir_pattern = \""gs://.*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:2155,Security,Validat,ValidateSamFile,2155,"0000 \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File unmapped_bam = \""${revert_bam_name}\""\n }\n}\n\ntask SortSam {\n File input_bam\n String sorted_bam_name\n Int disk_size\n\n # TODO: why not use samtools sort as it is multi-threaded?\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n SortSam \\\n INPUT=${input_bam} \\\n OUTPUT=${sorted_bam_name} \\\n SORT_ORDER=queryname \\\n MAX_RECORDS_IN_RAM=1000000\n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File sorted_bam = \""${sorted_bam_name}\""\n }\n}\n\ntask ValidateSamFile {\n File input_bam\n String report_filename\n Int disk_size\n\n command {\n java -Xmx3000m -jar /usr/gitc/picard.jar \\\n ValidateSamFile \\\n INPUT=${input_bam} \\\n OUTPUT=${report_filename} \\\n MODE=VERBOSE \\\n IS_BISULFITE_SEQUENCED=false \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File report = \""${report_filename}\""\n }\n}\n\nworkflow BamToUnmappedBams {\n File input_bam\n String dir_pattern = \""gs://.*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_ba",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:3132,Security,Validat,ValidateSamFile,3132,"usr/gitc/picard.jar \\\n ValidateSamFile \\\n INPUT=${input_bam} \\\n OUTPUT=${report_filename} \\\n MODE=VERBOSE \\\n IS_BISULFITE_SEQUENCED=false \n }\n runtime {\n docker: \""broadinstitute/genomes-in-the-cloud:2.2.3-1469027018\""\n disks: \""local-disk \"" + disk_size + \"" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File report = \""${report_filename}\""\n }\n}\n\nworkflow BamToUnmappedBams {\n File input_bam\n String dir_pattern = \""gs://.*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:3396,Security,Validat,ValidateSamFile,3396,""" HDD\""\n memory: \""3500 MB\""\n }\n output {\n File report = \""${report_filename}\""\n }\n}\n\nworkflow BamToUnmappedBams {\n File input_bam\n String dir_pattern = \""gs://.*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e0",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:3807,Testability,log,logs,3807,"*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs/workflow.a714b11b-0162-4585-afa5-abbd7433af51.log"",; ""end"": ""2017-01-19T18:17:39.673Z"",; ""start"": ""2017-01-19T18:17:19.606Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:4441,Testability,log,logs,4441,"*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs/workflow.a714b11b-0162-4585-afa5-abbd7433af51.log"",; ""end"": ""2017-01-19T18:17:39.673Z"",; ""start"": ""2017-01-19T18:17:19.606Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:4492,Testability,log,log,4492,"*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs/workflow.a714b11b-0162-4585-afa5-abbd7433af51.log"",; ""end"": ""2017-01-19T18:17:39.673Z"",; ""start"": ""2017-01-19T18:17:19.606Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1886:3673,Usability,clear,cleared,3673,"*/\""\n #String dir_pattern = \""/.*/\""\n Int revert_sam_disk_size = 400\n Int sort_sam_disk_size = 400\n Int validate_sam_file_disk_size = 200\n\n call RevertSam {\n input:\n input_bam = input_bam,\n revert_bam_name = sub(sub(input_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".unmapped.bam\"",\n disk_size = revert_sam_disk_size\n }\n\n# call SortSam {\n# input:\n# input_bam = RevertSam.unmapped_bam,\n# sorted_bam_name = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".bam$\"", \""\"") + \"".sorted.bam\"",\n# disk_size = sort_sam_disk_size\n# }\n\n call ValidateSamFile {\n input:\n input_bam = RevertSam.unmapped_bam,\n report_filename = sub(sub(RevertSam.unmapped_bam, dir_pattern, \""\""), \"".unmapped.bam$\"", \""\"") + \"".validation_report\"",\n disk_size = validate_sam_file_disk_size\n }\n\n output {\n RevertSam.*\n ValidateSamFile.*\n }\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""engle-macarthur-ccdd\"",\n \""auth_bucket\"": \""gs://cromwell-auth-engle-macarthur-ccdd\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs\"",\n \""account_name\"": \""kcibul@broadinstitute.org\"",\n \""jes_gcs_root\"": \""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""a714b11b-0162-4585-afa5-abbd7433af51"",; ""inputs"": {; ""BamToUnmappedBams.input_bam"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/batch04/S64-2_Illumina.bam""; },; ""submission"": ""2017-01-19T18:17:12.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Google credentials are invalid: connect timed out""; }],; ""workflowLog"": ""gs://fc-4c1c7765-2de2-4214-ac41-dc10bbcbb55b/c7af7e06-a435-44ec-8466-124ad8e1bcaf/workflow.logs/workflow.a714b11b-0162-4585-afa5-abbd7433af51.log"",; ""end"": ""2017-01-19T18:17:39.673Z"",; ""start"": ""2017-01-19T18:17:19.606Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1886
https://github.com/broadinstitute/cromwell/issues/1887:64,Security,validat,validation,64,"When a workflow fails before any calls are created (e.g. during validation, or with bad credentials to talk to JES, etc) a workflow metadata is created with an empty calls section (see below). When this metadata is rendered in the timing diagram, you just get a page with a (. This is important in FireCloud because it makes the user think something else is broken. It would be better if instead simple text were shown saying ""No calls found for this workflow"". A nice way to debug/develop this is to temporarily have the timing diagram page read from a static URL instead of the metadata endpoint by changing this line in `drawChart()`. $.getJSON(""/bad.md.txt"", function(data) {. And then running a simple web server from your cromwell root with:. `python -m SimpleHTTPServer 8000`. and then hitting the timing diagram at:. `http://localhost:8000/engine/src/main/resources/workflowTimings/workflowTimings.html`. [bad.md.txt](https://github.com/broadinstitute/cromwell/files/721189/bad.md.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1887
https://github.com/broadinstitute/cromwell/issues/1887:396,Usability,simpl,simple,396,"When a workflow fails before any calls are created (e.g. during validation, or with bad credentials to talk to JES, etc) a workflow metadata is created with an empty calls section (see below). When this metadata is rendered in the timing diagram, you just get a page with a (. This is important in FireCloud because it makes the user think something else is broken. It would be better if instead simple text were shown saying ""No calls found for this workflow"". A nice way to debug/develop this is to temporarily have the timing diagram page read from a static URL instead of the metadata endpoint by changing this line in `drawChart()`. $.getJSON(""/bad.md.txt"", function(data) {. And then running a simple web server from your cromwell root with:. `python -m SimpleHTTPServer 8000`. and then hitting the timing diagram at:. `http://localhost:8000/engine/src/main/resources/workflowTimings/workflowTimings.html`. [bad.md.txt](https://github.com/broadinstitute/cromwell/files/721189/bad.md.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1887
https://github.com/broadinstitute/cromwell/issues/1887:700,Usability,simpl,simple,700,"When a workflow fails before any calls are created (e.g. during validation, or with bad credentials to talk to JES, etc) a workflow metadata is created with an empty calls section (see below). When this metadata is rendered in the timing diagram, you just get a page with a (. This is important in FireCloud because it makes the user think something else is broken. It would be better if instead simple text were shown saying ""No calls found for this workflow"". A nice way to debug/develop this is to temporarily have the timing diagram page read from a static URL instead of the metadata endpoint by changing this line in `drawChart()`. $.getJSON(""/bad.md.txt"", function(data) {. And then running a simple web server from your cromwell root with:. `python -m SimpleHTTPServer 8000`. and then hitting the timing diagram at:. `http://localhost:8000/engine/src/main/resources/workflowTimings/workflowTimings.html`. [bad.md.txt](https://github.com/broadinstitute/cromwell/files/721189/bad.md.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1887
https://github.com/broadinstitute/cromwell/issues/1887:760,Usability,Simpl,SimpleHTTPServer,760,"When a workflow fails before any calls are created (e.g. during validation, or with bad credentials to talk to JES, etc) a workflow metadata is created with an empty calls section (see below). When this metadata is rendered in the timing diagram, you just get a page with a (. This is important in FireCloud because it makes the user think something else is broken. It would be better if instead simple text were shown saying ""No calls found for this workflow"". A nice way to debug/develop this is to temporarily have the timing diagram page read from a static URL instead of the metadata endpoint by changing this line in `drawChart()`. $.getJSON(""/bad.md.txt"", function(data) {. And then running a simple web server from your cromwell root with:. `python -m SimpleHTTPServer 8000`. and then hitting the timing diagram at:. `http://localhost:8000/engine/src/main/resources/workflowTimings/workflowTimings.html`. [bad.md.txt](https://github.com/broadinstitute/cromwell/files/721189/bad.md.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1887
https://github.com/broadinstitute/cromwell/issues/1890:426,Availability,error,error,426,"This may be a possible dupe. Below is a stack trace of a `java.nio.Path` operation that threw an IOException the first time, but would have likely succeeded if tried again. Ideally the read/write operation, wdl task, whole workflow, etc. should be retried at some later asynchronous time. In the particular case below, the JES initialization actor was attempting to write the authentication file when it received a common 503 error:. ```; 2017-01-23 05:37:49,143 cromwell-system-akka.dispatchers.engine-dispatcher-45 ERROR - WorkflowManagerActor Workflow b08cdbf3-08ea-4bfa-a612-c4452f120c84 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:61); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:517,Availability,ERROR,ERROR,517,"This may be a possible dupe. Below is a stack trace of a `java.nio.Path` operation that threw an IOException the first time, but would have likely succeeded if tried again. Ideally the read/write operation, wdl task, whole workflow, etc. should be retried at some later asynchronous time. In the particular case below, the JES initialization actor was attempting to write the authentication file when it received a common 503 error:. ```; 2017-01-23 05:37:49,143 cromwell-system-akka.dispatchers.engine-dispatcher-45 ERROR - WorkflowManagerActor Workflow b08cdbf3-08ea-4bfa-a612-c4452f120c84 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:61); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3297,Availability,error,error,3297,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3309,Availability,error,errors,3309,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3392,Availability,Error,Error,3392,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3441,Availability,Error,Error,3441,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:4671,Availability,error,error,4671,"orkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 35 more; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:4683,Availability,error,errors,4683,"orkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 35 more; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:4766,Availability,Error,Error,4766,"orkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 35 more; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:4815,Availability,Error,Error,4815,"orkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 35 more; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3373,Integrability,message,message,3373,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3422,Integrability,message,message,3422,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:4747,Integrability,message,message,4747,"orkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 35 more; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:4796,Integrability,message,message,4796,"orkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 35 more; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:1970,Performance,concurren,concurrent,1970,mwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.con,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:2042,Performance,concurren,concurrent,2042,.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339);,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:2114,Performance,concurren,concurrent,2114,.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:2574,Performance,concurren,concurrent,2574,"kend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.De",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:2899,Performance,concurren,concurrent,2899,"$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryH",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:2973,Performance,concurren,concurrent,2973,"nt.Future$$anonfun$flatMap$1.apply(Future.scala:253); 	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3059,Performance,concurren,concurrent,3059,"nfun$flatMap$1.apply(Future.scala:251); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChann",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3137,Performance,concurren,concurrent,3137,"able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChanne",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:3724,Performance,concurren,concurrent,3724,"a.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:62); 	... 24 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": """,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:376,Security,authenticat,authentication,376,"This may be a possible dupe. Below is a stack trace of a `java.nio.Path` operation that threw an IOException the first time, but would have likely succeeded if tried again. Ideally the read/write operation, wdl task, whole workflow, etc. should be retried at some later asynchronous time. In the particular case below, the JES initialization actor was attempting to write the authentication file when it received a common 503 error:. ```; 2017-01-23 05:37:49,143 cromwell-system-akka.dispatchers.engine-dispatcher-45 ERROR - WorkflowManagerActor Workflow b08cdbf3-08ea-4bfa-a612-c4452f120c84 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:61); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:652,Security,authenticat,authentication,652,"This may be a possible dupe. Below is a stack trace of a `java.nio.Path` operation that threw an IOException the first time, but would have likely succeeded if tried again. Ideally the read/write operation, wdl task, whole workflow, etc. should be retried at some later asynchronous time. In the particular case below, the JES initialization actor was attempting to write the authentication file when it received a common 503 error:. ```; 2017-01-23 05:37:49,143 cromwell-system-akka.dispatchers.engine-dispatcher-45 ERROR - WorkflowManagerActor Workflow b08cdbf3-08ea-4bfa-a612-c4452f120c84 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:61); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1890:711,Security,authenticat,authentication,711,"This may be a possible dupe. Below is a stack trace of a `java.nio.Path` operation that threw an IOException the first time, but would have likely succeeded if tried again. Ideally the read/write operation, wdl task, whole workflow, etc. should be retried at some later asynchronous time. In the particular case below, the JES initialization actor was attempting to write the authentication file when it received a common 503 error:. ```; 2017-01-23 05:37:49,143 cromwell-system-akka.dispatchers.engine-dispatcher-45 ERROR - WorkflowManagerActor Workflow b08cdbf3-08ea-4bfa-a612-c4452f120c84 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:61); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); 	at scala.Option.foreach(Option.scala:257); 	at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile(JesInitializationActor.scala:58); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:52); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.scala:51); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:156); 	at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(BackendWorkflowInitializationActor.scala:155); 	at scala.concurrent.Future$$anonfun$flat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1890
https://github.com/broadinstitute/cromwell/issues/1891:198,Security,Validat,ValidateSamFile,198,"When an optional file input is given to a task, the file path is not resolved to the local path in the JES backend. Non-optional Files are resolved appropriately. . Example failing task:; ```; task ValidateSamFile {; File input_bam; File? ref_fasta. command {; java -Xmx4000m -jar /usr/gitc/picard.jar \; BlahBlahThisIsACommand \; INPUT=${input_bam} \; ${""REFERENCE_SEQUENCE="" + ref_fasta}; }; runtime {; docker: ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282""; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Output from stderr:; ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [Mon Jan 23 17:32:28 UTC 2017] picard.sam. BlahBlahThisIsACommand INPUT=/cromwell_root/broad-dsde-methods/cromwell-execution-24/PairedEndSingleSampleWorkflow/5802ded7-ba93-4186-b680-5a7cb2c7f62c/call-SortAndFixReadGroupBam/shard-1/H06HDADXX130110.2.ATCACGAT.20k_reads.sorted.bam \; REFERENCE_SEQUENCE=gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta ; [Mon Jan 23 17:32:28 UTC 2017] Executing as root@4543b0496fa1 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_91-8u91-b14-1~bpo8+1-b14; Picard version: 2.5.0-gradle-SNAPSHOT; [Mon Jan 23 17:32:28 UTC 2017] picard.sam.ValidateSamFile done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=119013376; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" htsjdk.samtools.SAMException: Cannot read non-existent file: /cromwell_root/gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:338); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:325); 	at picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:141); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:208); 	at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:95); 	",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1891
https://github.com/broadinstitute/cromwell/issues/1891:1307,Security,Validat,ValidateSamFile,1307,"ved to the local path in the JES backend. Non-optional Files are resolved appropriately. . Example failing task:; ```; task ValidateSamFile {; File input_bam; File? ref_fasta. command {; java -Xmx4000m -jar /usr/gitc/picard.jar \; BlahBlahThisIsACommand \; INPUT=${input_bam} \; ${""REFERENCE_SEQUENCE="" + ref_fasta}; }; runtime {; docker: ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282""; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Output from stderr:; ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [Mon Jan 23 17:32:28 UTC 2017] picard.sam. BlahBlahThisIsACommand INPUT=/cromwell_root/broad-dsde-methods/cromwell-execution-24/PairedEndSingleSampleWorkflow/5802ded7-ba93-4186-b680-5a7cb2c7f62c/call-SortAndFixReadGroupBam/shard-1/H06HDADXX130110.2.ATCACGAT.20k_reads.sorted.bam \; REFERENCE_SEQUENCE=gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta ; [Mon Jan 23 17:32:28 UTC 2017] Executing as root@4543b0496fa1 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_91-8u91-b14-1~bpo8+1-b14; Picard version: 2.5.0-gradle-SNAPSHOT; [Mon Jan 23 17:32:28 UTC 2017] picard.sam.ValidateSamFile done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=119013376; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" htsjdk.samtools.SAMException: Cannot read non-existent file: /cromwell_root/gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:338); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:325); 	at picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:141); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:208); 	at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:95); 	at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:105); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1891
https://github.com/broadinstitute/cromwell/issues/1891:1791,Security,Validat,ValidateSamFile,1791,"ved to the local path in the JES backend. Non-optional Files are resolved appropriately. . Example failing task:; ```; task ValidateSamFile {; File input_bam; File? ref_fasta. command {; java -Xmx4000m -jar /usr/gitc/picard.jar \; BlahBlahThisIsACommand \; INPUT=${input_bam} \; ${""REFERENCE_SEQUENCE="" + ref_fasta}; }; runtime {; docker: ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282""; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Output from stderr:; ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [Mon Jan 23 17:32:28 UTC 2017] picard.sam. BlahBlahThisIsACommand INPUT=/cromwell_root/broad-dsde-methods/cromwell-execution-24/PairedEndSingleSampleWorkflow/5802ded7-ba93-4186-b680-5a7cb2c7f62c/call-SortAndFixReadGroupBam/shard-1/H06HDADXX130110.2.ATCACGAT.20k_reads.sorted.bam \; REFERENCE_SEQUENCE=gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta ; [Mon Jan 23 17:32:28 UTC 2017] Executing as root@4543b0496fa1 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_91-8u91-b14-1~bpo8+1-b14; Picard version: 2.5.0-gradle-SNAPSHOT; [Mon Jan 23 17:32:28 UTC 2017] picard.sam.ValidateSamFile done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=119013376; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" htsjdk.samtools.SAMException: Cannot read non-existent file: /cromwell_root/gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:338); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:325); 	at picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:141); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:208); 	at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:95); 	at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:105); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1891
https://github.com/broadinstitute/cromwell/issues/1891:1814,Security,Validat,ValidateSamFile,1814,"ved to the local path in the JES backend. Non-optional Files are resolved appropriately. . Example failing task:; ```; task ValidateSamFile {; File input_bam; File? ref_fasta. command {; java -Xmx4000m -jar /usr/gitc/picard.jar \; BlahBlahThisIsACommand \; INPUT=${input_bam} \; ${""REFERENCE_SEQUENCE="" + ref_fasta}; }; runtime {; docker: ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282""; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Output from stderr:; ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [Mon Jan 23 17:32:28 UTC 2017] picard.sam. BlahBlahThisIsACommand INPUT=/cromwell_root/broad-dsde-methods/cromwell-execution-24/PairedEndSingleSampleWorkflow/5802ded7-ba93-4186-b680-5a7cb2c7f62c/call-SortAndFixReadGroupBam/shard-1/H06HDADXX130110.2.ATCACGAT.20k_reads.sorted.bam \; REFERENCE_SEQUENCE=gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta ; [Mon Jan 23 17:32:28 UTC 2017] Executing as root@4543b0496fa1 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_91-8u91-b14-1~bpo8+1-b14; Picard version: 2.5.0-gradle-SNAPSHOT; [Mon Jan 23 17:32:28 UTC 2017] picard.sam.ValidateSamFile done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=119013376; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" htsjdk.samtools.SAMException: Cannot read non-existent file: /cromwell_root/gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:338); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:325); 	at picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:141); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:208); 	at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:95); 	at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:105); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1891
https://github.com/broadinstitute/cromwell/issues/1891:1666,Testability,assert,assertFileIsReadable,1666,"ved to the local path in the JES backend. Non-optional Files are resolved appropriately. . Example failing task:; ```; task ValidateSamFile {; File input_bam; File? ref_fasta. command {; java -Xmx4000m -jar /usr/gitc/picard.jar \; BlahBlahThisIsACommand \; INPUT=${input_bam} \; ${""REFERENCE_SEQUENCE="" + ref_fasta}; }; runtime {; docker: ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282""; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Output from stderr:; ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [Mon Jan 23 17:32:28 UTC 2017] picard.sam. BlahBlahThisIsACommand INPUT=/cromwell_root/broad-dsde-methods/cromwell-execution-24/PairedEndSingleSampleWorkflow/5802ded7-ba93-4186-b680-5a7cb2c7f62c/call-SortAndFixReadGroupBam/shard-1/H06HDADXX130110.2.ATCACGAT.20k_reads.sorted.bam \; REFERENCE_SEQUENCE=gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta ; [Mon Jan 23 17:32:28 UTC 2017] Executing as root@4543b0496fa1 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_91-8u91-b14-1~bpo8+1-b14; Picard version: 2.5.0-gradle-SNAPSHOT; [Mon Jan 23 17:32:28 UTC 2017] picard.sam.ValidateSamFile done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=119013376; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" htsjdk.samtools.SAMException: Cannot read non-existent file: /cromwell_root/gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:338); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:325); 	at picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:141); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:208); 	at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:95); 	at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:105); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1891
https://github.com/broadinstitute/cromwell/issues/1891:1737,Testability,assert,assertFileIsReadable,1737,"ved to the local path in the JES backend. Non-optional Files are resolved appropriately. . Example failing task:; ```; task ValidateSamFile {; File input_bam; File? ref_fasta. command {; java -Xmx4000m -jar /usr/gitc/picard.jar \; BlahBlahThisIsACommand \; INPUT=${input_bam} \; ${""REFERENCE_SEQUENCE="" + ref_fasta}; }; runtime {; docker: ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282""; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Output from stderr:; ```; Picked up _JAVA_OPTIONS: -Djava.io.tmpdir=/cromwell_root/tmp; [Mon Jan 23 17:32:28 UTC 2017] picard.sam. BlahBlahThisIsACommand INPUT=/cromwell_root/broad-dsde-methods/cromwell-execution-24/PairedEndSingleSampleWorkflow/5802ded7-ba93-4186-b680-5a7cb2c7f62c/call-SortAndFixReadGroupBam/shard-1/H06HDADXX130110.2.ATCACGAT.20k_reads.sorted.bam \; REFERENCE_SEQUENCE=gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta ; [Mon Jan 23 17:32:28 UTC 2017] Executing as root@4543b0496fa1 on Linux 3.16.0-0.bpo.4-amd64 amd64; OpenJDK 64-Bit Server VM 1.8.0_91-8u91-b14-1~bpo8+1-b14; Picard version: 2.5.0-gradle-SNAPSHOT; [Mon Jan 23 17:32:28 UTC 2017] picard.sam.ValidateSamFile done. Elapsed time: 0.00 minutes.; Runtime.totalMemory()=119013376; To get help, see http://broadinstitute.github.io/picard/index.html#GettingHelp; Exception in thread ""main"" htsjdk.samtools.SAMException: Cannot read non-existent file: /cromwell_root/gs:/broad-references/hg38/v0/Homo_sapiens_assembly38.fasta; 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:338); 	at htsjdk.samtools.util.IOUtil.assertFileIsReadable(IOUtil.java:325); 	at picard.sam.ValidateSamFile.doWork(ValidateSamFile.java:141); 	at picard.cmdline.CommandLineProgram.instanceMain(CommandLineProgram.java:208); 	at picard.cmdline.PicardCommandLine.instanceMain(PicardCommandLine.java:95); 	at picard.cmdline.PicardCommandLine.main(PicardCommandLine.java:105); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1891
https://github.com/broadinstitute/cromwell/issues/1893:0,Availability,Failure,Failure,0,"Failure metadata will look something like:. ```; ""failures"": [{; ""failure"": ""Task 874ad75a-e19e-4b53-8225-746df1436c51:ValidateAggregatedSamFile was preempted for the 1st time. The call will be restarted with another preemptible VM (max preemptible attempts number is 3).\nError code 10. Message: Some(14: VM ggp-15150083938845849899 stopped unexpectedly.)"",; ""timestamp"": ""2016-12-18T05:54:07.296Z""; }],; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1893
https://github.com/broadinstitute/cromwell/issues/1893:50,Availability,failure,failures,50,"Failure metadata will look something like:. ```; ""failures"": [{; ""failure"": ""Task 874ad75a-e19e-4b53-8225-746df1436c51:ValidateAggregatedSamFile was preempted for the 1st time. The call will be restarted with another preemptible VM (max preemptible attempts number is 3).\nError code 10. Message: Some(14: VM ggp-15150083938845849899 stopped unexpectedly.)"",; ""timestamp"": ""2016-12-18T05:54:07.296Z""; }],; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1893
https://github.com/broadinstitute/cromwell/issues/1893:66,Availability,failure,failure,66,"Failure metadata will look something like:. ```; ""failures"": [{; ""failure"": ""Task 874ad75a-e19e-4b53-8225-746df1436c51:ValidateAggregatedSamFile was preempted for the 1st time. The call will be restarted with another preemptible VM (max preemptible attempts number is 3).\nError code 10. Message: Some(14: VM ggp-15150083938845849899 stopped unexpectedly.)"",; ""timestamp"": ""2016-12-18T05:54:07.296Z""; }],; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1893
https://github.com/broadinstitute/cromwell/issues/1893:288,Integrability,Message,Message,288,"Failure metadata will look something like:. ```; ""failures"": [{; ""failure"": ""Task 874ad75a-e19e-4b53-8225-746df1436c51:ValidateAggregatedSamFile was preempted for the 1st time. The call will be restarted with another preemptible VM (max preemptible attempts number is 3).\nError code 10. Message: Some(14: VM ggp-15150083938845849899 stopped unexpectedly.)"",; ""timestamp"": ""2016-12-18T05:54:07.296Z""; }],; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1893
https://github.com/broadinstitute/cromwell/issues/1893:119,Security,Validat,ValidateAggregatedSamFile,119,"Failure metadata will look something like:. ```; ""failures"": [{; ""failure"": ""Task 874ad75a-e19e-4b53-8225-746df1436c51:ValidateAggregatedSamFile was preempted for the 1st time. The call will be restarted with another preemptible VM (max preemptible attempts number is 3).\nError code 10. Message: Some(14: VM ggp-15150083938845849899 stopped unexpectedly.)"",; ""timestamp"": ""2016-12-18T05:54:07.296Z""; }],; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1893
https://github.com/broadinstitute/cromwell/issues/1894:21,Availability,reliab,reliably,21,Centaur tests should reliably pass even when they don't have a `sleep 2` suffixed to the command block.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1894
https://github.com/broadinstitute/cromwell/issues/1894:8,Testability,test,tests,8,Centaur tests should reliably pass even when they don't have a `sleep 2` suffixed to the command block.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1894
https://github.com/broadinstitute/cromwell/issues/1895:64,Availability,Failure,Failure,64,"- SGE backend; - 0.24; - single workflow; - call caching is on. Failure of intermediate task (CollectSequencingArtifactMetrics) on a single shard caused the entire workflow to stop immediately and cromwell to exit. Hence, successful tasks could not cache results, though those did complete. . The next tasks in the series (ExtractReadInfo) do not appear to ever be run, even for samples that did not fail CollectSequencingArtifactMetrics. ```; [ERROR] [01/23/2017 14:00:09.277] [cromwell-system-akka.dispatchers.engine-dispatcher-74] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 92c98fd6-003e-4f1b-b61b-9ab610f4961d failed (during ExecutingWorkflowState): Call dl_ob_training.dl_ob_training.CollectSequencingArtifactMetrics:NA:1: return code was 3; java.lang.RuntimeException: Call dl_ob_training.dl_ob_training.CollectSequencingArtifactMetrics:NA:1: return code was 3. ```. Command:; ```; java -Xmx6G -Dconfig.file=${PWD}/sge_application.conf -jar \; cromwell.jar \; run full_dl_ob_training.wdl \; full_dl_ob_training.json \; sge_runtimes \; full_dl_ob_training.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File ba",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:445,Availability,ERROR,ERROR,445,"- SGE backend; - 0.24; - single workflow; - call caching is on. Failure of intermediate task (CollectSequencingArtifactMetrics) on a single shard caused the entire workflow to stop immediately and cromwell to exit. Hence, successful tasks could not cache results, though those did complete. . The next tasks in the series (ExtractReadInfo) do not appear to ever be run, even for samples that did not fail CollectSequencingArtifactMetrics. ```; [ERROR] [01/23/2017 14:00:09.277] [cromwell-system-akka.dispatchers.engine-dispatcher-74] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 92c98fd6-003e-4f1b-b61b-9ab610f4961d failed (during ExecutingWorkflowState): Call dl_ob_training.dl_ob_training.CollectSequencingArtifactMetrics:NA:1: return code was 3; java.lang.RuntimeException: Call dl_ob_training.dl_ob_training.CollectSequencingArtifactMetrics:NA:1: return code was 3. ```. Command:; ```; java -Xmx6G -Dconfig.file=${PWD}/sge_application.conf -jar \; cromwell.jar \; run full_dl_ob_training.wdl \; full_dl_ob_training.json \; sge_runtimes \; full_dl_ob_training.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File ba",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2833,Availability,failure,failure-mode,2833,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:3057,Availability,failure,failure-mode,3057,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:249,Performance,cache,cache,249,"- SGE backend; - 0.24; - single workflow; - call caching is on. Failure of intermediate task (CollectSequencingArtifactMetrics) on a single shard caused the entire workflow to stop immediately and cromwell to exit. Hence, successful tasks could not cache results, though those did complete. . The next tasks in the series (ExtractReadInfo) do not appear to ever be run, even for samples that did not fail CollectSequencingArtifactMetrics. ```; [ERROR] [01/23/2017 14:00:09.277] [cromwell-system-akka.dispatchers.engine-dispatcher-74] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 92c98fd6-003e-4f1b-b61b-9ab610f4961d failed (during ExecutingWorkflowState): Call dl_ob_training.dl_ob_training.CollectSequencingArtifactMetrics:NA:1: return code was 3; java.lang.RuntimeException: Call dl_ob_training.dl_ob_training.CollectSequencingArtifactMetrics:NA:1: return code was 3. ```. Command:; ```; java -Xmx6G -Dconfig.file=${PWD}/sge_application.conf -jar \; cromwell.jar \; run full_dl_ob_training.wdl \; full_dl_ob_training.json \; sge_runtimes \; full_dl_ob_training.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File ba",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2442,Security,encrypt,encrypted,2442,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2481,Security,encrypt,encrypted-fields,2481,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2527,Security,encrypt,encrypt,2527,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2550,Security,encrypt,encrypted-fields,2550,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2576,Security,encrypt,encryption-key,2576,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2680,Testability,log,logs,2680,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2695,Testability,log,log-dir,2695,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2723,Testability,log,logs,2723,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2756,Testability,log,logs,2756,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1895:2801,Testability,log,log-temporary,2801,"raining.metadata; ```. full_dl_ob_training.wdl:; ```; import ""dl_ob_training.wdl"" as dl_ob_training. workflow full_dl_ob_training {. ....snip.... scatter (p in variant_files_pair) {; call dl_ob_training.dl_ob_training {; input:; ....snip....; }; }; }. ```. dl_ob_training.wdl:; ```; workflow dl_ob_training {. ....snip.... call CollectSequencingArtifactMetrics {; input:; .....snip.....; }. call CreateObIntervalList {; input:; .....snip.....; }. call ExtractReadInfo {; input:; ....snip.....; }. output {; ExtractReadInfo.read_infos; }; }. task CollectSequencingArtifactMetrics {; ....snip....; output {; File pre_adapter_detail_metrics = ""${output_location_prepend}.pre_adapter_detail_metrics""; File pre_adapter_summary_metrics = ""${output_location_prepend}.pre_adapter_summary_metrics""; File bait_bias_detail_metrics = ""${output_location_prepend}.bait_bias_detail_metrics""; File bait_bias_summary_metrics = ""${output_location_prepend}.bait_bias_summary_metrics""; }; }. # Build an interval list from oncotated M1; task CreateObIntervalList {. ....snip.... output {; File interval_list = ""${entity_id}_variant_intervals.list""; }; }. task ExtractReadInfo {. ....snip.... output {; Array[File] read_infos = glob(""out/*""); }; }. ```. sge_application.conf:; ```; ...snip...; workflow-options {; # These workflow options will be encrypted when stored in the database; encrypted-fields: []. # AES-256 key to use to encrypt the values in `encrypted-fields`; base64-encryption-key: ""AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="". # Directory where to write per workflow logs; workflow-log-dir: ""cromwell-workflow-logs"". # When true, per workflow logs will be deleted after copying; workflow-log-temporary: true. # Workflow-failure-mode determines what happens to other calls when a call fails. Can be either ContinueWhilePossible or NoNewCalls.; # Can also be overridden in workflow options. Defaults to NoNewCalls. Uncomment to change:; workflow-failure-mode: ""ContinueWhilePossible""; }. ....snip.... ; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1895
https://github.com/broadinstitute/cromwell/issues/1896:43,Availability,echo,echo,43,"This WDL:. ```; task nofiles {; command {; echo ignored; }. output {; Array[File] nofiles = glob(""*.no.such.files""); }. runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; call nofiles. output {; Array[File] out = nofiles.nofiles; }; }; ```. Causes this error:. ```; 2017-01-23 15:14:06,797 cromwell-system-akka.dispatchers.backend-dispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:258,Availability,error,error,258,"This WDL:. ```; task nofiles {; command {; echo ignored; }. output {; Array[File] nofiles = glob(""*.no.such.files""); }. runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; call nofiles. output {; Array[File] out = nofiles.nofiles; }; }; ```. Causes this error:. ```; 2017-01-23 15:14:06,797 cromwell-system-akka.dispatchers.backend-dispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:602,Availability,ERROR,ERROR,602,"This WDL:. ```; task nofiles {; command {; echo ignored; }. output {; Array[File] nofiles = glob(""*.no.such.files""); }. runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; call nofiles. output {; Array[File] out = nofiles.nofiles; }; }; ```. Causes this error:. ```; 2017-01-23 15:14:06,797 cromwell-system-akka.dispatchers.backend-dispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:1028,Availability,avail,available,1028,"ch.files""); }. runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; call nofiles. output {; Array[File] out = nofiles.nofiles; }; }; ```. Causes this error:. ```; 2017-01-23 15:14:06,797 cromwell-system-akka.dispatchers.backend-dispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for potential additional information: gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:1217,Testability,log,log,1217,"; 2017-01-23 15:14:06,797 cromwell-system-akka.dispatchers.backend-dispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for potential additional information: gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 INFO - WorkflowManagerActor WorkflowActor-7e4afc46-a1ff-424",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:1599,Testability,log,log,1599,"ispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for potential additional information: gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 INFO - WorkflowManagerActor WorkflowActor-7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:1623,Testability,log,log,1623,"ispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for potential additional information: gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 INFO - WorkflowManagerActor WorkflowActor-7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/issues/1896:2128,Testability,log,log,2128,"ispatcher-36 INFO - JesAsyncBackendJobExecutionActor [UUID(7e4afc46)w.nofiles:NA:1]: JesAsyncBackendJobExecutionActor [UUID(7e4afc46):w.nofiles:NA:1] Status change from Running to Failed; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 ERROR - WorkflowManagerActor Workflow 7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 failed (during ExecutingWorkflowState): It appears that some of the expected output files for task w.nofiles:NA:1 did not exist when the command exited.; A few things to try; 1) Check that the output section in your WDL is correct. Remember that all output files declared in a task must exist when the command exits.; 2) Check that the return code is available and is valid with respect to your command expected exit code; 3) Look into the stderr (gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log) file for evidence that some of the output files the command is expected to create were not created.; Failed to delocalize files: failed to copy the following files: ""/mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* -> gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/ (cp failed: gsutil -q -m cp -L /var/log/google-genomics/out.log /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/* gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/glob-ae4ebb9050f92748c9c41ab4aa60afc9/, command failed: CommandException: No URLs matched: /mnt/local-disk/glob-ae4ebb9050f92748c9c41ab4aa60afc9/*\nCommandException: 1 file/object could not be transferred.\n); Check the content of stderr for potential additional information: gs://miguel-cromwell-dev/w/7e4afc46-a1ff-424f-aecf-4ce742ed5fa8/call-nofiles/nofiles-stderr.log; 2017-01-23 15:14:07,862 cromwell-system-akka.dispatchers.engine-dispatcher-8 INFO - WorkflowManagerActor WorkflowActor-7e4afc46-a1ff-424f-aecf-4ce742ed5fa8 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1896
https://github.com/broadinstitute/cromwell/pull/1897:0,Integrability,Depend,Depends,0,Depends on https://github.com/broadinstitute/wdl4s/pull/71,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1897
https://github.com/broadinstitute/cromwell/pull/1901:0,Integrability,Depend,Depends,0,Depends on https://github.com/broadinstitute/wdl4s/pull/73,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1901
https://github.com/broadinstitute/cromwell/pull/1905:304,Integrability,wrap,wrapper,304,"PK, FK, UC, and IX names all use a standard naming pattern, and synced up clob/varchar lengths.; Added specs that check for the above.; Removed checks for unique index mismatches, as we have none.; Added blob implicits to match clob implicits.; Reimplemented database deadlock test.; Added an eventually wrapper within MetadataServiceActorSpec.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1905
https://github.com/broadinstitute/cromwell/pull/1905:277,Testability,test,test,277,"PK, FK, UC, and IX names all use a standard naming pattern, and synced up clob/varchar lengths.; Added specs that check for the above.; Removed checks for unique index mismatches, as we have none.; Added blob implicits to match clob implicits.; Reimplemented database deadlock test.; Added an eventually wrapper within MetadataServiceActorSpec.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1905
https://github.com/broadinstitute/cromwell/issues/1906:13043,Availability,error,error,13043,"e_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.S",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:15805,Availability,Failure,Failure,15805,"cala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/D",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:12924,Deployability,configurat,configuration,12924,"79] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:20897,Deployability,Update,Update,20897,"ecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. Apologies if this was corrected by #1857, I originally included this in #1875 last week, but had not heard back about this part of that issue. ---- . Update: `write_lines()` was improved for Cromwell 27 but some issues appear to remain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:12511,Integrability,Message,Message,12511,"ConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: command: ""/bin/bash"" ""/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/script.submit""; [2017-01-20 09:31:16,78] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: job id: 2329; [2017-01-20 09:31:16,79] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:12924,Modifiability,config,configuration,12924,"79] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:13479,Modifiability,config,config,13479,"17-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.pr",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:13547,Modifiability,Config,ConfigAsyncJobExecutionActor,13547,"orkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExe",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:13740,Modifiability,config,config,13740,"/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:13804,Modifiability,Config,ConfigAsyncJobExecutionActor,13804,"002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExec",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:14240,Performance,concurren,concurrent,14240,ception: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:14308,Performance,concurren,concurrent,14308,de was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:14376,Performance,concurren,concurrent,14376,class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:14836,Performance,concurren,concurrent,14836,"3); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:332); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:15161,Performance,concurren,concurrent,15161,"pply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:15235,Performance,concurren,concurrent,15235,"concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", l",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:15321,Performance,concurren,concurrent,15321,"$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:15399,Performance,concurren,concurrent,15399,"able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:891,Testability,test,test,891,"When using write_lines() on an Array[File] object, the paths in the resulting file are the original file paths rather than the localized ones, causing tasks to fail. I have the following WDL:; ```; task aggregate_mafs {; Array[File]+ mafpaths; String out_prefix; String? out_suffix. command {; python /src/Merge_MAFs.py ${""--suffix "" + out_suffix} ${out_prefix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1013,Testability,test,tests,1013," on an Array[File] object, the paths in the resulting file are the original file paths rather than the localized ones, causing tasks to fail. I have the following WDL:; ```; task aggregate_mafs {; Array[File]+ mafpaths; String out_prefix; String? out_suffix. command {; python /src/Merge_MAFs.py ${""--suffix "" + out_suffix} ${out_prefix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1095,Testability,test,tests,1095,"s rather than the localized ones, causing tasks to fail. I have the following WDL:; ```; task aggregate_mafs {; Array[File]+ mafpaths; String out_prefix; String? out_suffix. command {; python /src/Merge_MAFs.py ${""--suffix "" + out_suffix} ${out_prefix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1177,Testability,test,tests,1177,"; ```; task aggregate_mafs {; Array[File]+ mafpaths; String out_prefix; String? out_suffix. command {; python /src/Merge_MAFs.py ${""--suffix "" + out_suffix} ${out_prefix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1259,Testability,test,tests,1259,"t_suffix. command {; python /src/Merge_MAFs.py ${""--suffix "" + out_suffix} ${out_prefix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1341,Testability,test,tests,1341,"refix} ${write_lines(mafpaths)}; }. output {; File aggregated_maf = ""${out_prefix}${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1423,Testability,test,tests,1423,"${'.' + out_suffix}.maf""; }. runtime {; docker : ""broadgdac/aggregate_mafs:2""; }. parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1505,Testability,test,tests,1505,"parameter_meta {; mafpaths : ""File containing paths to MAF files.""; out_prefix : ""Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1587,Testability,test,tests,1587,"Identifying prefix. Usually the set entity this is run on.""; out_suffix : ""Descriptive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1669,Testability,test,tests,1669,"tive text to precede the .maf suffix.""; }; }. workflow aggregate_mafs_workflow {; call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1751,Testability,test,tests,1751,"call aggregate_mafs; }; ```. With the following inputs.json:; ```js; {; ""aggregate_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1833,Testability,test,tests,1833,"_mafs_workflow.aggregate_mafs.out_suffix"": ""test"",; ""aggregate_mafs_workflow.aggregate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1915,Testability,test,tests,1915,"gate_mafs.out_prefix"": ""ACC"",; ""aggregate_mafs_workflow.aggregate_mafs.mafpaths"": [""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:1997,Testability,test,tests,1997,"[""tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2079,Testability,test,tests,2079,",""tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2161,Testability,test,tests,2161,",""tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2243,Testability,test,tests,2243,",""tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2325,Testability,test,tests,2325,",""tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2407,Testability,test,tests,2407,",""tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2489,Testability,test,tests,2489,",""tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2571,Testability,test,tests,2571,",""tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2653,Testability,test,tests,2653,",""tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2735,Testability,test,tests,2735,",""tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2817,Testability,test,tests,2817,",""tests/TCGA-OR-A5JB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2899,Testability,test,tests,2899,",""tests/TCGA-OR-A5JC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:2981,Testability,test,tests,2981,",""tests/TCGA-OR-A5JD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3063,Testability,test,tests,3063,",""tests/TCGA-OR-A5JE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3145,Testability,test,tests,3145,",""tests/TCGA-OR-A5JF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3227,Testability,test,tests,3227,",""tests/TCGA-OR-A5JG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3309,Testability,test,tests,3309,",""tests/TCGA-OR-A5JH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3391,Testability,test,tests,3391,",""tests/TCGA-OR-A5JI-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3473,Testability,test,tests,3473,",""tests/TCGA-OR-A5JJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3555,Testability,test,tests,3555,",""tests/TCGA-OR-A5JK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3637,Testability,test,tests,3637,",""tests/TCGA-OR-A5JL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3719,Testability,test,tests,3719,",""tests/TCGA-OR-A5JM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3801,Testability,test,tests,3801,",""tests/TCGA-OR-A5JO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3883,Testability,test,tests,3883,",""tests/TCGA-OR-A5JP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:3965,Testability,test,tests,3965,",""tests/TCGA-OR-A5JQ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4047,Testability,test,tests,4047,",""tests/TCGA-OR-A5JR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4129,Testability,test,tests,4129,",""tests/TCGA-OR-A5JS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4211,Testability,test,tests,4211,",""tests/TCGA-OR-A5JT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4293,Testability,test,tests,4293,",""tests/TCGA-OR-A5JU-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4375,Testability,test,tests,4375,",""tests/TCGA-OR-A5JV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4457,Testability,test,tests,4457,",""tests/TCGA-OR-A5JW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4539,Testability,test,tests,4539,",""tests/TCGA-OR-A5JX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4621,Testability,test,tests,4621,",""tests/TCGA-OR-A5JY-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4703,Testability,test,tests,4703,",""tests/TCGA-OR-A5JZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4785,Testability,test,tests,4785,",""tests/TCGA-OR-A5K0-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4867,Testability,test,tests,4867,",""tests/TCGA-OR-A5K1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:4949,Testability,test,tests,4949,",""tests/TCGA-OR-A5K2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5031,Testability,test,tests,5031,",""tests/TCGA-OR-A5K3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5113,Testability,test,tests,5113,",""tests/TCGA-OR-A5K4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5195,Testability,test,tests,5195,",""tests/TCGA-OR-A5K5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5277,Testability,test,tests,5277,",""tests/TCGA-OR-A5K6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5359,Testability,test,tests,5359,",""tests/TCGA-OR-A5K8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5441,Testability,test,tests,5441,",""tests/TCGA-OR-A5K9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5523,Testability,test,tests,5523,",""tests/TCGA-OR-A5KB-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5605,Testability,test,tests,5605,",""tests/TCGA-OR-A5KO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5687,Testability,test,tests,5687,",""tests/TCGA-OR-A5KP-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5769,Testability,test,tests,5769,",""tests/TCGA-OR-A5KQ-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5851,Testability,test,tests,5851,",""tests/TCGA-OR-A5KS-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:5933,Testability,test,tests,5933,",""tests/TCGA-OR-A5KT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6015,Testability,test,tests,6015,",""tests/TCGA-OR-A5KU-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6097,Testability,test,tests,6097,",""tests/TCGA-OR-A5KV-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6179,Testability,test,tests,6179,",""tests/TCGA-OR-A5KW-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6261,Testability,test,tests,6261,",""tests/TCGA-OR-A5KX-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6343,Testability,test,tests,6343,",""tests/TCGA-OR-A5KY-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6425,Testability,test,tests,6425,",""tests/TCGA-OR-A5KZ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6507,Testability,test,tests,6507,",""tests/TCGA-OR-A5L1-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6589,Testability,test,tests,6589,",""tests/TCGA-OR-A5L2-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6671,Testability,test,tests,6671,",""tests/TCGA-OR-A5L3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6753,Testability,test,tests,6753,",""tests/TCGA-OR-A5L4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6835,Testability,test,tests,6835,",""tests/TCGA-OR-A5L5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6917,Testability,test,tests,6917,",""tests/TCGA-OR-A5L6-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:6999,Testability,test,tests,6999,",""tests/TCGA-OR-A5L8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7081,Testability,test,tests,7081,",""tests/TCGA-OR-A5L9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7163,Testability,test,tests,7163,",""tests/TCGA-OR-A5LA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7245,Testability,test,tests,7245,",""tests/TCGA-OR-A5LB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7327,Testability,test,tests,7327,",""tests/TCGA-OR-A5LC-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7409,Testability,test,tests,7409,",""tests/TCGA-OR-A5LD-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7491,Testability,test,tests,7491,",""tests/TCGA-OR-A5LE-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7573,Testability,test,tests,7573,",""tests/TCGA-OR-A5LF-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; `",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7655,Testability,test,tests,7655,",""tests/TCGA-OR-A5LG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7737,Testability,test,tests,7737,",""tests/TCGA-OR-A5LH-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 0",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7819,Testability,test,tests,7819,",""tests/TCGA-OR-A5LI-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-co",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7901,Testability,test,tests,7901,",""tests/TCGA-OR-A5LJ-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:7983,Testability,test,tests,7983,",""tests/TCGA-OR-A5LK-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52]",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8065,Testability,test,tests,8065,",""tests/TCGA-OR-A5LL-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8147,Testability,test,tests,8147,",""tests/TCGA-OR-A5LM-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8229,Testability,test,tests,8229,",""tests/TCGA-OR-A5LN-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8311,Testability,test,tests,8311,",""tests/TCGA-OR-A5LO-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 submitted.; [2017-01-20 09:31:10,63] [info] SingleWorkflowRunner",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8393,Testability,test,tests,8393,",""tests/TCGA-OR-A5LP-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 submitted.; [2017-01-20 09:31:10,63] [info] SingleWorkflowRunnerActor: Workflow submitted 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8475,Testability,test,tests,8475,",""tests/TCGA-OR-A5LR-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LS-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OR-A5LT-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 submitted.; [2017-01-20 09:31:10,63] [info] SingleWorkflowRunnerActor: Workflow submitted 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:11,29] [info] Running with database db.url = jdbc:hsqldb:mem:396f6af4-b493-451b-ad",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:8720,Testability,test,tests,8720,"a2.maf.txt"",""tests/TCGA-OU-A5PI-01A-12D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OF-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OG-01A-22D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-P6-A5OH-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 submitted.; [2017-01-20 09:31:10,63] [info] SingleWorkflowRunnerActor: Workflow submitted 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:11,29] [info] Running with database db.url = jdbc:hsqldb:mem:396f6af4-b493-451b-ad19-2042625bf63e;shutdown=false;hsqldb.tx=mvcc; [2017-01-20 09:31:15,99] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2017-01-20 09:31:16,00] [info] [Rename",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:9085,Testability,test,tests,9085,"975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PA-A5YG-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5H9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HB-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt"",""tests/TCGA-PK-A5HC-01A-11D-A30A-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt""]; }; ```. Running the script:; ```; $ java -jar ~/bin/cromwell-24.jar run /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl tests/inputs.json; [2017-01-20 09:31:10,44] [info] Slf4jLogger started; [2017-01-20 09:31:10,52] [info] RUN sub-command; [2017-01-20 09:31:10,52] [info] WDL file: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/aggregate_mafs.wdl; [2017-01-20 09:31:10,52] [info] Inputs: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/inputs.json; [2017-01-20 09:31:10,58] [info] SingleWorkflowRunnerActor: Submitting workflow; [2017-01-20 09:31:10,63] [info] Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 submitted.; [2017-01-20 09:31:10,63] [info] SingleWorkflowRunnerActor: Workflow submitted 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:11,29] [info] Running with database db.url = jdbc:hsqldb:mem:396f6af4-b493-451b-ad19-2042625bf63e;shutdown=false;hsqldb.tx=mvcc; [2017-01-20 09:31:15,99] [info] Running migration RenameWorkflowOptionsInMetadata with a read batch size of 100000 and a write batch size of 100000; [2017-01-20 09:31:16,00] [info] [RenameWorkflowOptionsInMetadata] 100%; [2017-01-20 09:31:16,03] [info] Metadata summary refreshing every 2 seconds.; [2017-01-20 09:31:16,06] [info] 1 new workflows fetched; [2017-01-20 09:31:16,06] [info] WorkflowManagerActor Starting workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:16,06] [info] ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:10694,Testability,test,test,10694,"7-01-20 09:31:16,03] [info] Metadata summary refreshing every 2 seconds.; [2017-01-20 09:31:16,06] [info] 1 new workflows fetched; [2017-01-20 09:31:16,06] [info] WorkflowManagerActor Starting workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:16,06] [info] WorkflowManagerActor Successfully started WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46; [2017-01-20 09:31:16,06] [info] Retrieved 1 workflows from the WorkflowStoreActor; [2017-01-20 09:31:16,30] [info] MaterializeWorkflowDescriptorActor [814c47aa]: Call-to-Backend assignments: aggregate_mafs_workflow.aggregate_mafs -> Local; [2017-01-20 09:31:16,48] [info] WorkflowExecutionActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 [814c47aa]: Starting calls: aggregate_mafs_workflow.aggregate_mafs:NA:1; [2017-01-20 09:31:16,69] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: python /src/Merge_MAFs.py --suffix test ACC /root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp; [2017-01-20 09:31:16,70] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: executing: docker run --rm -v /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs:/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs -i broadgdac/aggregate_mafs:2 /bin/bash /root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/script; [2017-01-20 09:31:16,71] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: command: ""/bin/bash"" ""/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/script.submit""; [2017-01-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:12881,Testability,log,logging,12881,"79] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$po",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:12953,Testability,log,log-dead-letters,12953,"4c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:12981,Testability,log,log-dead-letters-during-shutdown,12981,"ggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from - to SharedFileSystemRunStatus(false); [2017-01-20 09:33:07,55] [info] BackgroundConfigAsyncJobExecutionActor [814c47aaaggregate_mafs_workflow.aggregate_mafs:NA:1]: BackgroundConfigAsyncJobExecutionActor [814c47aa:aggregate_mafs_workflow.aggregate_mafs:NA:1] Status change from SharedFileSystemRunStatus(false) to SharedFileSystemRunStatus(true); [2017-01-20 09:33:07,58] [info] Message [cromwell.subworkflowstore.SubWorkflowStoreActor$SubWorkflowStoreCompleteSuccess] from Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/$b#-910401033] to Actor[akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor/WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46#617869376] was not delivered. [1] dead letters encountered. This logging can be turned off or adjusted with configuration settings 'akka.log-dead-letters' and 'akka.log-dead-letters-during-shutdown'.; [2017-01-20 09:33:07,58] [error] WorkflowManagerActor Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 failed (during ExecutingWorkflowState): Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; java.lang.RuntimeException: Call aggregate_mafs_workflow.aggregate_mafs:NA:1: return code was 1; 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:432); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handleExecutionResult(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:370); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.handlePollSuccess(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:333); 	at cromwell.backend.standard.Sta",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:16597,Testability,test,tests,16597,"Thread.run(ForkJoinWorkerThread.java:107). [2017-01-20 09:33:07,58] [info] WorkflowManagerActor WorkflowActor-814c47aa-9d11-4c81-a08c-f2b77c002b46 is in a terminal state: WorkflowFailedState; [2017-01-20 09:33:24,62] [info] SingleWorkflowRunnerActor workflow finished with status 'Failed'.; Workflow 814c47aa-9d11-4c81-a08c-f2b77c002b46 transitioned to state Failed; ```. Failure is due to inability to find the files listed in the file created by write_lines():; ```; $ tail -n 10 stderr; Traceback (most recent call last):; File ""/src/Merge_MAFs.py"", line 182, in <module>; main(sys.argv[1:]); File ""/src/Merge_MAFs.py"", line 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:16948,Testability,test,tests,16948,"e 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp ; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff8",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:17260,Testability,test,tests,17260,"e 76, in main; concatenatedMafFilename = _handle_mafs(args); File ""/src/Merge_MAFs.py"", line 83, in _handle_mafs; mafPaths = _getMafPaths(args.mafpaths); File ""/src/Merge_MAFs.py"", line 98, in _getMafPaths; raise Exception(""MAF doesn't exist: %s"" % mafPath); Exception: MAF doesn't exist: /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp ; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff8",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:17691,Testability,test,tests,17691,"/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. File created by write_lines() - I believe the files listed within *should* be under the directory ```/root/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp ; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:18021,Testability,test,tests,18021,"/gdac-firecloud/tasks/aggregate_mafs/tests```, instead they are all listed at their system path, ```/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp ; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b4",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:18351,Testability,test,tests,18351,sks/aggregate_mafs/tests```:; ```; $ head cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/execution/wdlarray-8012c813f9ee08681a0b1fb427a70b0d.tmp ; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:18681,Testability,test,tests,18681,4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J1-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:19011,Testability,test,tests,19011,4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J2-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:19341,Testability,test,tests,19341,4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J3-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:19671,Testability,test,tests,19671,4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J4-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:20001,Testability,test,tests,20001,"4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. Apologies if this was corrected by #1857, I originally included this in #1875 last week, but had not heard back about this part of that issue. --",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:20331,Testability,test,tests,20331,"ecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. Apologies if this was corrected by #1857, I originally included this in #1875 last week, but had not heard back about this part of that issue. ---- . Update: `write_lines()` was improved for Cromwell 27 but some issues appear to remain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/issues/1906:20661,Testability,test,tests,20661,"ecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J5-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J6-01A-31D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J7-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J8-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5J9-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; /Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/cromwell-executions/aggregate_mafs_workflow/814c47aa-9d11-4c81-a08c-f2b77c002b46/call-aggregate_mafs/inputs/Users/dheiman/Documents/workspace/gdac-firecloud/tasks/aggregate_mafs/tests/TCGA-OR-A5JA-01A-11D-A29I-10.ff872fc4-bd1c-4975-85c8-3655ccd199a2.maf.txt; ```. Apologies if this was corrected by #1857, I originally included this in #1875 last week, but had not heard back about this part of that issue. ---- . Update: `write_lines()` was improved for Cromwell 27 but some issues appear to remain.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1906
https://github.com/broadinstitute/cromwell/pull/1907:22,Testability,test,testing,22,Things to make Joel's testing easier...,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1907
https://github.com/broadinstitute/cromwell/issues/1908:408,Availability,error,error,408,"I am trying to reproduce one of the [examples](https://github.com/broadinstitute/wdl/blob/develop/SPEC.md#example-5-word-count) in the spec. It doesn't work out of the box since `wc` command produces a string with filename, and not just integer. Thus, I tried to substitute all non-digit characters with function `sub`:; ```; output {; Int count = read_int(sub(stdout(), ""\D"", """"); }; ```; However, I get an error:; ```; Unable to load namespace from workflow: Unrecognized token on line 7, column 40:. Int count = read_int(sub(stdout(), ""\D"", """")); ^; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1908
https://github.com/broadinstitute/cromwell/issues/1908:431,Performance,load,load,431,"I am trying to reproduce one of the [examples](https://github.com/broadinstitute/wdl/blob/develop/SPEC.md#example-5-word-count) in the spec. It doesn't work out of the box since `wc` command produces a string with filename, and not just integer. Thus, I tried to substitute all non-digit characters with function `sub`:; ```; output {; Int count = read_int(sub(stdout(), ""\D"", """"); }; ```; However, I get an error:; ```; Unable to load namespace from workflow: Unrecognized token on line 7, column 40:. Int count = read_int(sub(stdout(), ""\D"", """")); ^; cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3$$anon$1: Workflow input processing failed:; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1908
https://github.com/broadinstitute/cromwell/issues/1909:49,Availability,Error,Error,49,Pretty much what it says. We know we want to add Error 13 to our JES retries. Do any other codes make the cut?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1909
https://github.com/broadinstitute/cromwell/issues/1910:39,Availability,error,errors,39,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:244,Availability,Error,Error,244,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:261,Availability,error,error,261,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:334,Availability,Error,Error,334,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:849,Availability,error,error,849,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:918,Deployability,configurat,configuration,918,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:942,Deployability,toggle,toggle,942,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:918,Modifiability,config,configuration,918,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1910:656,Testability,log,logged,656,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. - Preemption for preemptible VMs (i.e. Error 14); - JES error codes other than preemption which we believe to be transient (e.g. Error 13). For both situations, the following statements will be true:. - When one of these events happens we will determine if the job is retryable (see below for criteria); - If the job is not retryable it will be failed; - If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented ; -- The job will be attempted again. In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1910
https://github.com/broadinstitute/cromwell/issues/1912:39,Availability,error,errors,39,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:242,Availability,Error,Error,242,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:257,Availability,error,error,257,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:330,Availability,Error,Error,330,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:838,Availability,error,error,838,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:907,Deployability,configurat,configuration,907,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:931,Deployability,toggle,toggle,931,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:907,Modifiability,config,configuration,907,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1912:646,Testability,log,logged,646,"We would like to handle certain JES VM errors in a manner which allows for some automatic retries prior to failing the job. There will be two categories, each handled slightly differently from the other:. Preemption for preemptible VMs (i.e. Error 14); JES error codes other than preemption which we believe to be transient (e.g. Error 13); For both situations, the following statements will be true:. When one of these events happens we will determine if the job is retryable (see below for criteria); If the job is not retryable it will be failed; If the job is retryable; -- An event will be sent to the metadata service; -- The retry will be logged; -- The attempt number shall be incremented; -- The job will be attempted again; In terms of visibility to the end user, preemption shall be handled exactly as it is now. For the other error codes we retry up to 2 times, and there will be a server level configuration option to toggle this behavior on and off. There will be a subtle implementation change for these compared to how preemption is handled now. In the JES backend if a job fails for one of these two reasons and we decide the job is retryable (either because it was preempted and the remaining preemption count is > 0 or non-preemption and the master retry count is > 0) a signal will be sent back to the engine that the job failed but is to be retried. The difference here from the current behavior is that the JES backend is the one tracking the retry counts and merely telling the backend to retry the job instead of the engine tracking the retry count(s).",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1912
https://github.com/broadinstitute/cromwell/issues/1914:378,Availability,error,error,378,"When we interact with Google APIs, including JES and GCS sometimes things go awry for transient reasons. The belief is that retrying a bit would make it go green. We want to handle this automatically for the user. We shall:. - Retry up to N times via an exponential backoff. N is TBD (10?); - Upon each retry, emit a log message; - If N is reached the job will fail w/ the last error event as the failure reason. TBD: Design discussion on how to implement this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1914
https://github.com/broadinstitute/cromwell/issues/1914:397,Availability,failure,failure,397,"When we interact with Google APIs, including JES and GCS sometimes things go awry for transient reasons. The belief is that retrying a bit would make it go green. We want to handle this automatically for the user. We shall:. - Retry up to N times via an exponential backoff. N is TBD (10?); - Upon each retry, emit a log message; - If N is reached the job will fail w/ the last error event as the failure reason. TBD: Design discussion on how to implement this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1914
https://github.com/broadinstitute/cromwell/issues/1914:156,Energy Efficiency,green,green,156,"When we interact with Google APIs, including JES and GCS sometimes things go awry for transient reasons. The belief is that retrying a bit would make it go green. We want to handle this automatically for the user. We shall:. - Retry up to N times via an exponential backoff. N is TBD (10?); - Upon each retry, emit a log message; - If N is reached the job will fail w/ the last error event as the failure reason. TBD: Design discussion on how to implement this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1914
https://github.com/broadinstitute/cromwell/issues/1914:321,Integrability,message,message,321,"When we interact with Google APIs, including JES and GCS sometimes things go awry for transient reasons. The belief is that retrying a bit would make it go green. We want to handle this automatically for the user. We shall:. - Retry up to N times via an exponential backoff. N is TBD (10?); - Upon each retry, emit a log message; - If N is reached the job will fail w/ the last error event as the failure reason. TBD: Design discussion on how to implement this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1914
https://github.com/broadinstitute/cromwell/issues/1914:317,Testability,log,log,317,"When we interact with Google APIs, including JES and GCS sometimes things go awry for transient reasons. The belief is that retrying a bit would make it go green. We want to handle this automatically for the user. We shall:. - Retry up to N times via an exponential backoff. N is TBD (10?); - Upon each retry, emit a log message; - If N is reached the job will fail w/ the last error event as the failure reason. TBD: Design discussion on how to implement this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1914
https://github.com/broadinstitute/cromwell/issues/1915:106,Availability,error,error,106,"I specified a zone of us-east1-a, which is not a legitimate zone. The problem is not handled well and the error message is confusing and unhelpful: . See operations/ELXWv-WdKxis4eaT-cfmx7EBINHtgZmgHSoPcHJvZHVjdGlvblF1ZXVl which begins with:. ```; done: true; error:; code: 5; message: no zones available; .; .; .; ```. Cromwell loops forever in this pattern (current develop head, 678712acb303a6cce0d35d6bcb963f19407439f5):. ```; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$b#-1628247913] unexpectedly terminated while conducting 1 polls. Making a new one...; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] watching Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$c#1867219466]; [ERROR] [01/26/2017 16:30:58.241] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a/$c] null; java.lang.NullPointerException; 	at cromwell.backend.impl.jes.Run$.ceInfo$lzycompute$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.ceInfo$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.pa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:259,Availability,error,error,259,"I specified a zone of us-east1-a, which is not a legitimate zone. The problem is not handled well and the error message is confusing and unhelpful: . See operations/ELXWv-WdKxis4eaT-cfmx7EBINHtgZmgHSoPcHJvZHVjdGlvblF1ZXVl which begins with:. ```; done: true; error:; code: 5; message: no zones available; .; .; .; ```. Cromwell loops forever in this pattern (current develop head, 678712acb303a6cce0d35d6bcb963f19407439f5):. ```; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$b#-1628247913] unexpectedly terminated while conducting 1 polls. Making a new one...; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] watching Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$c#1867219466]; [ERROR] [01/26/2017 16:30:58.241] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a/$c] null; java.lang.NullPointerException; 	at cromwell.backend.impl.jes.Run$.ceInfo$lzycompute$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.ceInfo$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.pa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:294,Availability,avail,available,294,"I specified a zone of us-east1-a, which is not a legitimate zone. The problem is not handled well and the error message is confusing and unhelpful: . See operations/ELXWv-WdKxis4eaT-cfmx7EBINHtgZmgHSoPcHJvZHVjdGlvblF1ZXVl which begins with:. ```; done: true; error:; code: 5; message: no zones available; .; .; .; ```. Cromwell loops forever in this pattern (current develop head, 678712acb303a6cce0d35d6bcb963f19407439f5):. ```; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$b#-1628247913] unexpectedly terminated while conducting 1 polls. Making a new one...; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] watching Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$c#1867219466]; [ERROR] [01/26/2017 16:30:58.241] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a/$c] null; java.lang.NullPointerException; 	at cromwell.backend.impl.jes.Run$.ceInfo$lzycompute$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.ceInfo$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.pa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:965,Availability,ERROR,ERROR,965,"I specified a zone of us-east1-a, which is not a legitimate zone. The problem is not handled well and the error message is confusing and unhelpful: . See operations/ELXWv-WdKxis4eaT-cfmx7EBINHtgZmgHSoPcHJvZHVjdGlvblF1ZXVl which begins with:. ```; done: true; error:; code: 5; message: no zones available; .; .; .; ```. Cromwell loops forever in this pattern (current develop head, 678712acb303a6cce0d35d6bcb963f19407439f5):. ```; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$b#-1628247913] unexpectedly terminated while conducting 1 polls. Making a new one...; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] watching Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$c#1867219466]; [ERROR] [01/26/2017 16:30:58.241] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a/$c] null; java.lang.NullPointerException; 	at cromwell.backend.impl.jes.Run$.ceInfo$lzycompute$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.ceInfo$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.pa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:112,Integrability,message,message,112,"I specified a zone of us-east1-a, which is not a legitimate zone. The problem is not handled well and the error message is confusing and unhelpful: . See operations/ELXWv-WdKxis4eaT-cfmx7EBINHtgZmgHSoPcHJvZHVjdGlvblF1ZXVl which begins with:. ```; done: true; error:; code: 5; message: no zones available; .; .; .; ```. Cromwell loops forever in this pattern (current develop head, 678712acb303a6cce0d35d6bcb963f19407439f5):. ```; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$b#-1628247913] unexpectedly terminated while conducting 1 polls. Making a new one...; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] watching Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$c#1867219466]; [ERROR] [01/26/2017 16:30:58.241] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a/$c] null; java.lang.NullPointerException; 	at cromwell.backend.impl.jes.Run$.ceInfo$lzycompute$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.ceInfo$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.pa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:276,Integrability,message,message,276,"I specified a zone of us-east1-a, which is not a legitimate zone. The problem is not handled well and the error message is confusing and unhelpful: . See operations/ELXWv-WdKxis4eaT-cfmx7EBINHtgZmgHSoPcHJvZHVjdGlvblF1ZXVl which begins with:. ```; done: true; error:; code: 5; message: no zones available; .; .; .; ```. Cromwell loops forever in this pattern (current develop head, 678712acb303a6cce0d35d6bcb963f19407439f5):. ```; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$b#-1628247913] unexpectedly terminated while conducting 1 polls. Making a new one...; [INFO] [01/26/2017 16:30:48.889] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a] watching Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$c#1867219466]; [ERROR] [01/26/2017 16:30:58.241] [cromwell-system-akka.dispatchers.backend-dispatcher-31] [akka://cromwell-system/user/cromwell-service/$b/$a/$c] null; java.lang.NullPointerException; 	at cromwell.backend.impl.jes.Run$.ceInfo$lzycompute$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.ceInfo$1(Run.scala:122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.pa",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:2956,Performance,concurren,concurrent,2956,122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseNextResponse(BatchUnparsedResponse.java:155); 	at com.google.api.client.googleapis.batch.BatchRequest.execute(BatchRequest.java:253); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.runBatch(JesPollingActor.scala:67); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.cromwell$backend$impl$jes$statuspolling$JesPollingActor$$handleBatch(JesPollingActor.scala:58); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anonfun$receive$1.applyOrElse(JesPollingActor.scala:36); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.aroundReceive(JesPollingActor.scala:23); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:3030,Performance,concurren,concurrent,3030,122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseNextResponse(BatchUnparsedResponse.java:155); 	at com.google.api.client.googleapis.batch.BatchRequest.execute(BatchRequest.java:253); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.runBatch(JesPollingActor.scala:67); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.cromwell$backend$impl$jes$statuspolling$JesPollingActor$$handleBatch(JesPollingActor.scala:58); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anonfun$receive$1.applyOrElse(JesPollingActor.scala:36); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.aroundReceive(JesPollingActor.scala:23); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:3116,Performance,concurren,concurrent,3116,122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseNextResponse(BatchUnparsedResponse.java:155); 	at com.google.api.client.googleapis.batch.BatchRequest.execute(BatchRequest.java:253); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.runBatch(JesPollingActor.scala:67); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.cromwell$backend$impl$jes$statuspolling$JesPollingActor$$handleBatch(JesPollingActor.scala:58); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anonfun$receive$1.applyOrElse(JesPollingActor.scala:36); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.aroundReceive(JesPollingActor.scala:23); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1915:3194,Performance,concurren,concurrent,3194,122); 	at cromwell.backend.impl.jes.Run$.machineType$lzycompute$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.machineType$1(Run.scala:123); 	at cromwell.backend.impl.jes.Run$.interpretOperationStatus(Run.scala:130); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.interpretOperationStatus(JesPollingActor.scala:86); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:72); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anon$1.onSuccess(JesPollingActor.scala:69); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseAndCallback(BatchUnparsedResponse.java:197); 	at com.google.api.client.googleapis.batch.BatchUnparsedResponse.parseNextResponse(BatchUnparsedResponse.java:155); 	at com.google.api.client.googleapis.batch.BatchRequest.execute(BatchRequest.java:253); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.runBatch(JesPollingActor.scala:67); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.cromwell$backend$impl$jes$statuspolling$JesPollingActor$$handleBatch(JesPollingActor.scala:58); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor$$anonfun$receive$1.applyOrElse(JesPollingActor.scala:36); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.jes.statuspolling.JesPollingActor.aroundReceive(JesPollingActor.scala:23); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1915
https://github.com/broadinstitute/cromwell/issues/1917:680,Testability,log,log,680,"- 0.24; - SGE backend; - single workflow runner; - call-caching is enabled. *Apologies, but I do not have steps to recreate this*. Cromwell does not seem to be making any progress, though it is still running. Observations and background info:; - No tasks are running most of the time. This is confounded by the fact that some tasks are very quick to complete.; - When tasks complete, the next task does not seem to run quickly.; - This is a workflow that loops over bam files and calls a subworkflow. The subworkflow is four tasks long and it seems to complete the first three, but not run the fourth. However, this is only known because of the cromwell-executions directory. The log is a little hard to follow.; - Jobs are still being dispatched (occasionally) after ~20 hours.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1917
https://github.com/broadinstitute/cromwell/issues/1918:31,Testability,test,testing,31,"I ran into this during Centaur testing to confirm that the `memory` attribute is plumbed through to JES as expected. Cromwell is handling `memory` correctly (i.e. this is not a bug report), but I found the consequences of my chosen `memory` values somewhat surprising. JES guarantees a VM with at least as much memory as the user requests. But combining this fact with the [memory thresholds](https://cloud.google.com/compute/docs/machine-types) for standard instance types means that common memory specifications may procure a VM with nearly double the requested memory at [double the cost](https://cloud.google.com/compute/pricing#machinetype). For example:. ```; runtime {; memory: ""4 GB""; }; ```. or . ```; runtime {; memory: ""8 GB""; }; ```. These specifications might be expected to procure an n1-standard-1 (3.75 GB) and n1-standard-2 (7.5 GB). But JES guarantees a VM with _at least_ as much memory as requested, not _about_ as much memory as requested. So a request for 4 GB would procure a 7.5 GB n1-standard-2 and a request for 8 GB would procure a 15 GB n1-standard-3. It seems unlikely a WDL author intending to execute on JES would intentionally write `memory` values of 4 GB or 8 GB with this understanding of how JES interacts with GCE memory sizes.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1918
https://github.com/broadinstitute/cromwell/issues/1919:119,Availability,ERROR,ERROR,119,"The following stack trace appears:. ```; 2017-01-27 11:43:10,369 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 268771d3-0303-45b1-ba0f-9c93c27b6784 failed (during ExecutingWorkflowState): JobStore write failure: Invalid position in SerialClob object set; java.lang.Exception: JobStore write failure: Invalid position in SerialClob object set; 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:239); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:235); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerTh",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:249,Availability,failure,failure,249,"The following stack trace appears:. ```; 2017-01-27 11:43:10,369 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 268771d3-0303-45b1-ba0f-9c93c27b6784 failed (during ExecutingWorkflowState): JobStore write failure: Invalid position in SerialClob object set; java.lang.Exception: JobStore write failure: Invalid position in SerialClob object set; 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:239); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:235); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerTh",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:337,Availability,failure,failure,337,"The following stack trace appears:. ```; 2017-01-27 11:43:10,369 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 268771d3-0303-45b1-ba0f-9c93c27b6784 failed (during ExecutingWorkflowState): JobStore write failure: Invalid position in SerialClob object set; java.lang.Exception: JobStore write failure: Invalid position in SerialClob object set; 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:239); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:235); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerTh",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:1727,Performance,concurren,concurrent,1727,:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.sql.rowset.serial.SerialException: Invalid position in SerialClob object set; 	at javax.sql.rowset.serial.SerialClob.getSubString(SerialClob.java:269); 	at com.mysql.jdbc.PreparedStatement.setClob(PreparedStatement.java:3171); 	at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.setClob(PreparedStatementJavassistProxy.java); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:148); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:146); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:18); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:10); 	a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:1801,Performance,concurren,concurrent,1801,ngine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.sql.rowset.serial.SerialException: Invalid position in SerialClob object set; 	at javax.sql.rowset.serial.SerialClob.getSubString(SerialClob.java:269); 	at com.mysql.jdbc.PreparedStatement.setClob(PreparedStatement.java:3171); 	at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.setClob(PreparedStatementJavassistProxy.java); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:148); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:146); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:18); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:10); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:71); 	,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:1887,Performance,concurren,concurrent,1887,r$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.sql.rowset.serial.SerialException: Invalid position in SerialClob object set; 	at javax.sql.rowset.serial.SerialClob.getSubString(SerialClob.java:269); 	at com.mysql.jdbc.PreparedStatement.setClob(PreparedStatement.java:3171); 	at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.setClob(PreparedStatementJavassistProxy.java); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:148); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:146); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:18); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:10); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:71); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:46); 	at slick.re,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:1965,Performance,concurren,concurrent,1965,ass.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: javax.sql.rowset.serial.SerialException: Invalid position in SerialClob object set; 	at javax.sql.rowset.serial.SerialClob.getSubString(SerialClob.java:269); 	at com.mysql.jdbc.PreparedStatement.setClob(PreparedStatement.java:3171); 	at com.zaxxer.hikari.proxy.PreparedStatementJavassistProxy.setClob(PreparedStatementJavassistProxy.java); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:148); 	at slick.driver.JdbcTypesComponent$JdbcTypes$ClobJdbcType.setValue(JdbcTypesComponent.scala:146); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:18); 	at slick.jdbc.BaseResultConverter.set(JdbcResultConverter.scala:10); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:71); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:46); 	at slick.relational.TypeMappingResultConverter.set(ResultConverter.scala:138); 	at slick.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:4574,Performance,concurren,concurrent,4574,et(ResultConverter.scala:71); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:46); 	at slick.relational.TypeMappingResultConverter.set(ResultConverter.scala:138); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:519); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); 	at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); 	at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); 	at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:4659,Performance,concurren,concurrent,4659,et(ResultConverter.scala:71); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:46); 	at slick.relational.TypeMappingResultConverter.set(ResultConverter.scala:138); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:519); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); 	at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); 	at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); 	at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:876,Testability,Log,LoggingFSM,876,"The following stack trace appears:. ```; 2017-01-27 11:43:10,369 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 268771d3-0303-45b1-ba0f-9c93c27b6784 failed (during ExecutingWorkflowState): JobStore write failure: Invalid position in SerialClob object set; java.lang.Exception: JobStore write failure: Invalid position in SerialClob object set; 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:239); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:235); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerTh",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:957,Testability,Log,LoggingFSM,957,"The following stack trace appears:. ```; 2017-01-27 11:43:10,369 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 268771d3-0303-45b1-ba0f-9c93c27b6784 failed (during ExecutingWorkflowState): JobStore write failure: Invalid position in SerialClob object set; java.lang.Exception: JobStore write failure: Invalid position in SerialClob object set; 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:239); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor$$anonfun$11.applyOrElse(EngineJobExecutionActor.scala:235); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.akka$actor$LoggingFSM$$super$processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.processEvent(EngineJobExecutionActor.scala:29); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.EngineJobExecutionActor.aroundReceive(EngineJobExecutionActor.scala:29); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerTh",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:4217,Usability,Simpl,SimpleJdbcDriverAction,4217,et(ResultConverter.scala:71); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:46); 	at slick.relational.TypeMappingResultConverter.set(ResultConverter.scala:138); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:519); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); 	at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); 	at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); 	at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1919:4312,Usability,Simpl,SimpleJdbcDriverAction,4312,et(ResultConverter.scala:71); 	at slick.relational.ProductResultConverter.set(ResultConverter.scala:46); 	at slick.relational.TypeMappingResultConverter.set(ResultConverter.scala:138); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:519); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8$$anonfun$apply$1.apply(JdbcActionComponent.scala:517); 	at slick.jdbc.JdbcBackend$SessionDef$class.withPreparedInsertStatement(JdbcBackend.scala:354); 	at slick.jdbc.JdbcBackend$BaseSession.withPreparedInsertStatement(JdbcBackend.scala:407); 	at slick.driver.JdbcActionComponent$ReturningInsertActionComposerImpl.preparedInsert(JdbcActionComponent.scala:636); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction$$anonfun$run$8.apply(JdbcActionComponent.scala:517); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1919
https://github.com/broadinstitute/cromwell/issues/1923:6,Availability,ERROR,ERROR,6,```; [ERROR] [01/27/2017 13:33:05.570] [cromwell-system-akka.dispatchers.engine-dispatcher-30] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 0fcd7ba4-f1e0-4e16-9b67-c83ad2378f44 failed (during ExecutingWorkflowState): Could not evaluate no_address.out = read_string(stdout()); java.lang.RuntimeException: Could not evaluate no_address.out = read_string(stdout()); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:182); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:181); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:181); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:174); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); 	at scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104); 	at wdl4s.Task.evaluateOutputs(Task.scala:174); 	at cromwell.backend.wdl.OutputEvaluator$.evaluateOutputs(OutputEvaluator.scala:15); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.postProcess(JesAsyncBackendJobExecutionActor.scala:366); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:391); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:648,Availability,Failure,Failure,648,```; [ERROR] [01/27/2017 13:33:05.570] [cromwell-system-akka.dispatchers.engine-dispatcher-30] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 0fcd7ba4-f1e0-4e16-9b67-c83ad2378f44 failed (during ExecutingWorkflowState): Could not evaluate no_address.out = read_string(stdout()); java.lang.RuntimeException: Could not evaluate no_address.out = read_string(stdout()); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:182); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:181); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:181); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:174); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); 	at scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104); 	at wdl4s.Task.evaluateOutputs(Task.scala:174); 	at cromwell.backend.wdl.OutputEvaluator$.evaluateOutputs(OutputEvaluator.scala:15); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.postProcess(JesAsyncBackendJobExecutionActor.scala:366); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:391); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:656,Availability,recover,recoverWith,656,```; [ERROR] [01/27/2017 13:33:05.570] [cromwell-system-akka.dispatchers.engine-dispatcher-30] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 0fcd7ba4-f1e0-4e16-9b67-c83ad2378f44 failed (during ExecutingWorkflowState): Could not evaluate no_address.out = read_string(stdout()); java.lang.RuntimeException: Could not evaluate no_address.out = read_string(stdout()); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:182); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:181); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:181); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:174); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); 	at scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104); 	at wdl4s.Task.evaluateOutputs(Task.scala:174); 	at cromwell.backend.wdl.OutputEvaluator$.evaluateOutputs(OutputEvaluator.scala:15); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.postProcess(JesAsyncBackendJobExecutionActor.scala:366); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:391); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:4125,Availability,Error,Error,4125,ingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; Backend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:85); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103); 	at java.nio.file.Files.read(Files.java:3105); 	at java.nio.file.Files.readAllBytes(Files.java:3158); 	at better.files.F,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:7178,Availability,Error,Error,7178,); 	at cromwell.backend.wdl.ReadLikeFunctions$class.read_string(ReadLikeFunctions.scala:62); 	at cromwell.backend.impl.jes.JesExpressionFunctions.read_string(JesExpressionFunctions.scala:16); 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method); 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62); 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43); 	at java.lang.reflect.Method.invoke(Method.java:497); 	at wdl4s.expression.WdlFunctions$$anonfun$getFunction$1.apply(WdlFunctions.scala:12); 	at wdl4s.expression.WdlFunctions$$anonfun$getFunction$1.apply(WdlFunctions.scala:12); 	at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:181); 	at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:85); 	at wdl4s.WdlExpression.evaluate(WdlExpression.scala:161); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:180); 	... 38 more; Caused by: com.google.api.client.googleapis.json.GoogleJsonResponseException: 503 Service Unavailable; Backend Error; 	at com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:146); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1065); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(AbstractGoog,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:8457,Availability,echo,echo,8457,"lect.Method.invoke(Method.java:497); 	at wdl4s.expression.WdlFunctions$$anonfun$getFunction$1.apply(WdlFunctions.scala:12); 	at wdl4s.expression.WdlFunctions$$anonfun$getFunction$1.apply(WdlFunctions.scala:12); 	at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:181); 	at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:85); 	at wdl4s.WdlExpression.evaluate(WdlExpression.scala:161); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:180); 	... 38 more; Caused by: com.google.api.client.googleapis.json.GoogleJsonResponseException: 503 Service Unavailable; Backend Error; 	at com.google.api.client.googleapis.json.GoogleJsonResponseException.from(GoogleJsonResponseException.java:146); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:113); 	at com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest.newExceptionOnError(AbstractGoogleJsonClientRequest.java:40); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1.interceptResponse(AbstractGoogleClientRequest.java:321); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1065); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:419); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeUnparsed(AbstractGoogleClientRequest.java:352); 	at com.google.api.client.googleapis.services.AbstractGoogleClientRequest.executeMedia(AbstractGoogleClientRequest.java:380); 	at com.google.api.services.storage.Storage$Objects$Get.executeMedia(Storage.java:4784); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:478); 	... 74 more; ```. Offending task:. ```; task no_address {; Boolean no_address_requested. command {; echo foo; }; output {; String out = read_string(stdout()); }; runtime {; docker: ""python:latest""; noAddress: ""${no_address_requested}""; }; }. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:2802,Performance,concurren,concurrent,2802,sAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:397); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionResult(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:326); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handlePollSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:291); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:290); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:2870,Performance,concurren,concurrent,2870,dJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:397); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionResult(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:326); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handlePollSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:291); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:290); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:2938,Performance,concurren,concurrent,2938,AsyncExecutionActor$class.handleExecutionResult(StandardAsyncExecutionActor.scala:397); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionResult(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handlePollSuccess(StandardAsyncExecutionActor.scala:326); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handlePollSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:291); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:290); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:3398,Performance,concurren,concurrent,3398,6); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:291); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$poll$2.apply(StandardAsyncExecutionActor.scala:290); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; Backend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.clo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:3723,Performance,concurren,concurrent,3723,pply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; Backend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorag,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:3797,Performance,concurren,concurrent,3797,concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; Backend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:85); 	at sun.nio.ch.Channel,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:3883,Performance,concurren,concurrent,3883,$anonfun$map$1.apply(Future.scala:237); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; Backend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:85); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65); 	at sun.nio.ch.ChannelInputStream.read(C,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:3961,Performance,concurren,concurrent,3961,able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; Backend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:85); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109); 	at sun.nio.ch.ChannelInputStream.read(ChannelInp,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:5111,Performance,load,loadBytes,5111,ackend Error; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.read(DefaultStorageRpc.java:482); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:127); 	at com.google.cloud.storage.BlobReadChannel$1.call(BlobReadChannel.java:124); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobReadChannel.read(BlobReadChannel.java:124); 	at com.google.cloud.storage.contrib.nio.CloudStorageReadChannel.read(CloudStorageReadChannel.java:85); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:65); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:109); 	at sun.nio.ch.ChannelInputStream.read(ChannelInputStream.java:103); 	at java.nio.file.Files.read(Files.java:3105); 	at java.nio.file.Files.readAllBytes(Files.java:3158); 	at better.files.File.loadBytes(File.scala:163); 	at better.files.File.byteArray(File.scala:166); 	at better.files.File.contentAsString(File.scala:206); 	at cromwell.backend.wdl.ReadLikeFunctions$class.readFile(ReadLikeFunctions.scala:31); 	at cromwell.backend.impl.jes.JesExpressionFunctions.readFile(JesExpressionFunctions.scala:16); 	at wdl4s.expression.WdlStandardLibraryFunctions$class.fileContentsToString(WdlStandardLibraryFunctions.scala:14); 	at cromwell.backend.impl.jes.JesExpressionFunctions.fileContentsToString(JesExpressionFunctions.scala:16); 	at cromwell.backend.wdl.ReadLikeFunctions$$anonfun$readContentsFromSingleFileParameter$1.apply(ReadLikeFunctions.scala:22); 	at cromwell.backend.wdl.ReadLikeFunctions$$anonfun$readContentsFromSingleFileParameter$1.apply(ReadLikeFunctions.scala:21); 	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237); 	at scala.util.Try$.apply(Try.scala:192); 	at scala.util.Success.map(Try.scala:237); 	at cromwell.backend.wdl.ReadLikeFunctions$class.readContentsFromSingleFileP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1923:656,Safety,recover,recoverWith,656,```; [ERROR] [01/27/2017 13:33:05.570] [cromwell-system-akka.dispatchers.engine-dispatcher-30] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 0fcd7ba4-f1e0-4e16-9b67-c83ad2378f44 failed (during ExecutingWorkflowState): Could not evaluate no_address.out = read_string(stdout()); java.lang.RuntimeException: Could not evaluate no_address.out = read_string(stdout()); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:182); 	at wdl4s.Task$$anonfun$11$$anonfun$4.applyOrElse(Task.scala:181); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:181); 	at wdl4s.Task$$anonfun$11.apply(Task.scala:174); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157); 	at scala.collection.AbstractTraversable.foldLeft(Traversable.scala:104); 	at wdl4s.Task.evaluateOutputs(Task.scala:174); 	at cromwell.backend.wdl.OutputEvaluator$.evaluateOutputs(OutputEvaluator.scala:15); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.postProcess(JesAsyncBackendJobExecutionActor.scala:366); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:391); 	at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionSuccess(JesAsyncBackendJobExecutionActor.scala:46); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.handleExecutionResult(StandardAs,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1923
https://github.com/broadinstitute/cromwell/issues/1924:155,Availability,ERROR,ERROR,155,And another possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:957,Availability,recover,recoverWith,957,And another possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1033,Availability,recover,recoverWith,1033,e we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concu,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2265,Availability,error,error,2265,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2277,Availability,error,errors,2277,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2360,Availability,Error,Error,2360,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2409,Availability,Error,Error,2409,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:4022,Availability,error,error,4022,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:4034,Availability,error,errors,4034,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:4117,Availability,Error,Error,4117,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:4166,Availability,Error,Error,4166,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2341,Integrability,message,message,2341,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2390,Integrability,message,message,2390,"or.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:4098,Integrability,message,message,4098,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:4147,Integrability,message,message,4147,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:930,Performance,concurren,concurrent,930,And another possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1006,Performance,concurren,concurrent,1006, possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:13,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1082,Performance,concurren,concurrent,1082,ication default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1542,Performance,concurren,concurrent,1542,".JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.De",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1867,Performance,concurren,concurrent,1867,"1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryH",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1941,Performance,concurren,concurrent,1941,"e$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2027,Performance,concurren,concurrent,2027,"$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChann",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2105,Performance,concurren,concurrent,2105,"able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChanne",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:2692,Performance,concurren,concurrent,2692,"a.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: com.google.cloud.storage.StorageException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:190); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:536); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:3757,Performance,concurren,concurrent,3757,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:3848,Performance,concurren,concurrent,3848,"bWriteChannel$1.run(BlobWriteChannel.java:49); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:46); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:149); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at cromwell.backend.impl.jes.io.package$PathEnhanced$.writeAsJson$extension(package.scala:13); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$5.apply(JesInitializationActor.scala:80); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: com.google.api.client.http.HttpResponseException: 503 Service Unavailable; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:1070); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:518); 	... 20 more. [INFO] [01/27/2017 14:39:36.101] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor WorkflowActor-732474fd-88b0-4a5e-ad19-5ee5cd71d141 is in a terminal state: WorkflowFailedState; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:957,Safety,recover,recoverWith,957,And another possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:1033,Safety,recover,recoverWith,1033,e we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concu,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:438,Security,authenticat,authentication,438,And another possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1924:497,Security,authenticat,authentication,497,And another possible bug: why are we trying to upload an auth file when running in application default auth mode for both genomics and filesystems?. ```; [ERROR] [01/27/2017 14:39:36.100] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/cromwell-service/WorkflowManagerActor] WorkflowManagerActor Workflow 732474fd-88b0-4a5e-ad19-5ee5cd71d141 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:81); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializationActor$$writeAuthenticationFile$1$$anonfun$apply$1.applyOrElse(JesInitializationActor.scala:80); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinP,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1924
https://github.com/broadinstitute/cromwell/issues/1925:474,Availability,failure,failure,474,"Do the following:. - [x] Rename the `Preempted` `ExecutionStatus` to be `RetryableFailure`.; - [x] Change the `WorkflowExecutionActor` to blindly honor `JobFailedRetryableResponse`s. Currently it is deciding whether or not to retry when it receives these. Now it will assume the determination was already made.; - [x] Remove the `system.max-retries` config option; - [x] Change the JABJEA to track both preemptions and non-preemption retries via the KV store; - [x] For any failure from JES determine if the job is to be retried, either using the preemption count supplied by the user or a max non-preemption retry count of 2. If the job is retryable ensure a `JobFailedRetryableResponse` finds its way back to the WEA; - [x] Modify `BackendStatus` such that we can see that the job was either a) preempted or b) retried due to ReasonX",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1925
https://github.com/broadinstitute/cromwell/issues/1925:350,Modifiability,config,config,350,"Do the following:. - [x] Rename the `Preempted` `ExecutionStatus` to be `RetryableFailure`.; - [x] Change the `WorkflowExecutionActor` to blindly honor `JobFailedRetryableResponse`s. Currently it is deciding whether or not to retry when it receives these. Now it will assume the determination was already made.; - [x] Remove the `system.max-retries` config option; - [x] Change the JABJEA to track both preemptions and non-preemption retries via the KV store; - [x] For any failure from JES determine if the job is to be retried, either using the preemption count supplied by the user or a max non-preemption retry count of 2. If the job is retryable ensure a `JobFailedRetryableResponse` finds its way back to the WEA; - [x] Modify `BackendStatus` such that we can see that the job was either a) preempted or b) retried due to ReasonX",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1925
https://github.com/broadinstitute/cromwell/issues/1926:84,Availability,error,errors,84,"Once #1909 and #1925 are complete, populate the set of retryable JES non-preemption errors with the codes from #1909.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1926
https://github.com/broadinstitute/cromwell/pull/1927:193,Deployability,Update,Updated,193,"Only store null instead of """" for a clob.; Only store null instead of Array.empty[Byte] for a blob.; All lob columns are now nullable.; Added test to ensure that all lob columns are nullable.; Updated SqlConverters for converting to/from Option and empty lobs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1927
https://github.com/broadinstitute/cromwell/pull/1927:142,Testability,test,test,142,"Only store null instead of """" for a clob.; Only store null instead of Array.empty[Byte] for a blob.; All lob columns are now nullable.; Added test to ensure that all lob columns are nullable.; Updated SqlConverters for converting to/from Option and empty lobs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1927
https://github.com/broadinstitute/cromwell/issues/1928:338,Energy Efficiency,Monitor,Monitor,338,"I’ve got a workflow in the 900 genomes run that appears to be an example of Cromwell losing a job. One of the haplotype scatters, which should take a day, instead has been going for 4 days. JES thinks it’s done. [This is the workflow link in FireCloud](https://portal.firecloud.org/#workspaces/engle-macarthur-ccdd%3Agenomes-reprocessing/Monitor/d2237443-0fd7-45fa-99c7-ae25ae5e3c68). The workflow id is 9d16d8cf-7470-422d-8329-0a55a89f6411. The operation id is ELnDoOadKxj3jPfVxujN5Vwgy_-Z2IQbKg9wcm9kdWN0aW9uUXVldWU. Attached are the cromwell logs and the operations id info. [operation-metadata.txt](https://github.com/broadinstitute/cromwell/files/739430/operation-metadata.txt); [cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt](https://github.com/broadinstitute/cromwell/files/739431/cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1928
https://github.com/broadinstitute/cromwell/issues/1928:545,Testability,log,logs,545,"I’ve got a workflow in the 900 genomes run that appears to be an example of Cromwell losing a job. One of the haplotype scatters, which should take a day, instead has been going for 4 days. JES thinks it’s done. [This is the workflow link in FireCloud](https://portal.firecloud.org/#workspaces/engle-macarthur-ccdd%3Agenomes-reprocessing/Monitor/d2237443-0fd7-45fa-99c7-ae25ae5e3c68). The workflow id is 9d16d8cf-7470-422d-8329-0a55a89f6411. The operation id is ELnDoOadKxj3jPfVxujN5Vwgy_-Z2IQbKg9wcm9kdWN0aW9uUXVldWU. Attached are the cromwell logs and the operations id info. [operation-metadata.txt](https://github.com/broadinstitute/cromwell/files/739430/operation-metadata.txt); [cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt](https://github.com/broadinstitute/cromwell/files/739431/cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1928
https://github.com/broadinstitute/cromwell/issues/1928:694,Testability,log,logs-,694,"I’ve got a workflow in the 900 genomes run that appears to be an example of Cromwell losing a job. One of the haplotype scatters, which should take a day, instead has been going for 4 days. JES thinks it’s done. [This is the workflow link in FireCloud](https://portal.firecloud.org/#workspaces/engle-macarthur-ccdd%3Agenomes-reprocessing/Monitor/d2237443-0fd7-45fa-99c7-ae25ae5e3c68). The workflow id is 9d16d8cf-7470-422d-8329-0a55a89f6411. The operation id is ELnDoOadKxj3jPfVxujN5Vwgy_-Z2IQbKg9wcm9kdWN0aW9uUXVldWU. Attached are the cromwell logs and the operations id info. [operation-metadata.txt](https://github.com/broadinstitute/cromwell/files/739430/operation-metadata.txt); [cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt](https://github.com/broadinstitute/cromwell/files/739431/cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1928
https://github.com/broadinstitute/cromwell/issues/1928:806,Testability,log,logs-,806,"I’ve got a workflow in the 900 genomes run that appears to be an example of Cromwell losing a job. One of the haplotype scatters, which should take a day, instead has been going for 4 days. JES thinks it’s done. [This is the workflow link in FireCloud](https://portal.firecloud.org/#workspaces/engle-macarthur-ccdd%3Agenomes-reprocessing/Monitor/d2237443-0fd7-45fa-99c7-ae25ae5e3c68). The workflow id is 9d16d8cf-7470-422d-8329-0a55a89f6411. The operation id is ELnDoOadKxj3jPfVxujN5Vwgy_-Z2IQbKg9wcm9kdWN0aW9uUXVldWU. Attached are the cromwell logs and the operations id info. [operation-metadata.txt](https://github.com/broadinstitute/cromwell/files/739430/operation-metadata.txt); [cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt](https://github.com/broadinstitute/cromwell/files/739431/cromwell-logs-9d16d8cf-7470-422d-8329-0a55a89f6411.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1928
https://github.com/broadinstitute/cromwell/issues/1929:110,Availability,error,errors-when-using-call-caching,110,An issue to address the user report: http://gatkforums.broadinstitute.org/gatk/discussion/8873/file-not-found-errors-when-using-call-caching/,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1929
https://github.com/broadinstitute/cromwell/issues/1932:235,Availability,failure,failures,235,"The SingleWorkflow mode, via `java -jar cromwell.jar run …`, does not always wait for metadata to be completely processed. Thus when the actor exits, it may write out incomplete metadata json. This mainly seen during intermittent test failures that are looking for expected metadata from the output file:. ```scala; [info] SingleWorkflowRunnerActorWithMetadataSpec:; [info] A SingleWorkflowRunnerActor should ; [info] - successfully run a workflow outputting metadata *** FAILED *** (6 seconds, 143 milliseconds); [info] java.util.NoSuchElementException: None.get; [info] at scala.None$.get(Option.scala:347); [info] at scala.None$.get(Option.scala:345); [info] at cromwell.engine.workflow.SingleWorkflowRunnerActorSpec$OptionJsValueEnhancer$.toStringValue$extension(SingleWorkflowRunnerActorSpec.scala:44); [info] at cromwell.engine.workflow.SingleWorkflowRunnerActorSpec$OptionJsValueEnhancer$.toOffsetDateTime$extension(SingleWorkflowRunnerActorSpec.scala:43); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1932
https://github.com/broadinstitute/cromwell/issues/1932:230,Testability,test,test,230,"The SingleWorkflow mode, via `java -jar cromwell.jar run …`, does not always wait for metadata to be completely processed. Thus when the actor exits, it may write out incomplete metadata json. This mainly seen during intermittent test failures that are looking for expected metadata from the output file:. ```scala; [info] SingleWorkflowRunnerActorWithMetadataSpec:; [info] A SingleWorkflowRunnerActor should ; [info] - successfully run a workflow outputting metadata *** FAILED *** (6 seconds, 143 milliseconds); [info] java.util.NoSuchElementException: None.get; [info] at scala.None$.get(Option.scala:347); [info] at scala.None$.get(Option.scala:345); [info] at cromwell.engine.workflow.SingleWorkflowRunnerActorSpec$OptionJsValueEnhancer$.toStringValue$extension(SingleWorkflowRunnerActorSpec.scala:44); [info] at cromwell.engine.workflow.SingleWorkflowRunnerActorSpec$OptionJsValueEnhancer$.toOffsetDateTime$extension(SingleWorkflowRunnerActorSpec.scala:43); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1932
https://github.com/broadinstitute/cromwell/issues/1933:15,Availability,error,error,15,"If you have an error in your json file, say a trailing comma on the last line, the error message is:. `Unexpected character '}' at input index 1681 (line 23, position 1), expected '\""':\n}\n^\n`. However it doesn't tell you that the problem is in the json and not the wdl. Changing line 23 in the wdl obviously won't help, so it would be nice to know which line 23 it's referring to.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1933
https://github.com/broadinstitute/cromwell/issues/1933:83,Availability,error,error,83,"If you have an error in your json file, say a trailing comma on the last line, the error message is:. `Unexpected character '}' at input index 1681 (line 23, position 1), expected '\""':\n}\n^\n`. However it doesn't tell you that the problem is in the json and not the wdl. Changing line 23 in the wdl obviously won't help, so it would be nice to know which line 23 it's referring to.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1933
https://github.com/broadinstitute/cromwell/issues/1933:89,Integrability,message,message,89,"If you have an error in your json file, say a trailing comma on the last line, the error message is:. `Unexpected character '}' at input index 1681 (line 23, position 1), expected '\""':\n}\n^\n`. However it doesn't tell you that the problem is in the json and not the wdl. Changing line 23 in the wdl obviously won't help, so it would be nice to know which line 23 it's referring to.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1933
https://github.com/broadinstitute/cromwell/issues/1934:37,Testability,test,test,37,Fix Cromwell to pass the new centaur test:; - [ ] circular_dependencies,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1934
https://github.com/broadinstitute/cromwell/issues/1935:416,Performance,cache,cache,416,"- 0.24; - SGE backend; - single workflow mode; - main workflow contains sub-workflow. The task ``ExtractReadInfo`` creates an output directory ``out/``. However, on my latest workflow run, I only see that some output directories for the workflow actually contain that directory. All jobs completed successfully, as far as I can tell. Note (in the below examples) how the ``out`` directory is not present in the call-cache hit. This makes getting output of tasks difficult to automate. I think this shard was a call caching miss:; ```; lichtens@gsa5 /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/b449b259-4168-4002-b916-f85d152fea52/call-dl_ob_training$ ll shard-10/dl_ob_training/591dfd28-af3a-43ee-8429-d7053f90da93/call-ExtractReadInfo/execution/; total 1181; drwxrwsr-x 2 wga 14016 Jan 30 15:57 glob-20ebd8c9cf25515da3e6ce1213dba1ad/; -rw-rw-r-- 1 wga 7726 Jan 30 15:57 glob-20ebd8c9cf25515da3e6ce1213dba1ad.list; drwxrwsr-x 2 wga 14016 Jan 30 15:57 out/; -rw-rw-r-- 1 wga 2 Jan 30 15:57 rc; -rw-rw-r-- 1 wga 4819 Jan 30 15:56 script; -rw-rw-r-- 1 wga 1197 Jan 30 15:56 script.submit; -rw-r--r-- 1 wga 2740 Jan 30 15:57 stderr; -rw-rw-r-- 1 wga 0 Jan 30 15:56 stderr.submit; -rw-r--r-- 1 wga 274755 Jan 30 15:57 stdout; -rw-rw-r-- 1 wga 8 Jan 30 15:56 stdout.submit. ```. Whereas this one was a call cache hit:. ```; lichtens@gsa5 /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/b449b259-4168-4002-b916-f85d152fea52/call-dl_ob_training$ ll shard-9/dl_ob_training/c5a2e7e2-3f45-4ea0-8558-84a1fa12120e/call-ExtractReadInfo/execution/; total 91; drwxrwsr-x 2 wga 8767 Jan 30 15:56 glob-20ebd8c9cf25515da3e6ce1213dba1ad/; lrwxrwxrwx 1 wga 244 Jan 30 15:56 rc -> /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/2ce2eb73-4930-4b46-b93b-c30f3281e55c/call-dl_ob_training/shard-9/dl_ob_training/7150d86a-900f-4628-9b3d-476c483fcbd8/call-ExtractReadInfo/execution/rc; ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1935
https://github.com/broadinstitute/cromwell/issues/1935:1351,Performance,cache,cache,1351, the below examples) how the ``out`` directory is not present in the call-cache hit. This makes getting output of tasks difficult to automate. I think this shard was a call caching miss:; ```; lichtens@gsa5 /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/b449b259-4168-4002-b916-f85d152fea52/call-dl_ob_training$ ll shard-10/dl_ob_training/591dfd28-af3a-43ee-8429-d7053f90da93/call-ExtractReadInfo/execution/; total 1181; drwxrwsr-x 2 wga 14016 Jan 30 15:57 glob-20ebd8c9cf25515da3e6ce1213dba1ad/; -rw-rw-r-- 1 wga 7726 Jan 30 15:57 glob-20ebd8c9cf25515da3e6ce1213dba1ad.list; drwxrwsr-x 2 wga 14016 Jan 30 15:57 out/; -rw-rw-r-- 1 wga 2 Jan 30 15:57 rc; -rw-rw-r-- 1 wga 4819 Jan 30 15:56 script; -rw-rw-r-- 1 wga 1197 Jan 30 15:56 script.submit; -rw-r--r-- 1 wga 2740 Jan 30 15:57 stderr; -rw-rw-r-- 1 wga 0 Jan 30 15:56 stderr.submit; -rw-r--r-- 1 wga 274755 Jan 30 15:57 stdout; -rw-rw-r-- 1 wga 8 Jan 30 15:56 stdout.submit. ```. Whereas this one was a call cache hit:. ```; lichtens@gsa5 /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/b449b259-4168-4002-b916-f85d152fea52/call-dl_ob_training$ ll shard-9/dl_ob_training/c5a2e7e2-3f45-4ea0-8558-84a1fa12120e/call-ExtractReadInfo/execution/; total 91; drwxrwsr-x 2 wga 8767 Jan 30 15:56 glob-20ebd8c9cf25515da3e6ce1213dba1ad/; lrwxrwxrwx 1 wga 244 Jan 30 15:56 rc -> /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/2ce2eb73-4930-4b46-b93b-c30f3281e55c/call-dl_ob_training/shard-9/dl_ob_training/7150d86a-900f-4628-9b3d-476c483fcbd8/call-ExtractReadInfo/execution/rc; lrwxrwxrwx 1 wga 248 Jan 30 15:56 script -> /dsde/working/lichtens/test_dl_oxoq/code/test_dl_oxoq/cromwell-executions/full_dl_ob_training/2ce2eb73-4930-4b46-b93b-c30f3281e55c/call-dl_ob_training/shard-9/dl_ob_training/7150d86a-900f-4628-9b3d-476c483fcbd8/call-ExtractReadInfo/execution/script; lrwxrwxrwx 1 wga 248 Jan 30 15:56 stderr -> /ds,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1935
https://github.com/broadinstitute/cromwell/issues/1936:279,Availability,error,error,279,"This is a general form of the workflow that I had this issue with:. ```; workflow wf {; Boolean condition; Array[String] files. scatter (row in files) {; if(condition) {; call A; }; if(!condition) {; call B; }; }; }; ```. The tasks themselves finish, however I get the following error:. `Could not construct array of type WdlMaybeEmptyArrayType(WdlOptionalType(WdlFileType)) with this value: List(WdlSingleFile(/dsde/working/asmirnov/evaluations/CovariateCorrection/scripts/test_wdl/cromwell-executions/cnv_coverage_workflow/c71f4899-6031-4a21-b9b4-1dafd659cd05/call-CalculateTargetCoverage/shard-0/execution/TCGA-02-2483-10A-01D-1494-08.coverage.tsv), WdlSingleFile(/dsde/working/asmirnov/evaluations/CovariateCorrection/scripts/test_wdl/cromwell-executions/cnv_coverage_workflow/c71f4899-6031-4a21-b9b4-1dafd659cd05/call-CalculateTargetCoverage/shard-1/execution/TCGA-02-2485-10A-01D-1494-08.coverage.tsv))`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1936
https://github.com/broadinstitute/cromwell/issues/1937:319,Availability,error,error,319,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:417,Availability,Down,Download,417,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:712,Availability,down,download,712,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:1403,Availability,down,download,1403,"0.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:1521,Availability,down,download,1521,".5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:1677,Availability,error,error,1677,".5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:1772,Availability,Error,Error,1772,".5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:41,Deployability,update,updated,41,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:166,Deployability,upgrade,upgrade,166,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:703,Deployability,release,releases,703,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:1512,Deployability,release,releases,1512,".5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); ...; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1937:94,Testability,test,testing,94,"We were recently told that FireCloud has updated it's Cromwell version to 0.24. For our local testing, we had previously been using Cromwell 0.21, so I was trying to upgrade our build system to use 0.24 as well. However, v0.24 seems to have some regressions with respect to our WDLs. In addition after encountering the error cromwell is unkillable without `kill -9`. To reproduce (Note: I am using OSX 10.10.5) :. 1. Download and unzip [cromwell_24_bug.zip](https://github.com/broadinstitute/cromwell/files/745711/cromwell_24_bug.zip). 2. Get v0.21 of cromwell, to verify that the existing WDL runs; ```bash; $ cd cromwell_24_bug; $ curl -L -o cromwell-21.jar https://github.com/broadinstitute/cromwell/releases/download/0.21/cromwell-0.21.jar; $ java -jar cromwell-21.jar run tool_icomut.wdl inputs.json; ```; The workflow should succeed.; ```; ...; [2017-02-01 13:18:32,36] [info] WorkflowManagerActor WorkflowActor-5e2fd288-37a5-44d2-ab8a-a65b2fb5179d is in a terminal state: WorkflowSucceededState; {; ""outputs"": {; ""tool_icomut_workflow.tool_icomut.iCoMut_table"": ""/Users/timdef/tmp/cromwell_24_bug/cromwell-executions/tool_icomut_workflow/5e2fd288-37a5-44d2-ab8a-a65b2fb5179d/call-tool_icomut/execution/TCGA-ACC.coMut_table.txt""; },; ""id"": ""5e2fd288-37a5-44d2-ab8a-a65b2fb5179d""; }; [2017-02-01 13:18:34,64] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; ```. 3. Now download v0.24, and retry:; ```bash; $ curl -L -o cromwell-24.jar https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar; $ java -jar cromwell-24.jar run tool_icomut.wdl inputs.json; ```. The workflow now fails:; ```; ...; [2017-02-01 13:08:17,13] [error] BackgroundConfigAsyncJobExecutionActor [c290b1fftool_icomut_workflow.tool_icomut:NA:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlFileType,None); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); 	at wdl4s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1937
https://github.com/broadinstitute/cromwell/issues/1938:9195,Performance,concurren,concurrent,9195,flowExecutionActor.scala:347); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:326); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:304); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:97); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:82); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:33); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1938
https://github.com/broadinstitute/cromwell/issues/1938:9269,Performance,concurren,concurrent,9269,flowExecutionActor.scala:347); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:326); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:304); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:97); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:82); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:33); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1938
https://github.com/broadinstitute/cromwell/issues/1938:9355,Performance,concurren,concurrent,9355,flowExecutionActor.scala:347); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:326); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:304); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:97); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:82); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:33); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1938
https://github.com/broadinstitute/cromwell/issues/1938:9433,Performance,concurren,concurrent,9433,flowExecutionActor.scala:347); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:326); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:304); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:97); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:82); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:33); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107). ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1938
https://github.com/broadinstitute/cromwell/issues/1938:8349,Testability,Log,LoggingFSM,8349,rkflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:347); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:326); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:304); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:97); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:82); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:33); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkj,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1938
https://github.com/broadinstitute/cromwell/issues/1938:8429,Testability,Log,LoggingFSM,8429,orkflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:347); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:326); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:304); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:97); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:82); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:33); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:33); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concu,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1938
https://github.com/broadinstitute/cromwell/issues/1939:376,Availability,error,error,376,"- [ ] Usage message; - Update the usage message to better describe how to use the commands. - [ ] Parameters; - Switch from positional parameters to parameter arguments so that users explicitly include inputs and other parameters (workflow options, metadata, imports, lables, etc).; - Make all parameters optional, so if a user doesn't include the parameter argument, then no error.; - Get rid of functionality that Cromwell looks for files with specific extensions, like `.imputs`, `.options`, etc. To Be Continued.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1939
https://github.com/broadinstitute/cromwell/issues/1939:23,Deployability,Update,Update,23,"- [ ] Usage message; - Update the usage message to better describe how to use the commands. - [ ] Parameters; - Switch from positional parameters to parameter arguments so that users explicitly include inputs and other parameters (workflow options, metadata, imports, lables, etc).; - Make all parameters optional, so if a user doesn't include the parameter argument, then no error.; - Get rid of functionality that Cromwell looks for files with specific extensions, like `.imputs`, `.options`, etc. To Be Continued.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1939
https://github.com/broadinstitute/cromwell/issues/1939:12,Integrability,message,message,12,"- [ ] Usage message; - Update the usage message to better describe how to use the commands. - [ ] Parameters; - Switch from positional parameters to parameter arguments so that users explicitly include inputs and other parameters (workflow options, metadata, imports, lables, etc).; - Make all parameters optional, so if a user doesn't include the parameter argument, then no error.; - Get rid of functionality that Cromwell looks for files with specific extensions, like `.imputs`, `.options`, etc. To Be Continued.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1939
https://github.com/broadinstitute/cromwell/issues/1939:40,Integrability,message,message,40,"- [ ] Usage message; - Update the usage message to better describe how to use the commands. - [ ] Parameters; - Switch from positional parameters to parameter arguments so that users explicitly include inputs and other parameters (workflow options, metadata, imports, lables, etc).; - Make all parameters optional, so if a user doesn't include the parameter argument, then no error.; - Get rid of functionality that Cromwell looks for files with specific extensions, like `.imputs`, `.options`, etc. To Be Continued.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1939
https://github.com/broadinstitute/cromwell/issues/1940:22,Testability,test,test,22,Make-work the centaur test: https://github.com/broadinstitute/centaur/pull/148,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1940
https://github.com/broadinstitute/cromwell/issues/1943:1184,Availability,error,error,1184," 24 was b71f06f. This works on 19 (yes we're still on 19 =/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.colle",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:1283,Availability,ERROR,ERROR,1283,"=/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at sca",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:1443,Availability,Error,Error,1443,"_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantia",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:2611,Availability,failure,failures,2611," {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); ```; in metadata:; ```; failures: [; {; causedBy: {; message: ""Could not find declaration for WdlOptionalValue(WdlIntegerType,None)""; },; message: ""java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None)""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:2640,Integrability,message,message,2640," {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); ```; in metadata:; ```; failures: [; {; causedBy: {; message: ""Could not find declaration for WdlOptionalValue(WdlIntegerType,None)""; },; message: ""java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None)""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:2725,Integrability,message,message,2725," {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.collection.AbstractIterable.foreach(Iterable.scala:54); at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); at scala.collection.AbstractTraversable.map(Traversable.scala:104); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); at scala.util.Try$.apply(Try.scala:192); ```; in metadata:; ```; failures: [; {; causedBy: {; message: ""Could not find declaration for WdlOptionalValue(WdlIntegerType,None)""; },; message: ""java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None)""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:196,Security,Hash,Hash,196,"We have a task that takes in an Optional int but when we call that task with no value for that int the workflow falls over. It might not work for other types of Optionals either but I'm not sure. Hash for this cromwell 24 was b71f06f. This works on 19 (yes we're still on 19 =/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:313,Security,Validat,ValidateSamFile,313,"We have a task that takes in an Optional int but when we call that task with no value for that int the workflow falls over. It might not work for other types of Optionals either but I'm not sure. Hash for this cromwell 24 was b71f06f. This works on 19 (yes we're still on 19 =/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:807,Security,Validat,ValidateSamFile,807,"We have a task that takes in an Optional int but when we call that task with no value for that int the workflow falls over. It might not work for other types of Optionals either but I'm not sure. Hash for this cromwell 24 was b71f06f. This works on 19 (yes we're still on 19 =/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:826,Security,Validat,ValidateReadGroupSamFile,826,"We have a task that takes in an Optional int but when we call that task with no value for that int the workflow falls over. It might not work for other types of Optionals either but I'm not sure. Hash for this cromwell 24 was b71f06f. This works on 19 (yes we're still on 19 =/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1943:1200,Testability,log,logs,1200," 24 was b71f06f. This works on 19 (yes we're still on 19 =/). Task (stuff removed):. ```; task ValidateSamFile {; File input_bam; File? input_bam_index; String report_filename; File? ref_dict; File? ref_fasta; File? ref_fasta_index; Int? max_output; Array[String]? ignore; Int disk_size; Int preemptible_tries. command {; java -Xmx4000m -jar stuff.jar blah; }; runtime {; memory: ""7 GB""; disks: ""local-disk "" + disk_size + "" HDD""; preemptible: preemptible_tries; }; output {; File report = ""${report_filename}""; }; }; ```. Call (note there is no value supplied for max_output):. ```; call ValidateSamFile as ValidateReadGroupSamFile {; input:; ref_fasta = ref_fasta,; ref_fasta_index = ref_fasta_index,; ref_dict = ref_dict,; input_bam = SortAndFixReadGroupBam.output_bam,; report_filename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".validation_report"",; disk_size = flowcell_medium_disk,; preemptible_tries = preemptible_tries; }; ```. error in server logs:; ```; 2017-01-23 15:09:09 [cromwell-system-akka.actor.default-dispatcher-89] ERROR c.b.i.j.JesAsyncBackendJobExecutionActor - JesAsyncBackendJobExecutionActor [UUID(8f35e32d)PairedEndSingleSampleWorkflow.Vali; dateReadGroupSamFile:1:1]: Error attempting to Execute; java.lang.UnsupportedOperationException: Could not find declaration for WdlOptionalValue(WdlIntegerType,None); at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:48); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); at scala.collection.Iterator$class.foreach(Iterator.scala:893); at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); at scala.colle",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1943
https://github.com/broadinstitute/cromwell/issues/1944:240,Availability,echo,echo,240,"The following WDL has issues on JES, AWS, and Local backends. The expectation would be that all occurrences of `file` and `maybe_file` would interpolate as relativized file paths. ```; task files {; File file ; File? maybe_file. command {; echo file: ${file} maybe_file: ${maybe_file} ${""file with concatenation: "" + file} ${""maybe_file with concatenation: "" + maybe_file}; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; File file. call files { input: file = file, maybe_file = file }; }; ```. On JES with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c, the ""maybe_file with concatenation"" leaves a residual `gs://` path; all other interpolations are correctly relativized. On AWS with Cromwell 9341a4dac6145233f2a33b092a8fc443c18744ea, both concatenations leave residual `s3://` paths. On Local with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c and an input file under my home directory, this throws an exception with the following trace:. ```; 2017-02-02 11:55:36,701 cromwell-system-akka.dispatchers.backend-dispatcher-44 ERROR - BackgroundConfigAsyncJobExecutionActor [UUID(5fdb357a)w.files:NA:1]: Error attempting to Execute; java.lang.IllegalArgumentException: null; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:1045,Availability,ERROR,ERROR,1045,"expectation would be that all occurrences of `file` and `maybe_file` would interpolate as relativized file paths. ```; task files {; File file ; File? maybe_file. command {; echo file: ${file} maybe_file: ${maybe_file} ${""file with concatenation: "" + file} ${""maybe_file with concatenation: "" + maybe_file}; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; File file. call files { input: file = file, maybe_file = file }; }; ```. On JES with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c, the ""maybe_file with concatenation"" leaves a residual `gs://` path; all other interpolations are correctly relativized. On AWS with Cromwell 9341a4dac6145233f2a33b092a8fc443c18744ea, both concatenations leave residual `s3://` paths. On Local with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c and an input file under my home directory, this throws an exception with the following trace:. ```; 2017-02-02 11:55:36,701 cromwell-system-akka.dispatchers.backend-dispatcher-44 ERROR - BackgroundConfigAsyncJobExecutionActor [UUID(5fdb357a)w.files:NA:1]: Error attempting to Execute; java.lang.IllegalArgumentException: null; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instant",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:1122,Availability,Error,Error,1122,"e` would interpolate as relativized file paths. ```; task files {; File file ; File? maybe_file. command {; echo file: ${file} maybe_file: ${maybe_file} ${""file with concatenation: "" + file} ${""maybe_file with concatenation: "" + maybe_file}; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; File file. call files { input: file = file, maybe_file = file }; }; ```. On JES with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c, the ""maybe_file with concatenation"" leaves a residual `gs://` path; all other interpolations are correctly relativized. On AWS with Cromwell 9341a4dac6145233f2a33b092a8fc443c18744ea, both concatenations leave residual `s3://` paths. On Local with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c and an input file under my home directory, this throws an exception with the following trace:. ```; 2017-02-02 11:55:36,701 cromwell-system-akka.dispatchers.backend-dispatcher-44 ERROR - BackgroundConfigAsyncJobExecutionActor [UUID(5fdb357a)w.files:NA:1]: Error attempting to Execute; java.lang.IllegalArgumentException: null; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Tas",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:4638,Availability,robust,robustExecuteOrRecover,4638,ackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceiv,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:4830,Availability,robust,robustExecuteOrRecover,4830,mAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.process,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:5191,Availability,robust,robustExecuteOrRecover,5191,syncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6328,Availability,ERROR,ERROR,6328,"a:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6814,Availability,recover,recoverWith,6814,"cala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.fork",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6890,Availability,recover,recoverWith,6890,"ch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concu",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:11531,Availability,robust,robustExecuteOrRecover,11531,ackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceiv,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:11723,Availability,robust,robustExecuteOrRecover,11723,mAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.process,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:12084,Availability,robust,robustExecuteOrRecover,12084,tor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	... 4 more; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:1544,Modifiability,config,config,1544,"784a16c613c62b8bec1c, the ""maybe_file with concatenation"" leaves a residual `gs://` path; all other interpolations are correctly relativized. On AWS with Cromwell 9341a4dac6145233f2a33b092a8fc443c18744ea, both concatenations leave residual `s3://` paths. On Local with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c and an input file under my home directory, this throws an exception with the following trace:. ```; 2017-02-02 11:55:36,701 cromwell-system-akka.dispatchers.backend-dispatcher-44 ERROR - BackgroundConfigAsyncJobExecutionActor [UUID(5fdb357a)w.files:NA:1]: Error attempting to Execute; java.lang.IllegalArgumentException: null; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$clas",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:1601,Modifiability,Config,ConfigAsyncJobExecutionActor,1601,"s a residual `gs://` path; all other interpolations are correctly relativized. On AWS with Cromwell 9341a4dac6145233f2a33b092a8fc443c18744ea, both concatenations leave residual `s3://` paths. On Local with Cromwell 7c52320b3844fb83959a784a16c613c62b8bec1c and an input file under my home directory, this throws an exception with the following trace:. ```; 2017-02-02 11:55:36,701 cromwell-system-akka.dispatchers.backend-dispatcher-44 ERROR - BackgroundConfigAsyncJobExecutionActor [UUID(5fdb357a)w.files:NA:1]: Error attempting to Execute; java.lang.IllegalArgumentException: null; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.Abstrac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:3448,Modifiability,config,config,3448,.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:3525,Modifiability,Config,ConfigAsyncJobExecutionActor,3525,ection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cr,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:3596,Modifiability,config,config,3596,ion.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:3662,Modifiability,Config,ConfigAsyncJobExecutionActor,3662,on.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.appl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:3862,Modifiability,config,config,3862,dl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(Async,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:3916,Modifiability,Config,ConfigAsyncJobExecutionActor,3916,; 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.R,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:4414,Modifiability,config,config,4414, 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:4477,Modifiability,Config,ConfigAsyncJobExecutionActor,4477,utionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:5546,Modifiability,config,config,5546,"cBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentExceptio",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:5606,Modifiability,Config,ConfigAsyncJobExecutionActor,5606,"ackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:8437,Modifiability,config,config,8437,(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$clas,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:8494,Modifiability,Config,ConfigAsyncJobExecutionActor,8494,ckableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1$$anonfun$apply$2.apply(Task.scala:108); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.Abstrac,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:10341,Modifiability,config,config,10341,.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:10418,Modifiability,Config,ConfigAsyncJobExecutionActor,10418,ection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cr,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:10489,Modifiability,config,config,10489,ion.AbstractIterable.foreach(Iterable.scala:54); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:10555,Modifiability,Config,ConfigAsyncJobExecutionActor,10555,on.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.AbstractTraversable.map(Traversable.scala:104); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at wdl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.appl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:10755,Modifiability,config,config,10755,dl4s.Task$$anonfun$instantiateCommand$1.apply(Task.scala:108); 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(Async,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:10809,Modifiability,Config,ConfigAsyncJobExecutionActor,10809,; 	at scala.util.Try$.apply(Try.scala:192); 	at wdl4s.Task.instantiateCommand(Task.scala:108); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:28); 	at cromwell.backend.wdl.Command$$anonfun$instantiate$1.apply(Command.scala:27); 	at scala.util.Success.flatMap(Try.scala:231); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:80); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.R,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:11307,Modifiability,config,config,11307, 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:11370,Modifiability,Config,ConfigAsyncJobExecutionActor,11370,utionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:130); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:12439,Modifiability,config,config,12439,tor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	... 4 more; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:12499,Modifiability,Config,ConfigAsyncJobExecutionActor,12499,tor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:264); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:258); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:258); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	... 4 more; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:5935,Performance,concurren,concurrent,5935,"ry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.co",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6009,Performance,concurren,concurrent,6009,"or$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.Ba",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6095,Performance,concurren,concurrent,6095,".AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6173,Performance,concurren,concurrent,6173,"cutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6787,Performance,concurren,concurrent,6787,"cessMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6863,Performance,concurren,concurrent,6863,"224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:13",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6939,Performance,concurren,concurrent,6939,"t.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:7399,Performance,concurren,concurrent,7399,ailed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:7724,Performance,concurren,concurrent,7724,nonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSyste,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:7798,Performance,concurren,concurrent,7798,e$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFile,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:7884,Performance,concurren,concurrent,7884,$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instan,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:7962,Performance,concurren,concurrent,7962,able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.lang.IllegalArgumentException; 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:346); 	at sun.nio.fs.UnixPath.subpath(UnixPath.java:43); 	at cromwell.backend.io.JobPathsWithDocker.toDockerPath(JobPathsWithDocker.scala:35); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.toUnixPath(SharedFileSystemAsyncJobExecutionActor.scala:107); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.toUnixPath(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLineValueMapper$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at wdl4s.command.ParameterCommandPart.instantiate(ParameterCommandPart.scala:55); 	at wdl4s.Task$$anonfun$instantiateComma,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6814,Safety,recover,recoverWith,6814,"cala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.fork",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1944:6890,Safety,recover,recoverWith,6890,"ch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 2017-02-02 11:55:36,711 cromwell-system-akka.dispatchers.engine-dispatcher-19 ERROR - WorkflowManagerActor Workflow 5fdb357a-3f1d-45b7-a85b-c22caa755c36 failed (during ExecutingWorkflowState): java.lang.IllegalArgumentException; cromwell.core.CromwellFatalException: java.lang.IllegalArgumentException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:18); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concu",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1944
https://github.com/broadinstitute/cromwell/issues/1945:413,Availability,echo,echo,413,"Related to #1944 but with some options problems as well:. The following WDL prints nothing for `string_from_maybe_file` and a non-relativized path for `string_from_file` on JES, AWS, and Local (on Local the path is not relativized under the cromwell executions directory):. ```; task strings {; File file ; File? maybe_file. String string_from_file = file; String? string_from_maybe_file = maybe_file. command {; echo string_from_file: ${string_from_file} string_from_maybe_file: ${string_from_maybe_file}; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow w {; File file. call strings { input: file = file, maybe_file = file }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1945
https://github.com/broadinstitute/cromwell/issues/1946:194,Availability,echo,echo,194,"Trying to read an object that has the same name as a variable causes Cromwell to abort not just the workflow, but the entire Cromwell instance; WDL file:; ```; task TestTask {; 	; 	command {; 		echo ""Hello World!"" > hello_world.txt; 	}. 	output {; 		File exists = ""hello_world.txt""; 	}. 	runtime {; 		docker: will_fail.docker; 		memory: will_fail.memory; 		disks: ""local-disk "" + will_fail.small_disk + "" HDD""; 	}; }. workflow KillsCromwell {; 	String test_string. # This here kills Cromwell; 	Object runtime_params = read_object(runtime_params). 	call TestTask ; }; ```. Inputs File:; ```; {; 	""KillsCromwell.test_string"": ""This is a string"",; 	""KillsCromwell.runtime_params"": {; 		""genomes_cloud_image"": ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282"",; 		""small_disk"": 100,; 		""medium_disk"": 200,; 		""large_disk"": 300,; 		""x_large_disk"": 400,; 		""preemptible_tries"": 3; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1946
https://github.com/broadinstitute/cromwell/issues/1946:53,Modifiability,variab,variable,53,"Trying to read an object that has the same name as a variable causes Cromwell to abort not just the workflow, but the entire Cromwell instance; WDL file:; ```; task TestTask {; 	; 	command {; 		echo ""Hello World!"" > hello_world.txt; 	}. 	output {; 		File exists = ""hello_world.txt""; 	}. 	runtime {; 		docker: will_fail.docker; 		memory: will_fail.memory; 		disks: ""local-disk "" + will_fail.small_disk + "" HDD""; 	}; }. workflow KillsCromwell {; 	String test_string. # This here kills Cromwell; 	Object runtime_params = read_object(runtime_params). 	call TestTask ; }; ```. Inputs File:; ```; {; 	""KillsCromwell.test_string"": ""This is a string"",; 	""KillsCromwell.runtime_params"": {; 		""genomes_cloud_image"": ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282"",; 		""small_disk"": 100,; 		""medium_disk"": 200,; 		""large_disk"": 300,; 		""x_large_disk"": 400,; 		""preemptible_tries"": 3; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1946
https://github.com/broadinstitute/cromwell/issues/1946:81,Safety,abort,abort,81,"Trying to read an object that has the same name as a variable causes Cromwell to abort not just the workflow, but the entire Cromwell instance; WDL file:; ```; task TestTask {; 	; 	command {; 		echo ""Hello World!"" > hello_world.txt; 	}. 	output {; 		File exists = ""hello_world.txt""; 	}. 	runtime {; 		docker: will_fail.docker; 		memory: will_fail.memory; 		disks: ""local-disk "" + will_fail.small_disk + "" HDD""; 	}; }. workflow KillsCromwell {; 	String test_string. # This here kills Cromwell; 	Object runtime_params = read_object(runtime_params). 	call TestTask ; }; ```. Inputs File:; ```; {; 	""KillsCromwell.test_string"": ""This is a string"",; 	""KillsCromwell.runtime_params"": {; 		""genomes_cloud_image"": ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282"",; 		""small_disk"": 100,; 		""medium_disk"": 200,; 		""large_disk"": 300,; 		""x_large_disk"": 400,; 		""preemptible_tries"": 3; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1946
https://github.com/broadinstitute/cromwell/issues/1946:165,Testability,Test,TestTask,165,"Trying to read an object that has the same name as a variable causes Cromwell to abort not just the workflow, but the entire Cromwell instance; WDL file:; ```; task TestTask {; 	; 	command {; 		echo ""Hello World!"" > hello_world.txt; 	}. 	output {; 		File exists = ""hello_world.txt""; 	}. 	runtime {; 		docker: will_fail.docker; 		memory: will_fail.memory; 		disks: ""local-disk "" + will_fail.small_disk + "" HDD""; 	}; }. workflow KillsCromwell {; 	String test_string. # This here kills Cromwell; 	Object runtime_params = read_object(runtime_params). 	call TestTask ; }; ```. Inputs File:; ```; {; 	""KillsCromwell.test_string"": ""This is a string"",; 	""KillsCromwell.runtime_params"": {; 		""genomes_cloud_image"": ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282"",; 		""small_disk"": 100,; 		""medium_disk"": 200,; 		""large_disk"": 300,; 		""x_large_disk"": 400,; 		""preemptible_tries"": 3; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1946
https://github.com/broadinstitute/cromwell/issues/1946:553,Testability,Test,TestTask,553,"Trying to read an object that has the same name as a variable causes Cromwell to abort not just the workflow, but the entire Cromwell instance; WDL file:; ```; task TestTask {; 	; 	command {; 		echo ""Hello World!"" > hello_world.txt; 	}. 	output {; 		File exists = ""hello_world.txt""; 	}. 	runtime {; 		docker: will_fail.docker; 		memory: will_fail.memory; 		disks: ""local-disk "" + will_fail.small_disk + "" HDD""; 	}; }. workflow KillsCromwell {; 	String test_string. # This here kills Cromwell; 	Object runtime_params = read_object(runtime_params). 	call TestTask ; }; ```. Inputs File:; ```; {; 	""KillsCromwell.test_string"": ""This is a string"",; 	""KillsCromwell.runtime_params"": {; 		""genomes_cloud_image"": ""broadinstitute/genomes-in-the-cloud:2.2.4-1469632282"",; 		""small_disk"": 100,; 		""medium_disk"": 200,; 		""large_disk"": 300,; 		""x_large_disk"": 400,; 		""preemptible_tries"": 3; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1946
https://github.com/broadinstitute/cromwell/pull/1947:20,Integrability,message,message,20,Added an extra akka message check just in case we miss the abort message when our scala future eventually runs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1947
https://github.com/broadinstitute/cromwell/pull/1947:65,Integrability,message,message,65,Added an extra akka message check just in case we miss the abort message when our scala future eventually runs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1947
https://github.com/broadinstitute/cromwell/pull/1947:59,Safety,abort,abort,59,Added an extra akka message check just in case we miss the abort message when our scala future eventually runs.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1947
https://github.com/broadinstitute/cromwell/issues/1950:705,Availability,error,error,705,"ual bug or in the category of ""you shouldn't expect that to work""... given:; ```; /mnt/lustre/home/conradL/foo; ├── bar; ├── baz -> bar; └── quux -> /mnt/lustre/home/conradL/foo/bar; ```; The following WDL works fine when the input specifies `/mnt/lustre/home/conradL/foo/quux`, i.e. a symbolic link to absolute path, but not when it specifies `/mnt/lustre/home/conradL/foo/baz`, i.e. a link to a relative path:; ```; workflow symLinkTest {; call referenceTheLink { input:; #f1=""/mnt/lustre/home/conradL/foo/quux""; f1=""/mnt/lustre/home/conradL/foo/baz""; }; }. task referenceTheLink {; File f1; command {}; }; ```. In the second case it dies with:; ```; [2017-02-03 15:49:01,37] [error] WorkflowManagerActor Workflow 6cf6c785-dc48-4409-bbd1-6f1411211f42 failed (during ExecutingWorkflowState): Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1$$anon$1: Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:819,Availability,Failure,Failures,819,"ual bug or in the category of ""you shouldn't expect that to work""... given:; ```; /mnt/lustre/home/conradL/foo; ├── bar; ├── baz -> bar; └── quux -> /mnt/lustre/home/conradL/foo/bar; ```; The following WDL works fine when the input specifies `/mnt/lustre/home/conradL/foo/quux`, i.e. a symbolic link to absolute path, but not when it specifies `/mnt/lustre/home/conradL/foo/baz`, i.e. a link to a relative path:; ```; workflow symLinkTest {; call referenceTheLink { input:; #f1=""/mnt/lustre/home/conradL/foo/quux""; f1=""/mnt/lustre/home/conradL/foo/baz""; }; }. task referenceTheLink {; File f1; command {}; }; ```. In the second case it dies with:; ```; [2017-02-03 15:49:01,37] [error] WorkflowManagerActor Workflow 6cf6c785-dc48-4409-bbd1-6f1411211f42 failed (during ExecutingWorkflowState): Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1$$anon$1: Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:1477,Availability,Failure,Failures,1477,-dc48-4409-bbd1-6f1411211f42 failed (during ExecutingWorkflowState): Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1$$anon$1: Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:200); 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:199); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(Shar,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:2378,Availability,Failure,Failure,2378,tre/home/conradL/bar; cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1$$anon$1: Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:200); 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:199); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedComma,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:2386,Availability,recover,recoverWith,2386,radL/bar; cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1$$anon$1: Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:200); 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:199); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsy,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:4361,Availability,robust,robustExecuteOrRecover,4361,ackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceiv,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:4553,Availability,robust,robustExecuteOrRecover,4553,mAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.process,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:4914,Availability,robust,robustExecuteOrRecover,4914,syncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:3171,Modifiability,config,config,3171, cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:199); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:3248,Modifiability,Config,ConfigAsyncJobExecutionActor,3248,lse(SharedFileSystem.scala:199); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cr,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:3319,Modifiability,config,config,3319,apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:3385,Modifiability,Config,ConfigAsyncJobExecutionActor,3385,overWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.appl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:3585,Modifiability,config,config,3585,uts(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(Async,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:3639,Modifiability,Config,ConfigAsyncJobExecutionActor,3639,well.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.R,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:4137,Modifiability,config,config,4137, 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:4200,Modifiability,Config,ConfigAsyncJobExecutionActor,4200,utionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.execute(SharedFileSystemAsyncJobExecutionActor.scala:136); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.execute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:306); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeOrRecover$2.apply(StandardAsyncExecutionActor.scala:300); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:5269,Modifiability,config,config,5269,ala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:5329,Modifiability,Config,ConfigAsyncJobExecutionActor,5329,ala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:5658,Performance,concurren,concurrent,5658,ala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:5732,Performance,concurren,concurrent,5732,ala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:5818,Performance,concurren,concurrent,5818,ala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:5896,Performance,concurren,concurrent,5896,ala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:300); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.executeOrRecover(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:43); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:47); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:71); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.aroundReceive(ConfigAsyncJobExecutionActor.scala:113); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1950:2386,Safety,recover,recoverWith,2386,radL/bar; cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1$$anon$1: Failures during localization:; Could not localize /mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz:; 	/mnt/lustre/home/conradL/bar doesn't exists; 	File not found /mnt/lustre/home/conradL/cromwell-executions/symLinkTest/6cf6c785-dc48-4409-bbd1-6f1411211f42/call-referenceTheLink/inputs/mnt/lustre/home/conradL/foo/baz -> /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	File not found /mnt/lustre/home/conradL/bar; 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:200); 	at cromwell.backend.sfs.SharedFileSystem$$anonfun$localizeInputs$1.applyOrElse(SharedFileSystem.scala:199); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at scala.util.Failure.recoverWith(Try.scala:203); 	at cromwell.backend.sfs.SharedFileSystem$class.localizeInputs(SharedFileSystem.scala:199); 	at cromwell.backend.sfs.SharedFileSystemJobCachingActorHelper$$anon$1.localizeInputs(SharedFileSystemJobCachingActorHelper.scala:40); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$$anonfun$commandLinePreProcessor$1.apply(SharedFileSystemAsyncJobExecutionActor.scala:127); 	at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:83); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:113); 	at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsy,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1950
https://github.com/broadinstitute/cromwell/issues/1951:135,Testability,test,test,135,"The `Map[String, File?] file_map = { ""always"": make_file.out, ""truth"": make_true.out, ""untruth"": make_false.out }` part of the centaur test `files_in_complex_types` should be enabled when map literals are changed so that they can refer to the output of upstream tasks.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1951
https://github.com/broadinstitute/cromwell/issues/1952:905,Availability,error,error,905,"@davidbenjamin commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87). I have the following toy workflow, which I invoke with `-jar cromwell-25.jar run example.wdl empty_inputs.json`. It reads a tsv that has either one column or two and scatters a task over each row of the tsv. The task prints the second column if it is present. When the input `fake.tsv` has one column, everything is fine. However, when it has two columns eg; ```; 1</TAB>1; 2</TAB>2; ```; it fails with ""Could not construct array of type WdlMaybeEmptyArrayType(WdlOptionalType(WdlIntegerType)) with this value: List(WdlInteger(1), WdlInteger(2))"". (*Side question: why is it trying to make a list out of values in two different scattered rows?*) Using `Int?` in the conditional instead of `Int` does not make a difference. Another bizarre twist: if instead of reading in from a file I hardcode the array, the error persists when each row of the array has the same number of columns but goes away when some rows have two columns and some do not. That is: `Array[Array[Int]] table = [[1,1,1], [2,2]]` works, but `Array[Array[Int]] table = [[1,1], [2,2]]` gives the same error as above. ```; task printInt {; Int? int. command { echo ""${int}"" > out.txt }; output { File out = ""out.txt"" }; }. workflow optional {. Array[Array[Int]] table = read_tsv(""fake.tsv""); scatter (row in table) {. if (length(row) == 2) {; Int int = row[1]; }. call printInt {input: int=int }; }; }; ```. ---. @davidbenjamin commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241). Pinging @LeeTL1220 because this is blocking Mutect. ---. @LeeTL1220 commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277095282). @kcibul This is important. On Feb 2, 2017 4:34 PM, ""David Benjamin"" <notifications@github.com> wrote:. > Pinging @LeeTL1220 <https://github.com/LeeTL1220> because this is; > blocking Mutect.; >; > —; > You are receiving this because yo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1952
https://github.com/broadinstitute/cromwell/issues/1952:1164,Availability,error,error,1164,"llowing toy workflow, which I invoke with `-jar cromwell-25.jar run example.wdl empty_inputs.json`. It reads a tsv that has either one column or two and scatters a task over each row of the tsv. The task prints the second column if it is present. When the input `fake.tsv` has one column, everything is fine. However, when it has two columns eg; ```; 1</TAB>1; 2</TAB>2; ```; it fails with ""Could not construct array of type WdlMaybeEmptyArrayType(WdlOptionalType(WdlIntegerType)) with this value: List(WdlInteger(1), WdlInteger(2))"". (*Side question: why is it trying to make a list out of values in two different scattered rows?*) Using `Int?` in the conditional instead of `Int` does not make a difference. Another bizarre twist: if instead of reading in from a file I hardcode the array, the error persists when each row of the array has the same number of columns but goes away when some rows have two columns and some do not. That is: `Array[Array[Int]] table = [[1,1,1], [2,2]]` works, but `Array[Array[Int]] table = [[1,1], [2,2]]` gives the same error as above. ```; task printInt {; Int? int. command { echo ""${int}"" > out.txt }; output { File out = ""out.txt"" }; }. workflow optional {. Array[Array[Int]] table = read_tsv(""fake.tsv""); scatter (row in table) {. if (length(row) == 2) {; Int int = row[1]; }. call printInt {input: int=int }; }; }; ```. ---. @davidbenjamin commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241). Pinging @LeeTL1220 because this is blocking Mutect. ---. @LeeTL1220 commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277095282). @kcibul This is important. On Feb 2, 2017 4:34 PM, ""David Benjamin"" <notifications@github.com> wrote:. > Pinging @LeeTL1220 <https://github.com/LeeTL1220> because this is; > blocking Mutect.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/wd",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1952
https://github.com/broadinstitute/cromwell/issues/1952:1222,Availability,echo,echo,1222,"at has either one column or two and scatters a task over each row of the tsv. The task prints the second column if it is present. When the input `fake.tsv` has one column, everything is fine. However, when it has two columns eg; ```; 1</TAB>1; 2</TAB>2; ```; it fails with ""Could not construct array of type WdlMaybeEmptyArrayType(WdlOptionalType(WdlIntegerType)) with this value: List(WdlInteger(1), WdlInteger(2))"". (*Side question: why is it trying to make a list out of values in two different scattered rows?*) Using `Int?` in the conditional instead of `Int` does not make a difference. Another bizarre twist: if instead of reading in from a file I hardcode the array, the error persists when each row of the array has the same number of columns but goes away when some rows have two columns and some do not. That is: `Array[Array[Int]] table = [[1,1,1], [2,2]]` works, but `Array[Array[Int]] table = [[1,1], [2,2]]` gives the same error as above. ```; task printInt {; Int? int. command { echo ""${int}"" > out.txt }; output { File out = ""out.txt"" }; }. workflow optional {. Array[Array[Int]] table = read_tsv(""fake.tsv""); scatter (row in table) {. if (length(row) == 2) {; Int int = row[1]; }. call printInt {input: int=int }; }; }; ```. ---. @davidbenjamin commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241). Pinging @LeeTL1220 because this is blocking Mutect. ---. @LeeTL1220 commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277095282). @kcibul This is important. On Feb 2, 2017 4:34 PM, ""David Benjamin"" <notifications@github.com> wrote:. > Pinging @LeeTL1220 <https://github.com/LeeTL1220> because this is; > blocking Mutect.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACDX",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1952
https://github.com/broadinstitute/cromwell/issues/1952:1594,Availability,Ping,Pinging,1594,"ger(1), WdlInteger(2))"". (*Side question: why is it trying to make a list out of values in two different scattered rows?*) Using `Int?` in the conditional instead of `Int` does not make a difference. Another bizarre twist: if instead of reading in from a file I hardcode the array, the error persists when each row of the array has the same number of columns but goes away when some rows have two columns and some do not. That is: `Array[Array[Int]] table = [[1,1,1], [2,2]]` works, but `Array[Array[Int]] table = [[1,1], [2,2]]` gives the same error as above. ```; task printInt {; Int? int. command { echo ""${int}"" > out.txt }; output { File out = ""out.txt"" }; }. workflow optional {. Array[Array[Int]] table = read_tsv(""fake.tsv""); scatter (row in table) {. if (length(row) == 2) {; Int int = row[1]; }. call printInt {input: int=int }; }; }; ```. ---. @davidbenjamin commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241). Pinging @LeeTL1220 because this is blocking Mutect. ---. @LeeTL1220 commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277095282). @kcibul This is important. On Feb 2, 2017 4:34 PM, ""David Benjamin"" <notifications@github.com> wrote:. > Pinging @LeeTL1220 <https://github.com/LeeTL1220> because this is; > blocking Mutect.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACDXkzcToI7XtZ0zlOv7NFtVwJrGZaKdks5rYkvxgaJpZM4L1qD1>; > .; >. ---. @kcibul commented on [Fri Feb 03 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277235590). Hey guys -- just want to understand more how this is blocking mutect (ie there's no other way to do this?). Can you explain?. @cjllanwarne -- if you're on bug rotation, could you try to parse this into the separate p",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1952
https://github.com/broadinstitute/cromwell/issues/1952:1871,Availability,Ping,Pinging,1871,"de the array, the error persists when each row of the array has the same number of columns but goes away when some rows have two columns and some do not. That is: `Array[Array[Int]] table = [[1,1,1], [2,2]]` works, but `Array[Array[Int]] table = [[1,1], [2,2]]` gives the same error as above. ```; task printInt {; Int? int. command { echo ""${int}"" > out.txt }; output { File out = ""out.txt"" }; }. workflow optional {. Array[Array[Int]] table = read_tsv(""fake.tsv""); scatter (row in table) {. if (length(row) == 2) {; Int int = row[1]; }. call printInt {input: int=int }; }; }; ```. ---. @davidbenjamin commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241). Pinging @LeeTL1220 because this is blocking Mutect. ---. @LeeTL1220 commented on [Thu Feb 02 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277095282). @kcibul This is important. On Feb 2, 2017 4:34 PM, ""David Benjamin"" <notifications@github.com> wrote:. > Pinging @LeeTL1220 <https://github.com/LeeTL1220> because this is; > blocking Mutect.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/broadinstitute/wdl/issues/87#issuecomment-277091241>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACDXkzcToI7XtZ0zlOv7NFtVwJrGZaKdks5rYkvxgaJpZM4L1qD1>; > .; >. ---. @kcibul commented on [Fri Feb 03 2017](https://github.com/broadinstitute/wdl/issues/87#issuecomment-277235590). Hey guys -- just want to understand more how this is blocking mutect (ie there's no other way to do this?). Can you explain?. @cjllanwarne -- if you're on bug rotation, could you try to parse this into the separate problems described here and make the appropriate tickets? Seems like there's a problem with scattering over Array[Array[Int]] as described in the last paragraph that has nothing to do with optionals. Then there might be a problem with optionals/conditionals as well but",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1952
https://github.com/broadinstitute/cromwell/issues/1955:817,Availability,down,downstream,817,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:1152,Availability,error,errors,1152,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:627,Deployability,update,update,627,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:671,Deployability,update,updated,671,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:192,Integrability,depend,dependencies,192,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:435,Integrability,depend,dependency,435,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:459,Integrability,depend,dependency,459,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:514,Integrability,depend,dependency,514,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:575,Integrability,depend,dependency,575,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:731,Integrability,depend,dependency,731,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1955:694,Testability,test,tested,694,"We're beginning to get warning during our build because both wdl4s and cromwell are specifying different lenthall versions:. ```scala; [warn] There may be incompatibilities among your library dependencies.; [warn] Here are some of the libraries that were evicted:; [warn] 	* org.broadinstitute:lenthall_2.11:0.20 -> 0.21-e1b7822-SNAP; [warn] Run 'evicted' to see detailed eviction warnings; ```. Options:; 1. wdl4s leaves the lenthall dependency as a compile dependency, the default. cromwell removes its explicit dependency on lenthall, and receives lethall as a transitive dependency through wdl4s. Anytime cromwell wants to update lenthall, wdl4s will need to also be updated and regression tested.; 2. wdl4s marks the lenthall dependency as provided. It must be included in cromwell, wdltool, rawls(?), and other downstream build.sbt's. This option may not catch lenthall version incompatibilities between cromwell and wdl4s until runtime, but will not cause version conflicts in build.sbt.; 3. We ignore the problem, and continue to have sbt output warnings whenever cromwell and wdl4s disagee on a lenthall version. Has similar potential runtime errors as option 2.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1955
https://github.com/broadinstitute/cromwell/issues/1958:810,Availability,ERROR,ERROR,810,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:844,Availability,down,down,844,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:2203,Availability,Error,ErrorOr,2203, 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:2253,Availability,Error,ErrorOr,2253,ableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.Materia,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:13,Deployability,release,release,13,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:1684,Performance,load,load,1684,"he server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:1738,Performance,load,loadUsingSource,1738,"2:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDesc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:1815,Performance,load,load,1815,"an failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.Material",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:4176,Performance,concurren,concurrent,4176,vent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:16,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:4250,Performance,concurren,concurrent,4250,kflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:166); 		at better.files.File.contentAsString(File.scala:206); 		at wdl4s.Wdl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:4336,Performance,concurren,concurrent,4336,riptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:166); 		at better.files.File.contentAsString(File.scala:206); 		at wdl4s.WdlNamespace$.readFile(WdlNamespace.scala:525); 		at wdl4s.WdlNamespace$.fileResolver(Wdl,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:4414,Performance,concurren,concurrent,4414,:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:166); 		at better.files.File.contentAsString(File.scala:206); 		at wdl4s.WdlNamespace$.readFile(WdlNamespace.scala:525); 		at wdl4s.WdlNamespace$.fileResolver(WdlNamespace.scala:527); 		at wdl4s.WdlNamespace$.directoryResolver(WdlNamespace.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:5109,Performance,load,loadBytes,5109,box.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:166); 		at better.files.File.contentAsString(File.scala:206); 		at wdl4s.WdlNamespace$.readFile(WdlNamespace.scala:525); 		at wdl4s.WdlNamespace$.fileResolver(WdlNamespace.scala:527); 		at wdl4s.WdlNamespace$.directoryResolver(WdlNamespace.scala:533); 		at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1$$anonfun$17.apply(MaterializeWorkflowDescriptorActor.scala:361); 		at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1$$anonfun$17.apply(MaterializeWorkflowDescriptorActor.scala:361); 		at wdl4s.WdlNamespace$$anonfun$16.apply(WdlNamespace.scala:191); 		at wdl4s.WdlNamespace$$anonfun$16.apply(WdlNamespace.scala:191); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:191); 		... 37 common frames omitted. ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:873,Security,Validat,ValidationException,873,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:1928,Security,validat,validateNamespaceWithImports,1928,oo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:2095,Security,validat,validateNamespaceWithImports,2095,	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.Abstra,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:2192,Security,validat,validation,2192,lNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:66,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:2346,Security,validat,validateNamespaceWithImports,2346,e.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.acto,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:2496,Security,validat,validateNamespace,2496,234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:363); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.scala:356); 	at lenthall.validation.ErrorOr$ShortCircuitingFlatMap$.flatMap$extension(ErrorOr.scala:17); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(Materializ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:5516,Security,validat,validateNamespaceWithImports,5516,box.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:166); 		at better.files.File.contentAsString(File.scala:206); 		at wdl4s.WdlNamespace$.readFile(WdlNamespace.scala:525); 		at wdl4s.WdlNamespace$.fileResolver(WdlNamespace.scala:527); 		at wdl4s.WdlNamespace$.directoryResolver(WdlNamespace.scala:533); 		at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1$$anonfun$17.apply(MaterializeWorkflowDescriptorActor.scala:361); 		at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1$$anonfun$17.apply(MaterializeWorkflowDescriptorActor.scala:361); 		at wdl4s.WdlNamespace$$anonfun$16.apply(WdlNamespace.scala:191); 		at wdl4s.WdlNamespace$$anonfun$16.apply(WdlNamespace.scala:191); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:191); 		... 37 common frames omitted. ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:5696,Security,validat,validateNamespaceWithImports,5696,box.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); 	Suppressed: java.nio.file.NoSuchFileException: /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 		at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 		at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 		at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 		at java.nio.file.Files.newByteChannel(Files.java:361); 		at java.nio.file.Files.newByteChannel(Files.java:407); 		at java.nio.file.Files.readAllBytes(Files.java:3152); 		at better.files.File.loadBytes(File.scala:163); 		at better.files.File.byteArray(File.scala:166); 		at better.files.File.contentAsString(File.scala:206); 		at wdl4s.WdlNamespace$.readFile(WdlNamespace.scala:525); 		at wdl4s.WdlNamespace$.fileResolver(WdlNamespace.scala:527); 		at wdl4s.WdlNamespace$.directoryResolver(WdlNamespace.scala:533); 		at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1$$anonfun$17.apply(MaterializeWorkflowDescriptorActor.scala:361); 		at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1$$anonfun$17.apply(MaterializeWorkflowDescriptorActor.scala:361); 		at wdl4s.WdlNamespace$$anonfun$16.apply(WdlNamespace.scala:191); 		at wdl4s.WdlNamespace$$anonfun$16.apply(WdlNamespace.scala:191); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:191); 		... 37 common frames omitted. ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:110,Testability,test,testMe,110,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:725,Testability,log,logs,725,"Running with release 24. As a minimal example, the following WDL:; ```; import ""foo.wdl"" as missing. workflow testMe {; 	call doNothing; }; task doNothing {; 	command {}; }; ```. and a zip file containing `baz.wdl` but not `foo.wdl`:; ```; [conradL@qimr13054 ~]$ unzip -l bar.zip ; Archive: bar.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 13:47 bar/; 0 02-07-2017 13:47 bar/baz.wdl; --------- -------; 0 2 files; ```. submit to server:; ```; [conradL@qimr13054 ~]$ curl http://localhost:8000/api/workflows/V1 -FwdlSource=@badImport.wdl -FwdlDependencies=@bar.zip; {; ""id"": ""b701aafd-445c-4f49-8ba6-452d56e69fd3"",; ""status"": ""Submitted""; }; ```. causes the server process to die with this in the logs:; ```; 2017-02-07 13:52:41,842 cromwell-system-akka.actor.default-dispatcher-33 ERROR - guardian failed, shutting down system; wdl4s.exception.ValidationException: Failed to import workflow foo.wdl.:; File not found /tmp/640585481854205084.zip4511378926145376874/bar/foo.wdl; 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$tryResolve$1(WdlNamespace.scala:198); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:208); 	at wdl4s.WdlNamespace$$anonfun$17.apply(WdlNamespace.scala:207); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234); 	at scala.collection.immutable.List.foreach(List.scala:381); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.List.map(List.scala:285); 	at wdl4s.WdlNamespace$.apply(WdlNamespace.scala:207); 	at wdl4s.WdlNamespace$.wdl4s$WdlNamespace$$load(WdlNamespace.scala:177); 	at wdl4s.WdlNamespace$.loadUsingSource(WdlNamespace.scala:173); 	at wdl4s.WdlNamespaceWithWorkflow$.load(WdlNamespace.scala:542); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$validateNamespaceWithImports$1.apply(MaterializeWorkflowDescriptorActor.s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:3287,Testability,Log,LoggingFSM,3287,erializeWorkflowDescriptorActor.validateNamespaceWithImports(MaterializeWorkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.j,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1958:3380,Testability,Log,LoggingFSM,3380,rkflowDescriptorActor.scala:356); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.validateNamespace(MaterializeWorkflowDescriptorActor.scala:372); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.cromwell$engine$workflow$lifecycle$MaterializeWorkflowDescriptorActor$$buildWorkflowDescriptor(MaterializeWorkflowDescriptorActor.scala:172); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:132); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor$$anonfun$3.applyOrElse(MaterializeWorkflowDescriptorActor.scala:130); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.akka$actor$LoggingFSM$$super$processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.processEvent(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:484); 	at cromwell.engine.workflow.lifecycle.MaterializeWorkflowDescriptorActor.aroundReceive(MaterializeWorkflowDescriptorActor.scala:117); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1958
https://github.com/broadinstitute/cromwell/issues/1959:98,Availability,error,errors,98,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1026,Availability,echo,echo,1026,"rts to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1569,Availability,ERROR,ERROR,1569," 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),S",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1754,Availability,failure,failure,1754," 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),S",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1958,Availability,echo,echo,1958,"o/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:2229,Availability,echo,echo,2229,"ver logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:2500,Availability,echo,echo,2500,"ka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:2771,Availability,echo,echo,2771,"on(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:b",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3042,Availability,echo,echo,3042,"2+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/b",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3313,Availability,echo,echo,3313,"4+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl); java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl; 	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 	at sun.nio.f",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3586,Availability,echo,echo,3586,"10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl); java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl; 	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 	at java.nio.file.Files.newByteChannel(Files.java:361); 	at java.nio.file.Files.newByteChannel(Files.java:407); 	at java.ni",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3857,Availability,echo,echo,3857,"10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl); java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl; 	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 	at java.nio.file.Files.newByteChannel(Files.java:361); 	at java.nio.file.Files.newByteChannel(Files.java:407); 	at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384); 	at java.nio.file.Files.newInputStream(Files.java:152); 	at java.nio.file.Files.newBufferedReader(Files.java:2784); 	at java.nio.file.Files.readAllLines(Files.java:3202); 	at java.nio.file.Files.re",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:59,Deployability,release,release,59,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:307,Integrability,depend,dependency,307,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:918,Integrability,depend,dependencies,918,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1066,Integrability,message,message,1066,"rts to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1762,Integrability,message,message,1762," 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),S",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1998,Integrability,message,message,1998,"o/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:2269,Integrability,message,message,2269,"ver logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:2540,Integrability,message,message,2540,"ka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:2811,Integrability,message,message,2811,"on(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:b",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3082,Integrability,message,message,3082,"2+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.774+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/b",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3353,Integrability,message,message,3353,"4+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar5.wdl),Some(MetadataValue(task doIt5 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.775+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl); java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl; 	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 	at sun.nio.f",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3626,Integrability,message,message,3626,"10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar3.wdl),Some(MetadataValue(task doIt3 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl); java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl; 	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 	at java.nio.file.Files.newByteChannel(Files.java:361); 	at java.nio.file.Files.newByteChannel(Files.java:407); 	at java.ni",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:3897,Integrability,message,message,3897,"10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar1.wdl),Some(MetadataValue(task doIt1 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.776+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar9.wdl),Some(MetadataValue(task doIt9 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.777+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar10.wdl),Some(MetadataValue(task doIt10 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.778+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar2.wdl),Some(MetadataValue(task doIt2 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.779+10:00), ?)),java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl); java.nio.file.NoSuchFileException: /tmp/7849235605615896249.zip1398073512390398444/foo/bar8.wdl; 	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102); 	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107); 	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214); 	at java.nio.file.Files.newByteChannel(Files.java:361); 	at java.nio.file.Files.newByteChannel(Files.java:407); 	at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384); 	at java.nio.file.Files.newInputStream(Files.java:152); 	at java.nio.file.Files.newBufferedReader(Files.java:2784); 	at java.nio.file.Files.readAllLines(Files.java:3202); 	at java.nio.file.Files.re",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:7135,Performance,concurren,concurrent,7135,"Stream.scala:1223); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223); 	at scala.collection.immutable.Stream.foreach(Stream.scala:595); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.Stream.map(Stream.scala:420); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction.run(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$$anon$11.run(DBIOAction.scala:545); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); ```. As an additional oddness, for this particular demonstration I always see the workflow proceed to completion with Succeeded status.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:7220,Performance,concurren,concurrent,7220,"Stream.scala:1223); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223); 	at scala.collection.immutable.Stream.foreach(Stream.scala:595); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.Stream.map(Stream.scala:420); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction.run(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$$anon$11.run(DBIOAction.scala:545); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617); 	at java.lang.Thread.run(Thread.java:745); ```. As an additional oddness, for this particular demonstration I always see the workflow proceed to completion with Succeeded status.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:112,Testability,log,logs,112,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:202,Testability,test,testMe,202,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1265,Testability,log,logs,1265,"dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },M",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:1335,Testability,log,log,1335,"dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },MetadataString)),2017-02-07T15:01:10.772+10:00), MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar4.wdl),Some(MetadataValue(task doIt4 {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; },M",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:120,Usability,simpl,simple,120,"This one's a bit odd. Submitting workflows with imports to release 24 server intermittently gives errors in the logs. A simple workflow: ; `cat goodImport.wdl`:. ```; import ""bar.wdl"" as doIt. workflow testMe {; 	call doIt.doIt; }; ```; And a bunch of wdl tasks in a folder, only one of which is the actual dependency (`bar.wdl`); ```; conradL@qimr13054 ~]$ unzip -l foo.zip ; Archive: foo.zip; Length Date Time Name; --------- ---------- ----- ----; 0 02-07-2017 14:46 foo/; 99 02-07-2017 14:45 foo/bar7.wdl; 98 02-07-2017 14:00 foo/bar.wdl; 99 02-07-2017 14:46 foo/bar8.wdl; 99 02-07-2017 14:45 foo/bar2.wdl; 100 02-07-2017 14:45 foo/bar10.wdl; 99 02-07-2017 14:46 foo/bar9.wdl; 99 02-07-2017 14:45 foo/bar1.wdl; 99 02-07-2017 14:45 foo/bar3.wdl; 99 02-07-2017 14:45 foo/bar5.wdl; 99 02-07-2017 14:45 foo/bar4.wdl; 99 02-07-2017 14:45 foo/bar6.wdl; --------- -------; 1089 12 files; ```. The content of all the task dependencies is just a variation on:; ```; [conradL@qimr13054 ~]$ cat foo/bar.wdl ; task doIt {; 	command { echo ""Help, world!"" }; 	output { String message = read_string(stdout()) }; }; ```. Submit to the server:; ```; curl http://localhost:8000/api/workflows/V1 -FwdlSource=@goodImport.wdl -FwdlDependencies=@foo.zip; ```. Now tailing the server logs, the first time this is submitted, the workflow succeeds and the log shows nothing out of the ordinary. But ""sometimes"" (meaning, I can submit it 5 times and not see it, or twice and see it both times) I see this:; ```; 2017-02-07 15:01:10,781 cromwell-system-akka.dispatchers.service-dispatcher-30 ERROR - Sending Actor[akka://cromwell-system/user/cromwell-service/WorkflowManagerActor/WorkflowActor-84a51727-cfda-41e7-a03c-9e3af35eb0dc/MaterializeWorkflowDescriptorActor#972983209] failure message MetadataPutFailed(PutMetadataAction(Stream(MetadataEvent(MetadataKey(84a51727-cfda-41e7-a03c-9e3af35eb0dc,None,submittedFiles:imports:bar6.wdl),Some(MetadataValue(task doIt6 {; 	command { echo ""Help, world!"" }; 	output { String mes",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:6135,Usability,Simpl,SimpleJdbcDriverAction,6135,nfun$14.apply(MaterializeWorkflowDescriptorActor.scala:349); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223); 	at scala.collection.immutable.Stream.foreach(Stream.scala:595); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.Stream.map(Stream.scala:420); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction.run(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$$anon$11.run(DBIOAction.scala:545); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.co,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1959:6230,Usability,Simpl,SimpleJdbcDriverAction,6230,eam$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$$anonfun$map$1.apply(Stream.scala:418); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1233); 	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1223); 	at scala.collection.immutable.Stream.foreach(Stream.scala:595); 	at scala.collection.TraversableLike$class.map(TraversableLike.scala:234); 	at scala.collection.immutable.Stream.map(Stream.scala:420); 	at slick.driver.JdbcActionComponent$InsertActionComposerImpl$MultiInsertAction.run(JdbcActionComponent.scala:522); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:32); 	at slick.driver.JdbcActionComponent$SimpleJdbcDriverAction.run(JdbcActionComponent.scala:29); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction$$anonfun$run$4.apply(DBIOAction.scala:508); 	at scala.collection.Iterator$class.foreach(Iterator.scala:893); 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1336); 	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72); 	at scala.collection.AbstractIterable.foreach(Iterable.scala:54); 	at slick.dbio.SynchronousDatabaseAction$FusedAndThenAction.run(DBIOAction.scala:508); 	at slick.dbio.SynchronousDatabaseAction$$anon$11.run(DBIOAction.scala:545); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.liftedTree1$1(DatabaseComponent.scala:237); 	at slick.backend.DatabaseComponent$DatabaseDef$$anon$2.run(DatabaseComponent.scala:237); 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142); 	at java.util.concurrent.T,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1959
https://github.com/broadinstitute/cromwell/issues/1960:104,Availability,error,error,104,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:312,Availability,error,error,312,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:326,Integrability,Message,Message,326,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:426,Security,access,access,426,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:613,Security,access,access,613,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:814,Security,access,access,814,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:998,Security,access,access,998,"- 0.24; - single workflow mode; - JES backend. When I run the workflow, I get a localization permission error, but when I try again from the command line, there is no issue.; From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutori",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1163,Security,Access,AccessDeniedException,1163,"From cromwell:; ```; ....snip....; java.lang.RuntimeException: Task 773d051e-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1232,Security,access,access,1232,"-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://fireclo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1269,Security,access,access,1269,"-2e93-4248-bca4-e40292e0e59d:generate_true_positives failed: error code 5. Message: 9: Failed to localize files: failed to copy the following files: ""gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://fireclo",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1776,Security,access,access,1776,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1829,Security,access,access,1829,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1907,Security,access,access,1907,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:1988,Security,access,access,1988,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:2070,Security,access,access,2070,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:2231,Security,access,access,2231,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:2265,Security,access,access,2265,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:2306,Security,access,access,2306,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:2345,Security,access,access,2345,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1960:2388,Security,access,access,2388,"nt_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list -> /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list (cp failed: gsutil -q -m cp gs://firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list /mnt/local-disk/firecloud-tcga-open-access/tutorial/reference/whole_exome_agilent_1.1_refseq_plus_3_boosters_plus_10bp_padding_minus_mito.Homo_sapiens_assembly19.targets.interval_list, command failed: AccessDeniedException: 403 Caller does not have storage.objects.list access to bucket firecloud-tcga-open-access.\nCommandException: 1 file/object could not be transferred.\n)""; at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:489); at cromwell.backend.impl.jes.JesAsyncBackendJobExecutionActor.handleExecutionFailure(JesAsyncBackendJobExecutionActor.scala:61); ....snip....; ```; ; BUT I would think this next operation would fail and it does not:; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/tutorial/reference/; gs://firecloud-tcga-open-access/tutorial/reference/CNV.hg19.bypos.111213.txt; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.dict; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta; gs://firecloud-tcga-open-access/tutorial/reference/Homo_sapiens_assembly19.fasta.fai; ```. and: ; ```; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ gsutil ls gs://firecloud-tcga-open-access/; gs://firecloud-tcga-open-access/merged/; gs://firecloud-tcga-open-access/tcga/; gs://firecloud-tcga-open-access/tutorial/; gs://firecloud-tcga-open-access/workshop/; lichtens@lichtens-big:~/test_dl_oxoq/create_bs$ ; ```. @kshakir",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1960
https://github.com/broadinstitute/cromwell/issues/1961:196,Availability,recover,recovering,196,"- JES backend; - 0.24; - single workflow mode. When JES returns a 403 AccessDeniedException, should cromwell keep retrying? It delays the result getting back to the user and should have no way of recovering with retries. Proposed solution: When AccessDeniedException is seen from JES, simply end there, instead of initiating any retries...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1961
https://github.com/broadinstitute/cromwell/issues/1961:196,Safety,recover,recovering,196,"- JES backend; - 0.24; - single workflow mode. When JES returns a 403 AccessDeniedException, should cromwell keep retrying? It delays the result getting back to the user and should have no way of recovering with retries. Proposed solution: When AccessDeniedException is seen from JES, simply end there, instead of initiating any retries...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1961
https://github.com/broadinstitute/cromwell/issues/1961:70,Security,Access,AccessDeniedException,70,"- JES backend; - 0.24; - single workflow mode. When JES returns a 403 AccessDeniedException, should cromwell keep retrying? It delays the result getting back to the user and should have no way of recovering with retries. Proposed solution: When AccessDeniedException is seen from JES, simply end there, instead of initiating any retries...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1961
https://github.com/broadinstitute/cromwell/issues/1961:245,Security,Access,AccessDeniedException,245,"- JES backend; - 0.24; - single workflow mode. When JES returns a 403 AccessDeniedException, should cromwell keep retrying? It delays the result getting back to the user and should have no way of recovering with retries. Proposed solution: When AccessDeniedException is seen from JES, simply end there, instead of initiating any retries...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1961
https://github.com/broadinstitute/cromwell/issues/1961:285,Usability,simpl,simply,285,"- JES backend; - 0.24; - single workflow mode. When JES returns a 403 AccessDeniedException, should cromwell keep retrying? It delays the result getting back to the user and should have no way of recovering with retries. Proposed solution: When AccessDeniedException is seen from JES, simply end there, instead of initiating any retries...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1961
https://github.com/broadinstitute/cromwell/issues/1962:437,Availability,error,errors,437,"Suggested by @vdauwera regarding read_tsv() import functionality:. When you have a TSV with a header, it would be great if you could set a parameter to `header=true`, in order to have WDL ignore the first line. . Even better, if the `read_tsv` function could use the header fields to read the content into a map instead of an array. So you could say `sample[inputBam]` instead of having to take `sample[1]`, which is more susceptible to errors.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1962
https://github.com/broadinstitute/cromwell/issues/1963:106,Availability,error,error,106,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1963:188,Availability,error,error,188,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1963:351,Availability,error,error,351,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1963:373,Availability,ERROR,ERROR,373,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1963:194,Integrability,message,message,194,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1963:357,Integrability,message,message,357,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1963:869,Security,validat,validateRuntimeAttributes,869,"- 0.24; - SGE backend. I accidentally gave an Int parameter a String value in the json. I would prefer an error specific to parameter type, rather than a generic invalid runtime attribute error message (below). Proposed solution: ; ``Task m1_task was given an invalid type for cpu = ""${cpu}"". A String was given, though parameter is an Int``. Current error message:; ```; [ERROR] [02/08/2017 10:38:57.225] [cromwell-system-akka.dispatchers.engine-dispatcher-8] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow 07a3f007-8c62-4cd4-8668-6ac034ff42f1 failed (during InitializingWorkflowState): Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; java.lang.IllegalArgumentException: Task m1_task has an invalid runtime attribute cpu = ""${cpu}""; at cromwell.backend.BackendWorkflowInitializationActor$class.validateRuntimeAttributes(BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$class.initSequence(BackendWorkflowInitializationActor.scala:171); at cromwell.backend.sfs.SharedFileSystemInitializationActor.initSequence(SharedFileSystemInitializationActor.scala:37); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1963
https://github.com/broadinstitute/cromwell/issues/1964:13,Security,Hash,Hashing,13,Phase two of Hashing for Call Caching.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1964
https://github.com/broadinstitute/cromwell/issues/1965:938,Availability,ERROR,ERROR,938,"We are seeing infrequent situations where JES says a call is done but cromwell thinks it is still running. I see the call starting in the logs:; ```; 2017-02-08 18:55:58,500 cromwell-system-akka.dispatchers.engine-dispatcher-963 INFO - WorkflowExecutionActor-fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 [UUID(fa7e25a2)]: Starting calls: pon_gatk_workflow.PadTargets:NA:1; ```. Then the only suspicious things I see later in the logs are these messages (which could be completely unrelated however they do start to appear 2.5 minutes after the job completes on JES):; ```; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-424 INFO - The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$Enn#762671444] unexpectedly terminated while conducting 100 polls. Making a new one...; java.lang.NullPointerException: null; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-246 ERROR - null; ```. For future reference by a FireCloud admin the operations id is ELSl1PihKxjdhp-6gvr3weYBILma7PWMHyoPcHJvZHVjdGlvblF1ZXVl and the workflow id is fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 and the workflow was aborted 3PM Feb 8.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1965
https://github.com/broadinstitute/cromwell/issues/1965:436,Integrability,message,messages,436,"We are seeing infrequent situations where JES says a call is done but cromwell thinks it is still running. I see the call starting in the logs:; ```; 2017-02-08 18:55:58,500 cromwell-system-akka.dispatchers.engine-dispatcher-963 INFO - WorkflowExecutionActor-fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 [UUID(fa7e25a2)]: Starting calls: pon_gatk_workflow.PadTargets:NA:1; ```. Then the only suspicious things I see later in the logs are these messages (which could be completely unrelated however they do start to appear 2.5 minutes after the job completes on JES):; ```; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-424 INFO - The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$Enn#762671444] unexpectedly terminated while conducting 100 polls. Making a new one...; java.lang.NullPointerException: null; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-246 ERROR - null; ```. For future reference by a FireCloud admin the operations id is ELSl1PihKxjdhp-6gvr3weYBILma7PWMHyoPcHJvZHVjdGlvblF1ZXVl and the workflow id is fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 and the workflow was aborted 3PM Feb 8.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1965
https://github.com/broadinstitute/cromwell/issues/1965:1158,Safety,abort,aborted,1158,"We are seeing infrequent situations where JES says a call is done but cromwell thinks it is still running. I see the call starting in the logs:; ```; 2017-02-08 18:55:58,500 cromwell-system-akka.dispatchers.engine-dispatcher-963 INFO - WorkflowExecutionActor-fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 [UUID(fa7e25a2)]: Starting calls: pon_gatk_workflow.PadTargets:NA:1; ```. Then the only suspicious things I see later in the logs are these messages (which could be completely unrelated however they do start to appear 2.5 minutes after the job completes on JES):; ```; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-424 INFO - The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$Enn#762671444] unexpectedly terminated while conducting 100 polls. Making a new one...; java.lang.NullPointerException: null; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-246 ERROR - null; ```. For future reference by a FireCloud admin the operations id is ELSl1PihKxjdhp-6gvr3weYBILma7PWMHyoPcHJvZHVjdGlvblF1ZXVl and the workflow id is fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 and the workflow was aborted 3PM Feb 8.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1965
https://github.com/broadinstitute/cromwell/issues/1965:138,Testability,log,logs,138,"We are seeing infrequent situations where JES says a call is done but cromwell thinks it is still running. I see the call starting in the logs:; ```; 2017-02-08 18:55:58,500 cromwell-system-akka.dispatchers.engine-dispatcher-963 INFO - WorkflowExecutionActor-fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 [UUID(fa7e25a2)]: Starting calls: pon_gatk_workflow.PadTargets:NA:1; ```. Then the only suspicious things I see later in the logs are these messages (which could be completely unrelated however they do start to appear 2.5 minutes after the job completes on JES):; ```; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-424 INFO - The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$Enn#762671444] unexpectedly terminated while conducting 100 polls. Making a new one...; java.lang.NullPointerException: null; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-246 ERROR - null; ```. For future reference by a FireCloud admin the operations id is ELSl1PihKxjdhp-6gvr3weYBILma7PWMHyoPcHJvZHVjdGlvblF1ZXVl and the workflow id is fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 and the workflow was aborted 3PM Feb 8.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1965
https://github.com/broadinstitute/cromwell/issues/1965:421,Testability,log,logs,421,"We are seeing infrequent situations where JES says a call is done but cromwell thinks it is still running. I see the call starting in the logs:; ```; 2017-02-08 18:55:58,500 cromwell-system-akka.dispatchers.engine-dispatcher-963 INFO - WorkflowExecutionActor-fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 [UUID(fa7e25a2)]: Starting calls: pon_gatk_workflow.PadTargets:NA:1; ```. Then the only suspicious things I see later in the logs are these messages (which could be completely unrelated however they do start to appear 2.5 minutes after the job completes on JES):; ```; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-424 INFO - The JES polling actor Actor[akka://cromwell-system/user/cromwell-service/$b/$a/$Enn#762671444] unexpectedly terminated while conducting 100 polls. Making a new one...; java.lang.NullPointerException: null; 2017-02-08 19:17:07,588 cromwell-system-akka.dispatchers.backend-dispatcher-246 ERROR - null; ```. For future reference by a FireCloud admin the operations id is ELSl1PihKxjdhp-6gvr3weYBILma7PWMHyoPcHJvZHVjdGlvblF1ZXVl and the workflow id is fa7e25a2-f51f-4763-9f8a-5a2e5cd1c954 and the workflow was aborted 3PM Feb 8.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1965
https://github.com/broadinstitute/cromwell/issues/1966:51,Availability,failure,failure,51,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:522,Availability,recover,recoverWith,522,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:598,Availability,recover,recoverWith,598,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:3032,Availability,robust,robustExecuteOrRecover,3032,t scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeAsync(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:502); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeOrRecover(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.aroundReceive(AwsAsyncJobExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:3224,Availability,robust,robustExecuteOrRecover,3224,StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeAsync(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:502); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeOrRecover(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.aroundReceive(AwsAsyncJobExecutionActor.scala:23); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:25,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:3585,Availability,robust,robustExecuteOrRecover,3585,andard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeAsync(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:502); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeOrRecover(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover$1.apply(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.core.retry.Retry$.withRetry(Retry.scala:37); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.withRetry(AsyncBackendJobExecutionActor.scala:52); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$class.cromwell$backend$async$AsyncBackendJobExecutionActor$$robustExecuteOrRecover(AsyncBackendJobExecutionActor.scala:56); 	at cromwell.backend.async.AsyncBackendJobExecutionActor$$anonfun$receive$1.applyOrElse(AsyncBackendJobExecutionActor.scala:80); 	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.aroundReceive(AwsAsyncJobExecutionActor.scala:23); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	... 4 more; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:77,Deployability,patch,patched,77,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1875,Integrability,Wrap,Wrappers,1875,scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeAsync(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:502); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeOrRecover(AwsAsyncJobEx,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1906,Integrability,Wrap,Wrappers,1906,dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeAsync(AwsAsyncJobExecutionActor.scala:23); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeOrRecover(StandardAsyncExecutionActor.scala:502); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeOrRecover(AwsAsyncJobExecutionActor.scala:2,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:495,Performance,concurren,concurrent,495,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:571,Performance,concurren,concurrent,571,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:647,Performance,concurren,concurrent,647,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1107,Performance,concurren,concurrent,1107,frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1432,Performance,concurren,concurrent,1432,nonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.ap,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1506,Performance,concurren,concurrent,1506,e$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionAc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1592,Performance,concurren,concurrent,1592,$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.im,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:1670,Performance,concurren,concurrent,1670,able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at scala.collection.AbstractIterable.head(Iterable.scala:54); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.execute(AwsAsyncJobExecutionActor.scala:53); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$executeAsync$1.apply(StandardAsyncExecutionActor.scala:242); 	at scala.util.Try$.apply(Try.scala:192); 	at cromwell.backend.standard.StandardAsyncExecutionActor$class.executeAsync(StandardAsyncExecutionActor.scala:242); 	at cromwell.backend.impl.aws.AwsAsyncJobExecutionActor.executeAsync(AwsAsyncJobExecutionActor.scala:,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:522,Safety,recover,recoverWith,522,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/issues/1966:598,Safety,recover,recoverWith,598,"This might be the only remaining type of transient failure which hasn't been patched, but it does pop up fairly frequently. It looks like the usual pattern of retries would work here. ```; cromwell.core.CromwellFatalException: java.util.NoSuchElementException; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:38); 	at cromwell.core.retry.Retry$$anonfun$withRetry$2.applyOrElse(Retry.scala:37); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.util.NoSuchElementException; 	at java.util.ArrayList$Itr.next(ArrayList.java:854); 	at scala.collection.convert.Wrappers$JIteratorWrapper.next(Wrappers.scala:43); 	at scala.collection.IterableLike$class.head(IterableLike.scala:107); 	at s",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1966
https://github.com/broadinstitute/cromwell/pull/1967:33,Modifiability,enhance,enhancements,33,logback 1.2 includes performance enhancements: https://logback.qos.ch/news.html,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1967
https://github.com/broadinstitute/cromwell/pull/1967:21,Performance,perform,performance,21,logback 1.2 includes performance enhancements: https://logback.qos.ch/news.html,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1967
https://github.com/broadinstitute/cromwell/pull/1967:0,Testability,log,logback,0,logback 1.2 includes performance enhancements: https://logback.qos.ch/news.html,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1967
https://github.com/broadinstitute/cromwell/pull/1967:55,Testability,log,logback,55,logback 1.2 includes performance enhancements: https://logback.qos.ch/news.html,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1967
https://github.com/broadinstitute/cromwell/pull/1969:13,Deployability,update,update,13,- [x] README update; - [x] Changelog update; - [x] What should happen to `call-caching.lookup-docker-hash` conf entry ?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1969
https://github.com/broadinstitute/cromwell/pull/1969:37,Deployability,update,update,37,- [x] README update; - [x] Changelog update; - [x] What should happen to `call-caching.lookup-docker-hash` conf entry ?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1969
https://github.com/broadinstitute/cromwell/pull/1969:101,Security,hash,hash,101,- [x] README update; - [x] Changelog update; - [x] What should happen to `call-caching.lookup-docker-hash` conf entry ?,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1969
https://github.com/broadinstitute/cromwell/issues/1970:393,Availability,error,error,393,"- 0.24; - SGE backend; - single workflow mode; - sub-workflows involved; - no docker. I can provide exact WDL, but replicating this may need new WDL. Feel free to ask me questions. I have a full WDL that calls two subworkflows, serially. . - The first takes a really long time and completed successfully on the first run. ; - The second subworkflow failed on the first run. This was due to an error in the call block of the WDL (marked below); - Fixed the error ; - Ran it again for a second run. Unexpected: In the second run, the first subworkflow call did not call cache and I do not know why not. Nothing was changed in the call block (nor parameters, etc etc). ```; import ""dl_ob_training.wdl"" as dl_ob_training; import ""m1/m1.wdl"" as m1. workflow full_dl_ob_training_with_m1 {. .....snip.....; Array[Pair[File, File]] tumor_bam_pair = zip(tumor_bam_files, tumor_bam_indices); scatter (p in tumor_normal_pairs) {. # All of the m1.m1 calls completed just fine; call m1.m1 {; input: ; tumorBam=p.left.left,; tumorBamIdx=p.left.right,; ....snip....; ; }. call dl_ob_training.dl_ob_training {; input:; # I fixed an error in the two lines below. Below is the corrected output; bam_file=p.left.left,; bam_file_index=p.left.right,; .....snip..........; }; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1970
https://github.com/broadinstitute/cromwell/issues/1970:456,Availability,error,error,456,"- 0.24; - SGE backend; - single workflow mode; - sub-workflows involved; - no docker. I can provide exact WDL, but replicating this may need new WDL. Feel free to ask me questions. I have a full WDL that calls two subworkflows, serially. . - The first takes a really long time and completed successfully on the first run. ; - The second subworkflow failed on the first run. This was due to an error in the call block of the WDL (marked below); - Fixed the error ; - Ran it again for a second run. Unexpected: In the second run, the first subworkflow call did not call cache and I do not know why not. Nothing was changed in the call block (nor parameters, etc etc). ```; import ""dl_ob_training.wdl"" as dl_ob_training; import ""m1/m1.wdl"" as m1. workflow full_dl_ob_training_with_m1 {. .....snip.....; Array[Pair[File, File]] tumor_bam_pair = zip(tumor_bam_files, tumor_bam_indices); scatter (p in tumor_normal_pairs) {. # All of the m1.m1 calls completed just fine; call m1.m1 {; input: ; tumorBam=p.left.left,; tumorBamIdx=p.left.right,; ....snip....; ; }. call dl_ob_training.dl_ob_training {; input:; # I fixed an error in the two lines below. Below is the corrected output; bam_file=p.left.left,; bam_file_index=p.left.right,; .....snip..........; }; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1970
https://github.com/broadinstitute/cromwell/issues/1970:1116,Availability,error,error,1116,"- 0.24; - SGE backend; - single workflow mode; - sub-workflows involved; - no docker. I can provide exact WDL, but replicating this may need new WDL. Feel free to ask me questions. I have a full WDL that calls two subworkflows, serially. . - The first takes a really long time and completed successfully on the first run. ; - The second subworkflow failed on the first run. This was due to an error in the call block of the WDL (marked below); - Fixed the error ; - Ran it again for a second run. Unexpected: In the second run, the first subworkflow call did not call cache and I do not know why not. Nothing was changed in the call block (nor parameters, etc etc). ```; import ""dl_ob_training.wdl"" as dl_ob_training; import ""m1/m1.wdl"" as m1. workflow full_dl_ob_training_with_m1 {. .....snip.....; Array[Pair[File, File]] tumor_bam_pair = zip(tumor_bam_files, tumor_bam_indices); scatter (p in tumor_normal_pairs) {. # All of the m1.m1 calls completed just fine; call m1.m1 {; input: ; tumorBam=p.left.left,; tumorBamIdx=p.left.right,; ....snip....; ; }. call dl_ob_training.dl_ob_training {; input:; # I fixed an error in the two lines below. Below is the corrected output; bam_file=p.left.left,; bam_file_index=p.left.right,; .....snip..........; }; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1970
https://github.com/broadinstitute/cromwell/issues/1970:568,Performance,cache,cache,568,"- 0.24; - SGE backend; - single workflow mode; - sub-workflows involved; - no docker. I can provide exact WDL, but replicating this may need new WDL. Feel free to ask me questions. I have a full WDL that calls two subworkflows, serially. . - The first takes a really long time and completed successfully on the first run. ; - The second subworkflow failed on the first run. This was due to an error in the call block of the WDL (marked below); - Fixed the error ; - Ran it again for a second run. Unexpected: In the second run, the first subworkflow call did not call cache and I do not know why not. Nothing was changed in the call block (nor parameters, etc etc). ```; import ""dl_ob_training.wdl"" as dl_ob_training; import ""m1/m1.wdl"" as m1. workflow full_dl_ob_training_with_m1 {. .....snip.....; Array[Pair[File, File]] tumor_bam_pair = zip(tumor_bam_files, tumor_bam_indices); scatter (p in tumor_normal_pairs) {. # All of the m1.m1 calls completed just fine; call m1.m1 {; input: ; tumorBam=p.left.left,; tumorBamIdx=p.left.right,; ....snip....; ; }. call dl_ob_training.dl_ob_training {; input:; # I fixed an error in the two lines below. Below is the corrected output; bam_file=p.left.left,; bam_file_index=p.left.right,; .....snip..........; }; }; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1970
https://github.com/broadinstitute/cromwell/issues/1971:170,Availability,error,error,170,"Current copy simply says, ""wdlDependencies"" ... proposed change to ""wdlDependencies (zip)"". Since uploading a single wdl file in this box will cause an ""invalid zip file error"", but does not specify that the error was in the wdlDependencies field.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1971
https://github.com/broadinstitute/cromwell/issues/1971:208,Availability,error,error,208,"Current copy simply says, ""wdlDependencies"" ... proposed change to ""wdlDependencies (zip)"". Since uploading a single wdl file in this box will cause an ""invalid zip file error"", but does not specify that the error was in the wdlDependencies field.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1971
https://github.com/broadinstitute/cromwell/issues/1971:13,Usability,simpl,simply,13,"Current copy simply says, ""wdlDependencies"" ... proposed change to ""wdlDependencies (zip)"". Since uploading a single wdl file in this box will cause an ""invalid zip file error"", but does not specify that the error was in the wdlDependencies field.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1971
https://github.com/broadinstitute/cromwell/pull/1974:180,Availability,error,errors,180,"I know there is a more serious ticket for this issue, but it seems like a number of centaur local tests have been failing again lately due to `expected ""hello"" but got """"` kind of errors.; I found this https://linux.die.net/man/2/sync and have been restarting centaur local on this branch a few times and none of them have failed so far. I don't think it entirely fixes the issue though.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1974
https://github.com/broadinstitute/cromwell/pull/1974:98,Testability,test,tests,98,"I know there is a more serious ticket for this issue, but it seems like a number of centaur local tests have been failing again lately due to `expected ""hello"" but got """"` kind of errors.; I found this https://linux.die.net/man/2/sync and have been restarting centaur local on this branch a few times and none of them have failed so far. I don't think it entirely fixes the issue though.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1974
https://github.com/broadinstitute/cromwell/issues/1976:203,Deployability,continuous,continuously,203,"in the workbench chat room they were tracking something where rawls was spamming cromwell with abort requests. The root cause was that a workbench submission was requested to abort which causes rawls to continuously send abort requests to the submission's workflows until it is aborted, which sometimes never happens. they're not fans of this behavior. Tagging @helgridly and @jmthibault79 as people who can provide more details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1976
https://github.com/broadinstitute/cromwell/issues/1976:95,Safety,abort,abort,95,"in the workbench chat room they were tracking something where rawls was spamming cromwell with abort requests. The root cause was that a workbench submission was requested to abort which causes rawls to continuously send abort requests to the submission's workflows until it is aborted, which sometimes never happens. they're not fans of this behavior. Tagging @helgridly and @jmthibault79 as people who can provide more details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1976
https://github.com/broadinstitute/cromwell/issues/1976:175,Safety,abort,abort,175,"in the workbench chat room they were tracking something where rawls was spamming cromwell with abort requests. The root cause was that a workbench submission was requested to abort which causes rawls to continuously send abort requests to the submission's workflows until it is aborted, which sometimes never happens. they're not fans of this behavior. Tagging @helgridly and @jmthibault79 as people who can provide more details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1976
https://github.com/broadinstitute/cromwell/issues/1976:221,Safety,abort,abort,221,"in the workbench chat room they were tracking something where rawls was spamming cromwell with abort requests. The root cause was that a workbench submission was requested to abort which causes rawls to continuously send abort requests to the submission's workflows until it is aborted, which sometimes never happens. they're not fans of this behavior. Tagging @helgridly and @jmthibault79 as people who can provide more details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1976
https://github.com/broadinstitute/cromwell/issues/1976:278,Safety,abort,aborted,278,"in the workbench chat room they were tracking something where rawls was spamming cromwell with abort requests. The root cause was that a workbench submission was requested to abort which causes rawls to continuously send abort requests to the submission's workflows until it is aborted, which sometimes never happens. they're not fans of this behavior. Tagging @helgridly and @jmthibault79 as people who can provide more details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1976
https://github.com/broadinstitute/cromwell/pull/1977:175,Performance,optimiz,optimized,175,"The representation of the `ExecutionStore` is now encapsulated in a `private val` where nosy clients can't just fiddle with its innards. This allows for the possibility of an optimized representation better aligned with how the `ExecutionStore` is actually used. I made a few optimizations in the current `Map` representation because the opportunities were just staring me in the face, but I doubt they'd have much of a noticeable benefit IRL. 😛",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1977
https://github.com/broadinstitute/cromwell/pull/1977:276,Performance,optimiz,optimizations,276,"The representation of the `ExecutionStore` is now encapsulated in a `private val` where nosy clients can't just fiddle with its innards. This allows for the possibility of an optimized representation better aligned with how the `ExecutionStore` is actually used. I made a few optimizations in the current `Map` representation because the opportunities were just staring me in the face, but I doubt they'd have much of a noticeable benefit IRL. 😛",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1977
https://github.com/broadinstitute/cromwell/issues/1978:48,Availability,Reboot,Rebooting,48,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/issues/1978:256,Availability,echo,echo,256,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/issues/1978:157,Testability,test,test,157,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/issues/1978:376,Testability,test,test,376,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/issues/1978:777,Testability,log,logs,777,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/issues/1978:807,Testability,test,test,807,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/issues/1978:643,Usability,clear,cleared,643,"We noticed this in FC alpha -- no status field. Rebooting Cromwell (well over an hour after submission) fixed it. ```; {; ""submittedFiles"": {; ""inputs"": ""{\""test.hello.name\"":\""subject_HCC1143\""}"",; ""workflow"": ""task hello {\n String? name\n\n command {\n echo 'hello ${name}!'\n }\n output {\n File response = stdout()\n }\n runtime {\n docker: \""ubuntu\""\n }\n}\n\nworkflow test {\n call hello\n}"",; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b us-central1-c us-central1-f\""\n },\n \""google_project\"": \""broad-dsde-alpha\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-alpha\"",\n \""refresh_token\"": \""cleared\"",\n \""final_workflow_log_dir\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc/workflow.logs\"",\n \""account_name\"": \""test.firec@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-07b4785f-2cc2-4147-bd6f-67cf8a4049ba/fe75135f-3637-4ead-9bc7-26573cfc50cc\""\n}""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""bea0383d-6ca8-4392-b048-03914e87444d"",; ""inputs"": {. },; ""submission"": ""2017-02-11T01:27:49.935Z""; }; ```. Cromwell version: 24-489f66b; hostname: gce-cromwell-alpha102; workflow id: 3d01da76-98f9-4751-a3c0-efc61ef67030",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1978
https://github.com/broadinstitute/cromwell/pull/1979:236,Modifiability,config,configure,236,"Picking up from #1816. Setup for Centaur testing. The current TES [schema](https://github.com/ga4gh/task-execution-schemas) doesn't allow for changing the default user, so centaur fails on:; - non_root_specified_user. Is there a way to configure Centaur to skip specific tests?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1979
https://github.com/broadinstitute/cromwell/pull/1979:41,Testability,test,testing,41,"Picking up from #1816. Setup for Centaur testing. The current TES [schema](https://github.com/ga4gh/task-execution-schemas) doesn't allow for changing the default user, so centaur fails on:; - non_root_specified_user. Is there a way to configure Centaur to skip specific tests?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1979
https://github.com/broadinstitute/cromwell/pull/1979:271,Testability,test,tests,271,"Picking up from #1816. Setup for Centaur testing. The current TES [schema](https://github.com/ga4gh/task-execution-schemas) doesn't allow for changing the default user, so centaur fails on:; - non_root_specified_user. Is there a way to configure Centaur to skip specific tests?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/1979
https://github.com/broadinstitute/cromwell/issues/1980:24,Availability,error,error,24,"Hello,. I'm seeing this error with glob. Looks like the glob-xxx.list file is not create for some reason. The file it's looking for has a couple commas (,) in them, could that be the issue?. wdl: /humgen/gsa-hpprojects/dev/tsato/palantir/Analysis/451_MedicallyRelevantCoverageWorkflow/medically-relevant-coverage.wdl.copy; json: /humgen/gsa-hpprojects/dev/tsato/palantir/Analysis/451_MedicallyRelevantCoverageWorkflow/medically-relevant-coverage.json; cromwell server: gsa5:8003 (configured for SGE); metadata: http://gsa5:8003/api/workflows/v2/e97e55f5-f0e0-42dd-9a7d-ae4edd66dc19/metadata?expandSubWorkflows=false. ""message"": ""Failed to evaluate outputs.: Could not evaluate GetHSMetrics.per_target_coverage = glob(\""*.per_target_coverage\"")[0]\n\tFile not found /humgen/gsa-hpprojects/dev/tsato/wdl/cromwell-executions/MedicallyRelevantCoverage/e97e55f5-f0e0-42dd-9a7d-ae4edd66dc19/call-GetHSMetrics/shard-1/execution/glob-66c7ddc0219653b72a61bd2dae8bb454.list""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1980
https://github.com/broadinstitute/cromwell/issues/1980:618,Integrability,message,message,618,"Hello,. I'm seeing this error with glob. Looks like the glob-xxx.list file is not create for some reason. The file it's looking for has a couple commas (,) in them, could that be the issue?. wdl: /humgen/gsa-hpprojects/dev/tsato/palantir/Analysis/451_MedicallyRelevantCoverageWorkflow/medically-relevant-coverage.wdl.copy; json: /humgen/gsa-hpprojects/dev/tsato/palantir/Analysis/451_MedicallyRelevantCoverageWorkflow/medically-relevant-coverage.json; cromwell server: gsa5:8003 (configured for SGE); metadata: http://gsa5:8003/api/workflows/v2/e97e55f5-f0e0-42dd-9a7d-ae4edd66dc19/metadata?expandSubWorkflows=false. ""message"": ""Failed to evaluate outputs.: Could not evaluate GetHSMetrics.per_target_coverage = glob(\""*.per_target_coverage\"")[0]\n\tFile not found /humgen/gsa-hpprojects/dev/tsato/wdl/cromwell-executions/MedicallyRelevantCoverage/e97e55f5-f0e0-42dd-9a7d-ae4edd66dc19/call-GetHSMetrics/shard-1/execution/glob-66c7ddc0219653b72a61bd2dae8bb454.list""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1980
https://github.com/broadinstitute/cromwell/issues/1980:480,Modifiability,config,configured,480,"Hello,. I'm seeing this error with glob. Looks like the glob-xxx.list file is not create for some reason. The file it's looking for has a couple commas (,) in them, could that be the issue?. wdl: /humgen/gsa-hpprojects/dev/tsato/palantir/Analysis/451_MedicallyRelevantCoverageWorkflow/medically-relevant-coverage.wdl.copy; json: /humgen/gsa-hpprojects/dev/tsato/palantir/Analysis/451_MedicallyRelevantCoverageWorkflow/medically-relevant-coverage.json; cromwell server: gsa5:8003 (configured for SGE); metadata: http://gsa5:8003/api/workflows/v2/e97e55f5-f0e0-42dd-9a7d-ae4edd66dc19/metadata?expandSubWorkflows=false. ""message"": ""Failed to evaluate outputs.: Could not evaluate GetHSMetrics.per_target_coverage = glob(\""*.per_target_coverage\"")[0]\n\tFile not found /humgen/gsa-hpprojects/dev/tsato/wdl/cromwell-executions/MedicallyRelevantCoverage/e97e55f5-f0e0-42dd-9a7d-ae4edd66dc19/call-GetHSMetrics/shard-1/execution/glob-66c7ddc0219653b72a61bd2dae8bb454.list""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1980
https://github.com/broadinstitute/cromwell/issues/1982:477,Testability,test,test,477,"I'm not sure which of the many possible reasons is causing this. Try running https://github.com/broadinstitute/centaur/blob/cjl_define_defined/src/main/resources/standardTestCases/defined_function/defined_function.wdl after un-commenting the defined_in_task lines. You would expect to see `dit_out` have the value `[""file_0"", ""no file"", ""file_2"", ""no file""]` but instead get `[""no file"", ""no file"", ""no file"", ""no file""]`. - [ ] Make this work; - [ ] Re-enable the rest of the test lines; - [ ] Add correct expectations to the centaur test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1982
https://github.com/broadinstitute/cromwell/issues/1982:535,Testability,test,test,535,"I'm not sure which of the many possible reasons is causing this. Try running https://github.com/broadinstitute/centaur/blob/cjl_define_defined/src/main/resources/standardTestCases/defined_function/defined_function.wdl after un-commenting the defined_in_task lines. You would expect to see `dit_out` have the value `[""file_0"", ""no file"", ""file_2"", ""no file""]` but instead get `[""no file"", ""no file"", ""no file"", ""no file""]`. - [ ] Make this work; - [ ] Re-enable the rest of the test lines; - [ ] Add correct expectations to the centaur test",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1982
https://github.com/broadinstitute/cromwell/issues/1983:518,Testability,test,test,518,"In the attached WDL, note that the input_table parameter is fed to an executing R script using the optional inputs syntax: ${""-t""+input_table}. In the attached bad-script.txt file (the ""script"" file generated by cromwell at runtime), note that the file given to the -t flag does not begin with an absolute path localized to the execution container. This yields a ""file not found"" problem at runtime (as shown in the attached bad-stderr.txt). If I simply change the WDL syntax to -t${input_table} then execute the same test with the exact same inputs, the -t flag is properly prefixed with an absolute path localized to the container (as shown in script-good.txt), enabling the file to be found and the successful completion of the workflow. [bad-stderr.txt](https://github.com/broadinstitute/cromwell/files/774453/bad-stderr.txt); [bad-script.txt](https://github.com/broadinstitute/cromwell/files/774447/bad-script.txt); [example_wdl.txt](https://github.com/broadinstitute/cromwell/files/774444/example_wdl.txt); [good-script.txt](https://github.com/broadinstitute/cromwell/files/774491/good-script.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1983
https://github.com/broadinstitute/cromwell/issues/1983:447,Usability,simpl,simply,447,"In the attached WDL, note that the input_table parameter is fed to an executing R script using the optional inputs syntax: ${""-t""+input_table}. In the attached bad-script.txt file (the ""script"" file generated by cromwell at runtime), note that the file given to the -t flag does not begin with an absolute path localized to the execution container. This yields a ""file not found"" problem at runtime (as shown in the attached bad-stderr.txt). If I simply change the WDL syntax to -t${input_table} then execute the same test with the exact same inputs, the -t flag is properly prefixed with an absolute path localized to the container (as shown in script-good.txt), enabling the file to be found and the successful completion of the workflow. [bad-stderr.txt](https://github.com/broadinstitute/cromwell/files/774453/bad-stderr.txt); [bad-script.txt](https://github.com/broadinstitute/cromwell/files/774447/bad-script.txt); [example_wdl.txt](https://github.com/broadinstitute/cromwell/files/774444/example_wdl.txt); [good-script.txt](https://github.com/broadinstitute/cromwell/files/774491/good-script.txt)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1983
https://github.com/broadinstitute/cromwell/issues/1985:172,Performance,cache,cache,172,"Write a workflow such that you run a task A, and then run task A again with one of the call caching hash components is altered to confirm there were no false positive call cache hits. The hash components to tweak include:; - [x] input files (in this case, a secondary task can be used to alter the input files for task A); - [x] command template; - [x] backend name; - [x] output expressions; - [x] runtime attributes; - [x] non-file inputs",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1985
https://github.com/broadinstitute/cromwell/issues/1985:100,Security,hash,hash,100,"Write a workflow such that you run a task A, and then run task A again with one of the call caching hash components is altered to confirm there were no false positive call cache hits. The hash components to tweak include:; - [x] input files (in this case, a secondary task can be used to alter the input files for task A); - [x] command template; - [x] backend name; - [x] output expressions; - [x] runtime attributes; - [x] non-file inputs",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1985
https://github.com/broadinstitute/cromwell/issues/1985:188,Security,hash,hash,188,"Write a workflow such that you run a task A, and then run task A again with one of the call caching hash components is altered to confirm there were no false positive call cache hits. The hash components to tweak include:; - [x] input files (in this case, a secondary task can be used to alter the input files for task A); - [x] command template; - [x] backend name; - [x] output expressions; - [x] runtime attributes; - [x] non-file inputs",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1985
https://github.com/broadinstitute/cromwell/issues/1986:133,Performance,cache,cache,133,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1986:199,Performance,cache,cache,199,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1986:313,Performance,cache,cache,313,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1986:344,Performance,cache,cache,344,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1986:403,Security,hash,hashing,403,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1986:511,Testability,log,logs,511,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1986:580,Testability,test,testing,580,"1. Find a scientific workflow and run it manually a couple of times to confirm that it is successfully caching as expected (write to cache set to true for all these runs).; 2. Try to invalidate some cache hits (by deleting certain outputs).; 3. Re-run the workflow and confirm that it's not using the invalidated cache hits and using alternate cache hits instead.; 4. Re-run with using floating tags vs hashing and confirm expected behavior.; ; AC: Try the alterations above and others that seem relevant. Keep logs of the workflow attempts or metadata, something to journal this testing.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1986
https://github.com/broadinstitute/cromwell/issues/1987:125,Testability,test,tests,125,Re-review the code around all caching matches and confirm that the expected components are being checked. Flush out the unit tests to make sure those components all have some kind of test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1987
https://github.com/broadinstitute/cromwell/issues/1987:183,Testability,test,test,183,Re-review the code around all caching matches and confirm that the expected components are being checked. Flush out the unit tests to make sure those components all have some kind of test.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1987
https://github.com/broadinstitute/cromwell/issues/1988:139,Availability,echo,echo,139,The current call caching fails to correctly ignore whitespace. The following command blocks will not call cache together:. ```; command {; echo hello world; }; ```. ```; command { echo hello world }; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1988
https://github.com/broadinstitute/cromwell/issues/1988:180,Availability,echo,echo,180,The current call caching fails to correctly ignore whitespace. The following command blocks will not call cache together:. ```; command {; echo hello world; }; ```. ```; command { echo hello world }; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1988
https://github.com/broadinstitute/cromwell/issues/1988:106,Performance,cache,cache,106,The current call caching fails to correctly ignore whitespace. The following command blocks will not call cache together:. ```; command {; echo hello world; }; ```. ```; command { echo hello world }; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1988
https://github.com/broadinstitute/cromwell/issues/1989:163,Availability,echo,echo,163,Tasks cannot call cache if their names are different (unless the tasks have no inputs!). The following tasks cannot call cache:. ```; task foo {; Int i; command { echo ${i} }; }; ```. ```; task bar {; Int i; command { echo ${i} }; }; ```. The call caching simpletons shouldn't include the call name in the input hash keys:. ```; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; | CALL_CACHING_HASH_ENTRY_ID | HASH_KEY | HASH_VALUE | CALL_CACHING_ENTRY_ID |; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; ....; | 137 | input: File foo.i | 778138a97b315ec95f374425255f8b9e | 12 |; | 138 | input: File bar.i | 778138a97b315ec95f374425255f8b9e | 13 |; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1989
https://github.com/broadinstitute/cromwell/issues/1989:218,Availability,echo,echo,218,Tasks cannot call cache if their names are different (unless the tasks have no inputs!). The following tasks cannot call cache:. ```; task foo {; Int i; command { echo ${i} }; }; ```. ```; task bar {; Int i; command { echo ${i} }; }; ```. The call caching simpletons shouldn't include the call name in the input hash keys:. ```; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; | CALL_CACHING_HASH_ENTRY_ID | HASH_KEY | HASH_VALUE | CALL_CACHING_ENTRY_ID |; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; ....; | 137 | input: File foo.i | 778138a97b315ec95f374425255f8b9e | 12 |; | 138 | input: File bar.i | 778138a97b315ec95f374425255f8b9e | 13 |; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1989
https://github.com/broadinstitute/cromwell/issues/1989:18,Performance,cache,cache,18,Tasks cannot call cache if their names are different (unless the tasks have no inputs!). The following tasks cannot call cache:. ```; task foo {; Int i; command { echo ${i} }; }; ```. ```; task bar {; Int i; command { echo ${i} }; }; ```. The call caching simpletons shouldn't include the call name in the input hash keys:. ```; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; | CALL_CACHING_HASH_ENTRY_ID | HASH_KEY | HASH_VALUE | CALL_CACHING_ENTRY_ID |; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; ....; | 137 | input: File foo.i | 778138a97b315ec95f374425255f8b9e | 12 |; | 138 | input: File bar.i | 778138a97b315ec95f374425255f8b9e | 13 |; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1989
https://github.com/broadinstitute/cromwell/issues/1989:121,Performance,cache,cache,121,Tasks cannot call cache if their names are different (unless the tasks have no inputs!). The following tasks cannot call cache:. ```; task foo {; Int i; command { echo ${i} }; }; ```. ```; task bar {; Int i; command { echo ${i} }; }; ```. The call caching simpletons shouldn't include the call name in the input hash keys:. ```; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; | CALL_CACHING_HASH_ENTRY_ID | HASH_KEY | HASH_VALUE | CALL_CACHING_ENTRY_ID |; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; ....; | 137 | input: File foo.i | 778138a97b315ec95f374425255f8b9e | 12 |; | 138 | input: File bar.i | 778138a97b315ec95f374425255f8b9e | 13 |; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1989
https://github.com/broadinstitute/cromwell/issues/1989:312,Security,hash,hash,312,Tasks cannot call cache if their names are different (unless the tasks have no inputs!). The following tasks cannot call cache:. ```; task foo {; Int i; command { echo ${i} }; }; ```. ```; task bar {; Int i; command { echo ${i} }; }; ```. The call caching simpletons shouldn't include the call name in the input hash keys:. ```; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; | CALL_CACHING_HASH_ENTRY_ID | HASH_KEY | HASH_VALUE | CALL_CACHING_ENTRY_ID |; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; ....; | 137 | input: File foo.i | 778138a97b315ec95f374425255f8b9e | 12 |; | 138 | input: File bar.i | 778138a97b315ec95f374425255f8b9e | 13 |; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1989
https://github.com/broadinstitute/cromwell/issues/1989:256,Usability,simpl,simpletons,256,Tasks cannot call cache if their names are different (unless the tasks have no inputs!). The following tasks cannot call cache:. ```; task foo {; Int i; command { echo ${i} }; }; ```. ```; task bar {; Int i; command { echo ${i} }; }; ```. The call caching simpletons shouldn't include the call name in the input hash keys:. ```; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; | CALL_CACHING_HASH_ENTRY_ID | HASH_KEY | HASH_VALUE | CALL_CACHING_ENTRY_ID |; +----------------------------+-----------------------------------------+----------------------------------+-----------------------+; ....; | 137 | input: File foo.i | 778138a97b315ec95f374425255f8b9e | 12 |; | 138 | input: File bar.i | 778138a97b315ec95f374425255f8b9e | 13 |; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1989
https://github.com/broadinstitute/cromwell/issues/1990:137,Security,hash,hashes,137,"Endpoint with these arguments:; - `call1_fqn`; - `call1_index`; - `call2_fqn`; - `call2_index`. Which would return a set of call caching hashes which were generated for call2 which do not match call1. Has to be exactly that, to mirror the call caching algorithm",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1990
https://github.com/broadinstitute/cromwell/issues/1991:706,Modifiability,config,config,706,"Briefest of discussions with Jose. NOTE: All naming up in the air. Enable a runtime attribute such as `retryOnStderrPattern` that populates a value `retryAttempt`/`retry`/`retryCount`/`retry_count`/etc. This will enable tasks such as:. ```; task mytask {; command {; mycommand.sh; }; runtime {; retryOnStderrPattern = ""(OutOfMemoryError|disk quota exceeded)""; memory = (6 * retryAttempt) + ""GB""; disk = ""local-disk "" + (100 * retryAttempt) + "" SSD""; docker = ""myrepo/myimage""; }; }; ```. When the stderr contains the specified regular expression pattern, the job should be retried with the counter incremented. Not discussed afaik, how to limit the number of attempts: another runtime attribute, a backend config value, both, other?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1991
https://github.com/broadinstitute/cromwell/issues/1994:195,Performance,cache,cacheHit,195,"An additional call caching metadatum that just says whether it was a hit or miss. The existing `Call caching read result` can stay as it is, or we could standardise the name a bit?. e.g. ; ```; ""cacheHit"": true; ""cacheResult"": ""Cache Hit: b324a594-6d46-47d1-b641-7a0dbf4b21c2:call_cache_capoeira_jes.make_files:-1""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1994
https://github.com/broadinstitute/cromwell/issues/1994:213,Performance,cache,cacheResult,213,"An additional call caching metadatum that just says whether it was a hit or miss. The existing `Call caching read result` can stay as it is, or we could standardise the name a bit?. e.g. ; ```; ""cacheHit"": true; ""cacheResult"": ""Cache Hit: b324a594-6d46-47d1-b641-7a0dbf4b21c2:call_cache_capoeira_jes.make_files:-1""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1994
https://github.com/broadinstitute/cromwell/issues/1994:228,Performance,Cache,Cache,228,"An additional call caching metadatum that just says whether it was a hit or miss. The existing `Call caching read result` can stay as it is, or we could standardise the name a bit?. e.g. ; ```; ""cacheHit"": true; ""cacheResult"": ""Cache Hit: b324a594-6d46-47d1-b641-7a0dbf4b21c2:call_cache_capoeira_jes.make_files:-1""; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1994
https://github.com/broadinstitute/cromwell/issues/1995:20,Performance,race condition,race condition,20,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1995:75,Performance,cache,cache,75,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1995:94,Performance,cache,cache,94,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1995:246,Performance,cache,cache,246,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1995:261,Performance,perform,performed,261,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1995:390,Performance,cache,cache,390,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1995:517,Testability,test,tests,517,"There seems to be a race condition in call caching. It's possible to get a cache miss where a cache hit would be expected. If the jobs are immediately sequential, the first job's write may not have finished by the time that the second job's call cache check is performed. I personally think that this is:; - medium impact (someone might re-run and have to pay for a job they expect to call cache); - low probability of happening (after all, who runs the same job immediately after itself, apart from our call-caching tests...?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1995
https://github.com/broadinstitute/cromwell/issues/1998:3194,Performance,concurren,concurrent,3194,orkflowSuccessful(WorkflowExecutionActor.scala:261); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:325); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:308); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:96); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:81); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:496); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1998
https://github.com/broadinstitute/cromwell/issues/1998:3267,Performance,concurren,concurrent,3267,orkflowSuccessful(WorkflowExecutionActor.scala:261); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:325); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:308); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:96); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:81); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:496); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1998
https://github.com/broadinstitute/cromwell/issues/1998:3352,Performance,concurren,concurrent,3352,orkflowSuccessful(WorkflowExecutionActor.scala:261); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:325); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:308); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:96); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:81); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:496); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1998
https://github.com/broadinstitute/cromwell/issues/1998:3429,Performance,concurren,concurrent,3429,orkflowSuccessful(WorkflowExecutionActor.scala:261); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:325); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:308); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:96); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:81); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:496); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1998
https://github.com/broadinstitute/cromwell/issues/1998:2360,Testability,Log,LoggingFSM,2360,l4s.Workflow.evaluateOutputs(Workflow.scala:180); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleWorkflowSuccessful(WorkflowExecutionActor.scala:261); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:325); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:308); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:96); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:81); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:496); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1998
https://github.com/broadinstitute/cromwell/issues/1998:2439,Testability,Log,LoggingFSM,2439,ne.workflow.lifecycle.execution.WorkflowExecutionActor.handleWorkflowSuccessful(WorkflowExecutionActor.scala:261); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.handleExecutionSuccess(WorkflowExecutionActor.scala:325); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$handleCallSuccessful(WorkflowExecutionActor.scala:308); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:96); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$3.applyOrElse(WorkflowExecutionActor.scala:81); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at akka.actor.FSM$class.processEvent(FSM.scala:663); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); at akka.actor.Actor$class.aroundReceive(Actor.scala:496); at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); at akka.actor.ActorCell.invoke(ActorCell.scala:495); at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); at akka.dispatch.Mailbox.run(Mailbox.scala:224); at akka.dispatch.Mailbox.exec(Mailbox.scala:234); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1998
https://github.com/broadinstitute/cromwell/issues/1999:311,Integrability,depend,depending,311,"When a file is being copied as a result of a cache hit, the SFS backend implementation will ignore the result of said copy. ; This means that even if some/all output files, including stdout from the cached job have been deleted, the hit will be consider successful.; Consequently the workflow will continue and depending tasks will likely fail if they use one of those outputs, in turn failing the workflow. Fix: If a file can't be copied, it should be reported to the EJEA which will run the job instead.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1999
https://github.com/broadinstitute/cromwell/issues/1999:45,Performance,cache,cache,45,"When a file is being copied as a result of a cache hit, the SFS backend implementation will ignore the result of said copy. ; This means that even if some/all output files, including stdout from the cached job have been deleted, the hit will be consider successful.; Consequently the workflow will continue and depending tasks will likely fail if they use one of those outputs, in turn failing the workflow. Fix: If a file can't be copied, it should be reported to the EJEA which will run the job instead.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1999
https://github.com/broadinstitute/cromwell/issues/1999:199,Performance,cache,cached,199,"When a file is being copied as a result of a cache hit, the SFS backend implementation will ignore the result of said copy. ; This means that even if some/all output files, including stdout from the cached job have been deleted, the hit will be consider successful.; Consequently the workflow will continue and depending tasks will likely fail if they use one of those outputs, in turn failing the workflow. Fix: If a file can't be copied, it should be reported to the EJEA which will run the job instead.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/1999
https://github.com/broadinstitute/cromwell/issues/2000:7,Performance,cache,cache,7,"When a cache hit fails to be used (outputs can't be copied), it will be invalidated so subsequent jobs don't try to cache to it.; However nowhere do we actually filter out those invalidated cache hits, which means they always come back as potential valid hits and are perpetually invalidated...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2000
https://github.com/broadinstitute/cromwell/issues/2000:116,Performance,cache,cache,116,"When a cache hit fails to be used (outputs can't be copied), it will be invalidated so subsequent jobs don't try to cache to it.; However nowhere do we actually filter out those invalidated cache hits, which means they always come back as potential valid hits and are perpetually invalidated...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2000
https://github.com/broadinstitute/cromwell/issues/2000:190,Performance,cache,cache,190,"When a cache hit fails to be used (outputs can't be copied), it will be invalidated so subsequent jobs don't try to cache to it.; However nowhere do we actually filter out those invalidated cache hits, which means they always come back as potential valid hits and are perpetually invalidated...",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2000
https://github.com/broadinstitute/cromwell/issues/2001:1286,Integrability,Message,Messages,1286,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2001:912,Performance,cache,cache,912,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2001:1171,Performance,cache,cache,1171,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2001:1230,Performance,cache,cached,1230,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2001:50,Testability,mock,mock,50,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2001:994,Testability,mock,mock,994,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2001:1337,Testability,log,log,1337,"The exact cause is unknown.; To reproduce:; Using mock JES and CC turned on, run a workflow. ; e.g:. ```; task prepare {; command <<<; python3 -c ""print('one\ntwo\nthree\nfour')"" > out; >>>; output {; Array[String] array = [""a"", ""b"", ""c""]; }; runtime {; docker: ""python:3.5.0""; }; }. task analysis {; String str; command <<<; python3 -c ""print('_${str}_')"" > a.txt; >>>; output {; String out = ""helanalysiso""; }; runtime {; docker: ""python:3.5.0""; }; }. task gather {; Array[String] array; command <<<; cat ${sep=' ' array} > out; >>>; output {; String str = ""hegatherlo""; }; runtime {; docker: ""ubuntu:latest""; }; }. workflow scattergather {; call prepare; scatter (x in prepare.array) {; call analysis {input: str=x}; }; call gather {input: array=analysis.out}; output {; gather.str; }; }; ```. Then launch the same workflow using the batch endpoint, 50 times.; All the jobs will try to use the first run as a cache hit, but they will all fail to do so because stdout does not exist (because mock JES does not create it).; First failed attempts will then fallback and run the job, which is the expected behavior.; However after a few of those iterations, more and more cache entries are added, which are all going to fail being cached to for the same reason (stdout does not exist).; Messages like the following start to appear in the log, which fails the workflows:. ` akka.actor.InvalidActorNameException: actor name [3f311f10-94c6-4666-b714-a661a9c95726-BackendCacheHitCopyingActor-3f311f10:scattergather.analysis:1:1] is not unique!`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2001
https://github.com/broadinstitute/cromwell/issues/2005:473,Availability,Error,Error,473,"- 0.25; - Local+docker backend (though I doubt it matters); - single workflow (though I doubt it matters). Workflow output is optional and sometimes both ``oncotate_m2_ob.oncotated_m2_vcf`` and ``oncotate_m2_no_ob.oncotated_m2_vcf`` are not populated. Proposed solution: select_first returns null if no inputs are populated. Offending workflow output:; ```; File? oncotated_m2_vcf = select_first([oncotate_m2_ob.oncotated_m2_vcf, oncotate_m2_no_ob.oncotated_m2_vcf]); ```. Error message:; ```; [ERROR] [02/17/2017 14:18:45.923] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow e241e2bc-95cd-4a8c-a814-20bb8852c6b5 failed (during ExecutingWorkflowState): select_first failed. All provided values were empty.; java.lang.IllegalArgumentException: select_first failed. All provided values were empty.; at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1$$anonfun$apply$10.apply(WdlStandardLibraryFunctions.scala:180); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1$$anonfun$apply$10.apply(WdlStandardLibraryFunctions.scala:180); at scala.Option.getOrElse(Option.scala:121); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1.apply(WdlStandardLibraryFunctions.scala:180); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1.apply(WdlStandardLibraryFunctions.scala:175); at scala.util.Success.flatMap(Try.scala:231); at wdl4s.expression.WdlStandardLibraryFunctions$class.select_first(WdlStandardLibraryFunctions.scala:175). ....snip....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2005
https://github.com/broadinstitute/cromwell/issues/2005:495,Availability,ERROR,ERROR,495,"- 0.25; - Local+docker backend (though I doubt it matters); - single workflow (though I doubt it matters). Workflow output is optional and sometimes both ``oncotate_m2_ob.oncotated_m2_vcf`` and ``oncotate_m2_no_ob.oncotated_m2_vcf`` are not populated. Proposed solution: select_first returns null if no inputs are populated. Offending workflow output:; ```; File? oncotated_m2_vcf = select_first([oncotate_m2_ob.oncotated_m2_vcf, oncotate_m2_no_ob.oncotated_m2_vcf]); ```. Error message:; ```; [ERROR] [02/17/2017 14:18:45.923] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow e241e2bc-95cd-4a8c-a814-20bb8852c6b5 failed (during ExecutingWorkflowState): select_first failed. All provided values were empty.; java.lang.IllegalArgumentException: select_first failed. All provided values were empty.; at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1$$anonfun$apply$10.apply(WdlStandardLibraryFunctions.scala:180); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1$$anonfun$apply$10.apply(WdlStandardLibraryFunctions.scala:180); at scala.Option.getOrElse(Option.scala:121); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1.apply(WdlStandardLibraryFunctions.scala:180); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1.apply(WdlStandardLibraryFunctions.scala:175); at scala.util.Success.flatMap(Try.scala:231); at wdl4s.expression.WdlStandardLibraryFunctions$class.select_first(WdlStandardLibraryFunctions.scala:175). ....snip....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2005
https://github.com/broadinstitute/cromwell/issues/2005:479,Integrability,message,message,479,"- 0.25; - Local+docker backend (though I doubt it matters); - single workflow (though I doubt it matters). Workflow output is optional and sometimes both ``oncotate_m2_ob.oncotated_m2_vcf`` and ``oncotate_m2_no_ob.oncotated_m2_vcf`` are not populated. Proposed solution: select_first returns null if no inputs are populated. Offending workflow output:; ```; File? oncotated_m2_vcf = select_first([oncotate_m2_ob.oncotated_m2_vcf, oncotate_m2_no_ob.oncotated_m2_vcf]); ```. Error message:; ```; [ERROR] [02/17/2017 14:18:45.923] [cromwell-system-akka.dispatchers.engine-dispatcher-5] [akka://cromwell-system/user/SingleWorkflowRunnerActor/WorkflowManagerActor] WorkflowManagerActor Workflow e241e2bc-95cd-4a8c-a814-20bb8852c6b5 failed (during ExecutingWorkflowState): select_first failed. All provided values were empty.; java.lang.IllegalArgumentException: select_first failed. All provided values were empty.; at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1$$anonfun$apply$10.apply(WdlStandardLibraryFunctions.scala:180); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1$$anonfun$apply$10.apply(WdlStandardLibraryFunctions.scala:180); at scala.Option.getOrElse(Option.scala:121); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1.apply(WdlStandardLibraryFunctions.scala:180); at wdl4s.expression.WdlStandardLibraryFunctions$$anonfun$select_first$1.apply(WdlStandardLibraryFunctions.scala:175); at scala.util.Success.flatMap(Try.scala:231); at wdl4s.expression.WdlStandardLibraryFunctions$class.select_first(WdlStandardLibraryFunctions.scala:175). ....snip....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2005
https://github.com/broadinstitute/cromwell/issues/2009:2796,Integrability,protocol,protocol,2796,anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.cloud.storage.spi.DefaultStorageRpc.open(DefaultStorageRpc.java:563); at com.google.cloud.storage.BlobWriteChannel.<init>(BlobWriteChannel.java:36); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:476); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:471); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:70); at com.google.cloud.storage.contrib.nio,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:2889,Integrability,protocol,protocol,2889,tch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.cloud.storage.spi.DefaultStorageRpc.open(DefaultStorageRpc.java:563); at com.google.cloud.storage.BlobWriteChannel.<init>(BlobWriteChannel.java:36); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:476); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:471); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:70); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newWriteChannel(CloudStorageFil\; eSystemProvider.java:327); ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:3056,Integrability,protocol,protocol,3056,ableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.cloud.storage.spi.DefaultStorageRpc.open(DefaultStorageRpc.java:563); at com.google.cloud.storage.BlobWriteChannel.<init>(BlobWriteChannel.java:36); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:476); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:471); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:70); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newWriteChannel(CloudStorageFil\; eSystemProvider.java:327); at com.google.cloud.storage.contrib.nio.CloudStorageFileSystemProvider.newByteChannel(CloudStorageFile\; SystemProvider.java:220); at java.nio.file.spi.FileSystemProvi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:1355,Performance,concurren,concurrent,1355,kend$impl$jes$JesInitializati\; onActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); at scala.Option.foreach(Option.scala:257); at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$\; writeAuthenticationFile(JesInitializationActor.scala:58); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:52); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:51); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:155); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.f,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:1426,Performance,concurren,concurrent,1426,y(JesInitializationActor.scala:58); at scala.Option.foreach(Option.scala:257); at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$\; writeAuthenticationFile(JesInitializationActor.scala:58); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:52); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:51); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:155); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scal,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:1497,Performance,concurren,concurrent,1497,a:257); at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$\; writeAuthenticationFile(JesInitializationActor.scala:58); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:52); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:51); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:155); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:1955,Performance,concurren,concurrent,1955,ckend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:155); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:14,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:2276,Performance,concurren,concurrent,2276,$apply$1.apply(\; BackendWorkflowInitializationActor.scala:155); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpReques,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:2349,Performance,concurren,concurrent,2349,.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:2434,Performance,concurren,concurrent,2434,ture$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.cloud.storage.spi.DefaultStorageRpc.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:2511,Performance,concurren,concurrent,2511,lbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.cloud.storage.spi.DefaultStorageRpc.open(DefaultStorageRpc.java:563); at com.google.cloud.storage.BlobWriteChanne,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:86,Security,authenticat,authentication,86,Appears to be a good case for retry love:. ```; java.io.IOException: Failed to upload authentication file; at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializati\; onActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:61); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$cromwell$backend$impl$jes$JesInitializati\; onActor$$writeAuthenticationFile$1.apply(JesInitializationActor.scala:58); at scala.Option.foreach(Option.scala:257); at cromwell.backend.impl.jes.JesInitializationActor.cromwell$backend$impl$jes$JesInitializationActor$$\; writeAuthenticationFile(JesInitializationActor.scala:58); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:52); at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.apply(JesInitializationActor.\; scala:51); at scala.util.Try$.apply(Try.scala:192); at cromwell.backend.impl.jes.JesInitializationActor.beforeAll(JesInitializationActor.scala:51); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:156); at cromwell.backend.BackendWorkflowInitializationActor$$anonfun$initSequence$1$$anonfun$apply$1.apply(\; BackendWorkflowInitializationActor.scala:155); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253); at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(Bloc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/issues/2009:2650,Security,secur,security,2650,atch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91\; ); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: java.net.SocketException: Socket is closed; at sun.security.ssl.SSLSocketImpl.getInputStream(SSLSocketImpl.java:2218); at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:642); at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); at com.google.cloud.storage.spi.DefaultStorageRpc.open(DefaultStorageRpc.java:563); at com.google.cloud.storage.BlobWriteChannel.<init>(BlobWriteChannel.java:36); at com.google.cloud.storage.StorageImpl.writer(StorageImpl.java:476); at com.google.cloud.storage.Stor,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2009
https://github.com/broadinstitute/cromwell/pull/2010:34,Deployability,update,update,34,Unhardcode `allowResultReuse` and update its value when a cached job gets invalidated. - [x] Revert custom centaur branch,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2010
https://github.com/broadinstitute/cromwell/pull/2010:58,Performance,cache,cached,58,Unhardcode `allowResultReuse` and update its value when a cached job gets invalidated. - [x] Revert custom centaur branch,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2010
https://github.com/broadinstitute/cromwell/issues/2011:218,Availability,error,error,218,"- cromwell-25-c398490; - Local backend; - single workflow ; - using docker; - Google VM. This has happened multiple times. Three days apart. Reading google buckets from a local backend has worked fine in the past. The error states that a file cannot be found, yet the error messages look more like a HTTP 500. ``gsutil ls ...`` shows that the file is there. . Apologies if I am missing something obvious (this may just be a misleading error message)... ```; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:268,Availability,error,error,268,"- cromwell-25-c398490; - Local backend; - single workflow ; - using docker; - Google VM. This has happened multiple times. Three days apart. Reading google buckets from a local backend has worked fine in the past. The error states that a file cannot be found, yet the error messages look more like a HTTP 500. ``gsutil ls ...`` shows that the file is there. . Apologies if I am missing something obvious (this may just be a misleading error message)... ```; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:435,Availability,error,error,435,"- cromwell-25-c398490; - Local backend; - single workflow ; - using docker; - Google VM. This has happened multiple times. Three days apart. Reading google buckets from a local backend has worked fine in the past. The error states that a file cannot be found, yet the error messages look more like a HTTP 500. ``gsutil ls ...`` shows that the file is there. . Apologies if I am missing something obvious (this may just be a misleading error message)... ```; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:1835,Availability,Error,Error,1835,-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.confi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:1850,Availability,Error,Error,1850,-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.confi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:1877,Availability,Error,Error,1877,-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.confi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:1892,Availability,Error,Error,1892,-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.confi,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:2317,Availability,Failure,Failure,2317,/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:2325,Availability,recover,recoverWith,2325,licate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:274,Integrability,message,messages,274,"- cromwell-25-c398490; - Local backend; - single workflow ; - using docker; - Google VM. This has happened multiple times. Three days apart. Reading google buckets from a local backend has worked fine in the past. The error states that a file cannot be found, yet the error messages look more like a HTTP 500. ``gsutil ls ...`` shows that the file is there. . Apologies if I am missing something obvious (this may just be a misleading error message)... ```; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:441,Integrability,message,message,441,"- cromwell-25-c398490; - Local backend; - single workflow ; - using docker; - Google VM. This has happened multiple times. Three days apart. Reading google buckets from a local backend has worked fine in the past. The error states that a file cannot be found, yet the error messages look more like a HTTP 500. ``gsutil ls ...`` shows that the file is there. . Apologies if I am missing something obvious (this may just be a misleading error message)... ```; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; lichtens@lichtens-big:~/test_onco_m2$ gsutil ls gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V3.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V4.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V5.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bai; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam; gs://broad-dsde-methods/takuto/na12878-crsp-ice/na12878-replicate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:2845,Modifiability,config,config,2845,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:2922,Modifiability,Config,ConfigAsyncJobExecutionActor,2922,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:2992,Modifiability,config,config,2992,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:3058,Modifiability,Config,ConfigAsyncJobExecutionActor,3058,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:3253,Modifiability,config,config,3253,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:3321,Modifiability,Config,ConfigAsyncJobExecutionActor,3321,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:3531,Modifiability,config,config,3531,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:3658,Modifiability,Config,ConfigAsyncJobExecutionActor,3658,/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.sfs.SharedFileSystemAsyncJobExecutionActor$class.writeScriptContents(SharedFileSystemAsyncJobExecutionActor.scala:136); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.cromwell$backend$sfs$BackgroundAsyncJobExecutionActor$$super$writeScriptContents(ConfigAsyncJobExecutionActor.scala:107); ....snip....; ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2011:2325,Safety,recover,recoverWith,2325,licate-pairs-cloud.tsv. ```. ```; Could not localize gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam -> /home/lichtens/test_onco_m2/cromwell-executions/Mutect2ReplicateValidation/bf7e55a8-033b-4b36-9aa6-eeb2d77579d8/call-Mutect2/shard-11/Mutect2/0802e0bb-3231-4e14-a627-1ed839b213ae/call-CollectSequencingArtifactMetrics/inputs/broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam:; gs://broad-dsde-methods/takuto/na12878-crsp-ice/SM-612V6.bam doesn't exists; null; 500 Internal Server Error; Backend Error; 500 Internal Server Error; Backend Error; at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:106); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1$$anonfun$apply$1.applyOrElse(StandardAsyncExecutionActor.scala:105); at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); at scala.util.Failure.recoverWith(Try.scala:203); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.standard.StandardAsyncExecutionActor$$anonfun$commandLinePreProcessor$1.apply(StandardAsyncExecutionActor.scala:105); at cromwell.backend.wdl.Command$.instantiate(Command.scala:27); at cromwell.backend.standard.StandardAsyncExecutionActor$class.instantiatedCommand(StandardAsyncExecutionActor.scala:198); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand$lzycompute(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.instantiatedCommand(ConfigAsyncJobExecutionActor.scala:107); at cromwell.backend.standard.StandardAsyncExecutionActor$class.commandScriptContents(StandardAsyncExecutionActor.scala:170); at cromwell.backend.impl.sfs.config.BackgroundConfigAsyncJobExecutionActor.commandScriptContents(ConfigAsyncJ,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2011
https://github.com/broadinstitute/cromwell/issues/2016:61,Availability,Error,Error,61,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016
https://github.com/broadinstitute/cromwell/issues/2016:538,Availability,Failure,Failure,538,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016
https://github.com/broadinstitute/cromwell/issues/2016:563,Availability,error,error,563,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016
https://github.com/broadinstitute/cromwell/issues/2016:94,Energy Efficiency,schedul,schedule,94,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016
https://github.com/broadinstitute/cromwell/issues/2016:384,Testability,log,log,384,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016
https://github.com/broadinstitute/cromwell/issues/2016:559,Testability,log,log,559,"Instead of failing fast on database `Exception`s (NOTE: not `Error`s), the actors/fsms should schedule a retry. Example from [`WriteMetadataActor`](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/services/src/main/scala/cromwell/services/metadata/impl/WriteMetadataActor.scala#L45-L52):; ```scala; case Event(FlushBatchToDb, HasEvents(e)) =>; log.debug(""Flushing {} metadata events to the DB"", e.length); addMetadataEvents(e.toVector) onComplete {; case Success(_) => self ! DbWriteComplete; case Failure(regerts) =>; log.error(""Failed to properly flush metadata to database"", regerts); self ! DbWriteComplete; }; stay using NoEvents; ```. On an exception, the `e` events could be rescheduled.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2016
https://github.com/broadinstitute/cromwell/issues/2017:242,Deployability,release,release,242,"Here is the permalink for the document that was already written by @cjllanwarne about [How to Make Your Own Backend](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/MakingABackend.MD). I would like to release it around the same time that we publish the [AWS repo](https://github.com/broadinstitute/aws-backend), which is pending until the [documentation is improved](https://docs.google.com/document/d/1qwY0QBo04WIAvsACbvtIshfxbs1OJRvNp93oclxCRk8/edit#heading=h.pqdhlnltxuz5). This blog post would show up on the WDL blog, which is developer focused. . @sooheelee I am thinking of including a message to the effect of ""This blog post is about our story, it is not a living document. If you decide to write your own backend you should contact us"". Then if many people contact us then we can make a living document about how to write your own backend for Cromwell. This is instead of making this blog post into a living document from the outset, which would take effort in its upkeep, without any clear need for it. What do you think?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2017
https://github.com/broadinstitute/cromwell/issues/2017:634,Integrability,message,message,634,"Here is the permalink for the document that was already written by @cjllanwarne about [How to Make Your Own Backend](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/MakingABackend.MD). I would like to release it around the same time that we publish the [AWS repo](https://github.com/broadinstitute/aws-backend), which is pending until the [documentation is improved](https://docs.google.com/document/d/1qwY0QBo04WIAvsACbvtIshfxbs1OJRvNp93oclxCRk8/edit#heading=h.pqdhlnltxuz5). This blog post would show up on the WDL blog, which is developer focused. . @sooheelee I am thinking of including a message to the effect of ""This blog post is about our story, it is not a living document. If you decide to write your own backend you should contact us"". Then if many people contact us then we can make a living document about how to write your own backend for Cromwell. This is instead of making this blog post into a living document from the outset, which would take effort in its upkeep, without any clear need for it. What do you think?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2017
https://github.com/broadinstitute/cromwell/issues/2017:1036,Usability,clear,clear,1036,"Here is the permalink for the document that was already written by @cjllanwarne about [How to Make Your Own Backend](https://github.com/broadinstitute/cromwell/blob/9a734c4f36ae122153736004e8d54fc44af8fbde/MakingABackend.MD). I would like to release it around the same time that we publish the [AWS repo](https://github.com/broadinstitute/aws-backend), which is pending until the [documentation is improved](https://docs.google.com/document/d/1qwY0QBo04WIAvsACbvtIshfxbs1OJRvNp93oclxCRk8/edit#heading=h.pqdhlnltxuz5). This blog post would show up on the WDL blog, which is developer focused. . @sooheelee I am thinking of including a message to the effect of ""This blog post is about our story, it is not a living document. If you decide to write your own backend you should contact us"". Then if many people contact us then we can make a living document about how to write your own backend for Cromwell. This is instead of making this blog post into a living document from the outset, which would take effort in its upkeep, without any clear need for it. What do you think?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2017
https://github.com/broadinstitute/cromwell/issues/2019:169,Deployability,pipeline,pipelines,169,Rename (at least for user visible aspects) the JES backend. As time goes on fewer people are going to be able to make the connection between JES and the google genomics pipelines api and this is going to lead to confusion,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2019
https://github.com/broadinstitute/cromwell/issues/2020:1176,Availability,ERROR,ERROR,1176,"; ```java; 2017-02-22 13:49:48,448 cromwell-system-akka.dispatchers.api-dispatcher-23 INFO - Workflow 56b1f228-8054-4947-8dc3-372363c5e94b submitted.; 2017-02-22 13:49:57,791 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - 1 new workflows fetched; 2017-02-22 13:49:57,792 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Starting workflow UUID(56b1f228-8054-4947-8dc3-372363c5e94b); 2017-02-22 13:49:57,798 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Successfully started WorkflowActor-56b1f228-8054-4947-8dc3-372363c5e94b; 2017-02-22 13:49:57,799 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2017-02-22 13:49:58,220 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - MaterializeWorkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:1202,Availability,failure,failure,1202,"; ```java; 2017-02-22 13:49:48,448 cromwell-system-akka.dispatchers.api-dispatcher-23 INFO - Workflow 56b1f228-8054-4947-8dc3-372363c5e94b submitted.; 2017-02-22 13:49:57,791 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - 1 new workflows fetched; 2017-02-22 13:49:57,792 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Starting workflow UUID(56b1f228-8054-4947-8dc3-372363c5e94b); 2017-02-22 13:49:57,798 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Successfully started WorkflowActor-56b1f228-8054-4947-8dc3-372363c5e94b; 2017-02-22 13:49:57,799 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2017-02-22 13:49:58,220 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - MaterializeWorkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:1257,Availability,failure,failure,1257,"ers.api-dispatcher-23 INFO - Workflow 56b1f228-8054-4947-8dc3-372363c5e94b submitted.; 2017-02-22 13:49:57,791 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - 1 new workflows fetched; 2017-02-22 13:49:57,792 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Starting workflow UUID(56b1f228-8054-4947-8dc3-372363c5e94b); 2017-02-22 13:49:57,798 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Successfully started WorkflowActor-56b1f228-8054-4947-8dc3-372363c5e94b; 2017-02-22 13:49:57,799 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2017-02-22 13:49:58,220 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - MaterializeWorkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:3155,Modifiability,Variab,Variable,3155,cala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		a,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:3581,Modifiability,Variab,VariableNotFoundException,3581,h.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:45); 		at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:85); 		at wdl4s.WdlExpression.evaluate(WdlExpression.scala:161); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:3616,Modifiability,Variab,Variable,3616,h.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:45); 		at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:85); 		at wdl4s.WdlExpression.evaluate(WdlExpression.scala:161); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecuti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:3689,Modifiability,Variab,VariableNotFoundException,3689,un(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:45); 		at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:85); 		at wdl4s.WdlExpression.evaluate(WdlExpression.scala:161); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$processRunnableScatter(WorkflowExecutionActor.scala:509); 		at c,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:5719,Modifiability,variab,variable,5719,"cala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at wdl4s.expression.ValueEvaluator$$anonfun$evaluate$1.apply(ValueEvaluator.scala:45); 		at scala.util.Try$.apply(Try.scala:192); 		at wdl4s.expression.ValueEvaluator.evaluate(ValueEvaluator.scala:45); 		at wdl4s.WdlExpression$.evaluate(WdlExpression.scala:85); 		at wdl4s.WdlExpression.evaluate(WdlExpression.scala:161); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$processRunnableScatter(WorkflowExecutionActor.scala:509); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$20.apply(WorkflowExecutionActor.scala:361); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$20.apply(WorkflowExecutionActor.scala:357); 		at scala.collection.immutable.List.map(List.scala:273); 		at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:357); 		... 20 common frames omitted; ```. Workflow metadata is left in `Running`:. ```json; {; ""workflowName"": ""wf"",; ""submittedFiles"": {; ""inputs"": ""{}"",; ""workflow"": ""workflow wf {\n scatter (example in non_existent_scatter_variable) {}\n}\n"",; ""options"": ""{\n\n}""; },; ""calls"": {},; ""outputs"": {},; ""id"": ""56b1f228-8054-4947-8dc3-372363c5e94b"",; ""inputs"": {},; ""submission"": ""2017-02-22T13:49:48.451-05:00"",; ""status"": ""Running"",; ""start"": ""2017-02-22T13:49:57.839-05:00""; }; ```. Workaround: Fix the missing scatter variable in the wdl.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:2786,Performance,concurren,concurrent,2786,.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.sca,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:2860,Performance,concurren,concurrent,2860,well.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Op,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:2946,Performance,concurren,concurrent,2946,$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:3024,Performance,concurren,concurrent,3024,M$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: lenthall.exception.AggregatedException: :; Variable 'non_existent_scatter_variable' not found; 	at lenthall.util.TryUtil$.sequenceIterable(TryUtil.scala:26); 	at lenthall.util.TryUtil$.sequence(TryUtil.scala:33); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:373); 	... 20 common frames omitted; 	Suppressed: wdl4s.exception.VariableNotFoundException$$anon$1: Variable 'non_existent_scatter_variable' not found; 		at wdl4s.exception.VariableNotFoundException$.apply(LookupException.scala:17); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at wdl4s.Scope$$anonfun$6.apply(Scope.scala:268); 		at scala.Option.getOrElse(Option.scala:121); 		at wdl4s.Scope$class.lookup$1(Scope.scala:267); 		at wdl4s.Scope$$anonfun$lookupFunction$1.apply(Scope.scala:274); 		at wdl4s.Sc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:153,Testability,test,tested,153,"Minimal example:. ```; workflow wf {; scatter (example in non_existent_scatter_variable) {}; }; ```. Produces similar output on firecloud (489f66b), but tested also on develop (5588e73):; ```java; 2017-02-22 13:49:48,448 cromwell-system-akka.dispatchers.api-dispatcher-23 INFO - Workflow 56b1f228-8054-4947-8dc3-372363c5e94b submitted.; 2017-02-22 13:49:57,791 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - 1 new workflows fetched; 2017-02-22 13:49:57,792 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Starting workflow UUID(56b1f228-8054-4947-8dc3-372363c5e94b); 2017-02-22 13:49:57,798 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - WorkflowManagerActor Successfully started WorkflowActor-56b1f228-8054-4947-8dc3-372363c5e94b; 2017-02-22 13:49:57,799 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - Retrieved 1 workflows from the WorkflowStoreActor; 2017-02-22 13:49:58,220 cromwell-system-akka.dispatchers.engine-dispatcher-14 INFO - MaterializeWorkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:3",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:1940,Testability,Log,LoggingFSM,1940,"l-system-akka.dispatchers.engine-dispatcher-14 INFO - MaterializeWorkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkj",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2020:2020,Testability,Log,LoggingFSM,2020,"rkflowDescriptorActor [UUID(56b1f228)]: Call-to-Backend assignments: ; 2017-02-22 13:49:58,373 cromwell-system-akka.dispatchers.engine-dispatcher-7 ERROR - Unexpected engine failure; java.lang.RuntimeException: Unexpected engine failure; 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.cromwell$engine$workflow$lifecycle$execution$WorkflowExecutionActor$$startRunnableScopes(WorkflowExecutionActor.scala:384); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:77); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor$$anonfun$2.applyOrElse(WorkflowExecutionActor.scala:75); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.akka$actor$LoggingFSM$$super$processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.processEvent(WorkflowExecutionActor.scala:32); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.engine.workflow.lifecycle.execution.WorkflowExecutionActor.aroundReceive(WorkflowExecutionActor.scala:32); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concu",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2020
https://github.com/broadinstitute/cromwell/issues/2021:273,Deployability,configurat,configuration,273,"Trying to build cromwell from source, getting the following:; ```; [warn] 	::::::::::::::::::::::::::::::::::::::::::::::; [warn] 	:: UNRESOLVED DEPENDENCIES ::; [warn] 	::::::::::::::::::::::::::::::::::::::::::::::; [warn] 	:: org.apache.httpcomponents#httpclient;4.5.2: configuration not found in org.apache.httpcomponents#httpclient;4.5.2: 'compile'. It was required from org.broadinstitute#cromwell-gcsfilesystem_2.11;25-5588e73-SNAP compile. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2021
https://github.com/broadinstitute/cromwell/issues/2021:145,Integrability,DEPEND,DEPENDENCIES,145,"Trying to build cromwell from source, getting the following:; ```; [warn] 	::::::::::::::::::::::::::::::::::::::::::::::; [warn] 	:: UNRESOLVED DEPENDENCIES ::; [warn] 	::::::::::::::::::::::::::::::::::::::::::::::; [warn] 	:: org.apache.httpcomponents#httpclient;4.5.2: configuration not found in org.apache.httpcomponents#httpclient;4.5.2: 'compile'. It was required from org.broadinstitute#cromwell-gcsfilesystem_2.11;25-5588e73-SNAP compile. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2021
https://github.com/broadinstitute/cromwell/issues/2021:273,Modifiability,config,configuration,273,"Trying to build cromwell from source, getting the following:; ```; [warn] 	::::::::::::::::::::::::::::::::::::::::::::::; [warn] 	:: UNRESOLVED DEPENDENCIES ::; [warn] 	::::::::::::::::::::::::::::::::::::::::::::::; [warn] 	:: org.apache.httpcomponents#httpclient;4.5.2: configuration not found in org.apache.httpcomponents#httpclient;4.5.2: 'compile'. It was required from org.broadinstitute#cromwell-gcsfilesystem_2.11;25-5588e73-SNAP compile. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2021
https://github.com/broadinstitute/cromwell/issues/2023:25,Usability,pause,pause,25,"It would be nice to have pause/resume in cromwell API. Often you have several jobs running in paralel and when you see that one of them eats too much memory you would like to be able to pause execution for some time, waiting for other workflows to finish and then resume. Another usecase is when most of your workflow worked well but fails in the end. You figure out the problem and you do not want to start it from the very beginning as intermediate results are already recorded to the Cromwell-execution folder. You would like to resume after the last successful task",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2023
https://github.com/broadinstitute/cromwell/issues/2023:31,Usability,resume,resume,31,"It would be nice to have pause/resume in cromwell API. Often you have several jobs running in paralel and when you see that one of them eats too much memory you would like to be able to pause execution for some time, waiting for other workflows to finish and then resume. Another usecase is when most of your workflow worked well but fails in the end. You figure out the problem and you do not want to start it from the very beginning as intermediate results are already recorded to the Cromwell-execution folder. You would like to resume after the last successful task",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2023
https://github.com/broadinstitute/cromwell/issues/2023:186,Usability,pause,pause,186,"It would be nice to have pause/resume in cromwell API. Often you have several jobs running in paralel and when you see that one of them eats too much memory you would like to be able to pause execution for some time, waiting for other workflows to finish and then resume. Another usecase is when most of your workflow worked well but fails in the end. You figure out the problem and you do not want to start it from the very beginning as intermediate results are already recorded to the Cromwell-execution folder. You would like to resume after the last successful task",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2023
https://github.com/broadinstitute/cromwell/issues/2023:264,Usability,resume,resume,264,"It would be nice to have pause/resume in cromwell API. Often you have several jobs running in paralel and when you see that one of them eats too much memory you would like to be able to pause execution for some time, waiting for other workflows to finish and then resume. Another usecase is when most of your workflow worked well but fails in the end. You figure out the problem and you do not want to start it from the very beginning as intermediate results are already recorded to the Cromwell-execution folder. You would like to resume after the last successful task",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2023
https://github.com/broadinstitute/cromwell/issues/2023:532,Usability,resume,resume,532,"It would be nice to have pause/resume in cromwell API. Often you have several jobs running in paralel and when you see that one of them eats too much memory you would like to be able to pause execution for some time, waiting for other workflows to finish and then resume. Another usecase is when most of your workflow worked well but fails in the end. You figure out the problem and you do not want to start it from the very beginning as intermediate results are already recorded to the Cromwell-execution folder. You would like to resume after the last successful task",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2023
https://github.com/broadinstitute/cromwell/issues/2025:36,Performance,cache,cache,36,"Seeing this during testing for call cache perfomance:. I'm submitting a fairly small scatter workflow to the batch endpoint, with 3000 (empty) inputs to launch 3000 copies of the workflow. It takes several minutes for Cromwell to produce a response, by which time the client has timed out. So Cromwell is going to run all these workflows but the client doesn't know their IDs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2025
https://github.com/broadinstitute/cromwell/issues/2025:19,Testability,test,testing,19,"Seeing this during testing for call cache perfomance:. I'm submitting a fairly small scatter workflow to the batch endpoint, with 3000 (empty) inputs to launch 3000 copies of the workflow. It takes several minutes for Cromwell to produce a response, by which time the client has timed out. So Cromwell is going to run all these workflows but the client doesn't know their IDs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2025
https://github.com/broadinstitute/cromwell/pull/2027:63,Performance,cache,cache,63,Expose an option that can be of some limited use in increasing cache hit throughput.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2027
https://github.com/broadinstitute/cromwell/pull/2027:73,Performance,throughput,throughput,73,Expose an option that can be of some limited use in increasing cache hit throughput.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2027
https://github.com/broadinstitute/cromwell/pull/2027:0,Security,Expose,Expose,0,Expose an option that can be of some limited use in increasing cache hit throughput.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2027
https://github.com/broadinstitute/cromwell/issues/2029:613,Availability,failure,failure,613,"There are two general cases where the `WorkflowExecutionActor` switches the workflow to a failed state:; - [`handleRetryableFailure()`](https://github.com/broadinstitute/cromwell/blob/f64c16e62c84b66ddba14705bede5e6fde8376b0/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/WorkflowExecutionActor.scala#L292-L306); - [`handleExecutionFailure()`](https://github.com/broadinstitute/cromwell/blob/f64c16e62c84b66ddba14705bede5e6fde8376b0/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/WorkflowExecutionActor.scala#L240-L255). In _both_ cases, the method:; - is triggered by the failure of an individual job, but; - fails the entire workflow, and; - doesn't send signals to other jobs to stop. Thus other jobs stay running, while the workflow gets deregistered from the system. Because the workflow manager can no longer delegate aborting the running jobs, this issue may also be related to #1414 and #1504.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2029
https://github.com/broadinstitute/cromwell/issues/2029:864,Safety,abort,aborting,864,"There are two general cases where the `WorkflowExecutionActor` switches the workflow to a failed state:; - [`handleRetryableFailure()`](https://github.com/broadinstitute/cromwell/blob/f64c16e62c84b66ddba14705bede5e6fde8376b0/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/WorkflowExecutionActor.scala#L292-L306); - [`handleExecutionFailure()`](https://github.com/broadinstitute/cromwell/blob/f64c16e62c84b66ddba14705bede5e6fde8376b0/engine/src/main/scala/cromwell/engine/workflow/lifecycle/execution/WorkflowExecutionActor.scala#L240-L255). In _both_ cases, the method:; - is triggered by the failure of an individual job, but; - fails the entire workflow, and; - doesn't send signals to other jobs to stop. Thus other jobs stay running, while the workflow gets deregistered from the system. Because the workflow manager can no longer delegate aborting the running jobs, this issue may also be related to #1414 and #1504.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2029
https://github.com/broadinstitute/cromwell/pull/2031:122,Testability,test,tests,122,Fixed SGE memory parameter in reference.conf.; Split `MemoryDeclarationValidation` out of `DeclarationValidation`.; Added tests for `MemoryDeclarationValidation`.; `OptionalRuntimeAttributesValidation` were not returning the defaults from the underlying `RuntimeAttributesValidation`.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2031
https://github.com/broadinstitute/cromwell/pull/2032:229,Availability,error,error,229,"Stopped closing a scala `Future` over akka's `context.become`.; Flipped the default for `requestsAbortAndDiesImmediately` from `false` to `true`.; When killing a Standard backend job with rADI false, both the rc and the standard error are required.; Writing the stderr on abort for the SFS backend.; When rADI is true, sending a backend status of `""Aborted""`.; In the engine, set and store the `ExecutionStatus.Aborted`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2032
https://github.com/broadinstitute/cromwell/pull/2032:272,Safety,abort,abort,272,"Stopped closing a scala `Future` over akka's `context.become`.; Flipped the default for `requestsAbortAndDiesImmediately` from `false` to `true`.; When killing a Standard backend job with rADI false, both the rc and the standard error are required.; Writing the stderr on abort for the SFS backend.; When rADI is true, sending a backend status of `""Aborted""`.; In the engine, set and store the `ExecutionStatus.Aborted`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2032
https://github.com/broadinstitute/cromwell/pull/2032:349,Safety,Abort,Aborted,349,"Stopped closing a scala `Future` over akka's `context.become`.; Flipped the default for `requestsAbortAndDiesImmediately` from `false` to `true`.; When killing a Standard backend job with rADI false, both the rc and the standard error are required.; Writing the stderr on abort for the SFS backend.; When rADI is true, sending a backend status of `""Aborted""`.; In the engine, set and store the `ExecutionStatus.Aborted`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2032
https://github.com/broadinstitute/cromwell/pull/2032:411,Safety,Abort,Aborted,411,"Stopped closing a scala `Future` over akka's `context.become`.; Flipped the default for `requestsAbortAndDiesImmediately` from `false` to `true`.; When killing a Standard backend job with rADI false, both the rc and the standard error are required.; Writing the stderr on abort for the SFS backend.; When rADI is true, sending a backend status of `""Aborted""`.; In the engine, set and store the `ExecutionStatus.Aborted`.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2032
https://github.com/broadinstitute/cromwell/issues/2033:109,Deployability,configurat,configuration,109,I see that in readme. ```; Configuring Spark Project; When using Spark backend uncomment the following Spark configuration in the application.conf file; ```. But I do not see it in application.conf Looks like this is outdated.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2033
https://github.com/broadinstitute/cromwell/issues/2033:27,Modifiability,Config,Configuring,27,I see that in readme. ```; Configuring Spark Project; When using Spark backend uncomment the following Spark configuration in the application.conf file; ```. But I do not see it in application.conf Looks like this is outdated.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2033
https://github.com/broadinstitute/cromwell/issues/2033:109,Modifiability,config,configuration,109,I see that in readme. ```; Configuring Spark Project; When using Spark backend uncomment the following Spark configuration in the application.conf file; ```. But I do not see it in application.conf Looks like this is outdated.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2033
https://github.com/broadinstitute/cromwell/issues/2035:194,Modifiability,variab,variable,194,"https://github.com/broadinstitute/cromwell/blob/25c6573bb9342a859fee735f4190b6b6d9f2dec4/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L181. The environment variable $TMPDIR set to a custom value and exported in the shell script preamble, but the directory isn't actually created. This is an unpleasant surprise for some things a user might have in their command (e.g. `mktemp`) which assume that if $TMPDIR is set, then it exists.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2035
https://github.com/broadinstitute/cromwell/issues/2036:81,Testability,log,log,81,"As a user, I would like to be more easily distinguish the outputs section of the log that prints in the terminal. It came up as a pain point recently in the WDL workshop that was given in Belgium. Currently the output log (that which prints to terminal) looks like this:. <img width=""856"" alt=""screen shot 2017-02-22 at 10 26 17 am"" src=""https://cloud.githubusercontent.com/assets/13629186/23365994/2d86bb28-fcd3-11e6-91d1-fa2ee62c7574.png"">. If we could perhaps highlight the output with more of a line break, or perhaps a color change, it would be easier to visually parse. For example, the below is an output of GATK, which is much easier to visually parse the output due to the presence of dashes (-----) which break up the ""running"" text from the ""done"" text. . <img width=""854"" alt=""screen shot 2017-02-22 at 10 29 28 am"" src=""https://cloud.githubusercontent.com/assets/13629186/23366015/3c506082-fcd3-11e6-8aba-94cc7dfaa70b.png"">",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2036
https://github.com/broadinstitute/cromwell/issues/2036:218,Testability,log,log,218,"As a user, I would like to be more easily distinguish the outputs section of the log that prints in the terminal. It came up as a pain point recently in the WDL workshop that was given in Belgium. Currently the output log (that which prints to terminal) looks like this:. <img width=""856"" alt=""screen shot 2017-02-22 at 10 26 17 am"" src=""https://cloud.githubusercontent.com/assets/13629186/23365994/2d86bb28-fcd3-11e6-91d1-fa2ee62c7574.png"">. If we could perhaps highlight the output with more of a line break, or perhaps a color change, it would be easier to visually parse. For example, the below is an output of GATK, which is much easier to visually parse the output due to the presence of dashes (-----) which break up the ""running"" text from the ""done"" text. . <img width=""854"" alt=""screen shot 2017-02-22 at 10 29 28 am"" src=""https://cloud.githubusercontent.com/assets/13629186/23366015/3c506082-fcd3-11e6-8aba-94cc7dfaa70b.png"">",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2036
https://github.com/broadinstitute/cromwell/issues/2037:33,Availability,failure,failure,33,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:89,Availability,failure,failures,89,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:155,Availability,failure,failures,155,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:1050,Availability,failure,failures,1050," field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:1138,Availability,error,error,1138," field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2539,Availability,failure,failures,2539,"9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/cal",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2627,Availability,error,error,2627,"9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/cal",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3886,Availability,failure,failures,3886,"y/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:4834,Availability,failure,failures,4834,"inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:5403,Availability,failure,failure,5403,"ll-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggr",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:6037,Availability,echo,echo,6037,"""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""preemptible"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7062,Availability,failure,failures,7062,".aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""preemptible"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7123,Availability,failure,failure,7123,"n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""preemptible"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7242,Availability,error,errors,7242,"nStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.0000",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8475,Availability,failure,failures,8475,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8766,Availability,failure,failures,8766,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8859,Availability,Error,Error,8859,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:9256,Availability,failure,failure,9256,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:9318,Availability,failure,failure,9318,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7302,Deployability,Pipeline,Pipeline,7302,"nStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.0000",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7498,Deployability,Pipeline,Pipeline,7498,"nStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.0000",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:41,Integrability,message,messages,41,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:1066,Integrability,message,message,1066," field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:1152,Integrability,Message,Message,1152,"ing:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2555,Integrability,message,message,2555,"9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/cal",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2641,Integrability,Message,Message,2641,"6-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3273,Integrability,message,message,3273,"orkflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3902,Integrability,message,message,3902,"y/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_d",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3986,Integrability,message,message,3986,"d a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:4070,Integrability,message,message,4070,"190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:4850,Integrability,message,message,4850,"inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:4934,Integrability,message,message,4934,"_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:5018,Integrability,message,message,5018,"_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_ar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:5363,Integrability,message,message,5363,"ll-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggr",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7288,Integrability,message,message,7288,"nStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.0000",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7484,Integrability,message,message,7484,"nStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.0000",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8812,Integrability,message,message,8812,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8848,Integrability,message,message,8848,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8915,Integrability,message,message,8915,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:9264,Integrability,message,messages,9264,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:9326,Integrability,message,messages,9326,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:1211,Modifiability,config,config,1211,"ing:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2700,Modifiability,config,config,2700,"6-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/a",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:938,Performance,cache,cache,938,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3755,Performance,cache,cache,3755,"ror code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"": ""JES"",; ""end"": ""2016-12-02T15:05:42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd15",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:6974,Performance,cache,cache,6974,".aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""preemptible"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:17,Security,expose,expose,17,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8873,Security,access,access,8873,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8943,Security,authenticat,authentication,8943,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:575,Testability,log,log,575,"We are trying to expose workflow failure messages to the user in Firecloud. However, the failures field seems to have an inconsistent format:. Compare the failures sections for the following:. ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""{...},; ""calls"": {; ""echo_strings.echo_files"": [{; ""preemptible"": false,; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stdout.log"",; ""backendStatus"": ""Failed"",; ""shardIndex"": -1,; ""jes"": {; ""endpointUrl"": ""https://genomics.googleapis.com/"",; ""machineType"": ""us-central1-c/n1-standard-1"",; ""googleProject"": ""broad-dsde-dev"",; ""executionBucket"": ""gs://cromwell-dev/cromwell-executions"",; ""zone"": ""us-central1-c"",; ""instanceName"": ""ggp-3462354720519617596""; },; ""runtimeAttributes"": {...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""at",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:1827,Testability,log,log,1827,"...},; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2059,Testability,log,log,2059,"failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c38667",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:2225,Testability,log,log,2225,"atest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""jobId"": ""operations/EJiq_oWfKxi8-N-X4qiwhjAgw7vetLsXKg9wcm9kdWN0aW9uUXVldWU"",; ""backend"": ""JES"",; ""end"": ""2017-01-30T19:14:19.708Z"",; ""stderr"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files-stderr.log"",; ""callRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files"",; ""attempt"": 1,; ""executionEvents"": [...],; ""backendLogs"": {; ""log"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3111,Testability,log,logs,3111,"6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregat",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:3162,Testability,log,log,3162,"-9b1a-114f5f5c4706/call-echo_files/echo_files.log""; },; ""start"": ""2017-01-30T19:00:03.896Z""; }]; },; ""outputs"": {. },; ""workflowRoot"": ""/b6b190d6-8640-4638-94cd-15f16b194f38/echo_strings/c386672d-0248-4968-9b1a-114f5f5c4706/"",; ""id"": ""c386672d-0248-4968-9b1a-114f5f5c4706"",; ""inputs"": {...; },; ""submission"": ""2017-01-30T19:00:00.796Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Task c386672d-0248-4968-9b1a-114f5f5c4706:echo_files failed: error code 5. Message: 8: Failed to pull image ubuntu:latest: \""docker --config /tmp/.docker/ pull ubuntu:latest\"" failed: exit status 1: Pulling repository docker.io/library/ubuntu\nNetwork timed out while trying to connect to https://index.docker.io/v1/repositories/library/ubuntu/images. You may want to check your internet connection or if you are behind a proxy.\n""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/b6b190d6-8640-4638-94cd-15f16b194f38/workflow.logs/workflow.c386672d-0248-4968-9b1a-114f5f5c4706.log"",; ""end"": ""2017-01-30T19:14:20.002Z"",; ""start"": ""2017-01-30T19:00:03.040Z""; }. ```; Here it's an array of ""message""s; ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {... },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""retryableFailure"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stdout"",; ""shardIndex"": -1,; ""runtimeAttributes"": {; ""docker"": ""broadgdac/aggregate_data:31"",; ""failOnStderr"": false,; ""continueOnReturnCode"": ""0""; },; ""cache"": {; ""allowResultReuse"": true; },; ""Effective call caching mode"": ""CallCachingOff"",; ""inputs"": {...; },; ""returnCode"": -1,; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""jobId"": ""2957"",; ""backend"":",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:5207,Testability,log,logs,5207,"42.655Z"",; ""stderr"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tau",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:5258,Testability,log,log,5258,"kflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data/execution/stderr"",; ""callRoot"": ""/cromwell-executions/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc/call-aggregate_data"",; ""attempt"": 1,; ""executionEvents"": [...]; },; ""outputs"": {. },; ""workflowRoot"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:6669,Testability,log,log,6669,"n\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""preemptible"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stdout.log"",; ""shardIndex"": -1,; ""outputs"": {. },; ""runtimeAttributes"": {; ""preemptible"": ""0"",; ""failOnStderr"": ""false"",; ""bootDiskSizeGb"": ""10"",; ""disks"": ""local-disk 10 SSD"",; ""continueOnReturnCode"": ""0"",; ""docker"": ""broadgdac/aggregate_data:31"",; ""cpu"": ""1"",; ""zones"": ""us-central1-b"",; ""memory"": ""2GB""; },; ""cache"": {; ""allowResultReuse"": true; },; ""inputs"": {; ""input_array"": [""bar, baz""]; },; ""failures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""bac",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:7939,Testability,log,log,7939,"ilures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8004,Testability,log,log,8004,"ilures"": [{; ""timestamp"": ""2016-08-01T19:58:04.704000Z"",; ""failure"": ""com.google.api.client.googleapis.json.GoogleJsonResponseException: 400 Bad Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:8189,Testability,log,log,8189,"Request\n{\n \""code\"" : 400,\n \""errors\"" : [ {\n \""domain\"" : \""global\"",\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:9077,Testability,log,logs,9077,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:9128,Testability,log,log,9128,"luate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""reason\"" : \""badRequest\""\n } ],\n \""message\"" : \""Pipeline 9453747469251135900: Unable to evaluate parameters: %!(EXTRA string=parameter \\\""input_array-0\\\"" has invalid value: bar, baz)\"",\n \""status\"" : \""INVALID_ARGUMENT\""\n}""; }],; ""backend"": ""JES"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""stderr"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data-stderr.log"",; ""attempt"": 1,; ""executionEvents"": [],; ""backendLogs"": {; ""log"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate_data_workflow/7be16669-0f81-4e19-96a0-dbe4b72cee8e/call-aggregate_data/aggregate_data.log""; },; ""start"": ""2016-08-01T19:56:48.000000Z""; }]; },; ""outputs"": {. },; ""id"": ""7be16669-0f81-4e19-96a0-dbe4b72cee8e"",; ""submission"": ""2016-08-01T19:56:48.000000Z"",; ""status"": ""Failed"",; ""end"": ""2016-08-01T19:58:05.000000Z"",; ""start"": ""2016-08-01T19:56:48.000000Z""; }; ```. Here the failures section has a nested structure.; ```; {; ""workflowName"": ""echo_strings"",; ""submittedFiles"": {; ""inputs"": ""...""; },; ""calls"": {. },; ""outputs"": {. },; ""id"": ""12677a12-bca2-41a6-b583-596262c7e0c7"",; ""inputs"": {...; },; ""submission"": ""2017-01-31T17:54:48.812Z"",; ""status"": ""Failed"",; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/4503a3b1-5b50-4474-8a31-809e73510622/workflow.logs/workflow.12677a12-bca2-41a6-b583-596262c7e0c7.log"",; ""end"": ""2017-01-31T17:55:10.439Z"",; ""start"": ""2017-01-31T17:54:50.257Z""; }; ```. This inconsistency in the format of the failure messages makes it difficult to show properly formated failure messages in our UI.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2037:5695,Usability,clear,cleared,5695,"3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/aggregate_data_workflow/3608d6ca-fbb4-4232-b197-268058470bfc"",; ""id"": ""3608d6ca-fbb4-4232-b197-268058470bfc"",; ""inputs"": {...; },; ""submission"": ""2016-12-01T21:21:40.188Z"",; ""status"": ""Failed"",; ""failures"": [{; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }, {; ""message"": ""Call aggregate_data_workflow.aggregate_data: return code was -1""; }],; ""workflowLog"": ""gs://fc-2d3fd356-e3be-4953-92f1-60af623e6fa5/9ea737cd-a512-4c62-820c-dd1505ea7676/workflow.logs/workflow.3608d6ca-fbb4-4232-b197-268058470bfc.log"",; ""end"": ""2016-12-02T15:05:42.868Z"",; ""start"": ""2016-12-02T15:05:40.873Z""; }; ```. Here there's no ""message"" and there are ""timestamp"" and ""failure"". ```; {; ""workflowName"": ""aggregate_data_workflow"",; ""submittedFiles"": {; ""options"": ""{\n \""default_runtime_attributes\"": {\n \""zones\"": \""us-central1-b\""\n },\n \""google_project\"": \""broad-dsde-dev\"",\n \""auth_bucket\"": \""gs://cromwell-auth-broad-dsde-dev\"",\n \""refresh_token\"": \""cleared\"",\n \""account_name\"": \""abaumann.firecloud@gmail.com\"",\n \""jes_gcs_root\"": \""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5\""\n}"",; ""inputs"": ""{\""aggregate_data_workflow.aggregate_data.input_array\"":[\""bar, baz\""]}"",; ""workflow"": ""task aggregate_data {\n\tArray[File] input_array\n\n\tcommand {\n echo \""foo\""\n\n\t}\n\n\toutput {\n\t\tArray[Array[File]] output_array = [input_array]\n\t}\n\n\truntime {\n\t\tdocker : \""broadgdac/aggregate_data:31\""\n\t}\n\n\tmeta {\n\t\tauthor : \""Tim DeFreitas\""\n\t\temail : \""timdef@broadinstitute.org\""\n\t}\n\n}\n\nworkflow aggregate_data_workflow {\n\tcall aggregate_data\n}""; },; ""calls"": {; ""aggregate_data_workflow.aggregate_data"": [{; ""preemptible"": false,; ""executionStatus"": ""Failed"",; ""stdout"": ""gs://fc-5539c024-3ba8-4ed1-97c3-82fed2675776/1626e6be-60ed-48b1-9bbc-a3fdef4a90f5/aggregate",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2037
https://github.com/broadinstitute/cromwell/issues/2039:17,Availability,failure,failures,17,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:75,Availability,failure,failure,75,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:106,Availability,failure,failures,106,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:199,Availability,Error,Error,199,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:392,Availability,failure,failures,392,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:514,Availability,Error,Error,514,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:152,Integrability,message,message,152,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:188,Integrability,message,message,188,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:255,Integrability,message,message,255,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:408,Integrability,message,message,408,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:446,Integrability,message,message,446,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:503,Integrability,message,message,503,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:679,Integrability,message,message,679,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:213,Security,access,access,213,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:283,Security,authenticat,authentication,283,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:474,Security,authenticat,authentication,474,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2039:528,Security,access,access,528,"Migrate existing failures in the metadata database from the former un-flat failure metadata style:; ```; ""failures"": [{; ""causedBy"": {; ""causedBy"": {; ""message"": ""connect timed out""; },; ""message"": ""Error getting access token for service account: ""; },; ""message"": ""Failed to upload authentication file""; }]; ```. to the new flat style that new workflow metadata will be created with:; ```; ""failures"": [{; ""message"": ""connect timed out""; }, {; ""message"": ""Failed to upload authentication file""; }, {; ""message"": ""Error getting access token for service account: ""; }]; ```. Also note that aggregated exceptions were previously being input using the same random integer for every message part (i.e. every part of the aggregate was overwriting the previous one), so migration could... fix that.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2039
https://github.com/broadinstitute/cromwell/issues/2041:94,Availability,error,error,94,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041
https://github.com/broadinstitute/cromwell/issues/2041:143,Availability,error,error,143,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041
https://github.com/broadinstitute/cromwell/issues/2041:100,Integrability,message,message,100,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041
https://github.com/broadinstitute/cromwell/issues/2041:153,Integrability,message,message,153,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041
https://github.com/broadinstitute/cromwell/issues/2041:306,Modifiability,variab,variable,306,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041
https://github.com/broadinstitute/cromwell/issues/2041:257,Testability,log,logs,257,"I was trying to use an invalid options file for cromwell 24 methods, through swagger, and the error message returned was: . ```; {; ""status"": ""error"",; ""message"": ""The server was not able to produce a timely response to your request.""; }; ```; The cromwell logs had more information, I was using the wrong variable format for defaultRuntimeOptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2041
https://github.com/broadinstitute/cromwell/pull/2043:7,Deployability,update,updated,7,Adding updated reference to reference.conf for Spark Backend. Referring to an issue [Issue](https://github.com/broadinstitute/cromwell/issues/2033),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2043
https://github.com/broadinstitute/cromwell/issues/2044:63,Availability,error,errors,63,"Running the AWS backend with the latest develop Cromwell gives errors like this:. java.lang.Exception: Job 2de677d8-0842-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2044:171,Availability,error,error,171,"Running the AWS backend with the latest develop Cromwell gives errors like this:. java.lang.Exception: Job 2de677d8-0842-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2044:1356,Availability,echo,echo,1356,"va.lang.Exception: Job 2de677d8-0842-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable if these digests actually were supported by ECS, in which case we wouldn't need to",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2044:429,Integrability,Depend,DependsOn,429,"va.lang.Exception: Job 2de677d8-0842-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable if these digests actually were supported by ECS, in which case we wouldn't need to",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2044:2111,Modifiability,rewrite,rewrites,2111,"-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable if these digests actually were supported by ECS, in which case we wouldn't need to disable Cromwell's sha256 rewrites.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2044:298,Performance,queue,queue,298,"Running the AWS backend with the latest develop Cromwell gives errors like this:. java.lang.Exception: Job 2de677d8-0842-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2044:312,Performance,queue,queue-nouveau,312,"Running the AWS backend with the latest develop Cromwell gives errors like this:. java.lang.Exception: Job 2de677d8-0842-4e17-ab26-288ffc3d8aaa failed for reason: unknown error: . {JobName: cromwell-job,JobId: 2de677d8-0842-4e17-ab26-288ffc3d8aaa,JobQueue: arn:aws:batch:us-east-1:369228243869:job-queue/mcovarr-queue-nouveau,Status: FAILED,StatusReason: **Container.image contains invalid characters.**,CreatedAt: 1488362254138,DependsOn: [],JobDefinition: arn:aws:batch:us-east-1:369228243869:job-definition/cromwell-job-definition:125,Parameters: {},Container: {**Image: library/python@sha256:d23845e4757f13266b42877c25b845e455127b85ec12e5d551bec5d8162e7cd4**,Vcpus: 1,Memory: 1907,Command: [/bin/sh, -c, /bin/bash /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/script > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stdout 2> /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/stderr < /dev/null || echo -1 > /usr/share/iodir/91a31bc2-ad38-4853-8bd6-fa456c66021b/cromwell-executions/PairedEndSingleSampleWorkflow/91a31bc2-ad38-4853-8bd6-fa456c66021b/PairedEndSingleSampleWorkflow-CheckFinalVcfExtension-NA-1/rc],Volumes: [{Host: {SourcePath: /usr/share/iodir},Name: cromwell-volume}],Environment: [],MountPoints: [{ContainerPath: /usr/share/iodir,ReadOnly: false,SourceVolume: cromwell-volume}],Ulimits: [],}}. For this reason found in the ECS javadocs:. ```; Amazon ECS task definitions currently only support tags as image identifiers within a specified repository; (and not <code>sha256</code> digests); ```. Of course it would be preferable",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2044
https://github.com/broadinstitute/cromwell/issues/2046:36,Availability,failure,failures,36,"Currently, it seems that aggregated failures have an identical key within metadata, and thus when metadata is reported with that key, only one of the multiple aggregated errors is reported. . AC: Fix this behavior such that, going forward, all aggregated errors are reported by metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2046
https://github.com/broadinstitute/cromwell/issues/2046:170,Availability,error,errors,170,"Currently, it seems that aggregated failures have an identical key within metadata, and thus when metadata is reported with that key, only one of the multiple aggregated errors is reported. . AC: Fix this behavior such that, going forward, all aggregated errors are reported by metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2046
https://github.com/broadinstitute/cromwell/issues/2046:255,Availability,error,errors,255,"Currently, it seems that aggregated failures have an identical key within metadata, and thus when metadata is reported with that key, only one of the multiple aggregated errors is reported. . AC: Fix this behavior such that, going forward, all aggregated errors are reported by metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2046
https://github.com/broadinstitute/cromwell/issues/2047:417,Availability,echo,echo,417,"The resolution of #2035 exposed this issue. A centaur issue was mitigated by https://github.com/broadinstitute/centaur/pull/165. A proper fix in the [StandardBackend](https://github.com/broadinstitute/cromwell/blob/335e9838abce1405f0d26fe18c5dba2dfa7ad0f5/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L173) will enable a centaur test to run a task with command:. ```; command {; echo ""hello"" > tmp; }; ```. This regression centaur test should run on all backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2047
https://github.com/broadinstitute/cromwell/issues/2047:24,Security,expose,exposed,24,"The resolution of #2035 exposed this issue. A centaur issue was mitigated by https://github.com/broadinstitute/centaur/pull/165. A proper fix in the [StandardBackend](https://github.com/broadinstitute/cromwell/blob/335e9838abce1405f0d26fe18c5dba2dfa7ad0f5/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L173) will enable a centaur test to run a task with command:. ```; command {; echo ""hello"" > tmp; }; ```. This regression centaur test should run on all backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2047
https://github.com/broadinstitute/cromwell/issues/2047:367,Testability,test,test,367,"The resolution of #2035 exposed this issue. A centaur issue was mitigated by https://github.com/broadinstitute/centaur/pull/165. A proper fix in the [StandardBackend](https://github.com/broadinstitute/cromwell/blob/335e9838abce1405f0d26fe18c5dba2dfa7ad0f5/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L173) will enable a centaur test to run a task with command:. ```; command {; echo ""hello"" > tmp; }; ```. This regression centaur test should run on all backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2047
https://github.com/broadinstitute/cromwell/issues/2047:469,Testability,test,test,469,"The resolution of #2035 exposed this issue. A centaur issue was mitigated by https://github.com/broadinstitute/centaur/pull/165. A proper fix in the [StandardBackend](https://github.com/broadinstitute/cromwell/blob/335e9838abce1405f0d26fe18c5dba2dfa7ad0f5/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L173) will enable a centaur test to run a task with command:. ```; command {; echo ""hello"" > tmp; }; ```. This regression centaur test should run on all backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2047
https://github.com/broadinstitute/cromwell/issues/2048:560,Deployability,configurat,configuration,560,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1173,Deployability,configurat,configuration,1173,"e / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the has",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1006,Integrability,depend,depending,1006,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1544,Integrability,depend,depends,1544,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:560,Modifiability,config,configuration,560,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:996,Modifiability,variab,variables,996,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1173,Modifiability,config,configuration,1173,"e / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the has",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1107,Performance,perform,perform,1107,"e / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the has",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1124,Performance,cache,cache,1124,"e / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the has",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:99,Safety,safe,safety,99,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1927,Safety,avoid,avoid,1927,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:174,Security,hash,hashes,174,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:407,Security,hash,hash,407,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:603,Security,hash,hashes,603,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:667,Security,hash,hashes,667,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1055,Security,hash,hash,1055,"e / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the has",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1099,Security,hash,hash,1099,"e / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the has",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1224,Security,hash,hash,1224,"o docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1355,Security,hash,hash,1355,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1512,Security,hash,hash,1512,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1539,Security,hash,hash,1539,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:1798,Security,hash,hash,1798,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:2119,Security,hash,hash,2119,"n this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote repository version.; If the image is not present locally, cromwell will attempt to `pull` the image locally, and use the hash from the newly retrieved image. 3. If the task is expected to run on a **Non Local Backend**, cromwell will attempt to retrieve the image from a remote repository. The `DockerHashActor` can be used for that effect.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2048:224,Testability,log,logic,224,"This proposal should give us more flexibility regarding docker tags while keeping the call caching safety on false positive / negative. Docker runtime attributes with docker hashes do not need any additional processing. All logic in this ticket applies to docker runtime attributes with a ""floating"" tag, which will be referred as ""tag"" in this issue. In all cases, if Cromwell fails to retrieve the docker hash for a task, for any reason, the corresponding call(s) will NOT be eligible for call caching, neither read nor write, regardless of the call caching configuration in effect. **When to get the hashes and what to do with them:**. 1. Cromwell will lookup the hashes corresponding to docker tags, for all docker attributes in all tasks in a workflow and its subworkflows, at Materialization time.; If the runtime attribute value can't be determined, the task in question will be ineligible for call caching. The only case when that should be true is if the attribute is an expression with variables depending on previous tasks being run. 2. If the hash lookup succeed, Cromwell will use that hash to perform any call cache read / write according to the call caching configuration in effect. It will also provide that hash, along with the original floating tag, to the backend when the job gets dispatched. 3. Backends will choose wether to use the hash or the floating tag. They will report to the engine which one they used, so that the engine can send this information to the metadata. **How to get the hash:**. 1. How to get the hash depends on the backend. Which means, at this time, that only workflows for which the backend is known statically at workflow submission time will be supported. 2. If the task is expected to run on the **Local Backend**, Cromwell will attempt to find the hash corresponding to the tag on the machine where it's being run. This first attempt must be done without executing a `pull` to avoid overriding the current local image, if it exits, with the remote rep",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2048
https://github.com/broadinstitute/cromwell/issues/2050:156,Availability,recover,recovered,156,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/issues/2050:374,Availability,failure,failure,374,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/issues/2050:273,Integrability,message,message,273,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/issues/2050:81,Safety,abort,aborted,81,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/issues/2050:156,Safety,recover,recovered,156,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/issues/2050:231,Safety,abort,aborted,231,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/issues/2050:404,Testability,test,tested,404,"As far as I can tell, the timeline is:. - Shutdown signal received; - The job is aborted in JES but not removed from the JobStore; - On restart, the job is recovered because it remains in the JobStore, but in JES it's already been aborted; - On the console, a ""Job Failed"" message appears.; - The EJEA actor dies in an unexpected way (this concerns me *most*. Why isn't the failure cause recorded!). Not tested on SFS backends.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2050
https://github.com/broadinstitute/cromwell/pull/2051:2,Deployability,Update,Updates,2,- Updates to readme examples based on changelog notes; - Add thanks to external contributors; - small typo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2051
https://github.com/broadinstitute/cromwell/issues/2052:213,Availability,down,download,213,"See https://github.com/broadinstitute/cromwell/issues/1736. It looks like there's been a regression in the versioning. The last jar was named ""cromwell-24.jar"" (https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar) and according to #1736 that was intentional. The new jar is named ""cromwell-0.25.jar"" not ""cromwell-25.jar"" (https://github.com/broadinstitute/cromwell/releases/download/25/cromwell-0.25.jar). Is this a mistake? Shouldn't the file be named cromwell-25.jar?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2052
https://github.com/broadinstitute/cromwell/issues/2052:403,Availability,down,download,403,"See https://github.com/broadinstitute/cromwell/issues/1736. It looks like there's been a regression in the versioning. The last jar was named ""cromwell-24.jar"" (https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar) and according to #1736 that was intentional. The new jar is named ""cromwell-0.25.jar"" not ""cromwell-25.jar"" (https://github.com/broadinstitute/cromwell/releases/download/25/cromwell-0.25.jar). Is this a mistake? Shouldn't the file be named cromwell-25.jar?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2052
https://github.com/broadinstitute/cromwell/issues/2052:204,Deployability,release,releases,204,"See https://github.com/broadinstitute/cromwell/issues/1736. It looks like there's been a regression in the versioning. The last jar was named ""cromwell-24.jar"" (https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar) and according to #1736 that was intentional. The new jar is named ""cromwell-0.25.jar"" not ""cromwell-25.jar"" (https://github.com/broadinstitute/cromwell/releases/download/25/cromwell-0.25.jar). Is this a mistake? Shouldn't the file be named cromwell-25.jar?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2052
https://github.com/broadinstitute/cromwell/issues/2052:394,Deployability,release,releases,394,"See https://github.com/broadinstitute/cromwell/issues/1736. It looks like there's been a regression in the versioning. The last jar was named ""cromwell-24.jar"" (https://github.com/broadinstitute/cromwell/releases/download/24/cromwell-24.jar) and according to #1736 that was intentional. The new jar is named ""cromwell-0.25.jar"" not ""cromwell-25.jar"" (https://github.com/broadinstitute/cromwell/releases/download/25/cromwell-0.25.jar). Is this a mistake? Shouldn't the file be named cromwell-25.jar?",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2052
https://github.com/broadinstitute/cromwell/pull/2053:62,Security,access,accessible,62,"Not a huge deal, but otherwise the temp directory may only be accessible by the container user (likely root) without a `sudo`. This can be an issue when trying to scan or clean up the workflow directory.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2053
https://github.com/broadinstitute/cromwell/pull/2055:126,Availability,failure,failures,126,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:140,Integrability,message,message,140,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:170,Integrability,message,message,170,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:200,Integrability,message,message,200,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:230,Integrability,message,message,230,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:270,Integrability,message,message,270,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:306,Integrability,message,message,306,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2055:13,Testability,test,test,13,"For example, test 3 represents:; ```; E1; caused By A1; - E2; caused by E3; - E4; - E5; ```. Being converted into this:; ```; failures: [{; message: ""E1"",; causedBy: [{; message: ""A1"",; causedBy: [{; message: ""E2"",; causedBy: [{; message: ""E3"",; causedBy: []; }]; }, {; message: ""E4"",; causedBy: []; }, {; message: ""E5"",; causedBy: []; }]; }]; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2055
https://github.com/broadinstitute/cromwell/pull/2056:20,Testability,test,tests,20,- [x] Add some more tests,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2056
https://github.com/broadinstitute/cromwell/issues/2057:1016,Availability,avail,avail,1016,"https://github.com/broadinstitute/cromwell/blob/fac784dd4078b8cc12fb4ca6c9abdbb05072990b/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L192) is proving very costly for our SFS cromwell server... `sync` flushes _everything_ to disk. Depending on how much memory you've got, what else is happening on the box, and type of filesystem, that can be a really expensive call. For example on one of our servers it typically takes about 10 seconds to return and uses 100% of 1 core in system cpu. When you run cromwell on that box and throw a thousand workflows at it, you end up with load like this:; ```; top - 16:16:42 up 196 days, 6:34, 17 users, load average: 806.48, 618.79, 413.58; Tasks: 4596 total, 829 running, 3766 sleeping, 1 stopped, 0 zombie; %Cpu(s): 1.4 us, 0.5 sy, 0.0 ni, 98.1 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st; KiB Mem : 26386596+total, 15019235+free, 25326680 used, 88346944 buff/cache; KiB Swap: 67108860 total, 63149068 free, 3959792 used. 21917659+avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 34965 cromwel+ 20 0 42.622g 896064 20048 S 9.5 0.3 9:33.71 java ; 88343 cromwell 20 0 107892 360 284 R 7.3 0.0 0:28.21 sync ; 88838 cromwell 20 0 107892 360 284 R 7.3 0.0 0:27.78 sync ; 89911 cromwell 20 0 107892 360 284 R 7.3 0.0 0:23.89 sync ; 82582 cromwell 20 0 107892 356 284 R 6.7 0.0 0:31.86 sync ; 84039 cromwell 20 0 107892 356 284 R 6.7 0.0 0:32.20 sync ; 84917 cromwell 20 0 107892 360 284 R 6.7 0.0 0:28.46 sync ; 84962 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.67 sync ; 85475 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.88 sync ; 88464 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.14 sync ; 88465 cromwell 20 0 107892 360 284 R 6.7 0.0 0:27.49 sync ; 89112 cromwell 20 0 107892 356 284 R 6.7 0.0 0:27.73 sync ; 89398 cromwell 20 0 107892 360 284 R 6.7 0.0 0:22.13 sync ; 91615 cromwell 20 0 107892 356 284 R 6.7 0.0 0:12.59 sync ; 85206 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.26 sync ; 85628 cromwell 20 0 107892 ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2057
https://github.com/broadinstitute/cromwell/issues/2057:285,Integrability,Depend,Depending,285,"The [sync here](https://github.com/broadinstitute/cromwell/blob/fac784dd4078b8cc12fb4ca6c9abdbb05072990b/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L192) is proving very costly for our SFS cromwell server... `sync` flushes _everything_ to disk. Depending on how much memory you've got, what else is happening on the box, and type of filesystem, that can be a really expensive call. For example on one of our servers it typically takes about 10 seconds to return and uses 100% of 1 core in system cpu. When you run cromwell on that box and throw a thousand workflows at it, you end up with load like this:; ```; top - 16:16:42 up 196 days, 6:34, 17 users, load average: 806.48, 618.79, 413.58; Tasks: 4596 total, 829 running, 3766 sleeping, 1 stopped, 0 zombie; %Cpu(s): 1.4 us, 0.5 sy, 0.0 ni, 98.1 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st; KiB Mem : 26386596+total, 15019235+free, 25326680 used, 88346944 buff/cache; KiB Swap: 67108860 total, 63149068 free, 3959792 used. 21917659+avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 34965 cromwel+ 20 0 42.622g 896064 20048 S 9.5 0.3 9:33.71 java ; 88343 cromwell 20 0 107892 360 284 R 7.3 0.0 0:28.21 sync ; 88838 cromwell 20 0 107892 360 284 R 7.3 0.0 0:27.78 sync ; 89911 cromwell 20 0 107892 360 284 R 7.3 0.0 0:23.89 sync ; 82582 cromwell 20 0 107892 356 284 R 6.7 0.0 0:31.86 sync ; 84039 cromwell 20 0 107892 356 284 R 6.7 0.0 0:32.20 sync ; 84917 cromwell 20 0 107892 360 284 R 6.7 0.0 0:28.46 sync ; 84962 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.67 sync ; 85475 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.88 sync ; 88464 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.14 sync ; 88465 cromwell 20 0 107892 360 284 R 6.7 0.0 0:27.49 sync ; 89112 cromwell 20 0 107892 356 284 R 6.7 0.0 0:27.73 sync ; 89398 cromwell 20 0 107892 360 284 R 6.7 0.0 0:22.13 sync ; 91615 cromwell 20 0 107892 356 284 R 6.7 0.0 0:12.59 sync ; 85206 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.26 sync ; 85628 cromw",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2057
https://github.com/broadinstitute/cromwell/issues/2057:629,Performance,load,load,629,"The [sync here](https://github.com/broadinstitute/cromwell/blob/fac784dd4078b8cc12fb4ca6c9abdbb05072990b/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L192) is proving very costly for our SFS cromwell server... `sync` flushes _everything_ to disk. Depending on how much memory you've got, what else is happening on the box, and type of filesystem, that can be a really expensive call. For example on one of our servers it typically takes about 10 seconds to return and uses 100% of 1 core in system cpu. When you run cromwell on that box and throw a thousand workflows at it, you end up with load like this:; ```; top - 16:16:42 up 196 days, 6:34, 17 users, load average: 806.48, 618.79, 413.58; Tasks: 4596 total, 829 running, 3766 sleeping, 1 stopped, 0 zombie; %Cpu(s): 1.4 us, 0.5 sy, 0.0 ni, 98.1 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st; KiB Mem : 26386596+total, 15019235+free, 25326680 used, 88346944 buff/cache; KiB Swap: 67108860 total, 63149068 free, 3959792 used. 21917659+avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 34965 cromwel+ 20 0 42.622g 896064 20048 S 9.5 0.3 9:33.71 java ; 88343 cromwell 20 0 107892 360 284 R 7.3 0.0 0:28.21 sync ; 88838 cromwell 20 0 107892 360 284 R 7.3 0.0 0:27.78 sync ; 89911 cromwell 20 0 107892 360 284 R 7.3 0.0 0:23.89 sync ; 82582 cromwell 20 0 107892 356 284 R 6.7 0.0 0:31.86 sync ; 84039 cromwell 20 0 107892 356 284 R 6.7 0.0 0:32.20 sync ; 84917 cromwell 20 0 107892 360 284 R 6.7 0.0 0:28.46 sync ; 84962 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.67 sync ; 85475 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.88 sync ; 88464 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.14 sync ; 88465 cromwell 20 0 107892 360 284 R 6.7 0.0 0:27.49 sync ; 89112 cromwell 20 0 107892 356 284 R 6.7 0.0 0:27.73 sync ; 89398 cromwell 20 0 107892 360 284 R 6.7 0.0 0:22.13 sync ; 91615 cromwell 20 0 107892 356 284 R 6.7 0.0 0:12.59 sync ; 85206 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.26 sync ; 85628 cromw",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2057
https://github.com/broadinstitute/cromwell/issues/2057:695,Performance,load,load,695,"The [sync here](https://github.com/broadinstitute/cromwell/blob/fac784dd4078b8cc12fb4ca6c9abdbb05072990b/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L192) is proving very costly for our SFS cromwell server... `sync` flushes _everything_ to disk. Depending on how much memory you've got, what else is happening on the box, and type of filesystem, that can be a really expensive call. For example on one of our servers it typically takes about 10 seconds to return and uses 100% of 1 core in system cpu. When you run cromwell on that box and throw a thousand workflows at it, you end up with load like this:; ```; top - 16:16:42 up 196 days, 6:34, 17 users, load average: 806.48, 618.79, 413.58; Tasks: 4596 total, 829 running, 3766 sleeping, 1 stopped, 0 zombie; %Cpu(s): 1.4 us, 0.5 sy, 0.0 ni, 98.1 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st; KiB Mem : 26386596+total, 15019235+free, 25326680 used, 88346944 buff/cache; KiB Swap: 67108860 total, 63149068 free, 3959792 used. 21917659+avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 34965 cromwel+ 20 0 42.622g 896064 20048 S 9.5 0.3 9:33.71 java ; 88343 cromwell 20 0 107892 360 284 R 7.3 0.0 0:28.21 sync ; 88838 cromwell 20 0 107892 360 284 R 7.3 0.0 0:27.78 sync ; 89911 cromwell 20 0 107892 360 284 R 7.3 0.0 0:23.89 sync ; 82582 cromwell 20 0 107892 356 284 R 6.7 0.0 0:31.86 sync ; 84039 cromwell 20 0 107892 356 284 R 6.7 0.0 0:32.20 sync ; 84917 cromwell 20 0 107892 360 284 R 6.7 0.0 0:28.46 sync ; 84962 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.67 sync ; 85475 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.88 sync ; 88464 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.14 sync ; 88465 cromwell 20 0 107892 360 284 R 6.7 0.0 0:27.49 sync ; 89112 cromwell 20 0 107892 356 284 R 6.7 0.0 0:27.73 sync ; 89398 cromwell 20 0 107892 360 284 R 6.7 0.0 0:22.13 sync ; 91615 cromwell 20 0 107892 356 284 R 6.7 0.0 0:12.59 sync ; 85206 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.26 sync ; 85628 cromw",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2057
https://github.com/broadinstitute/cromwell/issues/2057:945,Performance,cache,cache,945,"The [sync here](https://github.com/broadinstitute/cromwell/blob/fac784dd4078b8cc12fb4ca6c9abdbb05072990b/backend/src/main/scala/cromwell/backend/standard/StandardAsyncExecutionActor.scala#L192) is proving very costly for our SFS cromwell server... `sync` flushes _everything_ to disk. Depending on how much memory you've got, what else is happening on the box, and type of filesystem, that can be a really expensive call. For example on one of our servers it typically takes about 10 seconds to return and uses 100% of 1 core in system cpu. When you run cromwell on that box and throw a thousand workflows at it, you end up with load like this:; ```; top - 16:16:42 up 196 days, 6:34, 17 users, load average: 806.48, 618.79, 413.58; Tasks: 4596 total, 829 running, 3766 sleeping, 1 stopped, 0 zombie; %Cpu(s): 1.4 us, 0.5 sy, 0.0 ni, 98.1 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st; KiB Mem : 26386596+total, 15019235+free, 25326680 used, 88346944 buff/cache; KiB Swap: 67108860 total, 63149068 free, 3959792 used. 21917659+avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 34965 cromwel+ 20 0 42.622g 896064 20048 S 9.5 0.3 9:33.71 java ; 88343 cromwell 20 0 107892 360 284 R 7.3 0.0 0:28.21 sync ; 88838 cromwell 20 0 107892 360 284 R 7.3 0.0 0:27.78 sync ; 89911 cromwell 20 0 107892 360 284 R 7.3 0.0 0:23.89 sync ; 82582 cromwell 20 0 107892 356 284 R 6.7 0.0 0:31.86 sync ; 84039 cromwell 20 0 107892 356 284 R 6.7 0.0 0:32.20 sync ; 84917 cromwell 20 0 107892 360 284 R 6.7 0.0 0:28.46 sync ; 84962 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.67 sync ; 85475 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.88 sync ; 88464 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.14 sync ; 88465 cromwell 20 0 107892 360 284 R 6.7 0.0 0:27.49 sync ; 89112 cromwell 20 0 107892 356 284 R 6.7 0.0 0:27.73 sync ; 89398 cromwell 20 0 107892 360 284 R 6.7 0.0 0:22.13 sync ; 91615 cromwell 20 0 107892 356 284 R 6.7 0.0 0:12.59 sync ; 85206 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.26 sync ; 85628 cromw",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2057
https://github.com/broadinstitute/cromwell/issues/2057:3589,Performance,load,load,3589,"nc ; 88464 cromwell 20 0 107892 356 284 R 6.7 0.0 0:28.14 sync ; 88465 cromwell 20 0 107892 360 284 R 6.7 0.0 0:27.49 sync ; 89112 cromwell 20 0 107892 356 284 R 6.7 0.0 0:27.73 sync ; 89398 cromwell 20 0 107892 360 284 R 6.7 0.0 0:22.13 sync ; 91615 cromwell 20 0 107892 356 284 R 6.7 0.0 0:12.59 sync ; 85206 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.26 sync ; 85628 cromwell 20 0 107892 356 284 R 6.1 0.0 0:28.59 sync ; 86528 cromwell 20 0 107892 360 284 R 6.1 0.0 0:27.53 sync ; 86833 cromwell 20 0 107892 360 284 R 6.1 0.0 0:27.62 sync ; 86848 cromwell 20 0 107892 356 284 R 6.1 0.0 0:28.30 sync ; 87034 cromwell 20 0 107892 356 284 R 6.1 0.0 0:27.50 sync ; 87256 cromwell 20 0 107892 360 284 R 6.1 0.0 0:27.27 sync ; 87465 cromwell 20 0 107892 360 284 R 6.1 0.0 0:28.04 sync ; 89692 cromwell 20 0 107892 360 284 R 6.1 0.0 0:22.21 sync ; 89976 cromwell 20 0 107892 356 284 R 6.1 0.0 0:23.04 sync ; 90467 cromwell 20 0 107892 356 284 R 6.1 0.0 0:19.82 sync ; 90988 cromwell 20 0 107892 360 284 R 6.1 0.0 0:13.32 sync ; 91427 cromwell 20 0 107892 356 284 R 6.1 0.0 0:13.01 sync ; 91645 cromwell 20 0 107892 356 284 R 6.1 0.0 0:12.66 sync ; 91971 cromwell 20 0 107892 360 284 R 6.1 0.0 0:11.03 sync ; 91973 cromwell 20 0 107892 360 284 R 6.1 0.0 0:10.64 sync ; 92276 cromwell 20 0 107892 356 284 R 6.1 0.0 0:09.48 sync ; 92612 cromwell 20 0 107892 356 284 R 6.1 0.0 0:08.25 sync ; 92756 cromwell 20 0 107892 356 284 R 6.1 0.0 0:08.03 sync ; 92834 cromwell 20 0 107892 356 284 R 6.1 0.0 0:07.79 sync ; 92959 cromwell 20 0 107892 356 284 R 6.1 0.0 0:07.61 sync ; ...; ```; which is not great. I don't have a good alternative, but for mine, `sync` isn't the right solution to issue mentioned in [this PR](https://github.com/broadinstitute/cromwell/pull/1974) - I don't even think it absolutely guarantees disk write, for example if you have hardware disk caching enabled. For the time being I'm going to try a build without the sync, and get some numbers to show load avg comparison with and without",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2057
https://github.com/broadinstitute/cromwell/issues/2062:163,Integrability,depend,depend,163,"Extract the DockerHashLookup code from `core`, create a new sub-project, and have `sbt assembly` publish an artifact for it in artifactory.; `core` should in turn depend on this new sub-project. This will enable use of this docker lookup functionality outside of the context of cromwell.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2062
https://github.com/broadinstitute/cromwell/issues/2064:172,Deployability,pipeline,pipeline,172,"@sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815). Investigate whether Cromwell v25 may be misinterpreting our public PESS pipeline script. The ""unmerged"" label is not present when user runs the workflow. . ```; output_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:1503,Deployability,pipeline,pipeline,1503," after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286238890). Devs are busy and say to send this to redteam@broad. So @katevoss if you find there is no obvious answer, please be sure to seek help. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286242796). @ruchim will look into this",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:725,Testability,test,test-data,725,"@sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815). Investigate whether Cromwell v25 may be misinterpreting our public PESS pipeline script. The ""unmerged"" label is not present when user runs the workflow. . ```; output_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:966,Testability,test,test-data,966,"@sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815). Investigate whether Cromwell v25 may be misinterpreting our public PESS pipeline script. The ""unmerged"" label is not present when user runs the workflow. . ```; output_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:1059,Testability,log,log,1059,"hether Cromwell v25 may be misinterpreting our public PESS pipeline script. The ""unmerged"" label is not present when user runs the workflow. . ```; output_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286238890). ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:1115,Testability,test,test-data,1115,"hether Cromwell v25 may be misinterpreting our public PESS pipeline script. The ""unmerged"" label is not present when user runs the workflow. . ```; output_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286238890). ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:1259,Testability,test,test-data,1259,"_bam_basename = sub(sub(unmapped_bam, sub_strip_path, """"), sub_strip_unmapped, """") + "".unmerged"",; ```. ---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286238890). Devs are busy and say to send this to redteam@broad. So @katevoss if you find there is no obvious answer, please be sure to seek help. ---. @sooheelee com",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2064:1352,Testability,log,log,1352,"---; At the bottom of the stack, after Cromwell calls docker, which executes a shell script, the following shell command fails:. java -Xmx3000m -jar /usr/gitc/picard.jar \; SamToFastq \; INPUT=/cromwell-executions/PairedEndSingleSampleWorkflow/610155cd-e94f-4db2-bd9e-9b2322fc412f/call-SamToFastqAndBwaMem/shard-0/inputs/home/orodeh/genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.bam \; FASTQ=/dev/stdout \; INTERLEAVE=true \; NON_PF=true | \; /usr/gitc/bwa mem -K 100000000 -p -v 3 -t 16 $bash_ref_fasta /dev/stdin - 2> >(tee genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log >&2) | \; samtools view -1 - > genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bam && \; grep -m1 ""read .* ALT contigs"" genomics-public-data/test-data/dna/wgs/hiseq2500/NA12878/H06HDADXX130110.1.ATCACGAT.20k_reads.unmerged.bwa.stderr.log | \; grep -v ""read 0 ALT contigs"". The input file exists, but something goes wrong, and the outputs are not generated. This caused the rest of the pipeline to fail. Perhaps that provides more debugging information. . This Issue was generated from your [forums] ; [forums]: http://gatkforums.broadinstitute.org/gatk/discussion/comment/37003#Comment_37003. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286223385). Since Kate said she hasn't answered any questions, perhaps she would like to take ownership of this one. I've also gone ahead and asked two devs. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-286238890). Devs are busy and say to send this to redteam@broad. So @katevoss if you find there is no obvious answer, please be sure to seek help. ---. @sooheelee commented on [Mon Mar 13 2017](https://github.com/broadinstitute/dsde-docs/issues/1815#issuecomment-2862427",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2064
https://github.com/broadinstitute/cromwell/issues/2066:464,Testability,test,testing,464,"- local backend; - cromwell-0.25; - using docker; - single workflow mode. The WDL is in GATK protected. https://github.com/broadinstitute/gatk-protected/blob/master/scripts/mutect2_wdl/mutect2_multi_sample.wdl. The WDL functions fine, in general, but the sub-workflow WDL needs to be local to the cromwell execution call. If it is not there, cromwell cannot find the sub-workflow WDL and then it hangs. See an example of the hanging in automated gatk-protected M2 testing:. https://travis-ci.org/broadinstitute/gatk-protected/jobs/210985238. I had to manually stop the build, since it would hang forever otherwise.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2066
https://github.com/broadinstitute/cromwell/issues/2067:122,Availability,Error,Errors,122,"I was running a bunch of workflows (same wdl, same method) when we had to restart and redeploy cromwell service and I got Errors with no visible message, when we dug into the cromwell metadata we discovered this message that Cris interpreted as a restart issue.; message"": ""Workflow input processing failed:\nWorkflow contains invalid labels JSON: Unexpected end-of-input at input index 0 (line 1, position 1), expected JSON Value:\n\n^\n""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2067
https://github.com/broadinstitute/cromwell/issues/2067:145,Integrability,message,message,145,"I was running a bunch of workflows (same wdl, same method) when we had to restart and redeploy cromwell service and I got Errors with no visible message, when we dug into the cromwell metadata we discovered this message that Cris interpreted as a restart issue.; message"": ""Workflow input processing failed:\nWorkflow contains invalid labels JSON: Unexpected end-of-input at input index 0 (line 1, position 1), expected JSON Value:\n\n^\n""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2067
https://github.com/broadinstitute/cromwell/issues/2067:212,Integrability,message,message,212,"I was running a bunch of workflows (same wdl, same method) when we had to restart and redeploy cromwell service and I got Errors with no visible message, when we dug into the cromwell metadata we discovered this message that Cris interpreted as a restart issue.; message"": ""Workflow input processing failed:\nWorkflow contains invalid labels JSON: Unexpected end-of-input at input index 0 (line 1, position 1), expected JSON Value:\n\n^\n""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2067
https://github.com/broadinstitute/cromwell/issues/2067:263,Integrability,message,message,263,"I was running a bunch of workflows (same wdl, same method) when we had to restart and redeploy cromwell service and I got Errors with no visible message, when we dug into the cromwell metadata we discovered this message that Cris interpreted as a restart issue.; message"": ""Workflow input processing failed:\nWorkflow contains invalid labels JSON: Unexpected end-of-input at input index 0 (line 1, position 1), expected JSON Value:\n\n^\n""",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2067
https://github.com/broadinstitute/cromwell/issues/2068:1123,Availability,alive,alive,1123,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1406,Availability,echo,echo,1406,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1623,Availability,echo,echo,1623,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1788,Availability,echo,echo,1788,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:211,Deployability,configurat,configuration,211,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:314,Integrability,depend,depend,314,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:410,Integrability,message,message,410,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1054,Integrability,wrap,wrap,1054,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:7,Modifiability,config,configured,7,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:101,Modifiability,config,configure,101,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:211,Modifiability,config,configuration,211,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:328,Modifiability,variab,variable,328,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:425,Modifiability,variab,variable,425,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:716,Modifiability,config,config,716,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:723,Modifiability,Config,ConfigBackendLifecycleActorFactory,723,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:760,Modifiability,config,config,760,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:870,Performance,queue,queue,870,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:980,Performance,queue,queue,980,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1561,Performance,queue,queue,1561,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1726,Performance,queue,queue,1726,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1876,Performance,queue,queue,1876,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/issues/2068:1272,Testability,test,testing,1272,"I have configured a SLURM backend for Cromwell and have encountered unusual behavior while trying to configure memory as a runtime attribute. . I define a runtime attribute Int with default value in my Cromwell configuration file and attempt to override this in my task WDL. Whether the override succeeds seems to depend on the variable name used! This is very confusing behavior; I expect to either receive a message that a variable name is not allowed, or the override should succeed. . Fails: ""memory_mb""; Succeeds: ""requested_memory_per_core"". I am verifying whether the override succeeds by checking the Cromwell output [task]/execution/script.submit. . ```; SLURM {; actor-factory = ""cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory""; config {; runtime-attributes = """"""; Int runtime_minutes = 600; Int bsub_cpu = 1; Int memory_mb = 1000; String queue; """"""; ; submit = """"""; 			sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${runtime_minutes} -p ${queue} \; 			${""-n "" + bsub_cpu} \; 			--mem-per-cpu=${memory_mb} \; 			--wrap ""/bin/bash ${script}""; 		""""""; kill = ""scancel ${job_id}""; check-alive = ""squeue -j ${job_id}""; job-id-regex = ""Submitted batch job (\\d+).*""; }; }; ```. ```; workflow tutorialWorkflow{; 	call task_A { input : in=""testing"" }; 	call task_B { input : in=task_A.out }; 	call task_C { input : in=task_A.out }; }. task task_A{; 	String in. 	command{; 		echo 'This is task A ${in}.'; 	}	; 	output{; 		String out='This is task A ${in}'; 	}; 	runtime{; 		bsub_cpu: 1; 		runtime_minutes: 10; 		memory_mb: 100; 		queue: ""short""; 	}; }. task task_B{; 	String in; 	command{; 		echo 'This is task B ${in}.'; 	}; 	runtime{; 		bsub_cpu: 2; 		runtime_minutes: 15; 		memory_mb: 110; 		queue: ""short""; 	}; }. task task_C{; 	String in; 	command{; 		echo 'This is task C ${in}.'; 	}; 	runtime{; 		runtime_minutes: 25; 		memory_mb: 210; 		queue: ""short""; 	}; }; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2068
https://github.com/broadinstitute/cromwell/pull/2070:278,Modifiability,config,config,278,"Once we merge PR #15, funnel is going to start respecting resource requests from tasks. The defaults in the Cromwell TES backend are 1 cpu and 2 GB of RAM. So if we want the centaur tests to finish in a reasonable timeframe we need to hard code in local resources into Funnel's config.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2070
https://github.com/broadinstitute/cromwell/pull/2070:182,Testability,test,tests,182,"Once we merge PR #15, funnel is going to start respecting resource requests from tasks. The defaults in the Cromwell TES backend are 1 cpu and 2 GB of RAM. So if we want the centaur tests to finish in a reasonable timeframe we need to hard code in local resources into Funnel's config.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2070
https://github.com/broadinstitute/cromwell/issues/2071:20,Testability,test,test,20,"For example, The FC test DB has over 200,000 rows which will never be used by anyone, ever 😨",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2071
https://github.com/broadinstitute/cromwell/issues/2073:37,Deployability,configurat,configuration,37,"Add ability to cripple local via the configuration file, for hot-fix 25.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2073
https://github.com/broadinstitute/cromwell/issues/2073:37,Modifiability,config,configuration,37,"Add ability to cripple local via the configuration file, for hot-fix 25.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2073
https://github.com/broadinstitute/cromwell/pull/2077:479,Availability,failure,failures,479,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077
https://github.com/broadinstitute/cromwell/pull/2077:640,Availability,error,error,640,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077
https://github.com/broadinstitute/cromwell/pull/2077:96,Integrability,message,messages,96,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077
https://github.com/broadinstitute/cromwell/pull/2077:165,Safety,timeout,timeout,165,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077
https://github.com/broadinstitute/cromwell/pull/2077:184,Testability,log,logic,184,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077
https://github.com/broadinstitute/cromwell/pull/2077:353,Usability,simpl,simple,353,"Makes use of the helper traits created in the I/O actor PR to abstract managing of backpressure messages etc.. . Creates a `DockerClientHelper` trait to isolate the timeout management logic (if the docker actor never responds, ensures that we don't hang forever). The changes in `HttpFlowWithRetry` add exponential backoff retries (previously they were simple immediate retries) to HTTP responses, and list explicitly the HTTP codes that are retryable.; More specifically, Http ""failures"", as in ""the http request itself failed"", are not retried, since akka already does that by default under the hood. Only Http responses with a retryable error code are retried asynchronously, following the same model as the I/O actor.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2077
https://github.com/broadinstitute/cromwell/issues/2078:1399,Availability,echo,echo,1399,"0.0-alpha1.2.4.jar.; 2017/03/20 15:37:09 I: Copying gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar to /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; 2017/03/20 15:37:09 I: Running command: sudo gsutil -q -m cp gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; ```. And the `exec.sh` that it generates is:; ```bash; #!/bin/bash; export _JAVA_OPTIONS=-Djava.io.tmpdir=/cromwell_root/tmp; export TMPDIR=/cromwell_root/tmp. (; cd /cromwell_root; if [ false = false ]; \; then java -Xmx1g -jar gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar PadTargets --targets /cromwell_root/broad-dsde-methods/th/target/ice_targets.tsv --output targets.padded.tsv \; --padding 250 --help false --version false --verbosity INFO --QUIET false; \; else touch targets.padded.tsv; \; fi; ); echo $? > /cromwell_root/PadTargets-rc.txt.tmp; (; cd /cromwell_root. ); mv /cromwell_root/PadTargets-rc.txt.tmp /cromwell_root/PadTargets-rc.txt; ```. The WDL that has this issue is:; ```; workflow BrokenFilePath {; File targets = ""gs://broad-dsde-methods/th/target/ice_targets.tsv""; File GATK_protected_jar = ""gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar""; Boolean isWGS = false; Int padding = 250. call PadTargets {; input:; target_file=targets,; gatk_jar=GATK_protected_jar,; isWGS=isWGS,; mem=1,; padding=padding; }; }. task PadTargets {; File target_file; Int padding; File gatk_jar; Boolean isWGS; Int mem. command {; if [ ${isWGS} = false ]; \; then java -Xmx${mem}g -jar ${gatk_jar} PadTargets --targets ${target_file} --output targets.padded.tsv \; --padding ${padding} --help false --version false --verbosity INFO --QUIET false; \; else touch targets.padded.tsv; \; fi; }. output {; File padded_target_file = ""targets.padded.tsv""; }. runtime {; docker: ""broadinstitute/",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2078
https://github.com/broadinstitute/cromwell/issues/2078:161,Integrability,message,message,161,"The following path isn't copying into the task correctly:. `gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar`. It gives the following message in the JES logs:. ```; 2017/03/20 15:37:09 I: Docker file /cromwell_root/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar maps to host location /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar.; 2017/03/20 15:37:09 I: Copying gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar to /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; 2017/03/20 15:37:09 I: Running command: sudo gsutil -q -m cp gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; ```. And the `exec.sh` that it generates is:; ```bash; #!/bin/bash; export _JAVA_OPTIONS=-Djava.io.tmpdir=/cromwell_root/tmp; export TMPDIR=/cromwell_root/tmp. (; cd /cromwell_root; if [ false = false ]; \; then java -Xmx1g -jar gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar PadTargets --targets /cromwell_root/broad-dsde-methods/th/target/ice_targets.tsv --output targets.padded.tsv \; --padding 250 --help false --version false --verbosity INFO --QUIET false; \; else touch targets.padded.tsv; \; fi; ); echo $? > /cromwell_root/PadTargets-rc.txt.tmp; (; cd /cromwell_root. ); mv /cromwell_root/PadTargets-rc.txt.tmp /cromwell_root/PadTargets-rc.txt; ```. The WDL that has this issue is:; ```; workflow BrokenFilePath {; File targets = ""gs://broad-dsde-methods/th/target/ice_targets.tsv""; File GATK_protected_jar = ""gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar""; Boolean isWGS = false; Int padding = 250. call PadTargets {; input:; target_file=targets,; gatk_jar=GATK_protected_jar,; isWGS=isWGS,; mem=1,; padding=padding; }; }. task PadTargets {; File target_file; Int paddi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2078
https://github.com/broadinstitute/cromwell/issues/2078:180,Testability,log,logs,180,"The following path isn't copying into the task correctly:. `gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar`. It gives the following message in the JES logs:. ```; 2017/03/20 15:37:09 I: Docker file /cromwell_root/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar maps to host location /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar.; 2017/03/20 15:37:09 I: Copying gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar to /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; 2017/03/20 15:37:09 I: Running command: sudo gsutil -q -m cp gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar /mnt/local-disk/gs:/bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar; ```. And the `exec.sh` that it generates is:; ```bash; #!/bin/bash; export _JAVA_OPTIONS=-Djava.io.tmpdir=/cromwell_root/tmp; export TMPDIR=/cromwell_root/tmp. (; cd /cromwell_root; if [ false = false ]; \; then java -Xmx1g -jar gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar PadTargets --targets /cromwell_root/broad-dsde-methods/th/target/ice_targets.tsv --output targets.padded.tsv \; --padding 250 --help false --version false --verbosity INFO --QUIET false; \; else touch targets.padded.tsv; \; fi; ); echo $? > /cromwell_root/PadTargets-rc.txt.tmp; (; cd /cromwell_root. ); mv /cromwell_root/PadTargets-rc.txt.tmp /cromwell_root/PadTargets-rc.txt; ```. The WDL that has this issue is:; ```; workflow BrokenFilePath {; File targets = ""gs://broad-dsde-methods/th/target/ice_targets.tsv""; File GATK_protected_jar = ""gs://bg_tag_team/Tumor_Only_Resources/gatk-protected-1.0.0.0-alpha1.2.4.jar""; Boolean isWGS = false; Int padding = 250. call PadTargets {; input:; target_file=targets,; gatk_jar=GATK_protected_jar,; isWGS=isWGS,; mem=1,; padding=padding; }; }. task PadTargets {; File target_file; Int paddi",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2078
https://github.com/broadinstitute/cromwell/issues/2079:156,Availability,error,error,156,"- cromwell 0.25; - local backend + docker; - single workflow mode; - call caching disabled. Seems like the workflow completed just fine, but I still get an error. *This is transient* I have run the exact same workflow in exact same configuration multiple times and the error appears to happen ~50% of the time. ```; ....snip....; [2017-03-20 15:30:35,10] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""Mutect2_Multi.contamination_tables"": [""null"", ""null""],; ""Mutect2_Multi.filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-Filter/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-Filter/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal-filtered.vcf""],; ""Mutect2_Multi.filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-filteredOutputList/execution/filtered.list"",; ""Mutect2_Multi.unfiltered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-MergeVCFs/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-MergeVCFs/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.vcf""],; ""Mutect2_Multi.ob_filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-987",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:269,Availability,error,error,269,"- cromwell 0.25; - local backend + docker; - single workflow mode; - call caching disabled. Seems like the workflow completed just fine, but I still get an error. *This is transient* I have run the exact same workflow in exact same configuration multiple times and the error appears to happen ~50% of the time. ```; ....snip....; [2017-03-20 15:30:35,10] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""Mutect2_Multi.contamination_tables"": [""null"", ""null""],; ""Mutect2_Multi.filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-Filter/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-Filter/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal-filtered.vcf""],; ""Mutect2_Multi.filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-filteredOutputList/execution/filtered.list"",; ""Mutect2_Multi.unfiltered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-MergeVCFs/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-MergeVCFs/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.vcf""],; ""Mutect2_Multi.ob_filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-987",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3115,Availability,error,error,3115,"on/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal.ob_filtered.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-FilterByOrientationBias/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.ob_filtered.vcf""],; ""Mutect2_Multi.unfiltered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-unfilteredOutputList/execution/unfiltered.list"",; ""Mutect2_Multi.ob_filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerm",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3146,Availability,error,error,3146,"on/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal.ob_filtered.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-FilterByOrientationBias/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.ob_filtered.vcf""],; ""Mutect2_Multi.unfiltered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-unfilteredOutputList/execution/unfiltered.list"",; ""Mutect2_Multi.ob_filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerm",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3351,Availability,error,error,3351,"54-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-FilterByOrientationBias/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.ob_filtered.vcf""],; ""Mutect2_Multi.unfiltered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-unfilteredOutputList/execution/unfiltered.list"",; ""Mutect2_Multi.ob_filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3382,Availability,error,error,3382,"54-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-FilterByOrientationBias/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.ob_filtered.vcf""],; ""Mutect2_Multi.unfiltered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-unfilteredOutputList/execution/unfiltered.list"",; ""Mutect2_Multi.ob_filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3587,Availability,error,error,3587,",; ""Mutect2_Multi.unfiltered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-unfilteredOutputList/execution/unfiltered.list"",; ""Mutect2_Multi.ob_filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3618,Availability,error,error,3618,",; ""Mutect2_Multi.unfiltered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-unfilteredOutputList/execution/unfiltered.list"",; ""Mutect2_Multi.ob_filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3823,Availability,error,error,3823,"tens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:3854,Availability,error,error,3854,"tens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-orientationBiasFilteredOutputList/execution/ob_filtered.list""; },; ""id"": ""0239d302-1154-4c39-9870-55574d000765""; }; [2017-03-20 15:30:35,34] [info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 ",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4059,Availability,error,error,4059,"info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4090,Availability,error,error,4090,"info] SingleWorkflowRunnerActor writing metadata to /home/lichtens/debug_m2_wdl/test_m2_wdl.metadata; [2017-03-20 15:30:35,46] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 1",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4295,Availability,error,error,4295,"st stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor: Received shutdown signal.; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor All workflows finished. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4326,Availability,error,error,4326,"st stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor: Received shutdown signal.; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor All workflows finished. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4531,Availability,error,error,4531,"st stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor: Received shutdown signal.; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor All workflows finished. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4562,Availability,error,error,4562,"st stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor: Received shutdown signal.; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor All workflows finished. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4766,Availability,error,error,4766,"st stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor: Received shutdown signal.; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor All workflows finished. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:4797,Availability,error,error,4797,"st stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-21-0-unknown-operation#1356917576]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-17-0-unknown-operation#-291022515]] terminated abruptly; [2017-03-20 15:30:35,47] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-15-0-unknown-operation#-925665144]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-3-0-unknown-operation#-2130885356]] terminated abruptly; [2017-03-20 15:30:35,48] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-4-0-unknown-operation#-1268876796]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-16-0-unknown-operation#-371454906]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-2-0-unknown-operation#-248376973]] terminated abruptly; [2017-03-20 15:30:35,49] [error] Outgoing request stream error; akka.stream.AbruptTerminationException: Processor actor [Actor[akka://cromwell-system/user/StreamSupervisor-1/flow-5-0-unknown-operation#-865853959]] terminated abruptly; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor: Received shutdown signal.; [2017-03-20 15:30:35,49] [info] WorkflowManagerActor All workflows finished. ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:232,Deployability,configurat,configuration,232,"- cromwell 0.25; - local backend + docker; - single workflow mode; - call caching disabled. Seems like the workflow completed just fine, but I still get an error. *This is transient* I have run the exact same workflow in exact same configuration multiple times and the error appears to happen ~50% of the time. ```; ....snip....; [2017-03-20 15:30:35,10] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""Mutect2_Multi.contamination_tables"": [""null"", ""null""],; ""Mutect2_Multi.filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-Filter/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-Filter/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal-filtered.vcf""],; ""Mutect2_Multi.filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-filteredOutputList/execution/filtered.list"",; ""Mutect2_Multi.unfiltered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-MergeVCFs/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-MergeVCFs/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.vcf""],; ""Mutect2_Multi.ob_filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-987",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2079:232,Modifiability,config,configuration,232,"- cromwell 0.25; - local backend + docker; - single workflow mode; - call caching disabled. Seems like the workflow completed just fine, but I still get an error. *This is transient* I have run the exact same workflow in exact same configuration multiple times and the error appears to happen ~50% of the time. ```; ....snip....; [2017-03-20 15:30:35,10] [info] SingleWorkflowRunnerActor workflow finished with status 'Succeeded'.; {; ""outputs"": {; ""Mutect2_Multi.contamination_tables"": [""null"", ""null""],; ""Mutect2_Multi.filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-Filter/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal-filtered.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-Filter/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal-filtered.vcf""],; ""Mutect2_Multi.filtered_vcfs"": ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-filteredOutputList/execution/filtered.list"",; ""Mutect2_Multi.unfiltered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-0/Mutect2/7b579210-dfee-4740-ab6e-c1f65bc64014/call-MergeVCFs/execution/synthetic.challenge.set1.tumor-vs-synthetic.challenge.set1.normal.vcf"", ""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-9870-55574d000765/call-Mutect2/shard-1/Mutect2/56dd28f2-d4af-449d-961a-eface7c9a288/call-MergeVCFs/execution/background.synth.challenge2.snvs.svs.tumorbackground-vs-synthetic.challenge.set2.normal.vcf""],; ""Mutect2_Multi.ob_filtered_vcf_files"": [""/home/lichtens/debug_m2_wdl/cromwell-executions/Mutect2_Multi/0239d302-1154-4c39-987",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2079
https://github.com/broadinstitute/cromwell/issues/2085:117,Performance,bottleneck,bottleneck,117,"When a lot of jobs are finishing at the same time and all try to write their result to the jobstore, it can become a bottleneck.; A possible solution (or improvement) would be to batch those requests to the DB.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2085
https://github.com/broadinstitute/cromwell/issues/2086:254,Testability,test,test,254,"In a case where a very large amount of metadata needs to be written at the same time, even with batching, it can take a significant amount of time for the DB to absorb it, in which case the eventual consistency can be of several minutes.; A pathological test case with a 200K wide scatter, all finishing at the same time but with minimal metadata entries to be written (1 input, no output, not backend execution events), can take around 15 minutes after the workflow finished to be reported as ""Done"" in the metadata.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2086
https://github.com/broadinstitute/cromwell/issues/2088:46,Safety,abort,abort,46,"Write (and run) a bash script for sending the abort, wait, and check the ~~response~~ job has actually aborted.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2088
https://github.com/broadinstitute/cromwell/issues/2088:103,Safety,abort,aborted,103,"Write (and run) a bash script for sending the abort, wait, and check the ~~response~~ job has actually aborted.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2088
https://github.com/broadinstitute/cromwell/issues/2089:93,Testability,test,tested,93,"After migrating from one version of Cromwell to the next, the database migration needs to be tested. This can be manually tested in the interim, in a brute force off-on-off-on-off-on etc way.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2089
https://github.com/broadinstitute/cromwell/issues/2089:122,Testability,test,tested,122,"After migrating from one version of Cromwell to the next, the database migration needs to be tested. This can be manually tested in the interim, in a brute force off-on-off-on-off-on etc way.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2089
https://github.com/broadinstitute/cromwell/issues/2090:247,Integrability,message,message,247,"While validating Google authentication, [currently](https://github.com/broadinstitute/cromwell/blob/8ededf0995d7fef1914cb744a1124e4c96328106/filesystems/gcs/src/main/scala/cromwell/filesystems/gcs/auth/GoogleAuthMode.scala#L65) only the exception message is logged. If the exception itself contains a causal exception, that information is discarded.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2090
https://github.com/broadinstitute/cromwell/issues/2090:6,Security,validat,validating,6,"While validating Google authentication, [currently](https://github.com/broadinstitute/cromwell/blob/8ededf0995d7fef1914cb744a1124e4c96328106/filesystems/gcs/src/main/scala/cromwell/filesystems/gcs/auth/GoogleAuthMode.scala#L65) only the exception message is logged. If the exception itself contains a causal exception, that information is discarded.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2090
https://github.com/broadinstitute/cromwell/issues/2090:24,Security,authenticat,authentication,24,"While validating Google authentication, [currently](https://github.com/broadinstitute/cromwell/blob/8ededf0995d7fef1914cb744a1124e4c96328106/filesystems/gcs/src/main/scala/cromwell/filesystems/gcs/auth/GoogleAuthMode.scala#L65) only the exception message is logged. If the exception itself contains a causal exception, that information is discarded.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2090
https://github.com/broadinstitute/cromwell/issues/2090:258,Testability,log,logged,258,"While validating Google authentication, [currently](https://github.com/broadinstitute/cromwell/blob/8ededf0995d7fef1914cb744a1124e4c96328106/filesystems/gcs/src/main/scala/cromwell/filesystems/gcs/auth/GoogleAuthMode.scala#L65) only the exception message is logged. If the exception itself contains a causal exception, that information is discarded.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2090
https://github.com/broadinstitute/cromwell/issues/2094:36,Security,hash,hash,36,To be further refined:; Move docker hash request/response handling from Job Preparation to Workflow Materialization (or similar).,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2094
https://github.com/broadinstitute/cromwell/issues/2095:37,Security,hash,hash,37,To be further refined:; Allow docker hash request to docker daemon / docker cli.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2095
https://github.com/broadinstitute/cromwell/issues/2096:85,Security,hash,hash,85,To be further refined:; Enable backends to record whether the a docker tag or docker hash was/will-be used for a job.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2096
https://github.com/broadinstitute/cromwell/issues/2100:83,Security,authenticat,authentication,83,"This is to enable running cromwell (on JES) in single workflow mode and to use the authentication of the user for bucket access. This ticket is to provide documentation on how to do that. @Horneth and @kshakir helped me do it, but I'd like general instructions so that we do not have to nag the red team. I cannot recall all of the steps.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2100
https://github.com/broadinstitute/cromwell/issues/2100:121,Security,access,access,121,"This is to enable running cromwell (on JES) in single workflow mode and to use the authentication of the user for bucket access. This ticket is to provide documentation on how to do that. @Horneth and @kshakir helped me do it, but I'd like general instructions so that we do not have to nag the red team. I cannot recall all of the steps.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2100
https://github.com/broadinstitute/cromwell/pull/2104:38,Deployability,update,updates,38,"Removed deadlock workaround.; Minimal updates to fix depracated usage.; Old Slick 3.1 style names are still used in scala, ex: `val driver: JdbcProfile`.; Added notes about SQL converters handling empty LOBs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2104
https://github.com/broadinstitute/cromwell/issues/2108:152,Availability,error,error,152,@hjfbynara has started testing the migration from 19 -> 25 and he noticed restart_and_recover_migration.xml seems to be throwing an unhelpful liquibase error.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2108
https://github.com/broadinstitute/cromwell/issues/2108:23,Testability,test,testing,23,@hjfbynara has started testing the migration from 19 -> 25 and he noticed restart_and_recover_migration.xml seems to be throwing an unhelpful liquibase error.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2108
https://github.com/broadinstitute/cromwell/issues/2109:44,Testability,test,testing,44,Issues for making small improvements in our testing strategy. See [this Googledoc](https://docs.google.com/document/d/1tQdHfgZrxQZmbbAQef9GCJ9wc2_60KjvHbsxqO79-o8/edit#) for a glossary of Cromwell issues with testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2109
https://github.com/broadinstitute/cromwell/issues/2109:209,Testability,test,testing,209,Issues for making small improvements in our testing strategy. See [this Googledoc](https://docs.google.com/document/d/1tQdHfgZrxQZmbbAQef9GCJ9wc2_60KjvHbsxqO79-o8/edit#) for a glossary of Cromwell issues with testing.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2109
https://github.com/broadinstitute/cromwell/issues/2110:133,Performance,load,load,133,"Before releasing a jar, run it on a different database. Test that the liquid-base scripts work. ; Ask each time. . Standup database, load data in. Migrate. Start running workflows and see if it works.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2110
https://github.com/broadinstitute/cromwell/issues/2110:56,Testability,Test,Test,56,"Before releasing a jar, run it on a different database. Test that the liquid-base scripts work. ; Ask each time. . Standup database, load data in. Migrate. Start running workflows and see if it works.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2110
https://github.com/broadinstitute/cromwell/issues/2111:70,Availability,down,down,70,"Run @ruchim 's Travis test in a different mode, or branch, that shuts down and brings back up. Does a count right after to check that the right number of jobs are recovered (no duplicates). TO DO:; - [ ] Make sure you have as many JES jobs as you think you have; - [ ] If not, fix it!; - [ ] If so, yay!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2111
https://github.com/broadinstitute/cromwell/issues/2111:163,Availability,recover,recovered,163,"Run @ruchim 's Travis test in a different mode, or branch, that shuts down and brings back up. Does a count right after to check that the right number of jobs are recovered (no duplicates). TO DO:; - [ ] Make sure you have as many JES jobs as you think you have; - [ ] If not, fix it!; - [ ] If so, yay!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2111
https://github.com/broadinstitute/cromwell/issues/2111:163,Safety,recover,recovered,163,"Run @ruchim 's Travis test in a different mode, or branch, that shuts down and brings back up. Does a count right after to check that the right number of jobs are recovered (no duplicates). TO DO:; - [ ] Make sure you have as many JES jobs as you think you have; - [ ] If not, fix it!; - [ ] If so, yay!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2111
https://github.com/broadinstitute/cromwell/issues/2111:22,Testability,test,test,22,"Run @ruchim 's Travis test in a different mode, or branch, that shuts down and brings back up. Does a count right after to check that the right number of jobs are recovered (no duplicates). TO DO:; - [ ] Make sure you have as many JES jobs as you think you have; - [ ] If not, fix it!; - [ ] If so, yay!",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2111
https://github.com/broadinstitute/cromwell/issues/2112:60,Deployability,pipeline,pipeline,60,"See @Horneth 's laptop, test the pieces of the Green team's pipeline. Do what the Green team (or workbench team) is doing. Capture it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2112
https://github.com/broadinstitute/cromwell/issues/2112:47,Energy Efficiency,Green,Green,47,"See @Horneth 's laptop, test the pieces of the Green team's pipeline. Do what the Green team (or workbench team) is doing. Capture it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2112
https://github.com/broadinstitute/cromwell/issues/2112:82,Energy Efficiency,Green,Green,82,"See @Horneth 's laptop, test the pieces of the Green team's pipeline. Do what the Green team (or workbench team) is doing. Capture it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2112
https://github.com/broadinstitute/cromwell/issues/2112:24,Testability,test,test,24,"See @Horneth 's laptop, test the pieces of the Green team's pipeline. Do what the Green team (or workbench team) is doing. Capture it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2112
https://github.com/broadinstitute/cromwell/issues/2113:75,Availability,down,down,75,Chaos monkey Cromwell. Put up a Firewall and deny access to Cromwell. Tear down. See what happened. Block ports. Tables. ; Putting up a block. . The real Chaos Monkey. Much hectic. Simian army. . Henry knows how to spin up a Cromwell test environment. Much magic.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2113
https://github.com/broadinstitute/cromwell/issues/2113:32,Security,Firewall,Firewall,32,Chaos monkey Cromwell. Put up a Firewall and deny access to Cromwell. Tear down. See what happened. Block ports. Tables. ; Putting up a block. . The real Chaos Monkey. Much hectic. Simian army. . Henry knows how to spin up a Cromwell test environment. Much magic.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2113
https://github.com/broadinstitute/cromwell/issues/2113:50,Security,access,access,50,Chaos monkey Cromwell. Put up a Firewall and deny access to Cromwell. Tear down. See what happened. Block ports. Tables. ; Putting up a block. . The real Chaos Monkey. Much hectic. Simian army. . Henry knows how to spin up a Cromwell test environment. Much magic.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2113
https://github.com/broadinstitute/cromwell/issues/2113:234,Testability,test,test,234,Chaos monkey Cromwell. Put up a Firewall and deny access to Cromwell. Tear down. See what happened. Block ports. Tables. ; Putting up a block. . The real Chaos Monkey. Much hectic. Simian army. . Henry knows how to spin up a Cromwell test environment. Much magic.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2113
https://github.com/broadinstitute/cromwell/issues/2115:202,Availability,echo,echo,202,"Google Genomics fails when transferring the String output from a task to a bucket (Cromwell 25, using the wdl_runner pipeline). Here is the offending WDL file:; ```yaml; task Print_String {; command {; echo hello; }; runtime {; docker: ""ubuntu:14.04""; cpu: ""1""; memory: ""1 GB""; disks: ""local-disk "" + 10 + "" HDD""; }; output {; String out_string = read_string(stdout()); }; }. workflow My_Workflow {; call Print_String {; }; }; ```. This results in the error log:; ```; 2017-03-31 03:39:42,716 wdl_runner INFO: Workflow output files = [u'hello']; 2017-03-31 03:39:42,716 file_util INFO: Copying [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/; 2017-03-31 03:39:45,722 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 0; 2017-03-31 03:39:48,695 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 1; 2017-03-31 03:39:51,643 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 2; ERROR: copying files from [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: CommandException: No URLs matched: hello. (exit status 1); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2115
https://github.com/broadinstitute/cromwell/issues/2115:452,Availability,error,error,452,"Google Genomics fails when transferring the String output from a task to a bucket (Cromwell 25, using the wdl_runner pipeline). Here is the offending WDL file:; ```yaml; task Print_String {; command {; echo hello; }; runtime {; docker: ""ubuntu:14.04""; cpu: ""1""; memory: ""1 GB""; disks: ""local-disk "" + 10 + "" HDD""; }; output {; String out_string = read_string(stdout()); }; }. workflow My_Workflow {; call Print_String {; }; }; ```. This results in the error log:; ```; 2017-03-31 03:39:42,716 wdl_runner INFO: Workflow output files = [u'hello']; 2017-03-31 03:39:42,716 file_util INFO: Copying [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/; 2017-03-31 03:39:45,722 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 0; 2017-03-31 03:39:48,695 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 1; 2017-03-31 03:39:51,643 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 2; ERROR: copying files from [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: CommandException: No URLs matched: hello. (exit status 1); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2115
https://github.com/broadinstitute/cromwell/issues/2115:1116,Availability,ERROR,ERROR,1116,"Google Genomics fails when transferring the String output from a task to a bucket (Cromwell 25, using the wdl_runner pipeline). Here is the offending WDL file:; ```yaml; task Print_String {; command {; echo hello; }; runtime {; docker: ""ubuntu:14.04""; cpu: ""1""; memory: ""1 GB""; disks: ""local-disk "" + 10 + "" HDD""; }; output {; String out_string = read_string(stdout()); }; }. workflow My_Workflow {; call Print_String {; }; }; ```. This results in the error log:; ```; 2017-03-31 03:39:42,716 wdl_runner INFO: Workflow output files = [u'hello']; 2017-03-31 03:39:42,716 file_util INFO: Copying [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/; 2017-03-31 03:39:45,722 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 0; 2017-03-31 03:39:48,695 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 1; 2017-03-31 03:39:51,643 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 2; ERROR: copying files from [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: CommandException: No URLs matched: hello. (exit status 1); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2115
https://github.com/broadinstitute/cromwell/issues/2115:117,Deployability,pipeline,pipeline,117,"Google Genomics fails when transferring the String output from a task to a bucket (Cromwell 25, using the wdl_runner pipeline). Here is the offending WDL file:; ```yaml; task Print_String {; command {; echo hello; }; runtime {; docker: ""ubuntu:14.04""; cpu: ""1""; memory: ""1 GB""; disks: ""local-disk "" + 10 + "" HDD""; }; output {; String out_string = read_string(stdout()); }; }. workflow My_Workflow {; call Print_String {; }; }; ```. This results in the error log:; ```; 2017-03-31 03:39:42,716 wdl_runner INFO: Workflow output files = [u'hello']; 2017-03-31 03:39:42,716 file_util INFO: Copying [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/; 2017-03-31 03:39:45,722 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 0; 2017-03-31 03:39:48,695 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 1; 2017-03-31 03:39:51,643 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 2; ERROR: copying files from [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: CommandException: No URLs matched: hello. (exit status 1); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2115
https://github.com/broadinstitute/cromwell/issues/2115:458,Testability,log,log,458,"Google Genomics fails when transferring the String output from a task to a bucket (Cromwell 25, using the wdl_runner pipeline). Here is the offending WDL file:; ```yaml; task Print_String {; command {; echo hello; }; runtime {; docker: ""ubuntu:14.04""; cpu: ""1""; memory: ""1 GB""; disks: ""local-disk "" + 10 + "" HDD""; }; output {; String out_string = read_string(stdout()); }; }. workflow My_Workflow {; call Print_String {; }; }; ```. This results in the error log:; ```; 2017-03-31 03:39:42,716 wdl_runner INFO: Workflow output files = [u'hello']; 2017-03-31 03:39:42,716 file_util INFO: Copying [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/; 2017-03-31 03:39:45,722 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 0; 2017-03-31 03:39:48,695 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 1; 2017-03-31 03:39:51,643 file_util WARNING: Copy [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: attempt 2; ERROR: copying files from [u'hello'] to gs://ccdg-100-samples-trios-pilot-crams-mgi/outputs/string-out-1/ failed: CommandException: No URLs matched: hello. (exit status 1); ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2115
https://github.com/broadinstitute/cromwell/issues/2117:156,Availability,error,error,156,"My subworkflow wdl seems to ignore the task-call order. It skips M2 task entirely, which is a subworkflow in `hapmap_sensitivity_no_python.wdl`. I get this error with the latest cromwell master branch. cromwell jar: `/home/unix/tsato/cromwell-jars/cromwell-25-31ae549-SNAP.jar`. wdl: `/humgen/gsa-hpprojects/dev/tsato/mutect/strand-artifact/hapmap_sensitivity_no_python.wdl`; json: `/humgen/gsa-hpprojects/dev/tsato/mutect/strand-artifact/hapmap_sensitivity_10plex.json`; wdl-dependencies: `/humgen/gsa-hpprojects/dev/tsato/mutect/strand-artifact/mutect2.zip`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2117
https://github.com/broadinstitute/cromwell/issues/2117:476,Integrability,depend,dependencies,476,"My subworkflow wdl seems to ignore the task-call order. It skips M2 task entirely, which is a subworkflow in `hapmap_sensitivity_no_python.wdl`. I get this error with the latest cromwell master branch. cromwell jar: `/home/unix/tsato/cromwell-jars/cromwell-25-31ae549-SNAP.jar`. wdl: `/humgen/gsa-hpprojects/dev/tsato/mutect/strand-artifact/hapmap_sensitivity_no_python.wdl`; json: `/humgen/gsa-hpprojects/dev/tsato/mutect/strand-artifact/hapmap_sensitivity_10plex.json`; wdl-dependencies: `/humgen/gsa-hpprojects/dev/tsato/mutect/strand-artifact/mutect2.zip`",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2117
https://github.com/broadinstitute/cromwell/pull/2119:66,Deployability,update,update,66,Coerce evaluated declaration to their expected type + Bonus wdl4s update to fix https://github.com/broadinstitute/centaur/pull/176,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2119
https://github.com/broadinstitute/cromwell/issues/2120:10,Availability,Reliab,Reliability,10,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2120:303,Deployability,deploy,deploy,303,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2120:340,Deployability,configurat,configuration,340,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2120:525,Deployability,configurat,configuration,525,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2120:340,Modifiability,config,configuration,340,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2120:525,Modifiability,config,configuration,525,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2120:265,Usability,simpl,simple,265,"As a Site Reliability Engineer (SRE) , I would like to have Cromwell support Sentry (https://sentry.io) to capture and report exceptions. This will allow me to better support our runtime operations and know when the system is functioning properly. This could be as simple as a document detailing how to deploy cromwell with the appropriate configuration, or it may involve code changes. @ansingh7115 is working on this in workbench at the moment and should be able to provide more information. @davidbernick can also provide configuration details.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2120
https://github.com/broadinstitute/cromwell/issues/2125:67,Availability,error,error,67,"Currently it barfs on aliased call commands yielding the following error:; ```; Exception in thread ""main"" wdl4s.parser.WdlParser$SyntaxError: ERROR: Expression references output on call that doesn't exist (line 1572, col 5):. ValidateCram.*; ^; ; 	at wdl4s.Workflow.$anonfun$expandedWildcardOutputs$5(Workflow.scala:166); 	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:241); 	at scala.collection.immutable.List.foreach(List.scala:378); 	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:241); 	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:238); 	at scala.collection.immutable.List.flatMap(List.scala:341); ```. FYI: `ValidateCram` was called as such in the file:; ```; call ValidateSamFile as ValidateCram {; input:; input_bam = ConvertToCram.output_cram,; input_bam_index = ConvertToCram.output_cram_index,; report_filename = sample_name + "".cram.validation_report"",; .....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2125
https://github.com/broadinstitute/cromwell/issues/2125:143,Availability,ERROR,ERROR,143,"Currently it barfs on aliased call commands yielding the following error:; ```; Exception in thread ""main"" wdl4s.parser.WdlParser$SyntaxError: ERROR: Expression references output on call that doesn't exist (line 1572, col 5):. ValidateCram.*; ^; ; 	at wdl4s.Workflow.$anonfun$expandedWildcardOutputs$5(Workflow.scala:166); 	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:241); 	at scala.collection.immutable.List.foreach(List.scala:378); 	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:241); 	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:238); 	at scala.collection.immutable.List.flatMap(List.scala:341); ```. FYI: `ValidateCram` was called as such in the file:; ```; call ValidateSamFile as ValidateCram {; input:; input_bam = ConvertToCram.output_cram,; input_bam_index = ConvertToCram.output_cram_index,; report_filename = sample_name + "".cram.validation_report"",; .....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2125
https://github.com/broadinstitute/cromwell/issues/2125:227,Security,Validat,ValidateCram,227,"Currently it barfs on aliased call commands yielding the following error:; ```; Exception in thread ""main"" wdl4s.parser.WdlParser$SyntaxError: ERROR: Expression references output on call that doesn't exist (line 1572, col 5):. ValidateCram.*; ^; ; 	at wdl4s.Workflow.$anonfun$expandedWildcardOutputs$5(Workflow.scala:166); 	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:241); 	at scala.collection.immutable.List.foreach(List.scala:378); 	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:241); 	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:238); 	at scala.collection.immutable.List.flatMap(List.scala:341); ```. FYI: `ValidateCram` was called as such in the file:; ```; call ValidateSamFile as ValidateCram {; input:; input_bam = ConvertToCram.output_cram,; input_bam_index = ConvertToCram.output_cram_index,; report_filename = sample_name + "".cram.validation_report"",; .....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2125
https://github.com/broadinstitute/cromwell/issues/2125:687,Security,Validat,ValidateCram,687,"Currently it barfs on aliased call commands yielding the following error:; ```; Exception in thread ""main"" wdl4s.parser.WdlParser$SyntaxError: ERROR: Expression references output on call that doesn't exist (line 1572, col 5):. ValidateCram.*; ^; ; 	at wdl4s.Workflow.$anonfun$expandedWildcardOutputs$5(Workflow.scala:166); 	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:241); 	at scala.collection.immutable.List.foreach(List.scala:378); 	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:241); 	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:238); 	at scala.collection.immutable.List.flatMap(List.scala:341); ```. FYI: `ValidateCram` was called as such in the file:; ```; call ValidateSamFile as ValidateCram {; input:; input_bam = ConvertToCram.output_cram,; input_bam_index = ConvertToCram.output_cram_index,; report_filename = sample_name + "".cram.validation_report"",; .....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2125
https://github.com/broadinstitute/cromwell/issues/2125:744,Security,Validat,ValidateSamFile,744,"Currently it barfs on aliased call commands yielding the following error:; ```; Exception in thread ""main"" wdl4s.parser.WdlParser$SyntaxError: ERROR: Expression references output on call that doesn't exist (line 1572, col 5):. ValidateCram.*; ^; ; 	at wdl4s.Workflow.$anonfun$expandedWildcardOutputs$5(Workflow.scala:166); 	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:241); 	at scala.collection.immutable.List.foreach(List.scala:378); 	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:241); 	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:238); 	at scala.collection.immutable.List.flatMap(List.scala:341); ```. FYI: `ValidateCram` was called as such in the file:; ```; call ValidateSamFile as ValidateCram {; input:; input_bam = ConvertToCram.output_cram,; input_bam_index = ConvertToCram.output_cram_index,; report_filename = sample_name + "".cram.validation_report"",; .....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2125
https://github.com/broadinstitute/cromwell/issues/2125:763,Security,Validat,ValidateCram,763,"Currently it barfs on aliased call commands yielding the following error:; ```; Exception in thread ""main"" wdl4s.parser.WdlParser$SyntaxError: ERROR: Expression references output on call that doesn't exist (line 1572, col 5):. ValidateCram.*; ^; ; 	at wdl4s.Workflow.$anonfun$expandedWildcardOutputs$5(Workflow.scala:166); 	at scala.collection.TraversableLike.$anonfun$flatMap$1(TraversableLike.scala:241); 	at scala.collection.immutable.List.foreach(List.scala:378); 	at scala.collection.TraversableLike.flatMap(TraversableLike.scala:241); 	at scala.collection.TraversableLike.flatMap$(TraversableLike.scala:238); 	at scala.collection.immutable.List.flatMap(List.scala:341); ```. FYI: `ValidateCram` was called as such in the file:; ```; call ValidateSamFile as ValidateCram {; input:; input_bam = ConvertToCram.output_cram,; input_bam_index = ConvertToCram.output_cram_index,; report_filename = sample_name + "".cram.validation_report"",; .....; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2125
https://github.com/broadinstitute/cromwell/issues/2126:175,Modifiability,variab,variable,175,The (no-longer maintained) pywdl repo has a graph building tools (from wdl) that would put the nodes that comprise a scatter block in a small rectangle labeled by the scatter variable. It would be really nice to have a similar result from the graph tool in wdlTool.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2126
https://github.com/broadinstitute/cromwell/issues/2131:40,Security,access,access,40,Write some stub functions to request if access should be granted or to associate a workflow id with a principal. At this stage the responses can be completely mocked,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2131
https://github.com/broadinstitute/cromwell/issues/2131:11,Testability,stub,stub,11,Write some stub functions to request if access should be granted or to associate a workflow id with a principal. At this stage the responses can be completely mocked,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2131
https://github.com/broadinstitute/cromwell/issues/2131:159,Testability,mock,mocked,159,Write some stub functions to request if access should be granted or to associate a workflow id with a principal. At this stage the responses can be completely mocked,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2131
https://github.com/broadinstitute/cromwell/issues/2132:311,Availability,avail,available,311,We should be able to grab the principal ID from the HTTP header via the apache proxy. Get this info from DevOps and demonstrate capability to grab this in the HTTP code. I suspect the easiest path here would be to talk to some folks in firecloud on how to handle this for testing and such when the proxy is not available,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2132
https://github.com/broadinstitute/cromwell/issues/2132:272,Testability,test,testing,272,We should be able to grab the principal ID from the HTTP header via the apache proxy. Get this info from DevOps and demonstrate capability to grab this in the HTTP code. I suspect the easiest path here would be to talk to some folks in firecloud on how to handle this for testing and such when the proxy is not available,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2132
https://github.com/broadinstitute/cromwell/issues/2133:41,Deployability,deploy,deployable,41,"Make sure we're going the DevOps blessed deployable route from the start, including whatever docker magic, etc they're looking for.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2133
https://github.com/broadinstitute/cromwell/issues/2133:52,Integrability,rout,route,52,"Make sure we're going the DevOps blessed deployable route from the start, including whatever docker magic, etc they're looking for.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2133
https://github.com/broadinstitute/cromwell/issues/2136:108,Security,access,accessible,108,"For endpoints which provide a single workflow ID to get data, e.g. metadata, request if this workflow ID is accessible to the principal (see #2131). If so pass through to Cromwell, otherwise reject",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2136
https://github.com/broadinstitute/cromwell/issues/2137:23,Security,access,access,23,CromIAM will now allow access to the stats endpoint,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2137
https://github.com/broadinstitute/cromwell/issues/2138:115,Security,access,access,115,The how is still TBD but the end result is the query endpoint shall only return results for workflows the user has access to,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2138
https://github.com/broadinstitute/cromwell/pull/2139:87,Modifiability,config,config,87,"- Adds a way to lookup docker hashes from local machine, thanks @kshakir !; - ~~Adds a config option to disable docker lookup entirely.~~; - Disable docker lookup if the backend does not support docker. ~~@LeeTL1220 this is slightly different from what we talked this morning but I think it should still enable your use case.; If you disable docker hash lookup on the SGE cromwell server, you'll still have call caching and there will be no lookup (so it won't fail..).~~",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2139
https://github.com/broadinstitute/cromwell/pull/2139:30,Security,hash,hashes,30,"- Adds a way to lookup docker hashes from local machine, thanks @kshakir !; - ~~Adds a config option to disable docker lookup entirely.~~; - Disable docker lookup if the backend does not support docker. ~~@LeeTL1220 this is slightly different from what we talked this morning but I think it should still enable your use case.; If you disable docker hash lookup on the SGE cromwell server, you'll still have call caching and there will be no lookup (so it won't fail..).~~",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2139
https://github.com/broadinstitute/cromwell/pull/2139:349,Security,hash,hash,349,"- Adds a way to lookup docker hashes from local machine, thanks @kshakir !; - ~~Adds a config option to disable docker lookup entirely.~~; - Disable docker lookup if the backend does not support docker. ~~@LeeTL1220 this is slightly different from what we talked this morning but I think it should still enable your use case.; If you disable docker hash lookup on the SGE cromwell server, you'll still have call caching and there will be no lookup (so it won't fail..).~~",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2139
https://github.com/broadinstitute/cromwell/pull/2140:5,Deployability,update,updates,5,Some updates to support migrating null outputs to the job store simpleton table. Also cherry picked a TES commit to get the build green.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2140
https://github.com/broadinstitute/cromwell/pull/2140:130,Energy Efficiency,green,green,130,Some updates to support migrating null outputs to the job store simpleton table. Also cherry picked a TES commit to get the build green.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2140
https://github.com/broadinstitute/cromwell/pull/2140:64,Usability,simpl,simpleton,64,Some updates to support migrating null outputs to the job store simpleton table. Also cherry picked a TES commit to get the build green.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2140
https://github.com/broadinstitute/cromwell/pull/2141:326,Energy Efficiency,reduce,reduces,326,This PR is the output from an analysis made in order to see if SFS backend functionality can be re-used as part of HtCondor backend for CCC.; The end result was that most of the things can be re-used but caching since it's being centralized in someway by SFS.; The idea is to add this contribution to this repository since it reduces LOCs but in the CCC context the old version will still be supported.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2141
https://github.com/broadinstitute/cromwell/issues/2143:22,Deployability,configurat,configuration,22,Make sure that w/ the configuration from #2142 that one can run the new JG WDL w/ 3 samples. Fix any issues which might come up in this process,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2143
https://github.com/broadinstitute/cromwell/issues/2143:22,Modifiability,config,configuration,22,Make sure that w/ the configuration from #2142 that one can run the new JG WDL w/ 3 samples. Fix any issues which might come up in this process,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2143
https://github.com/broadinstitute/cromwell/issues/2144:9,Testability,mock,mock,9,Create a mock WDL that mimics the shape of the new JG WDL w/o actually doing anything of note so that we can run this way mo faster. It sounds like @jsotobroad might have already done this or something close to it.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2144
https://github.com/broadinstitute/cromwell/issues/2145:96,Availability,error,errors,96,"Iterate at whatever pace makes sense towards running a 10K JG w/ the mock WDL. If there issues (errors and/or things which seem unreasonably pokey) follow this decision tree:. - If the problem seems small, fix it and continue; - If the problem seems large but there's a clear hack/workaround, file a ticket and do the hack/workaround then continue; - If the problem seems large but there is no clear hack/workaround, bring this up with the team to figure out how to proceed",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2145
https://github.com/broadinstitute/cromwell/issues/2145:69,Testability,mock,mock,69,"Iterate at whatever pace makes sense towards running a 10K JG w/ the mock WDL. If there issues (errors and/or things which seem unreasonably pokey) follow this decision tree:. - If the problem seems small, fix it and continue; - If the problem seems large but there's a clear hack/workaround, file a ticket and do the hack/workaround then continue; - If the problem seems large but there is no clear hack/workaround, bring this up with the team to figure out how to proceed",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2145
https://github.com/broadinstitute/cromwell/issues/2145:270,Usability,clear,clear,270,"Iterate at whatever pace makes sense towards running a 10K JG w/ the mock WDL. If there issues (errors and/or things which seem unreasonably pokey) follow this decision tree:. - If the problem seems small, fix it and continue; - If the problem seems large but there's a clear hack/workaround, file a ticket and do the hack/workaround then continue; - If the problem seems large but there is no clear hack/workaround, bring this up with the team to figure out how to proceed",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2145
https://github.com/broadinstitute/cromwell/issues/2145:394,Usability,clear,clear,394,"Iterate at whatever pace makes sense towards running a 10K JG w/ the mock WDL. If there issues (errors and/or things which seem unreasonably pokey) follow this decision tree:. - If the problem seems small, fix it and continue; - If the problem seems large but there's a clear hack/workaround, file a ticket and do the hack/workaround then continue; - If the problem seems large but there is no clear hack/workaround, bring this up with the team to figure out how to proceed",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2145
https://github.com/broadinstitute/cromwell/issues/2147:183,Availability,error,error,183,"Docs here: http://doc.akka.io/docs/akka-http/current/scala.html. NB for this ticket these endpoints wouldn't need to do anything useful, just return some hard-coded value (500 server error perhaps?)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2147
https://github.com/broadinstitute/cromwell/issues/2148:82,Integrability,depend,depending,82,"Differences might be:; - documentation; - authentication; - no `stats` endpoint. (depending on how Swagger actually works, some of these might be unnecessary/for free)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2148
https://github.com/broadinstitute/cromwell/issues/2148:42,Security,authenticat,authentication,42,"Differences might be:; - documentation; - authentication; - no `stats` endpoint. (depending on how Swagger actually works, some of these might be unnecessary/for free)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2148
https://github.com/broadinstitute/cromwell/issues/2152:140,Availability,avail,available,140,"Since read_json and write_json are not implemented yet, I'm documenting for my team which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/issues/2152:777,Availability,error,error,777,"Since read_json and write_json are not implemented yet, I'm documenting for my team which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/issues/2152:844,Availability,Error,Error,844,"Since read_json and write_json are not implemented yet, I'm documenting for my team which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/issues/2152:957,Availability,error,errors,957,"Since read_json and write_json are not implemented yet, I'm documenting for my team which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/issues/2152:1035,Availability,Error,Error,1035,"eam which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.txt); [arr_float.txt](https://github.com/broadinstitute/cromwell/files/901060/ar",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/issues/2152:1263,Availability,Error,Error,1263,"dinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.txt); [arr_float.txt](https://github.com/broadinstitute/cromwell/files/901060/arr_float.txt); [arr_int.txt](https://github.com/broadinstitute/cromwell/files/901064/arr_int.txt); [arr_string.txt](https://github.com/broadinstitute/cromwell/files/901065/arr_string.txt); [map_float_float.txt](https://github.co",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/issues/2152:479,Testability,test,tested,479,"Since read_json and write_json are not implemented yet, I'm documenting for my team which types we can serialize and de-serialize using the available library functions. I wrote a pair of WDLs, one to write data to files and another to read data from files:. [test_read_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901057/test_read_data.wdl.txt); [test_write_data.wdl.txt](https://github.com/broadinstitute/cromwell/files/901056/test_write_data.wdl.txt). When I tested these I noticed that I can read and write a single Boolean value, and I can write complex types with Booleans, but reading Array[Boolean] didn't work and neither did reading any Map[Boolean,?] or Map[?,Boolean]. . **What is the best way to read in complex types that involve Boolean?**. The error I got when trying to read Array[Boolean] looks like this:. > Error: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. The errors I would get for the complex types involving Boolean look like this:. > Error: Failed to coerce one or more keys or values for creating a Map[String, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. > Error: Failed to coerce one or more keys or values for creating a Map[Int, Boolean]: java.lang.IllegalArgumentException: No coercion defined from 'WdlString(true)' of type 'class wdl4s.values.WdlString' to WdlBooleanType$. Here are the files generated by test_write_data.wdl that I can read back in with test_read_data.wdl:. [a_false.txt](https://github.com/broadinstitute/cromwell/files/901058/a_false.txt); [a_float.txt](https://github.com/broadinstitute/cromwell/files/901061/a_float.txt); [a_string.txt](https://github.com/broadinstitute/cromwell/files/901063/a_string.txt); [a_true.txt](https://github.com/broadinstitute/cromwell/files/901062/a_true.txt); [a_zero.txt](https://github.com/broadinstitute/cromwell/files/901059/a_zero.t",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2152
https://github.com/broadinstitute/cromwell/pull/2158:18,Deployability,configurat,configuration,18,This is the SLURM configuration I have been using for workflow development on Harvard Medical School's Orchestra 2 SLURM system. You should adjust the runtime-attributes for consistency with other platforms. (see #2068).,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2158
https://github.com/broadinstitute/cromwell/pull/2158:18,Modifiability,config,configuration,18,This is the SLURM configuration I have been using for workflow development on Harvard Medical School's Orchestra 2 SLURM system. You should adjust the runtime-attributes for consistency with other platforms. (see #2068).,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2158
https://github.com/broadinstitute/cromwell/pull/2159:107,Usability,undo,undocumented,107,"Epilogue defaults to empty string, overridden to `sync` to keep Centaur Local happy. The knob is currently undocumented, that can certainly change if desired.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2159
https://github.com/broadinstitute/cromwell/issues/2162:352,Testability,log,logs,352,"Happens with Cromwell 24 and pretty sure also Cromwell 25 . I was running the GOTC single-sample WDL and found that in a call of a task where one of the input files was set to optional (but a file path was specified), the call failed because the path passed to the command was the gs:// path instead of the localized path. . Can provide more details + logs if this is something you haven't seen before.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2162
https://github.com/broadinstitute/cromwell/issues/2163:578,Availability,avail,available,578,"When testing/adapting production WDLs for public use, I often run into the problem that some of the input files are in private buckets. Because there are many input files, it's tedious to check all of them. So I tend to miss one or two that eventually make my workflows fail, often in late stages of the workflow. This can also happen if you get something wrong in a file path (typo, forgot a subdirectory etc). . It would be incredibly helpful if there was an option to have Cromwell check that all the external input files (specified with full paths to eg a gs:// bucket) are available and reachable (meaning we have permission to read them) before kicking off the actual workflow, and fail with an informative error if it's not the case. This would save a fair amount of iteration on large workflows with many external inputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2163
https://github.com/broadinstitute/cromwell/issues/2163:713,Availability,error,error,713,"When testing/adapting production WDLs for public use, I often run into the problem that some of the input files are in private buckets. Because there are many input files, it's tedious to check all of them. So I tend to miss one or two that eventually make my workflows fail, often in late stages of the workflow. This can also happen if you get something wrong in a file path (typo, forgot a subdirectory etc). . It would be incredibly helpful if there was an option to have Cromwell check that all the external input files (specified with full paths to eg a gs:// bucket) are available and reachable (meaning we have permission to read them) before kicking off the actual workflow, and fail with an informative error if it's not the case. This would save a fair amount of iteration on large workflows with many external inputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2163
https://github.com/broadinstitute/cromwell/issues/2163:13,Energy Efficiency,adapt,adapting,13,"When testing/adapting production WDLs for public use, I often run into the problem that some of the input files are in private buckets. Because there are many input files, it's tedious to check all of them. So I tend to miss one or two that eventually make my workflows fail, often in late stages of the workflow. This can also happen if you get something wrong in a file path (typo, forgot a subdirectory etc). . It would be incredibly helpful if there was an option to have Cromwell check that all the external input files (specified with full paths to eg a gs:// bucket) are available and reachable (meaning we have permission to read them) before kicking off the actual workflow, and fail with an informative error if it's not the case. This would save a fair amount of iteration on large workflows with many external inputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2163
https://github.com/broadinstitute/cromwell/issues/2163:13,Modifiability,adapt,adapting,13,"When testing/adapting production WDLs for public use, I often run into the problem that some of the input files are in private buckets. Because there are many input files, it's tedious to check all of them. So I tend to miss one or two that eventually make my workflows fail, often in late stages of the workflow. This can also happen if you get something wrong in a file path (typo, forgot a subdirectory etc). . It would be incredibly helpful if there was an option to have Cromwell check that all the external input files (specified with full paths to eg a gs:// bucket) are available and reachable (meaning we have permission to read them) before kicking off the actual workflow, and fail with an informative error if it's not the case. This would save a fair amount of iteration on large workflows with many external inputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2163
https://github.com/broadinstitute/cromwell/issues/2163:5,Testability,test,testing,5,"When testing/adapting production WDLs for public use, I often run into the problem that some of the input files are in private buckets. Because there are many input files, it's tedious to check all of them. So I tend to miss one or two that eventually make my workflows fail, often in late stages of the workflow. This can also happen if you get something wrong in a file path (typo, forgot a subdirectory etc). . It would be incredibly helpful if there was an option to have Cromwell check that all the external input files (specified with full paths to eg a gs:// bucket) are available and reachable (meaning we have permission to read them) before kicking off the actual workflow, and fail with an informative error if it's not the case. This would save a fair amount of iteration on large workflows with many external inputs.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2163
https://github.com/broadinstitute/cromwell/pull/2165:73,Deployability,Update,Updated,73,Removed dead code related to configs such as the old `backend.backend`.; Updated unencrypted configuration files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2165
https://github.com/broadinstitute/cromwell/pull/2165:93,Deployability,configurat,configuration,93,Removed dead code related to configs such as the old `backend.backend`.; Updated unencrypted configuration files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2165
https://github.com/broadinstitute/cromwell/pull/2165:29,Modifiability,config,configs,29,Removed dead code related to configs such as the old `backend.backend`.; Updated unencrypted configuration files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2165
https://github.com/broadinstitute/cromwell/pull/2165:93,Modifiability,config,configuration,93,Removed dead code related to configs such as the old `backend.backend`.; Updated unencrypted configuration files.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2165
https://github.com/broadinstitute/cromwell/issues/2166:147,Modifiability,Config,Config,147,"Currently we have docs for the SGE backend which is a bit of a hodgepodge between describing the historical SGE backend and the flexibility of the Config backend. There's also doc for the HTCondor backend which as of #2141 is also using the Config backend. . Change all of this to demonstrate how one can use the Config backend, primarily from the lens of an HPC user. Make it clear that it can handle most use cases and provide a couple of generic examples (e.g. SGE)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2166
https://github.com/broadinstitute/cromwell/issues/2166:241,Modifiability,Config,Config,241,"Currently we have docs for the SGE backend which is a bit of a hodgepodge between describing the historical SGE backend and the flexibility of the Config backend. There's also doc for the HTCondor backend which as of #2141 is also using the Config backend. . Change all of this to demonstrate how one can use the Config backend, primarily from the lens of an HPC user. Make it clear that it can handle most use cases and provide a couple of generic examples (e.g. SGE)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2166
https://github.com/broadinstitute/cromwell/issues/2166:313,Modifiability,Config,Config,313,"Currently we have docs for the SGE backend which is a bit of a hodgepodge between describing the historical SGE backend and the flexibility of the Config backend. There's also doc for the HTCondor backend which as of #2141 is also using the Config backend. . Change all of this to demonstrate how one can use the Config backend, primarily from the lens of an HPC user. Make it clear that it can handle most use cases and provide a couple of generic examples (e.g. SGE)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2166
https://github.com/broadinstitute/cromwell/issues/2166:377,Usability,clear,clear,377,"Currently we have docs for the SGE backend which is a bit of a hodgepodge between describing the historical SGE backend and the flexibility of the Config backend. There's also doc for the HTCondor backend which as of #2141 is also using the Config backend. . Change all of this to demonstrate how one can use the Config backend, primarily from the lens of an HPC user. Make it clear that it can handle most use cases and provide a couple of generic examples (e.g. SGE)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2166
https://github.com/broadinstitute/cromwell/issues/2167:185,Energy Efficiency,charge,charged,185,"Feature request from @gsaksena:. Often times a job is preempted in under 10 minutes, it would be nice to retry those jobs more than the runtime attribute for preemptible. Users are not charged within the first 10 minutes, so it is a cheap way to try to save costs while only taking a bit more time. . From Google, it is likely that if a machine will be preempted, it will be within the first 10-20 minutes.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2167
https://github.com/broadinstitute/cromwell/issues/2168:138,Deployability,upgrade,upgraded,138,"Feature request from @gsaksena:; If a preemptible VM is killed because it hit the time-out (of 24 hours), then it should automatically be upgraded to a full price VM (non-preemptible). Currently it would retry the number of times it would try, per the preemptible runtime attribute. So if preemptible is 3, then it would take 3 days to upgrade to a non-preemptible VM.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2168
https://github.com/broadinstitute/cromwell/issues/2168:336,Deployability,upgrade,upgrade,336,"Feature request from @gsaksena:; If a preemptible VM is killed because it hit the time-out (of 24 hours), then it should automatically be upgraded to a full price VM (non-preemptible). Currently it would retry the number of times it would try, per the preemptible runtime attribute. So if preemptible is 3, then it would take 3 days to upgrade to a non-preemptible VM.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2168
https://github.com/broadinstitute/cromwell/issues/2171:192,Safety,abort,aborting,192,"Create a Python program which can interact with Cromwell but provide batching capabilities, submitting a batch of workflows but then being able to manage them as a group, e.g. getting status, aborting, etc.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2171
https://github.com/broadinstitute/cromwell/pull/2176:261,Availability,error,error,261,"Hello Cromwell People, . Currently I believe Cromwell has retry logic for I/O issues or preemptible VMs issues for Google Cloud,. However, when Cromwell jobs that are executed via GridEngine dispatcher will fail with no re-try if the return code is deemed as a error code,. I am submitting a potential patch where Cromwell can retry failed jobs running on GridEngine with user specified retries (""backend.max-job-retries""), . I'm not sure how the configurations should be organized but here is my starting point; let me know what you guys think. Thanks,; Paul",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2176
https://github.com/broadinstitute/cromwell/pull/2176:302,Deployability,patch,patch,302,"Hello Cromwell People, . Currently I believe Cromwell has retry logic for I/O issues or preemptible VMs issues for Google Cloud,. However, when Cromwell jobs that are executed via GridEngine dispatcher will fail with no re-try if the return code is deemed as a error code,. I am submitting a potential patch where Cromwell can retry failed jobs running on GridEngine with user specified retries (""backend.max-job-retries""), . I'm not sure how the configurations should be organized but here is my starting point; let me know what you guys think. Thanks,; Paul",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2176
https://github.com/broadinstitute/cromwell/pull/2176:447,Deployability,configurat,configurations,447,"Hello Cromwell People, . Currently I believe Cromwell has retry logic for I/O issues or preemptible VMs issues for Google Cloud,. However, when Cromwell jobs that are executed via GridEngine dispatcher will fail with no re-try if the return code is deemed as a error code,. I am submitting a potential patch where Cromwell can retry failed jobs running on GridEngine with user specified retries (""backend.max-job-retries""), . I'm not sure how the configurations should be organized but here is my starting point; let me know what you guys think. Thanks,; Paul",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2176
https://github.com/broadinstitute/cromwell/pull/2176:447,Modifiability,config,configurations,447,"Hello Cromwell People, . Currently I believe Cromwell has retry logic for I/O issues or preemptible VMs issues for Google Cloud,. However, when Cromwell jobs that are executed via GridEngine dispatcher will fail with no re-try if the return code is deemed as a error code,. I am submitting a potential patch where Cromwell can retry failed jobs running on GridEngine with user specified retries (""backend.max-job-retries""), . I'm not sure how the configurations should be organized but here is my starting point; let me know what you guys think. Thanks,; Paul",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2176
https://github.com/broadinstitute/cromwell/pull/2176:64,Testability,log,logic,64,"Hello Cromwell People, . Currently I believe Cromwell has retry logic for I/O issues or preemptible VMs issues for Google Cloud,. However, when Cromwell jobs that are executed via GridEngine dispatcher will fail with no re-try if the return code is deemed as a error code,. I am submitting a potential patch where Cromwell can retry failed jobs running on GridEngine with user specified retries (""backend.max-job-retries""), . I'm not sure how the configurations should be organized but here is my starting point; let me know what you guys think. Thanks,; Paul",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2176
https://github.com/broadinstitute/cromwell/issues/2178:1284,Availability,error,error,1284,"A workflow was submitted and the inputs looked like:; ```; ""inputs"": {; ""HaplotypeCallerGvcfScatterWf.ref_dict"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.dict\"""",; ""HaplotypeCallerGvcfScatterWf.MergeVCFs.disk_size"": 10,; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.mem_size"": ""4 GB"",; ""HaplotypeCallerGvcfScatterWf.ref_fasta"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta\"""",; ""HaplotypeCallerGvcfScatterWf.ref_fasta_index"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta.fai\"""",; ""HaplotypeCallerGvcfScatterWf.input_bam_index"": ""gs://gatk-tutorials/workshop_1702/variant_discovery/data/bams/father.bai"",; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.interval_padding"": 100,; ""HaplotypeCallerGvcfScatterWf.MergeVCFs.mem_size"": ""2 GB"",; ""HaplotypeCallerGvcfScatterWf.scattered_calling_intervals_list"": ""gs://gatk-test-data/intervals/b37_wgs_scattered_calling_intervals.txt"",; ""HaplotypeCallerGvcfScatterWf.input_bam"": ""gs://gatk-tutorials/workshop_1702/variant_discovery/data/bams/father.bam"",; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.disk_size"": 100; },; ```; Cromwell started jobs but they don't have operations IDs and the jobs/workflow remain in the ""Running"" state forever. Ideally the workflow should fail, and fail gracefully with an error message that makes sense. This ticket can be easily reproduced on 25_hotfix by corrupting a file input path to look like:; ```; ""HaplotypeCallerGvcfScatterWf.ref_fasta_index"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta.fai\"""",; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2178
https://github.com/broadinstitute/cromwell/issues/2178:1290,Integrability,message,message,1290,"A workflow was submitted and the inputs looked like:; ```; ""inputs"": {; ""HaplotypeCallerGvcfScatterWf.ref_dict"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.dict\"""",; ""HaplotypeCallerGvcfScatterWf.MergeVCFs.disk_size"": 10,; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.mem_size"": ""4 GB"",; ""HaplotypeCallerGvcfScatterWf.ref_fasta"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta\"""",; ""HaplotypeCallerGvcfScatterWf.ref_fasta_index"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta.fai\"""",; ""HaplotypeCallerGvcfScatterWf.input_bam_index"": ""gs://gatk-tutorials/workshop_1702/variant_discovery/data/bams/father.bai"",; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.interval_padding"": 100,; ""HaplotypeCallerGvcfScatterWf.MergeVCFs.mem_size"": ""2 GB"",; ""HaplotypeCallerGvcfScatterWf.scattered_calling_intervals_list"": ""gs://gatk-test-data/intervals/b37_wgs_scattered_calling_intervals.txt"",; ""HaplotypeCallerGvcfScatterWf.input_bam"": ""gs://gatk-tutorials/workshop_1702/variant_discovery/data/bams/father.bam"",; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.disk_size"": 100; },; ```; Cromwell started jobs but they don't have operations IDs and the jobs/workflow remain in the ""Running"" state forever. Ideally the workflow should fail, and fail gracefully with an error message that makes sense. This ticket can be easily reproduced on 25_hotfix by corrupting a file input path to look like:; ```; ""HaplotypeCallerGvcfScatterWf.ref_fasta_index"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta.fai\"""",; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2178
https://github.com/broadinstitute/cromwell/issues/2178:850,Testability,test,test-data,850,"A workflow was submitted and the inputs looked like:; ```; ""inputs"": {; ""HaplotypeCallerGvcfScatterWf.ref_dict"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.dict\"""",; ""HaplotypeCallerGvcfScatterWf.MergeVCFs.disk_size"": 10,; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.mem_size"": ""4 GB"",; ""HaplotypeCallerGvcfScatterWf.ref_fasta"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta\"""",; ""HaplotypeCallerGvcfScatterWf.ref_fasta_index"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta.fai\"""",; ""HaplotypeCallerGvcfScatterWf.input_bam_index"": ""gs://gatk-tutorials/workshop_1702/variant_discovery/data/bams/father.bai"",; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.interval_padding"": 100,; ""HaplotypeCallerGvcfScatterWf.MergeVCFs.mem_size"": ""2 GB"",; ""HaplotypeCallerGvcfScatterWf.scattered_calling_intervals_list"": ""gs://gatk-test-data/intervals/b37_wgs_scattered_calling_intervals.txt"",; ""HaplotypeCallerGvcfScatterWf.input_bam"": ""gs://gatk-tutorials/workshop_1702/variant_discovery/data/bams/father.bam"",; ""HaplotypeCallerGvcfScatterWf.HaplotypeCaller.disk_size"": 100; },; ```; Cromwell started jobs but they don't have operations IDs and the jobs/workflow remain in the ""Running"" state forever. Ideally the workflow should fail, and fail gracefully with an error message that makes sense. This ticket can be easily reproduced on 25_hotfix by corrupting a file input path to look like:; ```; ""HaplotypeCallerGvcfScatterWf.ref_fasta_index"": ""\""gs://gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta.fai\"""",; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2178
https://github.com/broadinstitute/cromwell/pull/2180:2,Modifiability,Refactor,Refactor,2,- Refactor the metadata building. - sort events by timestamp from the DB query. - add CRDT for call execution status. - compress metadata response. - fix timing diagram,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2180
https://github.com/broadinstitute/cromwell/issues/2182:101,Availability,error,errors,101,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:120,Availability,ERROR,ERROR,120,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:357,Performance,concurren,concurrent,357,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:565,Performance,queue,queued,565,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:624,Performance,concurren,concurrent,624,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:729,Performance,concurren,concurrent,729,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:810,Performance,concurren,concurrent,810,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:3884,Performance,concurren,concurrent,3884,k.MetadataSlickDatabase$class.refreshMetadataSummaryEntries(MetadataSlickDatabase.scala:133); 	at cromwell.database.slick.SlickDatabase.refreshMetadataSummaryEntries(SlickDatabase.scala:54); 	at cromwell.services.metadata.impl.MetadataDatabaseAccess$class.refreshWorkflowMetadataSummaries(MetadataDatabaseAccess.scala:146); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.refreshWorkflowMetadataSummaries(MetadataSummaryRefreshActor.scala:35); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:45); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:43); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.akka$actor$LoggingFSM$$super$processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.aroundReceive(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:3958,Performance,concurren,concurrent,3958,k.MetadataSlickDatabase$class.refreshMetadataSummaryEntries(MetadataSlickDatabase.scala:133); 	at cromwell.database.slick.SlickDatabase.refreshMetadataSummaryEntries(SlickDatabase.scala:54); 	at cromwell.services.metadata.impl.MetadataDatabaseAccess$class.refreshWorkflowMetadataSummaries(MetadataDatabaseAccess.scala:146); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.refreshWorkflowMetadataSummaries(MetadataSummaryRefreshActor.scala:35); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:45); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:43); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.akka$actor$LoggingFSM$$super$processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.aroundReceive(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:4044,Performance,concurren,concurrent,4044,k.MetadataSlickDatabase$class.refreshMetadataSummaryEntries(MetadataSlickDatabase.scala:133); 	at cromwell.database.slick.SlickDatabase.refreshMetadataSummaryEntries(SlickDatabase.scala:54); 	at cromwell.services.metadata.impl.MetadataDatabaseAccess$class.refreshWorkflowMetadataSummaries(MetadataDatabaseAccess.scala:146); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.refreshWorkflowMetadataSummaries(MetadataSummaryRefreshActor.scala:35); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:45); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:43); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.akka$actor$LoggingFSM$$super$processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.aroundReceive(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:654,Safety,Abort,AbortPolicy,654,"Tried to re-run the 10K JG workflow with CC on, the workflow failed almost immediately with multiple errors like; ```; [ERROR] [04/18/2017 21:11:44.685] [cromwell-system-akka.dispatchers.service-dispatcher-86] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService/metadata-summary-actor] Failed to summarize metadata; java.util.concurrent.RejectedExecutionException: Task slick.basic.BasicBackend$DatabaseDef$$anon$2@64919660 rejected from slick.util.AsyncExecutor$$anon$2$$anon$1@1dce40e4[Running, pool size = 20, active threads = 20, queued tasks = 1000, completed tasks = 800]; 	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047); 	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823); 	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369); 	at slick.util.AsyncExecutor$$anon$2$$anon$3.execute(AsyncExecutor.scala:120); 	at slick.basic.BasicBackend$DatabaseDef$class.runSynchronousDatabaseAction(BasicBackend.scala:233); 	at slick.jdbc.JdbcBackend$DatabaseDef.runSynchronousDatabaseAction(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:210); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run$1(BasicBackend.scala:153); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:157); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInContext(BasicBackend.scala:179); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInContext(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.runInternal(BasicBackend.scala:78); 	at slick.jdbc.JdbcBackend$DatabaseDef.runInternal(JdbcBackend.scala:38); 	at slick.basic.BasicBackend$DatabaseDef$class.run(BasicBackend.scala:75); 	at slick.jdbc.JdbcBackend$DatabaseDef.run(JdbcBackend.scala:",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:3039,Testability,Log,LoggingFSM,3039,SlickDatabase.scala:103); 	at cromwell.database.slick.MetadataSlickDatabase$class.refreshMetadataSummaryEntries(MetadataSlickDatabase.scala:133); 	at cromwell.database.slick.SlickDatabase.refreshMetadataSummaryEntries(SlickDatabase.scala:54); 	at cromwell.services.metadata.impl.MetadataDatabaseAccess$class.refreshWorkflowMetadataSummaries(MetadataDatabaseAccess.scala:146); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.refreshWorkflowMetadataSummaries(MetadataSummaryRefreshActor.scala:35); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:45); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:43); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.akka$actor$LoggingFSM$$super$processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.aroundReceive(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2182:3124,Testability,Log,LoggingFSM,3124,k.MetadataSlickDatabase$class.refreshMetadataSummaryEntries(MetadataSlickDatabase.scala:133); 	at cromwell.database.slick.SlickDatabase.refreshMetadataSummaryEntries(SlickDatabase.scala:54); 	at cromwell.services.metadata.impl.MetadataDatabaseAccess$class.refreshWorkflowMetadataSummaries(MetadataDatabaseAccess.scala:146); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.refreshWorkflowMetadataSummaries(MetadataSummaryRefreshActor.scala:35); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:45); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor$$anonfun$1.applyOrElse(MetadataSummaryRefreshActor.scala:43); 	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:36); 	at akka.actor.FSM$class.processEvent(FSM.scala:663); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.akka$actor$LoggingFSM$$super$processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.LoggingFSM$class.processEvent(FSM.scala:799); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.processEvent(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.FSM$class.akka$actor$FSM$$processMsg(FSM.scala:657); 	at akka.actor.FSM$$anonfun$receive$1.applyOrElse(FSM.scala:651); 	at akka.actor.Actor$class.aroundReceive(Actor.scala:496); 	at cromwell.services.metadata.impl.MetadataSummaryRefreshActor.aroundReceive(MetadataSummaryRefreshActor.scala:35); 	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:526); 	at akka.actor.ActorCell.invoke(ActorCell.scala:495); 	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257); 	at akka.dispatch.Mailbox.run(Mailbox.scala:224); 	at akka.dispatch.Mailbox.exec(Mailbox.scala:234); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); ```,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2182
https://github.com/broadinstitute/cromwell/issues/2183:14,Availability,failure,failure,14,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:200,Availability,ERROR,ERROR,200,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:692,Availability,recover,recoverWith,692,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:768,Availability,recover,recoverWith,768,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:4635,Integrability,protocol,protocol,4635,ply$mcV$sp(NioFlow.scala:53); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketI,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:4729,Integrability,protocol,protocol,4729,w.scala:52); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleExcepti,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:4898,Integrability,protocol,protocol,4898,.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:665,Performance,concurren,concurrent,665,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:741,Performance,concurren,concurrent,741,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:817,Performance,concurren,concurrent,817,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:1277,Performance,concurren,concurrent,1277,(during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); 	at cromwell.core.retry.Retry$$an,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:1602,Performance,concurren,concurrent,1602,1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); 	... 15 more; Caused by: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:202); 	at com.google.cloud.st,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:1676,Performance,concurren,concurrent,1676,e$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); 	... 15 more; Caused by: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:202); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:582); 	at com.goo,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:1762,Performance,concurren,concurrent,1762,$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); 	... 15 more; Caused by: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:202); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:582); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:50); 	at java.util.conc,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:1840,Performance,concurren,concurrent,1840,able.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); 	... 15 more; Caused by: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:202); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:582); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:50); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.clou,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:2764,Performance,concurren,concurrent,2764,ent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at cromwell.core.CromwellFatalException$.apply(core.scala:17); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); 	at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); 	... 15 more; Caused by: com.google.cloud.storage.StorageException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at com.google.cloud.storage.spi.DefaultStorageRpc.translate(DefaultStorageRpc.java:202); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:582); 	at com.google.cloud.storage.BlobWriteChannel$1.run(BlobWriteChannel.java:50); 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511); 	at com.google.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:47); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:199); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at better.files.File.writeByteArray(File.scala:269); 	at better.files.File.write(File.scala:279); 	at cromwell.core.path.BetterFileMethods$class.write(BetterFileMethods.scala:179); 	at cromwell.filesystems.gcs.GcsPath.write(GcsPathBuilder.scala:101); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply$mcV$sp(NioFlow.scala:53); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at cromwell.engine.io.n,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:3833,Performance,concurren,concurrent,3833,gle.cloud.RetryHelper.doRetry(RetryHelper.java:179); 	at com.google.cloud.RetryHelper.runWithRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:47); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:199); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at better.files.File.writeByteArray(File.scala:269); 	at better.files.File.write(File.scala:279); 	at cromwell.core.path.BetterFileMethods$class.write(BetterFileMethods.scala:179); 	at cromwell.filesystems.gcs.GcsPath.write(GcsPathBuilder.scala:101); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply$mcV$sp(NioFlow.scala:53); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.ge,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:3924,Performance,concurren,concurrent,3924,thRetries(RetryHelper.java:244); 	at com.google.cloud.storage.BlobWriteChannel.flushBuffer(BlobWriteChannel.java:47); 	at com.google.cloud.BaseWriteChannel.close(BaseWriteChannel.java:199); 	at com.google.cloud.storage.contrib.nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at better.files.File.writeByteArray(File.scala:269); 	at better.files.File.write(File.scala:279); 	at cromwell.core.path.BetterFileMethods$class.write(BetterFileMethods.scala:179); 	at cromwell.filesystems.gcs.GcsPath.write(GcsPathBuilder.scala:101); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply$mcV$sp(NioFlow.scala:53); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectio,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:692,Safety,recover,recoverWith,692,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:768,Safety,recover,recoverWith,768,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:335,Security,authenticat,authentication,335,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:394,Security,authenticat,authentication,394,"Got a centaur failure with `Failed to upload auth file` caused by the following exception, not considered retryable:. ```; 017-04-18 21:11:49,413 cromwell-system-akka.dispatchers.engine-dispatcher-64 ERROR - WorkflowManagerActor Workflow 6e23463e-3fc6-4b18-aeb0-fc7c920cd758 failed (during InitializingWorkflowState): Failed to upload authentication file; java.io.IOException: Failed to upload authentication file; 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:63); 	at cromwell.backend.impl.jes.JesInitializationActor$$anonfun$beforeAll$1.applyOrElse(JesInitializationActor.scala:62); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); 	at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); 	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); 	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); 	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); 	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); 	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); 	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); 	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); 	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); 	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); 	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107); Caused by: cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageExc",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:4152,Security,secur,security,4152,nio.CloudStorageWriteChannel.close(CloudStorageWriteChannel.java:57); 	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at better.files.File.writeByteArray(File.scala:269); 	at better.files.File.write(File.scala:279); 	at cromwell.core.path.BetterFileMethods$class.write(BetterFileMethods.scala:179); 	at cromwell.filesystems.gcs.GcsPath.write(GcsPathBuilder.scala:101); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply$mcV$sp(NioFlow.scala:53); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:9,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:4222,Security,secur,security,4222,	at java.nio.channels.Channels$1.close(Channels.java:178); 	at java.nio.file.Files.write(Files.java:3300); 	at better.files.File.writeByteArray(File.scala:269); 	at better.files.File.write(File.scala:279); 	at cromwell.core.path.BetterFileMethods$class.write(BetterFileMethods.scala:179); 	at cromwell.filesystems.gcs.GcsPath.write(GcsPathBuilder.scala:101); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply$mcV$sp(NioFlow.scala:53); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at cromwell.engine.io.nio.NioFlow$$anonfun$write$1.apply(NioFlow.scala:52); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24); 	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24); 	... 6 more; Caused by: javax.net.ssl.SSLException: Connection has been shutdown: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.SSLSocketImpl.checkEOF(SSLSocketImpl.java:1541); 	at sun.security.ssl.AppInputStream.read(AppInputStream.java:95); 	at java.io.BufferedInputStream.fill(BufferedInputStream.java:246); 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:286); 	at java.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.jav,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:5421,Security,secur,security,5421,.io.BufferedInputStream.read(BufferedInputStream.java:345); 	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.ne,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:5483,Security,secur,security,5483,t sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:704); 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109);,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:5550,Security,secur,security,5550, 	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:647); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153),MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:5617,Security,secur,security,5617,t sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:4,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:5694,Security,secur,security,5694,on.java:1536); 	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:5771,Security,secur,security,5771,(HttpURLConnection.java:1441); 	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480); 	at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338); 	at com.google.api.client.http.javanet.NetHttpResponse.<init>(NetHttpResponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at s,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:6565,Security,secur,security,6565,"esponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:847); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123); 	... 32 more; ```; We could add it, on the other hand it's an `SSLException` and we might want to be careful with ignoring security exceptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:6635,Security,secur,security,6635,"esponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:847); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123); 	... 32 more; ```; We could add it, on the other hand it's an `SSLException` and we might want to be careful with ignoring security exceptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:6699,Security,secur,security,6699,"esponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:847); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123); 	... 32 more; ```; We could add it, on the other hand it's an `SSLException` and we might want to be careful with ignoring security exceptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:6779,Security,secur,security,6779,"esponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:847); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123); 	... 32 more; ```; We could add it, on the other hand it's an `SSLException` and we might want to be careful with ignoring security exceptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:6851,Security,secur,security,6851,"esponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:847); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123); 	... 32 more; ```; We could add it, on the other hand it's an `SSLException` and we might want to be careful with ignoring security exceptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2183:7036,Security,secur,security,7036,"esponse.java:37); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:94); 	at com.google.api.client.http.HttpRequest.execute(HttpRequest.java:981); 	at com.google.cloud.storage.spi.DefaultStorageRpc.write(DefaultStorageRpc.java:564); 	... 24 more; Caused by: javax.net.ssl.SSLException: java.net.SocketException: Broken pipe; 	at sun.security.ssl.Alerts.getSSLException(Alerts.java:208); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949); 	at sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1906); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1870); 	at sun.security.ssl.SSLSocketImpl.handleException(SSLSocketImpl.java:1815); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:128); 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82); 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140); 	at java.io.PrintStream.flush(PrintStream.java:338); 	at java.io.FilterOutputStream.flush(FilterOutputStream.java:140); 	at com.google.api.client.http.AbstractInputStreamContent.writeTo(AbstractInputStreamContent.java:73); 	at com.google.api.client.http.javanet.NetHttpRequest.execute(NetHttpRequest.java:79); 	... 26 more; Caused by: java.net.SocketException: Broken pipe; 	at java.net.SocketOutputStream.socketWrite0(Native Method); 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109); 	at java.net.SocketOutputStream.write(SocketOutputStream.java:153); 	at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:431); 	at sun.security.ssl.OutputRecord.write(OutputRecord.java:417); 	at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:876); 	at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:847); 	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:123); 	... 32 more; ```; We could add it, on the other hand it's an `SSLException` and we might want to be careful with ignoring security exceptions.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2183
https://github.com/broadinstitute/cromwell/issues/2185:236,Availability,error,error,236,"This is sent out by the `EmptySubWorkflowStoreActor` but but not waited for by the `SubWorkflowExecutionActor` (which indeed ignores it if it ever receives one). This is awkward because it means we sometimes get ""Message not delivered"" error logs. We should either remove this message entirely or, if it's used by tests, we should only send one out if the receiver is actually waiting for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2185
https://github.com/broadinstitute/cromwell/issues/2185:213,Integrability,Message,Message,213,"This is sent out by the `EmptySubWorkflowStoreActor` but but not waited for by the `SubWorkflowExecutionActor` (which indeed ignores it if it ever receives one). This is awkward because it means we sometimes get ""Message not delivered"" error logs. We should either remove this message entirely or, if it's used by tests, we should only send one out if the receiver is actually waiting for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2185
https://github.com/broadinstitute/cromwell/issues/2185:277,Integrability,message,message,277,"This is sent out by the `EmptySubWorkflowStoreActor` but but not waited for by the `SubWorkflowExecutionActor` (which indeed ignores it if it ever receives one). This is awkward because it means we sometimes get ""Message not delivered"" error logs. We should either remove this message entirely or, if it's used by tests, we should only send one out if the receiver is actually waiting for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2185
https://github.com/broadinstitute/cromwell/issues/2185:242,Testability,log,logs,242,"This is sent out by the `EmptySubWorkflowStoreActor` but but not waited for by the `SubWorkflowExecutionActor` (which indeed ignores it if it ever receives one). This is awkward because it means we sometimes get ""Message not delivered"" error logs. We should either remove this message entirely or, if it's used by tests, we should only send one out if the receiver is actually waiting for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2185
https://github.com/broadinstitute/cromwell/issues/2185:314,Testability,test,tests,314,"This is sent out by the `EmptySubWorkflowStoreActor` but but not waited for by the `SubWorkflowExecutionActor` (which indeed ignores it if it ever receives one). This is awkward because it means we sometimes get ""Message not delivered"" error logs. We should either remove this message entirely or, if it's used by tests, we should only send one out if the receiver is actually waiting for it.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2185
https://github.com/broadinstitute/cromwell/issues/2186:33,Availability,error,error,33,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2186:83,Availability,ERROR,ERROR,83,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2186:250,Availability,Error,Error,250,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2186:349,Availability,error,error,349,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2186:592,Availability,error,error,592,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2186:598,Integrability,message,message,598,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2186:53,Modifiability,config,config,53,"Rather than putting up with this error because their config is out of date:; ```; [ERROR] [04/19/2017 18:14:32.636] [cromwell-system-akka.actor.default-dispatcher-4] [akka://cromwell-system/user/cromwell-service/ServiceRegistryActor/MetadataService] Error summarizing metadata; com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '""SUMMARY_STATUS_ENTRY"" where (""SUMMARY_TABLE_NAME"" = 'WORKFLOW_METADATA_SUMMARY_' at line 1; ```. We should have a nice error message that tells people what to do about it",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2186
https://github.com/broadinstitute/cromwell/issues/2188:22,Deployability,pipeline,pipelines,22,"I created very simple pipelines.; ```; workflow worms {. Array[File] inputFiles. scatter (oneFile in inputFiles) {; call extract { input: sraFile=oneFile }; }; }. task extract {. File sraFile. command {; /opt/sratoolkit/sra-stat ${sraFile} > stats.txt; }; runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; There I am supposted to get sra-stat output that is ; ```; 52687861:1896762996:1896762996|0:0|0:0|0:07; ```; As in input you can put any sra files.; But what I get is; ```; /cromwell-executions/worms/ddb1ae2d-e4c2-4a6e-8577-18b7faf69a84/call-extract/inputs/home/shelluser/nematodes/SRR2040663.sra||52687861:1896762996:1896762996|0:0|0:0|0:0; ```; With some internal trash in the beginning. I do not need to get this trash, I just want to get sra-stat output.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2188
https://github.com/broadinstitute/cromwell/issues/2188:15,Usability,simpl,simple,15,"I created very simple pipelines.; ```; workflow worms {. Array[File] inputFiles. scatter (oneFile in inputFiles) {; call extract { input: sraFile=oneFile }; }; }. task extract {. File sraFile. command {; /opt/sratoolkit/sra-stat ${sraFile} > stats.txt; }; runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; There I am supposted to get sra-stat output that is ; ```; 52687861:1896762996:1896762996|0:0|0:0|0:07; ```; As in input you can put any sra files.; But what I get is; ```; /cromwell-executions/worms/ddb1ae2d-e4c2-4a6e-8577-18b7faf69a84/call-extract/inputs/home/shelluser/nematodes/SRR2040663.sra||52687861:1896762996:1896762996|0:0|0:0|0:0; ```; With some internal trash in the beginning. I do not need to get this trash, I just want to get sra-stat output.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2188
https://github.com/broadinstitute/cromwell/issues/2189:352,Energy Efficiency,schedul,schedules,352,"The first run of JG failed because an actor context happened to be null.; Specifically this happened when we use the actor system dispatcher as an Execution Context for the execution of futures in the Actor.; I only saw this once and the reason is unclear. Akka claims actor contexts can't be null.; One possible explanation (maybe?) is that the actor schedules some futures, then die for an unknown reason. By the time the futures become runnable and try to access their EC, the actor is already dead so the creation of the EC from the `context.dispatcher` fails. <img width=""1411"" alt=""screen shot 2017-04-10 at 5 07 02 pm"" src=""https://cloud.githubusercontent.com/assets/2978948/25280517/3f8fc75a-2678-11e7-966a-54340199c1e0.png"">",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2189
https://github.com/broadinstitute/cromwell/issues/2189:459,Security,access,access,459,"The first run of JG failed because an actor context happened to be null.; Specifically this happened when we use the actor system dispatcher as an Execution Context for the execution of futures in the Actor.; I only saw this once and the reason is unclear. Akka claims actor contexts can't be null.; One possible explanation (maybe?) is that the actor schedules some futures, then die for an unknown reason. By the time the futures become runnable and try to access their EC, the actor is already dead so the creation of the EC from the `context.dispatcher` fails. <img width=""1411"" alt=""screen shot 2017-04-10 at 5 07 02 pm"" src=""https://cloud.githubusercontent.com/assets/2978948/25280517/3f8fc75a-2678-11e7-966a-54340199c1e0.png"">",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2189
https://github.com/broadinstitute/cromwell/pull/2195:574,Integrability,depend,dependency,574,"This was previously failing because the foreach was sending 10 events to the `WriteMetadataActor`. Unfortunately the actor was waiting for the events to be strictly greater than 10 before triggering the write... it occasionally worked because we weren't replacing the actor between tests and the leftover state was giving us a push over the top. It was also possible for the `WriteMetadataActor` to write the entries to its database and revert back to `WaitingToWrite` before our code was testing what state it was in. So, I've fixed this test up by removing the inter-test dependency and precisely controlling when the actor completes its ""database write"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2195
https://github.com/broadinstitute/cromwell/pull/2195:282,Testability,test,tests,282,"This was previously failing because the foreach was sending 10 events to the `WriteMetadataActor`. Unfortunately the actor was waiting for the events to be strictly greater than 10 before triggering the write... it occasionally worked because we weren't replacing the actor between tests and the leftover state was giving us a push over the top. It was also possible for the `WriteMetadataActor` to write the entries to its database and revert back to `WaitingToWrite` before our code was testing what state it was in. So, I've fixed this test up by removing the inter-test dependency and precisely controlling when the actor completes its ""database write"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2195
https://github.com/broadinstitute/cromwell/pull/2195:489,Testability,test,testing,489,"This was previously failing because the foreach was sending 10 events to the `WriteMetadataActor`. Unfortunately the actor was waiting for the events to be strictly greater than 10 before triggering the write... it occasionally worked because we weren't replacing the actor between tests and the leftover state was giving us a push over the top. It was also possible for the `WriteMetadataActor` to write the entries to its database and revert back to `WaitingToWrite` before our code was testing what state it was in. So, I've fixed this test up by removing the inter-test dependency and precisely controlling when the actor completes its ""database write"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2195
https://github.com/broadinstitute/cromwell/pull/2195:539,Testability,test,test,539,"This was previously failing because the foreach was sending 10 events to the `WriteMetadataActor`. Unfortunately the actor was waiting for the events to be strictly greater than 10 before triggering the write... it occasionally worked because we weren't replacing the actor between tests and the leftover state was giving us a push over the top. It was also possible for the `WriteMetadataActor` to write the entries to its database and revert back to `WaitingToWrite` before our code was testing what state it was in. So, I've fixed this test up by removing the inter-test dependency and precisely controlling when the actor completes its ""database write"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2195
https://github.com/broadinstitute/cromwell/pull/2195:569,Testability,test,test,569,"This was previously failing because the foreach was sending 10 events to the `WriteMetadataActor`. Unfortunately the actor was waiting for the events to be strictly greater than 10 before triggering the write... it occasionally worked because we weren't replacing the actor between tests and the leftover state was giving us a push over the top. It was also possible for the `WriteMetadataActor` to write the entries to its database and revert back to `WaitingToWrite` before our code was testing what state it was in. So, I've fixed this test up by removing the inter-test dependency and precisely controlling when the actor completes its ""database write"".",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2195
https://github.com/broadinstitute/cromwell/pull/2198:422,Modifiability,extend,extends,422,"2 other minor things popped up while call caching the 10K joint genotyping: ; - We spend a fair amount of time creating `GcsPathBuilder`s, which we shouldn't since we only need one per workflow in theory. In practice we need to create a few more because we can't quite propagate the same one around everywhere. But before this PR we would create one per job which seems inefficient. One reason for this is that `JobPaths` extends `WorkflowPaths`, so when we convert the latter to the former we effectively re-instantiate a new `WorkflowPaths` every time. This PR changes that so that `JobPaths` takes a `WorkflowPaths` instead as one of its attribute to avoid unnecessary re-allocations.; - A small optimization to the execution store which allows quicker lookup of ""Done"" jobs which we do a lot in `runnableCalls`. Also added a benchmark test that measures the performance of `runnableCalls`. Below are the results before and after this change. The ""size"" corresponds to how many jobs in ""Done"" and ""NotStarted"" states are inserted in the execution store before calling `runnableCalls`. Results are in ms. Before:; ![screen shot 2017-04-19 at 3 24 15 pm](https://cloud.githubusercontent.com/assets/2978948/25305440/fcca5418-2748-11e7-8d2a-6f2c645f2ef3.png). After:; ![screen shot 2017-04-19 at 3 25 18 pm](https://cloud.githubusercontent.com/assets/2978948/25305444/06de3f00-2749-11e7-860f-a1c077f3243f.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2198
https://github.com/broadinstitute/cromwell/pull/2198:699,Performance,optimiz,optimization,699,"2 other minor things popped up while call caching the 10K joint genotyping: ; - We spend a fair amount of time creating `GcsPathBuilder`s, which we shouldn't since we only need one per workflow in theory. In practice we need to create a few more because we can't quite propagate the same one around everywhere. But before this PR we would create one per job which seems inefficient. One reason for this is that `JobPaths` extends `WorkflowPaths`, so when we convert the latter to the former we effectively re-instantiate a new `WorkflowPaths` every time. This PR changes that so that `JobPaths` takes a `WorkflowPaths` instead as one of its attribute to avoid unnecessary re-allocations.; - A small optimization to the execution store which allows quicker lookup of ""Done"" jobs which we do a lot in `runnableCalls`. Also added a benchmark test that measures the performance of `runnableCalls`. Below are the results before and after this change. The ""size"" corresponds to how many jobs in ""Done"" and ""NotStarted"" states are inserted in the execution store before calling `runnableCalls`. Results are in ms. Before:; ![screen shot 2017-04-19 at 3 24 15 pm](https://cloud.githubusercontent.com/assets/2978948/25305440/fcca5418-2748-11e7-8d2a-6f2c645f2ef3.png). After:; ![screen shot 2017-04-19 at 3 25 18 pm](https://cloud.githubusercontent.com/assets/2978948/25305444/06de3f00-2749-11e7-860f-a1c077f3243f.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2198
https://github.com/broadinstitute/cromwell/pull/2198:862,Performance,perform,performance,862,"2 other minor things popped up while call caching the 10K joint genotyping: ; - We spend a fair amount of time creating `GcsPathBuilder`s, which we shouldn't since we only need one per workflow in theory. In practice we need to create a few more because we can't quite propagate the same one around everywhere. But before this PR we would create one per job which seems inefficient. One reason for this is that `JobPaths` extends `WorkflowPaths`, so when we convert the latter to the former we effectively re-instantiate a new `WorkflowPaths` every time. This PR changes that so that `JobPaths` takes a `WorkflowPaths` instead as one of its attribute to avoid unnecessary re-allocations.; - A small optimization to the execution store which allows quicker lookup of ""Done"" jobs which we do a lot in `runnableCalls`. Also added a benchmark test that measures the performance of `runnableCalls`. Below are the results before and after this change. The ""size"" corresponds to how many jobs in ""Done"" and ""NotStarted"" states are inserted in the execution store before calling `runnableCalls`. Results are in ms. Before:; ![screen shot 2017-04-19 at 3 24 15 pm](https://cloud.githubusercontent.com/assets/2978948/25305440/fcca5418-2748-11e7-8d2a-6f2c645f2ef3.png). After:; ![screen shot 2017-04-19 at 3 25 18 pm](https://cloud.githubusercontent.com/assets/2978948/25305444/06de3f00-2749-11e7-860f-a1c077f3243f.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2198
https://github.com/broadinstitute/cromwell/pull/2198:654,Safety,avoid,avoid,654,"2 other minor things popped up while call caching the 10K joint genotyping: ; - We spend a fair amount of time creating `GcsPathBuilder`s, which we shouldn't since we only need one per workflow in theory. In practice we need to create a few more because we can't quite propagate the same one around everywhere. But before this PR we would create one per job which seems inefficient. One reason for this is that `JobPaths` extends `WorkflowPaths`, so when we convert the latter to the former we effectively re-instantiate a new `WorkflowPaths` every time. This PR changes that so that `JobPaths` takes a `WorkflowPaths` instead as one of its attribute to avoid unnecessary re-allocations.; - A small optimization to the execution store which allows quicker lookup of ""Done"" jobs which we do a lot in `runnableCalls`. Also added a benchmark test that measures the performance of `runnableCalls`. Below are the results before and after this change. The ""size"" corresponds to how many jobs in ""Done"" and ""NotStarted"" states are inserted in the execution store before calling `runnableCalls`. Results are in ms. Before:; ![screen shot 2017-04-19 at 3 24 15 pm](https://cloud.githubusercontent.com/assets/2978948/25305440/fcca5418-2748-11e7-8d2a-6f2c645f2ef3.png). After:; ![screen shot 2017-04-19 at 3 25 18 pm](https://cloud.githubusercontent.com/assets/2978948/25305444/06de3f00-2749-11e7-860f-a1c077f3243f.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2198
https://github.com/broadinstitute/cromwell/pull/2198:829,Testability,benchmark,benchmark,829,"2 other minor things popped up while call caching the 10K joint genotyping: ; - We spend a fair amount of time creating `GcsPathBuilder`s, which we shouldn't since we only need one per workflow in theory. In practice we need to create a few more because we can't quite propagate the same one around everywhere. But before this PR we would create one per job which seems inefficient. One reason for this is that `JobPaths` extends `WorkflowPaths`, so when we convert the latter to the former we effectively re-instantiate a new `WorkflowPaths` every time. This PR changes that so that `JobPaths` takes a `WorkflowPaths` instead as one of its attribute to avoid unnecessary re-allocations.; - A small optimization to the execution store which allows quicker lookup of ""Done"" jobs which we do a lot in `runnableCalls`. Also added a benchmark test that measures the performance of `runnableCalls`. Below are the results before and after this change. The ""size"" corresponds to how many jobs in ""Done"" and ""NotStarted"" states are inserted in the execution store before calling `runnableCalls`. Results are in ms. Before:; ![screen shot 2017-04-19 at 3 24 15 pm](https://cloud.githubusercontent.com/assets/2978948/25305440/fcca5418-2748-11e7-8d2a-6f2c645f2ef3.png). After:; ![screen shot 2017-04-19 at 3 25 18 pm](https://cloud.githubusercontent.com/assets/2978948/25305444/06de3f00-2749-11e7-860f-a1c077f3243f.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2198
https://github.com/broadinstitute/cromwell/pull/2198:839,Testability,test,test,839,"2 other minor things popped up while call caching the 10K joint genotyping: ; - We spend a fair amount of time creating `GcsPathBuilder`s, which we shouldn't since we only need one per workflow in theory. In practice we need to create a few more because we can't quite propagate the same one around everywhere. But before this PR we would create one per job which seems inefficient. One reason for this is that `JobPaths` extends `WorkflowPaths`, so when we convert the latter to the former we effectively re-instantiate a new `WorkflowPaths` every time. This PR changes that so that `JobPaths` takes a `WorkflowPaths` instead as one of its attribute to avoid unnecessary re-allocations.; - A small optimization to the execution store which allows quicker lookup of ""Done"" jobs which we do a lot in `runnableCalls`. Also added a benchmark test that measures the performance of `runnableCalls`. Below are the results before and after this change. The ""size"" corresponds to how many jobs in ""Done"" and ""NotStarted"" states are inserted in the execution store before calling `runnableCalls`. Results are in ms. Before:; ![screen shot 2017-04-19 at 3 24 15 pm](https://cloud.githubusercontent.com/assets/2978948/25305440/fcca5418-2748-11e7-8d2a-6f2c645f2ef3.png). After:; ![screen shot 2017-04-19 at 3 25 18 pm](https://cloud.githubusercontent.com/assets/2978948/25305444/06de3f00-2749-11e7-860f-a1c077f3243f.png)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2198
https://github.com/broadinstitute/cromwell/issues/2201:26,Availability,failure,failures,26,"Per @jmthibault79 -. ```; failures: [ ""single error string"" ]; ```; Should be:; ```; failures: [{; message: ""single error string"" ; causedBy: []; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2201
https://github.com/broadinstitute/cromwell/issues/2201:46,Availability,error,error,46,"Per @jmthibault79 -. ```; failures: [ ""single error string"" ]; ```; Should be:; ```; failures: [{; message: ""single error string"" ; causedBy: []; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2201
https://github.com/broadinstitute/cromwell/issues/2201:85,Availability,failure,failures,85,"Per @jmthibault79 -. ```; failures: [ ""single error string"" ]; ```; Should be:; ```; failures: [{; message: ""single error string"" ; causedBy: []; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2201
https://github.com/broadinstitute/cromwell/issues/2201:116,Availability,error,error,116,"Per @jmthibault79 -. ```; failures: [ ""single error string"" ]; ```; Should be:; ```; failures: [{; message: ""single error string"" ; causedBy: []; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2201
https://github.com/broadinstitute/cromwell/issues/2201:99,Integrability,message,message,99,"Per @jmthibault79 -. ```; failures: [ ""single error string"" ]; ```; Should be:; ```; failures: [{; message: ""single error string"" ; causedBy: []; }]; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2201
https://github.com/broadinstitute/cromwell/issues/2202:133,Security,expose,expose,133,"Create a web service in a similar vein to CromIAM which will act as a passthrough to an underlying Cromwell server. This server will expose the [TES](https://github.com/ga4gh/task-execution-schemas) API and interact with Cromwell presumably by creating a single task workflow out of the what was passed in. The ultimate goal of this project is not to have some whizbang standalone server but to use this as an opportunity to identify what the translation path from submitting and interacting with a single task via TES looks like in the Cromwell world, instead of diving in and grafting TES directly into Cromwell's front end. . DoD: A completed server (language, etc is dealer's choice) which we can use to guide another stage of development to directly support TES as part of Cromwell's front end API *or* a document detailing why this can't happen.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2202
https://github.com/broadinstitute/cromwell/issues/2202:708,Usability,guid,guide,708,"Create a web service in a similar vein to CromIAM which will act as a passthrough to an underlying Cromwell server. This server will expose the [TES](https://github.com/ga4gh/task-execution-schemas) API and interact with Cromwell presumably by creating a single task workflow out of the what was passed in. The ultimate goal of this project is not to have some whizbang standalone server but to use this as an opportunity to identify what the translation path from submitting and interacting with a single task via TES looks like in the Cromwell world, instead of diving in and grafting TES directly into Cromwell's front end. . DoD: A completed server (language, etc is dealer's choice) which we can use to guide another stage of development to directly support TES as part of Cromwell's front end API *or* a document detailing why this can't happen.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2202
https://github.com/broadinstitute/cromwell/pull/2203:244,Testability,Test,Tested,244,"- Modifies existing migrations since I had to support multiple statements per migrating row.; - Done in Scala so we only need to do a single pass over everything, but I'm still open to ""it'd be better to use **this** SQL command!"" comments.; - Tested against things that look like Joel's example inconsistency.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2203
https://github.com/broadinstitute/cromwell/issues/2207:45,Availability,error,errors,45,"Cromwell doesn't seem to retry on *some* 503 errors, but does an others.; Might be related to https://github.com/GoogleCloudPlatform/google-cloud-java/issues/1545; The `code` attribute in the exception seems to be 503 in both cases so we could check that explicitly instead of relying on the `isRetryable` method.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2207
https://github.com/broadinstitute/cromwell/pull/2208:36,Availability,error,error,36,"Explicitly add `503` as a retryable error code on `StorageException`s because the `isRetryable` method seems to not be completely reliable.; Also retry SSL Exception (both top level and as a cause for `StorageException`s, I've seen both happen)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2208
https://github.com/broadinstitute/cromwell/pull/2208:130,Availability,reliab,reliable,130,"Explicitly add `503` as a retryable error code on `StorageException`s because the `isRetryable` method seems to not be completely reliable.; Also retry SSL Exception (both top level and as a cause for `StorageException`s, I've seen both happen)",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2208
https://github.com/broadinstitute/cromwell/issues/2209:228,Availability,echo,echo,228,"Variables in string interpolations do not undergo existence checks, so the following will validate despite `t` not existing:. ```; task foo {; # Shouldn't validate, no 't' defined:; String s = ""I like to drink ${t}""; command {; echo ${s}; }; output {; String out = read_string(stdout()); }; }; ```. EDIT: Simplified the example",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2209
https://github.com/broadinstitute/cromwell/issues/2209:0,Modifiability,Variab,Variables,0,"Variables in string interpolations do not undergo existence checks, so the following will validate despite `t` not existing:. ```; task foo {; # Shouldn't validate, no 't' defined:; String s = ""I like to drink ${t}""; command {; echo ${s}; }; output {; String out = read_string(stdout()); }; }; ```. EDIT: Simplified the example",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2209
https://github.com/broadinstitute/cromwell/issues/2209:90,Security,validat,validate,90,"Variables in string interpolations do not undergo existence checks, so the following will validate despite `t` not existing:. ```; task foo {; # Shouldn't validate, no 't' defined:; String s = ""I like to drink ${t}""; command {; echo ${s}; }; output {; String out = read_string(stdout()); }; }; ```. EDIT: Simplified the example",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2209
https://github.com/broadinstitute/cromwell/issues/2209:155,Security,validat,validate,155,"Variables in string interpolations do not undergo existence checks, so the following will validate despite `t` not existing:. ```; task foo {; # Shouldn't validate, no 't' defined:; String s = ""I like to drink ${t}""; command {; echo ${s}; }; output {; String out = read_string(stdout()); }; }; ```. EDIT: Simplified the example",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2209
https://github.com/broadinstitute/cromwell/issues/2209:305,Usability,Simpl,Simplified,305,"Variables in string interpolations do not undergo existence checks, so the following will validate despite `t` not existing:. ```; task foo {; # Shouldn't validate, no 't' defined:; String s = ""I like to drink ${t}""; command {; echo ${s}; }; output {; String out = read_string(stdout()); }; }; ```. EDIT: Simplified the example",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2209
https://github.com/broadinstitute/cromwell/issues/2210:54,Availability,error,errors,54,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:779,Availability,error,errors,779,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:1023,Availability,error,errors,1023,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:1061,Availability,error,error,1061,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:1215,Safety,safe,safest,1215,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:85,Testability,log,logs,85,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:136,Testability,log,logs,136,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:763,Testability,log,logs,763,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:889,Testability,log,logs,889,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:990,Testability,log,log,990,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:152,Usability,simpl,simple,152,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2210:353,Usability,simpl,simple,353,"Whenever I run workflow with mistake a see some weird errors in cromwell-server akka-logs while nothing is written to cromwell-workflow-logs; Here is a simple example:; ```; workflow worms {. File samplesFile. #Name \t File; Array[Array[File]] samples = read_tsv(samplesFile). scatter (sample in samples) {; call stats {; input:; fileName = sample(0), #simple mistake with ""()"" instead of ""[]""; file = sample(1); }; }; }. task stats {. String fileName; File file. command {; /opt/sratoolkit/sra-stat ${file} > stats.txt; }. runtime {; docker: ""itsjeffreyy/sratoolkit""; }. output {; File stats = ""stats.txt""; }; }; ```; Here I make quite typical mistake by using () instead of []. But when I send it to the server for execution it I get an empty cromwell-workflow-logs folder and errors are displayed only in stdout of the cromwell server. What I expect is to see them in cromwell-workflow-logs (if my expectations are wrong, it would be nice to have in documentation a description of which log folder are for which type of errors); By the way, according to the error I get, you use runtime reflection to search for ""sample"" function (that is perceived as a function instead of array due to round brackets). Not the safest, way to identify functions, IMHO.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2210
https://github.com/broadinstitute/cromwell/issues/2211:681,Availability,ERROR,ERROR,681,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:856,Availability,ERROR,ERROR,856,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:1063,Availability,ERROR,ERROR,1063,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:1248,Availability,ERROR,ERROR,1248,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:610,Integrability,message,messages,610,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:1001,Integrability,message,message,1001,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:57,Modifiability,variab,variable,57,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:96,Modifiability,VARIAB,VARIABLE,96,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:1107,Modifiability,variab,variable,1107,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:651,Performance,load,load,651,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:826,Performance,load,load,826,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:1033,Performance,load,load,1033,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:1218,Performance,load,load,1218,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2211:7,Security,validat,validation,7,"Ok, so validation fails because I had a typo in my input variable name, fine. But TELL ME WHICH VARIABLE IT WAS!!!. The rest of this description is an example:. ```; workflow foo {; 	call bar; 	# Oops, bar didn't have an output called b:; 	call baz as bad_output_name { input: b = bar.b }; 	# Oops, baz doesn't have an input called a:; 	call baz as bad_input_name { input: a = bar.a }; }. task bar {; 	command {; 		# noop; 	}; 	output {; 		String a = ""a""; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }. task baz {; 	String b; 	command {; 		# noop; 	}; 	runtime {; 		docker: ""ubuntu:latest""; 	}; }; ```. The messages I actually get:; ```; Unable to load namespace from workflow: ERROR: Expression references input on call that doesn't exist (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call references an input on task 'baz' that doesn't exist (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```. The message I want:; ```; Unable to load namespace from workflow: ERROR: Cannot use 'bar.b' as an input. That variable was never created. (line 4, col 47):. 	call baz as bad_output_name { input: b = bar.b }; ^; Unable to load namespace from workflow: ERROR: Call supplies an input 'a' that isn't declared in the 'baz' task (line 6, col 38). 	call baz as bad_input_name { input: a = bar.a }; ^; ```",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2211
https://github.com/broadinstitute/cromwell/issues/2212:87,Integrability,message,messages,87,"When a workflow fails and jobs were in flight, some `IssuePollRequest` and `RunStatus` messages end up in the dead letters mailbox and are logged as such.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2212
https://github.com/broadinstitute/cromwell/issues/2212:139,Testability,log,logged,139,"When a workflow fails and jobs were in flight, some `IssuePollRequest` and `RunStatus` messages end up in the dead letters mailbox and are logged as such.",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2212
https://github.com/broadinstitute/cromwell/pull/2214:0,Integrability,Depend,Depends,0,Depends on https://github.com/broadinstitute/wdl4s/pull/104,MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/pull/2214
https://github.com/broadinstitute/cromwell/issues/2215:185,Availability,error,error,185,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:282,Availability,error,error,282,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:438,Availability,error,error,438,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:450,Availability,error,errors,450,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:533,Availability,Error,Error,533,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:582,Availability,Error,Error,582,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:853,Availability,recover,recoverWith,853,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:928,Availability,recover,recoverWith,928,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:191,Integrability,message,message,191,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:288,Integrability,message,message,288,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
https://github.com/broadinstitute/cromwell/issues/2215:514,Integrability,message,message,514,"- cromwell 26; - JES backend; - call caching on local mysql instance; - server mode. Ran a bunch of the initial jobs, but once it really started fan out (thousands of jobs), I got this error message. Trying to replicate now, but not sure if I can. Might be transient. . Regardless, error message is not particularly helpful. Any ideas? . ```; cromwell.core.CromwellFatalException: com.google.cloud.storage.StorageException: 410 Gone; {; ""error"": {; ""errors"": [; {; ""domain"": ""global"",; ""reason"": ""backendError"",; ""message"": ""Backend Error""; }; ],; ""code"": 503,; ""message"": ""Backend Error""; }; }. at cromwell.core.CromwellFatalException$.apply(core.scala:17); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:37); at cromwell.core.retry.Retry$$anonfun$withRetry$1.applyOrElse(Retry.scala:36); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:346); at scala.concurrent.Future$$anonfun$recoverWith$1.apply(Future.scala:345); at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32); at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91); at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72); at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90); at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39); at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415); at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260); at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339); at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979); at scala.concurrent.for",MatchSource.ISSUE,broadinstitute,cromwell,87,https://cromwell.readthedocs.io/en/latest/,https://github.com/broadinstitute/cromwell/issues/2215
