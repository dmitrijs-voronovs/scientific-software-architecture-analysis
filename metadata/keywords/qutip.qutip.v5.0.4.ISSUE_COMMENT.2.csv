id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/qutip/qutip/pull/969#issuecomment-489565751:3682,Testability,test,tests,3682,"modules, also because in the other cases the title are self-explanatory. ; Regarding this comment:; ```; Function to build cython code from str, compile and import it.; Used by cQobjEvo.; cy/codegen.py does the same thing for specific solver; ```; could then this file by moved to `qutip/cy/`?. * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), block 24 online has a printed error `TypeError: __call__() got an unexpected keyword argument 'args'`, yet on my machine runs fine, it can be replaced. I opened a PR, also running the last blocks and qutip.about(), https://github.com/qutip/qutip-notebooks/pull/72. . * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), `Time for cte` could be more explanatory. Similarly elsewhere. * I wonder whether instead `QobjEvo`, `Qobjt` could be even more intuitive for the user. * I would really encourage you to write one notebook (or more), about the new functionalities of the stochastic solvers, as well as the old methods. This could be the to-go resource, beyond documentation, to understand how these stochastic solvers are now expanded and coherently defined. It does not need to be a lot of work, it can copy a lot of stuff from the development notebooks. It would be fundamental to have the solvers' master equations written down, explaining for each solver what each term is, e.g., the jump operator. Also, in `development-smesolve-tests`, the equations are already there for example. Block 23 is beautiful, and it could be reproduced in the tutorial. . * Similarly, a user guide entry would really enhance the adoption of these solvers. At a later stage, some more refined example applications could be provided. * Review is still ongoing, I will provide comments on the .py files and other solvers files. Help from other developers is welcome as these are massive changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751
https://github.com/qutip/qutip/pull/969#issuecomment-489565751:3094,Usability,intuit,intuitive,3094,"py` should stay there. It stands out from all other modules, also because in the other cases the title are self-explanatory. ; Regarding this comment:; ```; Function to build cython code from str, compile and import it.; Used by cQobjEvo.; cy/codegen.py does the same thing for specific solver; ```; could then this file by moved to `qutip/cy/`?. * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), block 24 online has a printed error `TypeError: __call__() got an unexpected keyword argument 'args'`, yet on my machine runs fine, it can be replaced. I opened a PR, also running the last blocks and qutip.about(), https://github.com/qutip/qutip-notebooks/pull/72. . * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), `Time for cte` could be more explanatory. Similarly elsewhere. * I wonder whether instead `QobjEvo`, `Qobjt` could be even more intuitive for the user. * I would really encourage you to write one notebook (or more), about the new functionalities of the stochastic solvers, as well as the old methods. This could be the to-go resource, beyond documentation, to understand how these stochastic solvers are now expanded and coherently defined. It does not need to be a lot of work, it can copy a lot of stuff from the development notebooks. It would be fundamental to have the solvers' master equations written down, explaining for each solver what each term is, e.g., the jump operator. Also, in `development-smesolve-tests`, the equations are already there for example. Block 23 is beautiful, and it could be reproduced in the tutorial. . * Similarly, a user guide entry would really enhance the adoption of these solvers. At a later stage, some more refined example applications could be provided. * Review is still ongoing, I will provide comments on the .py files and other solvers files. Help from other ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751
https://github.com/qutip/qutip/pull/969#issuecomment-489565751:3824,Usability,guid,guide,3824,"modules, also because in the other cases the title are self-explanatory. ; Regarding this comment:; ```; Function to build cython code from str, compile and import it.; Used by cQobjEvo.; cy/codegen.py does the same thing for specific solver; ```; could then this file by moved to `qutip/cy/`?. * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), block 24 online has a printed error `TypeError: __call__() got an unexpected keyword argument 'args'`, yet on my machine runs fine, it can be replaced. I opened a PR, also running the last blocks and qutip.about(), https://github.com/qutip/qutip-notebooks/pull/72. . * In [development-qobjevo-timing.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-timing.ipynb), `Time for cte` could be more explanatory. Similarly elsewhere. * I wonder whether instead `QobjEvo`, `Qobjt` could be even more intuitive for the user. * I would really encourage you to write one notebook (or more), about the new functionalities of the stochastic solvers, as well as the old methods. This could be the to-go resource, beyond documentation, to understand how these stochastic solvers are now expanded and coherently defined. It does not need to be a lot of work, it can copy a lot of stuff from the development notebooks. It would be fundamental to have the solvers' master equations written down, explaining for each solver what each term is, e.g., the jump operator. Also, in `development-smesolve-tests`, the equations are already there for example. Block 23 is beautiful, and it could be reproduced in the tutorial. . * Similarly, a user guide entry would really enhance the adoption of these solvers. At a later stage, some more refined example applications could be provided. * Review is still ongoing, I will provide comments on the .py files and other solvers files. Help from other developers is welcome as these are massive changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751
https://github.com/qutip/qutip/pull/969#issuecomment-500649942:43,Testability,test,tests,43,"Also, never before, that I can recall, the tests were running on both the push and pull request. Hope this is working but not just by chance. Congrats @Ericgig on this too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-500649942
https://github.com/qutip/qutip/pull/972#issuecomment-482167982:48,Modifiability,enhance,enhancement,48,@BassemSafieldeen thank you for addressing this enhancement. It would be nice to find out what's broken with pytest.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-482167982
https://github.com/qutip/qutip/pull/972#issuecomment-482252838:80,Testability,Test,TestPulseOptim,80,"Ok, that particular problem has been fixed. Now the build fails for 1 function: TestPulseOptim",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-482252838
https://github.com/qutip/qutip/pull/972#issuecomment-482522758:60,Testability,test,test,60,"Hi, this is great. @agpitch, do you have any idea about the test? Looks like something related to optimal control and you could provide some insight. We can investigate the issue separately and fix this. Good job on the PR. Moving to PyTest will be great for us in the long run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-482522758
https://github.com/qutip/qutip/pull/972#issuecomment-484364190:178,Availability,error,error,178,- All builds fail a test regarding optimal control in `` fails with `AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'`.; - The MacOs build still exits with an error once it encounters `ptrace`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-484364190
https://github.com/qutip/qutip/pull/972#issuecomment-484364190:20,Testability,test,test,20,- All builds fail a test regarding optimal control in `` fails with `AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'`.; - The MacOs build still exits with an error once it encounters `ptrace`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-484364190
https://github.com/qutip/qutip/pull/972#issuecomment-484364190:86,Testability,Test,TestPulseOptim,86,- All builds fail a test regarding optimal control in `` fails with `AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'`.; - The MacOs build still exits with an error once it encounters `ptrace`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-484364190
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:25,Availability,error,errors,25,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:88,Availability,error,error,88,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:172,Availability,ERROR,ERROR,172,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:1339,Availability,ERROR,ERROR,1339,"nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:2386,Deployability,Install,Installed,2386,"; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\qutip-4.4.0.dev0+73a27971-py3.7-win-amd64.egg\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:2457,Deployability,Install,Installation,2457,"; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\qutip-4.4.0.dev0+73a27971-py3.7-win-amd64.egg\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:1222,Security,access,access,1222,"urrent noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:2042,Security,access,access,2042,"; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\qutip-4.4.0.dev0+73a27971-py3.7-win-amd64.egg\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:63,Testability,test,tests,63,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:460,Testability,test,test,460,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:540,Testability,test,tests,540,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:1603,Testability,test,test,1603,"; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\qutip-4.4.0.dev0+73a27971-py3.7-win-amd64.egg\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-483000016:1683,Testability,test,tests,1683,"; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c_int(0)), np_error); OSError: exception: access violation reading 0x00000006FFFFFFEF. ======================================================================; ```; Enviroment:; ```; QuTiP Version: 4.4.0.dev0+73a27971; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\qutip-4.4.0.dev0+73a27971-py3.7-win-amd64.egg\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016
https://github.com/qutip/qutip/issues/975#issuecomment-534742208:299,Availability,robust,robust,299,"Hi, I also have the problem on both windows 64 bit 7 and 10, with with miniconda 64 bits 2019.07 and qutip 4.4, after following exactly the official install reciepe from http://qutip.org/docs/latest/installation.html; And replacing the last MKL by MKL2018 does not fix the problem for me.; Any more robust solution?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-534742208
https://github.com/qutip/qutip/issues/975#issuecomment-534742208:149,Deployability,install,install,149,"Hi, I also have the problem on both windows 64 bit 7 and 10, with with miniconda 64 bits 2019.07 and qutip 4.4, after following exactly the official install reciepe from http://qutip.org/docs/latest/installation.html; And replacing the last MKL by MKL2018 does not fix the problem for me.; Any more robust solution?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-534742208
https://github.com/qutip/qutip/issues/975#issuecomment-534742208:199,Deployability,install,installation,199,"Hi, I also have the problem on both windows 64 bit 7 and 10, with with miniconda 64 bits 2019.07 and qutip 4.4, after following exactly the official install reciepe from http://qutip.org/docs/latest/installation.html; And replacing the last MKL by MKL2018 does not fix the problem for me.; Any more robust solution?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-534742208
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:214,Availability,rollback,rollback,214,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:1230,Availability,rollback,rollback,1230,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:1322,Availability,error,errors,1322,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:214,Deployability,rollback,rollback,214,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:955,Deployability,Install,Installed,955,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:1032,Deployability,Install,Installation,1032,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:1230,Deployability,rollback,rollback,1230,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:1278,Deployability,install,install,1278,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:583,Security,access,access,583,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:254,Testability,test,testing,254,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536162505:1304,Testability,test,test,1304,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:187,Availability,error,error,187,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:486,Availability,Error,Error,486,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:734,Availability,rollback,rollback,734,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1663,Availability,rollback,rollback,1663,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1755,Availability,error,errors,1755,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:74,Deployability,install,install,74,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:102,Deployability,install,install,102,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:734,Deployability,rollback,rollback,734,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1403,Deployability,Install,Installed,1403,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1474,Deployability,Install,Installation,1474,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1663,Deployability,rollback,rollback,1663,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1711,Deployability,install,install,1711,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1075,Security,access,access,1075,"2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:241,Testability,test,test,241,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:774,Testability,test,testing,774,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1737,Testability,test,test,1737,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655
https://github.com/qutip/qutip/issues/975#issuecomment-536370037:15,Availability,error,errors,15,I met the same errors as you described.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536370037
https://github.com/qutip/qutip/issues/975#issuecomment-541575790:43,Deployability,install,installing,43,"I also have this same issue, even after re-installing Anaconda3 and qutip from scratch.; Rolling back to mkl=2018.0.3 did not help. Here is my setup (I'm using Windows 7):; QuTiP Version: 4.4.1; Numpy Version: 1.16.5; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-541575790
https://github.com/qutip/qutip/issues/975#issuecomment-541575790:89,Deployability,Rolling,Rolling,89,"I also have this same issue, even after re-installing Anaconda3 and qutip from scratch.; Rolling back to mkl=2018.0.3 did not help. Here is my setup (I'm using Windows 7):; QuTiP Version: 4.4.1; Numpy Version: 1.16.5; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-541575790
https://github.com/qutip/qutip/issues/975#issuecomment-541575790:363,Deployability,Install,Installed,363,"I also have this same issue, even after re-installing Anaconda3 and qutip from scratch.; Rolling back to mkl=2018.0.3 did not help. Here is my setup (I'm using Windows 7):; QuTiP Version: 4.4.1; Numpy Version: 1.16.5; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-541575790
https://github.com/qutip/qutip/issues/978#issuecomment-489461187:515,Usability,simpl,simple,515,"Good catch. I think we can add a check [here](https://github.com/qutip/qutip/blob/master/qutip/qobj.py#L253) and [there](https://github.com/qutip/qutip/blob/master/qutip/qobj.py#L300) in `qutip.qobj`. ```; elif inpt is None:; # initialize an empty Qobj with correct dimensions and shape. if any(dims):; if shape:; check_dims(dims, shape); N, M = np.prod(dims[0]), np.prod(dims[1]); self.dims = dims; ; elif shape:; N, M = shape; if dims:; check_dims(dims, shape); self.dims = [[N], [M]]; ```; where we can define a simple `check_dims` function for consistency checks. But this is also really not a bug perhaps but more to do with minimizing user mistake. ; @ajgpitch",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/978#issuecomment-489461187
https://github.com/qutip/qutip/pull/979#issuecomment-487313175:90,Modifiability,refactor,refactoring,90,"As the Cognitive Complexity exceeds the allowed limit, codeclimate is suggesting for code refactoring. Should I proceed accordingly? @nathanshammah @quantshah",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/979#issuecomment-487313175
https://github.com/qutip/qutip/pull/979#issuecomment-491755332:45,Testability,test,test,45,Good addition @abhisekupadhyaya. The failing test is recurring in MacOS #963 and we can ignore it now and go ahead and merge this PR @nathanshammah,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/979#issuecomment-491755332
https://github.com/qutip/qutip/pull/979#issuecomment-493494455:28,Testability,test,test,28,"Dear @abhisekupadhyaya, ; - test run fine; - could verify the functionality; https://gist.github.com/nathanshammah/6ad41ed5c88aec5f37e10eff16866d37; ![add-qcircuit](https://user-images.githubusercontent.com/14573436/57938271-cf84e780-7902-11e9-989a-6eb253e4f4b8.png); Congratulations for this nice feature and thank you for your contribution. Merging",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/979#issuecomment-493494455
https://github.com/qutip/qutip/issues/981#issuecomment-484690982:64,Availability,error,error,64,"In fact, any scalar multiplying ``qutip.num(0)`` gives the same error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/981#issuecomment-484690982
https://github.com/qutip/qutip/issues/982#issuecomment-485976020:20,Availability,toler,tolerance,20,Qobj equality has a tolerance option in qutip's settings:; ```; >>> import qutip as qt; >>> import qutip.settings as settings; >>> settings.atol = 1; >>> qt.destroy(1) == qt.destroy(1)+0.5; True; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/982#issuecomment-485976020
https://github.com/qutip/qutip/issues/983#issuecomment-484765518:43,Availability,Down,Downloads,43,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518
https://github.com/qutip/qutip/issues/983#issuecomment-484765518:72,Availability,Down,Downloads,72,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518
https://github.com/qutip/qutip/issues/983#issuecomment-484765518:393,Modifiability,maintainab,maintainability,393,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518
https://github.com/qutip/qutip/issues/983#issuecomment-484765518:424,Modifiability,maintainab,maintainability,424,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518
https://github.com/qutip/qutip/issues/983#issuecomment-484765518:476,Modifiability,maintainab,maintainability,476,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518
https://github.com/qutip/qutip/issues/983#issuecomment-829132520:16,Availability,down,download,16,I put some more download and versioning badges into the README in #1511. If you're happy Nathan (@nathanshammah) we can close this issue now?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-829132520
https://github.com/qutip/qutip/pull/984#issuecomment-484914912:216,Deployability,patch,patch-,216,[![Coverage Status](https://coveralls.io/builds/22915335/badge)](https://coveralls.io/builds/22915335). Coverage decreased (-0.007%) to 72.421% when pulling **983b91405467b32b82eb4ff97d673f59d00a48b3 on ThatAdamsGuy:patch-1** into **3f2f3f2486c8f266784e2ca29731bb7fe3138c29 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/984#issuecomment-484914912
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:68,Availability,error,error,68,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:173,Availability,error,error-incorrect-checksum-for-freed-object-object-was-probably-mod,173,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:344,Deployability,configurat,configuration,344,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:344,Modifiability,config,configuration,344,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:770,Safety,Abort,Abort,770,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:189,Security,checksum,checksum-for-freed-object-object-was-probably-mod,189,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:521,Security,checksum,checksum,521,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:15,Testability,test,test,15,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/pull/985#issuecomment-485054530:985,Testability,test,test,985,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530
https://github.com/qutip/qutip/issues/987#issuecomment-489409627:191,Testability,test,test,191,I'm not entirely certain how to fix it inside setup.py. I use Debian packaging tools and can add commands to debian/rules to delete these files after running the setup.py commands (clean and test). But I'm not sure how to get setup.py to clean up after itself.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/987#issuecomment-489409627
https://github.com/qutip/qutip/issues/987#issuecomment-510879357:56,Deployability,release,release,56,"Should have been taken care in the recent conda and pip release of QuTiP, 4.4.0, #1037.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/987#issuecomment-510879357
https://github.com/qutip/qutip/issues/987#issuecomment-547067014:58,Deployability,install,installed,58,"Thanks, confirming the stray rhs*.pyx files are no longer installed in 4.4.1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/987#issuecomment-547067014
https://github.com/qutip/qutip/issues/988#issuecomment-489403726:220,Deployability,update,update,220,"I can’t tell now, will investigate. What’s strange to me in the first place is that on conda-forge, it says that for Mac’s Os, QuTiP is now at 4.3.1, https://anaconda.org/conda-forge/qutip. . Also, it would be useful to update the windows version from 4.2 on conda forge. Cc @quantshah.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489403726
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:49,Deployability,install,install,49,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:166,Deployability,install,install,166,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:229,Deployability,install,install,229,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:615,Deployability,Install,Installed,615,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:686,Deployability,Install,Installation,686,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:836,Deployability,update,update,836,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:959,Deployability,install,installed,959,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1013,Deployability,configurat,configuration,1013,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1050,Deployability,update,update,1050,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1409,Deployability,update,update,1409,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1438,Deployability,install,install,1438,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1528,Deployability,update,update,1528,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1601,Deployability,install,install,1601,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1735,Deployability,install,install,1735,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-489419006:1013,Modifiability,config,configuration,1013,"Hi @TejasAvinashShetty, I had a try at the conda install on my machine. I had no issue:; ```; conda create -n qutip-env; conda activate qutip-env; (qutip-env): conda install cython numpy scipy nose matplotlib; (qutip-env): conda install qutip; (qutip-env): python; ""Python 3.7.3 (default, Mar 27 2019, 16:54:48); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin""; >>> from qutip import *; >>> qutip.about(); QuTiP Version: 4.3.1; Numpy Version: 1.16.3; Scipy Version: 1.2.1; Cython Version: 0.29.7; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/qutip-env/lib/python3.7/site-packages/qutip; >>> quit(); (qutip-env): conda deactivate; conda update -n qutip-env --all; ""Collecting package metadata: done; Solving environment: done; # All requested packages already installed.""; ```; Can you please specify your machine configuration and what did you do to update the environment?. I guess I am unable to reproduce the issue unless I go back to qutip 4.2. ; Googling ""np113py36_2"", I ended up on this QuTiP Google Group thread, https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo; maybe making sure you are not in the QuTiP folder resolves the issue. . You can also activate your environment, uninstall qutip, update all the rest and then install qutip ; ```; conda activate qutip-env ; (qutip-env): conda uninstall qutip; conda update -n qutip-env --all; conda activate qutip-env ; (qutip-env): conda install qutip; ```; Another practical suggestion, not really assessing the issue, would be to create a new environment and do a fresh install.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-489419006
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:204,Deployability,update,update,204,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:279,Deployability,update,update,279,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:334,Deployability,install,installed,334,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:459,Deployability,update,update,459,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:552,Deployability,install,installed,552,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:680,Deployability,update,update,680,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:738,Deployability,install,installed,738,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:866,Deployability,update,update,866,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/988#issuecomment-490112935:1179,Deployability,install,installed,1179,"I had a glance at the [https://groups.google.com/forum/#!topic/qutip/BwtoyhW60jo](url) ,. i don't think so my issue is as serious as stated in the above link. I am not in the folder of qutip.On trying to update this is what I get. `(qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update conda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: conda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update --prefix /anaconda3/envs/qutip-env anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update anaconda. PackageNotInstalledError: Package is not installed in prefix.; prefix: /anaconda3/envs/qutip-env; package name: anaconda. (qutip-env) Tejass-MacBook-Pro:~ shetty$ conda update -n base -c defaults conda; Collecting package metadata: done; Solving environment: - ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; \ ; - defaults/osx-64::anaconda==5.1.0=py36_2; | ; done. # All requested packages already installed. (qutip-env) Tejass-MacBook-Pro:~ shetty$ `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/988#issuecomment-490112935
https://github.com/qutip/qutip/issues/989#issuecomment-490030124:173,Availability,error,error,173,"Indeed ; ```; b = Bloch(); b.show(); ```; renders the Bloch sphere. Calling again `b.show()` does not work as you say. . Interestingly, invoking just; ```; b; ```; gives an error, but plots the correct sphere again. ; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~/miniconda3/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. ~/miniconda3/lib/python3.6/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; Regarding the no-show, I guess there is something to fiddle with at; https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L625-L632",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-490030124
https://github.com/qutip/qutip/issues/989#issuecomment-493659601:240,Integrability,depend,depends,240,"I tried to solve this issue. It seems like this is known, and expected, behavior of `plt.show()`, described e.g. here https://stackoverflow.com/questions/50452455/plt-show-does-nothing-when-used-for-the-second-time/51005555. The workaround depends on the user environment. For Ipython one uses `display()` function from `IPython.display`, while in other cases using `fig.show()` instead of `plt.show(fig)` works. This would however make the code more involved and environment-dependent, so I didn't decide to submit a PR right away, but I can do with the above fix if somebody from qutip team agrees.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493659601
https://github.com/qutip/qutip/issues/989#issuecomment-493659601:476,Integrability,depend,dependent,476,"I tried to solve this issue. It seems like this is known, and expected, behavior of `plt.show()`, described e.g. here https://stackoverflow.com/questions/50452455/plt-show-does-nothing-when-used-for-the-second-time/51005555. The workaround depends on the user environment. For Ipython one uses `display()` function from `IPython.display`, while in other cases using `fig.show()` instead of `plt.show(fig)` works. This would however make the code more involved and environment-dependent, so I didn't decide to submit a PR right away, but I can do with the above fix if somebody from qutip team agrees.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493659601
https://github.com/qutip/qutip/issues/989#issuecomment-493725091:260,Availability,error,errors,260,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091
https://github.com/qutip/qutip/issues/989#issuecomment-493725091:250,Integrability,depend,dependent,250,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091
https://github.com/qutip/qutip/issues/989#issuecomment-493725091:50,Safety,detect,detect,50,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091
https://github.com/qutip/qutip/issues/989#issuecomment-493725091:232,Safety,avoid,avoid,232,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091
https://github.com/qutip/qutip/issues/989#issuecomment-493725091:138,Testability,test,test-in-python,138,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091
https://github.com/qutip/qutip/issues/989#issuecomment-493725091:213,Testability,test,test,213,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091
https://github.com/qutip/qutip/issues/989#issuecomment-493789773:123,Testability,test,tests,123,"@nathanshammah thanks! Submitted a PR that seems to be fixing the issue in the above mentioned way. Naturally I have brief tests for that, in a form of Jupyter notebook and in the form of `.py` file (the `.py` is just a copy of Jupyter but here we need to test both environments). Should I commit the `.py` file to `qutip/tests/` on this repo (add to my PR) and Jupyter test to `qutip-notebooks` or there is another standard way?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493789773
https://github.com/qutip/qutip/issues/989#issuecomment-493789773:256,Testability,test,test,256,"@nathanshammah thanks! Submitted a PR that seems to be fixing the issue in the above mentioned way. Naturally I have brief tests for that, in a form of Jupyter notebook and in the form of `.py` file (the `.py` is just a copy of Jupyter but here we need to test both environments). Should I commit the `.py` file to `qutip/tests/` on this repo (add to my PR) and Jupyter test to `qutip-notebooks` or there is another standard way?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493789773
https://github.com/qutip/qutip/issues/989#issuecomment-493789773:322,Testability,test,tests,322,"@nathanshammah thanks! Submitted a PR that seems to be fixing the issue in the above mentioned way. Naturally I have brief tests for that, in a form of Jupyter notebook and in the form of `.py` file (the `.py` is just a copy of Jupyter but here we need to test both environments). Should I commit the `.py` file to `qutip/tests/` on this repo (add to my PR) and Jupyter test to `qutip-notebooks` or there is another standard way?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493789773
https://github.com/qutip/qutip/issues/989#issuecomment-493789773:370,Testability,test,test,370,"@nathanshammah thanks! Submitted a PR that seems to be fixing the issue in the above mentioned way. Naturally I have brief tests for that, in a form of Jupyter notebook and in the form of `.py` file (the `.py` is just a copy of Jupyter but here we need to test both environments). Should I commit the `.py` file to `qutip/tests/` on this repo (add to my PR) and Jupyter test to `qutip-notebooks` or there is another standard way?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493789773
https://github.com/qutip/qutip/issues/989#issuecomment-494103447:60,Testability,test,test,60,"@wrzadkow I now read your last comment. I found no previous test for Bloch. If you want to add one that would be great but besides checking the environment I wouldn’t know how to do it. But you’re welcome to go ahead. I don’t think that there are tests in qutip-notebooks, Travis CI only looks into qutip/qutip. Thank you for the PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494103447
https://github.com/qutip/qutip/issues/989#issuecomment-494103447:247,Testability,test,tests,247,"@wrzadkow I now read your last comment. I found no previous test for Bloch. If you want to add one that would be great but besides checking the environment I wouldn’t know how to do it. But you’re welcome to go ahead. I don’t think that there are tests in qutip-notebooks, Travis CI only looks into qutip/qutip. Thank you for the PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494103447
https://github.com/qutip/qutip/issues/989#issuecomment-494119661:23,Testability,test,tests,23,"@nathanshammah OK, my ""tests"" were just creating instances of `Bloch()` with and without `plt.figure()` instance passed in the constructor and then repeatedly executing the `show()` function. Now after I had a look at `qutip/tests` my small testing snippets indeed don't fit into that. Hence at this stage I don't see the benefit from adding these trivial ""tests"" I did to the repo. Thank you for the review and all the guidance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494119661
https://github.com/qutip/qutip/issues/989#issuecomment-494119661:225,Testability,test,tests,225,"@nathanshammah OK, my ""tests"" were just creating instances of `Bloch()` with and without `plt.figure()` instance passed in the constructor and then repeatedly executing the `show()` function. Now after I had a look at `qutip/tests` my small testing snippets indeed don't fit into that. Hence at this stage I don't see the benefit from adding these trivial ""tests"" I did to the repo. Thank you for the review and all the guidance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494119661
https://github.com/qutip/qutip/issues/989#issuecomment-494119661:241,Testability,test,testing,241,"@nathanshammah OK, my ""tests"" were just creating instances of `Bloch()` with and without `plt.figure()` instance passed in the constructor and then repeatedly executing the `show()` function. Now after I had a look at `qutip/tests` my small testing snippets indeed don't fit into that. Hence at this stage I don't see the benefit from adding these trivial ""tests"" I did to the repo. Thank you for the review and all the guidance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494119661
https://github.com/qutip/qutip/issues/989#issuecomment-494119661:357,Testability,test,tests,357,"@nathanshammah OK, my ""tests"" were just creating instances of `Bloch()` with and without `plt.figure()` instance passed in the constructor and then repeatedly executing the `show()` function. Now after I had a look at `qutip/tests` my small testing snippets indeed don't fit into that. Hence at this stage I don't see the benefit from adding these trivial ""tests"" I did to the repo. Thank you for the review and all the guidance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494119661
https://github.com/qutip/qutip/issues/989#issuecomment-494119661:420,Usability,guid,guidance,420,"@nathanshammah OK, my ""tests"" were just creating instances of `Bloch()` with and without `plt.figure()` instance passed in the constructor and then repeatedly executing the `show()` function. Now after I had a look at `qutip/tests` my small testing snippets indeed don't fit into that. Hence at this stage I don't see the benefit from adding these trivial ""tests"" I did to the repo. Thank you for the review and all the guidance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-494119661
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1285,Availability,down,down,1285,"ver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1346,Availability,down,down,1346,"e Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1402,Availability,down,down,1402,"hose notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1441,Availability,down,down,1441," factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1526,Availability,down,down,1526,"consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total run time: 0.46s; Total run time: 0.56s; Total run time: 0.70s; To",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6410,Availability,robust,robustness,6410,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:609,Deployability,update,updated,609,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:664,Deployability,update,updates,664,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6019,Deployability,update,updated,6019,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1618,Integrability,depend,dependence,1618,"updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total run time: 0.46s; Total run time: 0.56s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.05s; Total run time: 1.24s; {'solver': 'milstein-imp'}; Total r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6241,Performance,optimiz,optimization,6241,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:2,Testability,Benchmark,Benchmarking,2,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:162,Testability,test,test,162,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:240,Testability,test,tests,240,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:349,Testability,Benchmark,Benchmarking,349,"**Benchmarking**; The results of [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). * development-smesolve-milstein-speed-test.ipynb; * development-smesolver-new-methods.ipynb; * development-smesolve-tests.ipynb; * development-ssesolver-new-methods. all seem consistent with previous notebook results. **Time Benchmarking**; All the stochastic solvers in those notebooks now run much faster: between a factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Tota",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1684,Testability,benchmark,benchmarking,1684,"s to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total run time: 0.46s; Total run time: 0.56s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.05s; Total run time: 1.24s; {'solver': 'milstein-imp'}; Total run time: 1.69s; Total run time: 2.10s; Total run time: 2.48s; Total run time: 2.96s; Total run time: 3.62s; Total run tim",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6267,Testability,benchmark,benchmarking,6267,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6350,Testability,test,tested,6350,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6004,Usability,Guid,Guide,6004,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6169,Usability,simpl,simple,6169,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003
https://github.com/qutip/qutip/pull/991#issuecomment-497358567:57,Testability,test,test,57,"I am reviewing the pull request with @nathanshammah: ; - test on the latest notebook on Schrodinger cats produced expected results in comparable times;; - test on other bosonic models (where numerical instability may be present, `H.shape= (500, 500)`) gave expected results (checked with `mcsolve` of Qutip 4.3.1) and in agreement with semi-analytical results;; - I notice that the structure of the `Result.expect` class changes according to the option `average_states`: if `True`, the result is a ndarray of dimension `len(e_ops)`. If `average_states` is `False`, the array has dimension ntraj x `len(e_ops)`. ; This is in contrast with the previous choice for `mcsolve`, where the result for `average_states`: `True` where array of dimension 1 x`len(e_ops)`. Clearly, the option implemented makes more logical sense, but a deprecation warning may be better for backward compatibility. WIP: test on spin systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497358567
https://github.com/qutip/qutip/pull/991#issuecomment-497358567:155,Testability,test,test,155,"I am reviewing the pull request with @nathanshammah: ; - test on the latest notebook on Schrodinger cats produced expected results in comparable times;; - test on other bosonic models (where numerical instability may be present, `H.shape= (500, 500)`) gave expected results (checked with `mcsolve` of Qutip 4.3.1) and in agreement with semi-analytical results;; - I notice that the structure of the `Result.expect` class changes according to the option `average_states`: if `True`, the result is a ndarray of dimension `len(e_ops)`. If `average_states` is `False`, the array has dimension ntraj x `len(e_ops)`. ; This is in contrast with the previous choice for `mcsolve`, where the result for `average_states`: `True` where array of dimension 1 x`len(e_ops)`. Clearly, the option implemented makes more logical sense, but a deprecation warning may be better for backward compatibility. WIP: test on spin systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497358567
https://github.com/qutip/qutip/pull/991#issuecomment-497358567:804,Testability,log,logical,804,"I am reviewing the pull request with @nathanshammah: ; - test on the latest notebook on Schrodinger cats produced expected results in comparable times;; - test on other bosonic models (where numerical instability may be present, `H.shape= (500, 500)`) gave expected results (checked with `mcsolve` of Qutip 4.3.1) and in agreement with semi-analytical results;; - I notice that the structure of the `Result.expect` class changes according to the option `average_states`: if `True`, the result is a ndarray of dimension `len(e_ops)`. If `average_states` is `False`, the array has dimension ntraj x `len(e_ops)`. ; This is in contrast with the previous choice for `mcsolve`, where the result for `average_states`: `True` where array of dimension 1 x`len(e_ops)`. Clearly, the option implemented makes more logical sense, but a deprecation warning may be better for backward compatibility. WIP: test on spin systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497358567
https://github.com/qutip/qutip/pull/991#issuecomment-497358567:892,Testability,test,test,892,"I am reviewing the pull request with @nathanshammah: ; - test on the latest notebook on Schrodinger cats produced expected results in comparable times;; - test on other bosonic models (where numerical instability may be present, `H.shape= (500, 500)`) gave expected results (checked with `mcsolve` of Qutip 4.3.1) and in agreement with semi-analytical results;; - I notice that the structure of the `Result.expect` class changes according to the option `average_states`: if `True`, the result is a ndarray of dimension `len(e_ops)`. If `average_states` is `False`, the array has dimension ntraj x `len(e_ops)`. ; This is in contrast with the previous choice for `mcsolve`, where the result for `average_states`: `True` where array of dimension 1 x`len(e_ops)`. Clearly, the option implemented makes more logical sense, but a deprecation warning may be better for backward compatibility. WIP: test on spin systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497358567
https://github.com/qutip/qutip/pull/991#issuecomment-497358567:761,Usability,Clear,Clearly,761,"I am reviewing the pull request with @nathanshammah: ; - test on the latest notebook on Schrodinger cats produced expected results in comparable times;; - test on other bosonic models (where numerical instability may be present, `H.shape= (500, 500)`) gave expected results (checked with `mcsolve` of Qutip 4.3.1) and in agreement with semi-analytical results;; - I notice that the structure of the `Result.expect` class changes according to the option `average_states`: if `True`, the result is a ndarray of dimension `len(e_ops)`. If `average_states` is `False`, the array has dimension ntraj x `len(e_ops)`. ; This is in contrast with the previous choice for `mcsolve`, where the result for `average_states`: `True` where array of dimension 1 x`len(e_ops)`. Clearly, the option implemented makes more logical sense, but a deprecation warning may be better for backward compatibility. WIP: test on spin systems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497358567
https://github.com/qutip/qutip/pull/991#issuecomment-497925627:487,Integrability,depend,dependent,487,"@Ericgig we verified the code also for spins.; The code is consistent with previous versions and it seems to run slightly faster when `e_ops` is given.; I checked the results with `mcsolve` from Qutip 4.3.1, also I checked the density matrix with respect to `mesolve` and `steadystate `. However, when the `e_ops` are not given, and the option `average_states=True`, the `mcsolve` in your version requires much more time than in the 4.3.1 case.; Please, check that this is not a machine dependent bug. ; I wrote a code which does that for a simple three spin system:; https://gist.github.com/fminga/c3e75a75dc528cb509c7d82d3eb9823b. There is, moreover, a minor inconsistency: when the option `average_states=False` and `store_final_state=True`, one would expect to obtain a set of wavefunctions, instead the code returns the density matrix at the last time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497925627
https://github.com/qutip/qutip/pull/991#issuecomment-497925627:541,Usability,simpl,simple,541,"@Ericgig we verified the code also for spins.; The code is consistent with previous versions and it seems to run slightly faster when `e_ops` is given.; I checked the results with `mcsolve` from Qutip 4.3.1, also I checked the density matrix with respect to `mesolve` and `steadystate `. However, when the `e_ops` are not given, and the option `average_states=True`, the `mcsolve` in your version requires much more time than in the 4.3.1 case.; Please, check that this is not a machine dependent bug. ; I wrote a code which does that for a simple three spin system:; https://gist.github.com/fminga/c3e75a75dc528cb509c7d82d3eb9823b. There is, moreover, a minor inconsistency: when the option `average_states=False` and `store_final_state=True`, one would expect to obtain a set of wavefunctions, instead the code returns the density matrix at the last time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-497925627
https://github.com/qutip/qutip/pull/991#issuecomment-498380704:40,Availability,down,down,40,"@fminga Thank you for catching the slow down, It should be better now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498380704
https://github.com/qutip/qutip/pull/991#issuecomment-498735002:178,Testability,test,tested,178,"I am happy to merge into master, I only want to double check with @ajgpitch @quantshah about #964. ; All issues seem to be resolved and work fine. We (mainly @fminga) thoroughly tested the solver and now I am more than confident into merging it into master. If I understand correctly we can then move on to assess #990.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498735002
https://github.com/qutip/qutip/pull/991#issuecomment-498737855:58,Deployability,update,updated,58,"No, this PR include #990. ; Once This is merged, only the updated citation (Phys. Rev. A 91, 012118, (2015).) will be left to merge from #990.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498737855
https://github.com/qutip/qutip/issues/992#issuecomment-510879704:31,Deployability,release,release,31,Added by @Ericgig during 4.4.0 release. See https://test.pypi.org/project/qutip/. Closing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/992#issuecomment-510879704
https://github.com/qutip/qutip/issues/992#issuecomment-510879704:52,Testability,test,test,52,Added by @Ericgig during 4.4.0 release. See https://test.pypi.org/project/qutip/. Closing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/992#issuecomment-510879704
https://github.com/qutip/qutip/issues/993#issuecomment-500331700:98,Testability,test,test,98,"Also, nonlinear functions, such as the Von Neumann entropy of the steadystate can be wrong. . Any test on expected values of collective spin operators the steadystate, compared with the steadystate calculated in the full basis, give correct results.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/993#issuecomment-500331700
https://github.com/qutip/qutip/issues/993#issuecomment-500332637:8,Deployability,patch,patch,8,"A quick patch at least for collective processes would be to change the piqs Liouvillian internal function calculating `collective_emission`, `collective_dephasing`, and `collective_pumping` properties of the `Dicke.liouvillian()` by using standard `qutip.liouvillian()` function on collective operators defined in the Dicke basis (`qutip.piqs.jspin`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/993#issuecomment-500332637
https://github.com/qutip/qutip/issues/993#issuecomment-510891449:214,Energy Efficiency,efficient,efficient,214,"Nonlinear functions on the density matrix need to be evaluated on each block by factoring in its degeneracy, given by `state_degeneracy(N,j)` for each block `j` for an ensemble of `N` two-level systems. Working on efficient functions and a notebook to highlight this feature.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/993#issuecomment-510891449
https://github.com/qutip/qutip/pull/996#issuecomment-493925445:2,Testability,test,tested,2,"I tested the code locally on my machine (OSX 10.13) on; - python from Terminal; - jupyter notebook; - Spyder; It turns out that `Bloch.render()` followed by `show()` had the same functionality of showing multiple times the Bloch sphere in a Jupyter Notebook but this is now more immediate, as `render` alone would work multiple times in jupyter notebook, but still having `show` not showing anything, whereas in the Terminal `render` would only ""reactivate"" the plot for `show` to subsequently plot it. I personally like it better as it is after this PR, also given that `render` is not as well documented as `show` in the Users Guide or tutorials.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/996#issuecomment-493925445
https://github.com/qutip/qutip/pull/996#issuecomment-493925445:629,Usability,Guid,Guide,629,"I tested the code locally on my machine (OSX 10.13) on; - python from Terminal; - jupyter notebook; - Spyder; It turns out that `Bloch.render()` followed by `show()` had the same functionality of showing multiple times the Bloch sphere in a Jupyter Notebook but this is now more immediate, as `render` alone would work multiple times in jupyter notebook, but still having `show` not showing anything, whereas in the Terminal `render` would only ""reactivate"" the plot for `show` to subsequently plot it. I personally like it better as it is after this PR, also given that `render` is not as well documented as `show` in the Users Guide or tutorials.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/996#issuecomment-493925445
https://github.com/qutip/qutip/issues/997#issuecomment-532282813:16,Availability,down,download,16,The conda-forge download badge has been added to the Readme.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/997#issuecomment-532282813
https://github.com/qutip/qutip/pull/998#issuecomment-494625047:949,Integrability,depend,dependencies,949,"It sounds great, thank you @wrzadkow. I am going to look into it. . * It would be great to add some details about it in the Users Guide, so that they show up in the [States](http://qutip.org/docs/latest/guide/guide-states.html#density-matrices) part. To do so you would need to make an .rst file in [qutip-doc](https://github.com/qutip/qutip-doc). . What actually would be much needed in a broader view is a (short) Metric subsection in the Users Guide, showing which equations are implemented in LaTeX. This is beyond this PR but your expertise might be very helpful. . Also, recently some advanced functionalities relative to metrics were developed in [Qptomographer](https://qptomographer.readthedocs.io/) @phfaist. This library optimally implements the diamond norm and uses QuTiP's classes https://qptomographer.readthedocs.io/en/latest/figures_of_merit/. It would be great to see if this can be used to address an open issue of non-maintained dependencies that @ajgpitch has been assessing, issue #874.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/998#issuecomment-494625047
https://github.com/qutip/qutip/pull/998#issuecomment-494625047:130,Usability,Guid,Guide,130,"It sounds great, thank you @wrzadkow. I am going to look into it. . * It would be great to add some details about it in the Users Guide, so that they show up in the [States](http://qutip.org/docs/latest/guide/guide-states.html#density-matrices) part. To do so you would need to make an .rst file in [qutip-doc](https://github.com/qutip/qutip-doc). . What actually would be much needed in a broader view is a (short) Metric subsection in the Users Guide, showing which equations are implemented in LaTeX. This is beyond this PR but your expertise might be very helpful. . Also, recently some advanced functionalities relative to metrics were developed in [Qptomographer](https://qptomographer.readthedocs.io/) @phfaist. This library optimally implements the diamond norm and uses QuTiP's classes https://qptomographer.readthedocs.io/en/latest/figures_of_merit/. It would be great to see if this can be used to address an open issue of non-maintained dependencies that @ajgpitch has been assessing, issue #874.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/998#issuecomment-494625047
https://github.com/qutip/qutip/pull/998#issuecomment-494625047:203,Usability,guid,guide,203,"It sounds great, thank you @wrzadkow. I am going to look into it. . * It would be great to add some details about it in the Users Guide, so that they show up in the [States](http://qutip.org/docs/latest/guide/guide-states.html#density-matrices) part. To do so you would need to make an .rst file in [qutip-doc](https://github.com/qutip/qutip-doc). . What actually would be much needed in a broader view is a (short) Metric subsection in the Users Guide, showing which equations are implemented in LaTeX. This is beyond this PR but your expertise might be very helpful. . Also, recently some advanced functionalities relative to metrics were developed in [Qptomographer](https://qptomographer.readthedocs.io/) @phfaist. This library optimally implements the diamond norm and uses QuTiP's classes https://qptomographer.readthedocs.io/en/latest/figures_of_merit/. It would be great to see if this can be used to address an open issue of non-maintained dependencies that @ajgpitch has been assessing, issue #874.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/998#issuecomment-494625047
https://github.com/qutip/qutip/pull/998#issuecomment-494625047:209,Usability,guid,guide-states,209,"It sounds great, thank you @wrzadkow. I am going to look into it. . * It would be great to add some details about it in the Users Guide, so that they show up in the [States](http://qutip.org/docs/latest/guide/guide-states.html#density-matrices) part. To do so you would need to make an .rst file in [qutip-doc](https://github.com/qutip/qutip-doc). . What actually would be much needed in a broader view is a (short) Metric subsection in the Users Guide, showing which equations are implemented in LaTeX. This is beyond this PR but your expertise might be very helpful. . Also, recently some advanced functionalities relative to metrics were developed in [Qptomographer](https://qptomographer.readthedocs.io/) @phfaist. This library optimally implements the diamond norm and uses QuTiP's classes https://qptomographer.readthedocs.io/en/latest/figures_of_merit/. It would be great to see if this can be used to address an open issue of non-maintained dependencies that @ajgpitch has been assessing, issue #874.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/998#issuecomment-494625047
https://github.com/qutip/qutip/pull/998#issuecomment-494625047:447,Usability,Guid,Guide,447,"It sounds great, thank you @wrzadkow. I am going to look into it. . * It would be great to add some details about it in the Users Guide, so that they show up in the [States](http://qutip.org/docs/latest/guide/guide-states.html#density-matrices) part. To do so you would need to make an .rst file in [qutip-doc](https://github.com/qutip/qutip-doc). . What actually would be much needed in a broader view is a (short) Metric subsection in the Users Guide, showing which equations are implemented in LaTeX. This is beyond this PR but your expertise might be very helpful. . Also, recently some advanced functionalities relative to metrics were developed in [Qptomographer](https://qptomographer.readthedocs.io/) @phfaist. This library optimally implements the diamond norm and uses QuTiP's classes https://qptomographer.readthedocs.io/en/latest/figures_of_merit/. It would be great to see if this can be used to address an open issue of non-maintained dependencies that @ajgpitch has been assessing, issue #874.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/998#issuecomment-494625047
https://github.com/qutip/qutip/issues/999#issuecomment-495046302:35,Availability,down,down,35,Thank you @ElieGouzien for pinning down the incompatibility and opening the issue and @Ericgig for carefully addressing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/999#issuecomment-495046302
https://github.com/qutip/qutip/issues/1004#issuecomment-497178029:23,Availability,error,error,23,I cannot reproduce the error as I am on darwin. ; It might be something about `_linux_hardware_info`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497178029
https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:675,Availability,error,error,675,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045
https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:330,Integrability,depend,dependent,330,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045
https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:583,Modifiability,portab,portable-way-of-detecting-number-of-usable-cpus-in-python,583,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045
https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:599,Safety,detect,detecting-number-of-usable-cpus-in-python,599,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045
https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:619,Usability,usab,usable-cpus-in-python,619,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045
https://github.com/qutip/qutip/issues/1006#issuecomment-497391220:20,Modifiability,rewrite,rewrite,20,PR #991 (in review) rewrite a good part of mcsolve and have this feature.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1006#issuecomment-497391220
https://github.com/qutip/qutip/issues/1008#issuecomment-498667655:38,Availability,error,error,38,"I tried it on Colab and obtained this error if importing a single function,; which seems related to the init, . ```; AttributeError Traceback (most recent call last); /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); 1 frames; /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------; ```; AttributeError: module 'qutip' has no attribute 'settings'. The strange thing is that that bit of the init has not been touched for years, https://github.com/qutip/qutip/blame/master/qutip/__init__.py#L45. I don't have an immediate fix (@quantshah might know more about colab) but a workaround could be using [My Binder](https://mybinder.org/), if that is a viable option for you. . To set it up, you need to copy a `requirements.yml` file in your repository and activate My Binder by copying the link into their homepage.; Right now, in the master of qutip-notebooks we get an issue with scipy's `IndexMixin` ; https://github.com/theislab/anndata/issues/146. But, from my [notebooks](https://github.com/nathanshammah/notebooks) repository it seems to work. Copying the environment file and copy-pasting the My Binder link should work. You can copy-paste a given branch in mybinder.org, such that it does not keep rebuilding the environment completely from scratch, something that will happen if it finds a new commit in that branch. Hope this helps. . .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-498667655
https://github.com/qutip/qutip/issues/1008#issuecomment-498721125:108,Deployability,install,install,108,"Hey,. I faced similar issues and it's due to Scipy. I am meaning to open an issue; about this but try. !pip install Scipy==1; !pip install qutip. Worked for me a three days back in June 1. On Tue, 4 Jun 2019 at 20:29, ziofil <notifications@github.com> wrote:. > Thank you, I will look into these alternatives.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1008?email_source=notifications&email_token=ABVFIBGYGBBTKN6I6OXBMALPYZ7MDA5CNFSM4HS37VM2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODW43FCA#issuecomment-498709128>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBFLVMY6K5NEKCI7YKTPYZ7MDANCNFSM4HS37VMQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-498721125
https://github.com/qutip/qutip/issues/1008#issuecomment-498721125:131,Deployability,install,install,131,"Hey,. I faced similar issues and it's due to Scipy. I am meaning to open an issue; about this but try. !pip install Scipy==1; !pip install qutip. Worked for me a three days back in June 1. On Tue, 4 Jun 2019 at 20:29, ziofil <notifications@github.com> wrote:. > Thank you, I will look into these alternatives.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1008?email_source=notifications&email_token=ABVFIBGYGBBTKN6I6OXBMALPYZ7MDA5CNFSM4HS37VM2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODW43FCA#issuecomment-498709128>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBFLVMY6K5NEKCI7YKTPYZ7MDANCNFSM4HS37VMQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-498721125
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:85,Deployability,install,install,85,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:112,Deployability,install,install,112,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:312,Deployability,release,released,312,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:693,Deployability,patch,patch,693,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:784,Deployability,release,released,784,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:234,Safety,avoid,avoid,234,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-499038616:415,Testability,test,tested,415,"@ziofil, I just checked that updating the colab notebook to have the line; ```; !pip install scipy==1.2.1; !pip install qutip; ```; works for me, as @quantshah mentioned. ; QuTiP will find already the SciPy 1.2.1 requirement and will avoid keeping 1.3.; It is an issue with `IndexMixin` relocation in SciPy 1.3 (released this May 17), which has been changed from `scipy.sparse.sputils` to `scipy.sparse._index`.; I tested this also in My Binder and this works too, by setting in the `environment.yml` file, ; [in line 9,](https://github.com/nathanshammah/interactive-notebooks/blob/master/environment.yml#L9); from; ```; - scipy; ```; to ; ```; - scipy==1.2.1; ```; I will open a PR with this patch for `qutip-notebooks` for the time being. Once the next official version of QuTiP is released, this problem will not arise, as this issue has been taken care of by @Ericgig in PR #999 by updating scipy `IndexMixin`, now under private use, with scipy `get_index_dtype`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-499038616
https://github.com/qutip/qutip/issues/1008#issuecomment-510884494:27,Deployability,release,release,27,"Solved by QuTiP 4.4.0 PyPI release. It proved quite slow to build the wheels on my try on Colab (5 minutes), we can open another issue in case this is standard.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-510884494
https://github.com/qutip/qutip/issues/1009#issuecomment-502516544:178,Integrability,message,messages,178,"This happens to me as well, except that I'm running Ubuntu.; I should note that these are created particularly when running qutip.testing.run().; This test also produces warning messages pertaining to these files. The image below depicts the problem.; ![rhstest](https://user-images.githubusercontent.com/45544401/59579796-70420080-9083-11e9-9b66-df1c48686cbd.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544
https://github.com/qutip/qutip/issues/1009#issuecomment-502516544:130,Testability,test,testing,130,"This happens to me as well, except that I'm running Ubuntu.; I should note that these are created particularly when running qutip.testing.run().; This test also produces warning messages pertaining to these files. The image below depicts the problem.; ![rhstest](https://user-images.githubusercontent.com/45544401/59579796-70420080-9083-11e9-9b66-df1c48686cbd.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544
https://github.com/qutip/qutip/issues/1009#issuecomment-502516544:151,Testability,test,test,151,"This happens to me as well, except that I'm running Ubuntu.; I should note that these are created particularly when running qutip.testing.run().; This test also produces warning messages pertaining to these files. The image below depicts the problem.; ![rhstest](https://user-images.githubusercontent.com/45544401/59579796-70420080-9083-11e9-9b66-df1c48686cbd.png)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1009#issuecomment-502516544
https://github.com/qutip/qutip/issues/1011#issuecomment-502906115:203,Availability,error,error,203,"@Ericgig `b=Bloch()` QuTiP 4.3.1 and 4.4.0.dev0+5af8c1c5 on python 3.7.3 works on Mac, both from shell and Jupyter notebook. Also plotting is fine. Simply running `Bloch()` in Jupyter notebook gives the error; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; but then plots the Bloch sphere, I don't know if it's a problem though or the correct functioning of the class. In shell it gives the object reference.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1011#issuecomment-502906115
https://github.com/qutip/qutip/issues/1011#issuecomment-502906115:148,Usability,Simpl,Simply,148,"@Ericgig `b=Bloch()` QuTiP 4.3.1 and 4.4.0.dev0+5af8c1c5 on python 3.7.3 works on Mac, both from shell and Jupyter notebook. Also plotting is fine. Simply running `Bloch()` in Jupyter notebook gives the error; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; but then plots the Bloch sphere, I don't know if it's a problem though or the correct functioning of the class. In shell it gives the object reference.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1011#issuecomment-502906115
https://github.com/qutip/qutip/pull/1014#issuecomment-500747351:27,Deployability,update,update,27,This feels a bit weird. To update the qip_opt branch from the master. But I guess this is how it should be. @ajgpitch @BoxiLi,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1014#issuecomment-500747351
https://github.com/qutip/qutip/pull/1014#issuecomment-500755145:32,Availability,down,down,32,"I'm not sure how this should be down. What I was thinking is that there are some changes to `circuitprocessor.py` and `gate.py` in my commits in the above list. And I might work on those files further in the coming weeks. If they are not included in qip_opt, we will have to eventually come back and resolve the confliction. Maybe in the next few months all PR related to qip should be merged to qip_opt instead of master?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1014#issuecomment-500755145
https://github.com/qutip/qutip/issues/1016#issuecomment-501432430:86,Deployability,release,released,86,@BoxiLi Which version are you using?; I believe the present master branch (soon to be released) does not have the problem.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1016#issuecomment-501432430
https://github.com/qutip/qutip/issues/1016#issuecomment-501759471:179,Availability,error,error,179,"@Ericgig I was indeed a few commits behind, but after I merged the current mater to my branch, I cannot import `mcsolve `any more. `from qutip import mcsolve` gives the following error; ```; <ipython-input-1-58732ae050c2> in <module>; ----> 1 from qutip import mcsolve. c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\__init__.py in <module>; 205 from qutip.mesolve import *; 206 from qutip.sesolve import *; --> 207 from qutip.mcsolve import *; 208 from qutip.stochastic import *; 209 from qutip.essolve import *. c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\mcsolve.py in <module>; 46 from qutip.qobjevo import QobjEvo; 47 from qutip.parallel import parfor, parallel_map, serial_map; ---> 48 from qutip.cy.mcsolve import CyMcOde, CyMcOdeDiag; 49 # cy_mc_run_ode = None; 50 from qutip.sesolve import sesolve. ModuleNotFoundError: No module named 'qutip.cy.mcsolve'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1016#issuecomment-501759471
https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:126,Deployability,install,installed,126,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602
https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:717,Deployability,install,installed,717,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602
https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:222,Energy Efficiency,power,power,222,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602
https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:811,Testability,test,testing,811,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602
https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:428,Availability,error,error,428,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676
https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:177,Deployability,update,updates,177,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676
https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:776,Deployability,patch,patch,776,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676
https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:298,Integrability,message,message,298,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676
https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:574,Usability,clear,clearly,574,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676
https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:860,Usability,simpl,simply,860,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676
https://github.com/qutip/qutip/issues/1017#issuecomment-540010694:116,Availability,error,error,116,"Hi @tehruhn.; The call to steadystate take different kwargs depending on whether scipy of mkl is solved. It make an error if you give it a keyword not belonging to the right solver. I believe it should be better to accept all keyword and ignore the unused one. If you want to rework it, I would suggest to set the most stable solver/method as a default. I heard the default method sometime fails (#1077). . 2. Since a few version back, when we added a `__array__` method to Qobj. We need to do `np.asarray(mech_dms, dtype=object)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694
https://github.com/qutip/qutip/issues/1017#issuecomment-540010694:60,Integrability,depend,depending,60,"Hi @tehruhn.; The call to steadystate take different kwargs depending on whether scipy of mkl is solved. It make an error if you give it a keyword not belonging to the right solver. I believe it should be better to accept all keyword and ignore the unused one. If you want to rework it, I would suggest to set the most stable solver/method as a default. I heard the default method sometime fails (#1077). . 2. Since a few version back, when we added a `__array__` method to Qobj. We need to do `np.asarray(mech_dms, dtype=object)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694
https://github.com/qutip/qutip/issues/1018#issuecomment-501560442:96,Deployability,release,releases,96,"The bug in 1) seems to refer to Issue #1008 due to #999, the incompatibility of current version releases with SciPy 1.3. Try to pinpoint in your virtual environment the version of SciPy to 1.2.1.; Something like `pip install scipy==1.2.1` should work. Also, this is a minor thing but please refer to the current documentation, http://qutip.org/docs/latest/installation.html (QuTiP 4.3, not 4.1). . In a conda environment everything should work properly with these specifications:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ```; Also, consider upgrading to python 3.6 or 3.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442
https://github.com/qutip/qutip/issues/1018#issuecomment-501560442:217,Deployability,install,install,217,"The bug in 1) seems to refer to Issue #1008 due to #999, the incompatibility of current version releases with SciPy 1.3. Try to pinpoint in your virtual environment the version of SciPy to 1.2.1.; Something like `pip install scipy==1.2.1` should work. Also, this is a minor thing but please refer to the current documentation, http://qutip.org/docs/latest/installation.html (QuTiP 4.3, not 4.1). . In a conda environment everything should work properly with these specifications:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ```; Also, consider upgrading to python 3.6 or 3.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442
https://github.com/qutip/qutip/issues/1018#issuecomment-501560442:356,Deployability,install,installation,356,"The bug in 1) seems to refer to Issue #1008 due to #999, the incompatibility of current version releases with SciPy 1.3. Try to pinpoint in your virtual environment the version of SciPy to 1.2.1.; Something like `pip install scipy==1.2.1` should work. Also, this is a minor thing but please refer to the current documentation, http://qutip.org/docs/latest/installation.html (QuTiP 4.3, not 4.1). . In a conda environment everything should work properly with these specifications:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ```; Also, consider upgrading to python 3.6 or 3.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442
https://github.com/qutip/qutip/issues/1018#issuecomment-501560442:674,Deployability,Install,Installed,674,"The bug in 1) seems to refer to Issue #1008 due to #999, the incompatibility of current version releases with SciPy 1.3. Try to pinpoint in your virtual environment the version of SciPy to 1.2.1.; Something like `pip install scipy==1.2.1` should work. Also, this is a minor thing but please refer to the current documentation, http://qutip.org/docs/latest/installation.html (QuTiP 4.3, not 4.1). . In a conda environment everything should work properly with these specifications:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ```; Also, consider upgrading to python 3.6 or 3.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442
https://github.com/qutip/qutip/issues/1018#issuecomment-501560442:746,Deployability,Install,Installation,746,"The bug in 1) seems to refer to Issue #1008 due to #999, the incompatibility of current version releases with SciPy 1.3. Try to pinpoint in your virtual environment the version of SciPy to 1.2.1.; Something like `pip install scipy==1.2.1` should work. Also, this is a minor thing but please refer to the current documentation, http://qutip.org/docs/latest/installation.html (QuTiP 4.3, not 4.1). . In a conda environment everything should work properly with these specifications:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ```; Also, consider upgrading to python 3.6 or 3.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442
https://github.com/qutip/qutip/issues/1018#issuecomment-501582503:82,Availability,error,errors,82,"Thanks Nathan. Once I install your versions of the packages and Python 3.7, these errors are gone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503
https://github.com/qutip/qutip/issues/1018#issuecomment-501582503:22,Deployability,install,install,22,"Thanks Nathan. Once I install your versions of the packages and Python 3.7, these errors are gone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503
https://github.com/qutip/qutip/issues/1019#issuecomment-502356360:299,Availability,down,downgrade,299,"> This issue is a duplicate of #999, #1008 and #1018. It has been addressed by PR 1000.; > ; > #1000. Se discussion in #1018. Yep, I know that this is caused by the newest version of Siipy. But is there any possibilities to upgrade the qutip. It seems that it is difficult to ask the scipy team to ""downgrade"" the scipy, isn't it/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360
https://github.com/qutip/qutip/issues/1019#issuecomment-502356360:224,Deployability,upgrade,upgrade,224,"> This issue is a duplicate of #999, #1008 and #1018. It has been addressed by PR 1000.; > ; > #1000. Se discussion in #1018. Yep, I know that this is caused by the newest version of Siipy. But is there any possibilities to upgrade the qutip. It seems that it is difficult to ask the scipy team to ""downgrade"" the scipy, isn't it/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360
https://github.com/qutip/qutip/issues/1019#issuecomment-502357838:36,Deployability,install,install,36,You can choose the scipy version to install: `conda install scipy=1.2.1` or `pip install scipy==1.2.1`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502357838
https://github.com/qutip/qutip/issues/1019#issuecomment-502357838:52,Deployability,install,install,52,You can choose the scipy version to install: `conda install scipy=1.2.1` or `pip install scipy==1.2.1`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502357838
https://github.com/qutip/qutip/issues/1019#issuecomment-502357838:81,Deployability,install,install,81,You can choose the scipy version to install: `conda install scipy=1.2.1` or `pip install scipy==1.2.1`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502357838
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:78,Deployability,release,release,78,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:98,Deployability,integrat,integrate,98,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:120,Deployability,release,release,120,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:128,Deployability,integrat,integrating,128,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:250,Deployability,install,installation,250,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:369,Deployability,install,installation,369,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:98,Integrability,integrat,integrate,98,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:128,Integrability,integrat,integrating,128,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:345,Integrability,depend,dependencies,345,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655
https://github.com/qutip/qutip/issues/1019#issuecomment-503356237:27,Deployability,release,release,27,Agreed. We’re working on a release soon.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503356237
https://github.com/qutip/qutip/issues/1019#issuecomment-510892254:27,Deployability,release,release,27,@ElieGouzien the new QuTiP release solves this. See the [change log](http://qutip.org/docs/latest/changelog.html) for more information on new features.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-510892254
https://github.com/qutip/qutip/issues/1019#issuecomment-510892254:64,Testability,log,log,64,@ElieGouzien the new QuTiP release solves this. See the [change log](http://qutip.org/docs/latest/changelog.html) for more information on new features.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-510892254
https://github.com/qutip/qutip/issues/1020#issuecomment-505434934:347,Usability,progress bar,progress bar,347,"Maybe, but the print statements are still written as functions there. Thank you for the PR, I will help you out and try to merge it asap. But I do not think you need to put the extensive description of the port to python 3 syntax. Just updating the syntax to python 3 with a comment linking to some discussion should be fine. Btw, there is a cool progress bar called tqdm if you are not already aware, [tqdm](https://github.com/tqdm/tqdm). I have seen it work out nice with some qutip functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1020#issuecomment-505434934
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1992,Availability,down,down,1992,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:443,Deployability,patch,patch,443,"By running the same file as in the gist of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:656,Deployability,patch,patch,656,"By running the same file as in the gist of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:742,Deployability,patch,patch,742,"By running the same file as in the gist of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:969,Deployability,patch,patch,969,"By running the same file as in the gist of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1051,Deployability,patch,patch,1051,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1262,Deployability,patch,patch,1262,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1344,Deployability,patch,patch,1344,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1521,Deployability,patch,patch,1521,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1600,Deployability,patch,patch,1600,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1802,Deployability,patch,patch,1802,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1881,Deployability,patch,patch,1881,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663
https://github.com/qutip/qutip/pull/1024#issuecomment-503667653:49,Testability,test,test,49,Could you send me the code you are using for the test.; I find some of the timing strange.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503667653
https://github.com/qutip/qutip/pull/1024#issuecomment-503668387:78,Testability,test,tested,78,"Note that all this is when giving `e_ops`. When the `e_ops` are not given, as tested with @fminga in #991, the speedup of the current qutip 4.4 is considerable: Instead of 127s, they are at 47s. The code is in the gist of #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503668387
https://github.com/qutip/qutip/pull/1024#issuecomment-503669133:141,Availability,error,errors,141,"This code https://gist.github.com/nathanshammah/f96f6c1db5c323243a4729467cb7351f; Also, let me mention that the progress bar was giving some errors in qutip 4.3.1 and now it does not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503669133
https://github.com/qutip/qutip/pull/1024#issuecomment-503669133:112,Usability,progress bar,progress bar,112,"This code https://gist.github.com/nathanshammah/f96f6c1db5c323243a4729467cb7351f; Also, let me mention that the progress bar was giving some errors in qutip 4.3.1 and now it does not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503669133
https://github.com/qutip/qutip/pull/1024#issuecomment-504556383:30,Testability,test,tests,30,@nathanshammah as soon as the tests finish if the usual tests pass.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-504556383
https://github.com/qutip/qutip/pull/1024#issuecomment-504556383:56,Testability,test,tests,56,@nathanshammah as soon as the tests finish if the usual tests pass.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-504556383
https://github.com/qutip/qutip/pull/1024#issuecomment-504745846:114,Deployability,patch,patch,114,"It now all fare similarly to 4.3.1. or considerably better, also when `e_ops` are given:. ### QuTiP 4.4 with this patch (updated):. * Case 1) Average states = False, Store States = True; **Real cell time: 17s (previously: 28.9s. version 4.3.1: 25s)**. * Case 2) Average states = False, Store States = False; Real cell time: 8s (previously: 18.64s. version 4.3.1: 11s). * Case 3) Average states = True, Store States = True; **Real cell time: 9s (previously: 23s. version 4.3.1: 65s)**. * Case 4) Default options; Real cell time: 8s (previously: 19s. version 4.3.1: 8s ). * Case 5) Average states = True, Store States = False; Real cell time: 8.7s (previously: 28s. version 4.3.1: 8.7s)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-504745846
https://github.com/qutip/qutip/pull/1024#issuecomment-504745846:121,Deployability,update,updated,121,"It now all fare similarly to 4.3.1. or considerably better, also when `e_ops` are given:. ### QuTiP 4.4 with this patch (updated):. * Case 1) Average states = False, Store States = True; **Real cell time: 17s (previously: 28.9s. version 4.3.1: 25s)**. * Case 2) Average states = False, Store States = False; Real cell time: 8s (previously: 18.64s. version 4.3.1: 11s). * Case 3) Average states = True, Store States = True; **Real cell time: 9s (previously: 23s. version 4.3.1: 65s)**. * Case 4) Default options; Real cell time: 8s (previously: 19s. version 4.3.1: 8s ). * Case 5) Average states = True, Store States = False; Real cell time: 8.7s (previously: 28s. version 4.3.1: 8.7s)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-504745846
https://github.com/qutip/qutip/pull/1025#issuecomment-504761573:213,Deployability,release,release,213,"Also: maybe this PR, which seems self-contained with respect to deliverables and independent on the ""`qutip.nisq`"" module, could be made directly to the master, so that we can already include it in the next QuTiP release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-504761573
https://github.com/qutip/qutip/pull/1025#issuecomment-504767203:391,Deployability,update,update,391,"@nathanshammah Thanks a lot for the review. I'm not sure how gist works, should I upload only the example or with the definition of `expand_oper`? Maybe we can talk about this tomorrow at the meeting. I have some examples in notebook. ; Yes, you are right, I think this PR could be merged directly to master, but I also used `expand_oper` in my `circuitprocessor` a lot so I may need you to update qip_opt from master branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-504767203
https://github.com/qutip/qutip/pull/1025#issuecomment-505045224:184,Deployability,update,update,184,Maybe we can change the base branch to master. Never did it before but it seems straightforward https://help.github.com/en/articles/changing-the-base-branch-of-a-pull-request and then update qip opt branch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505045224
https://github.com/qutip/qutip/pull/1025#issuecomment-505048276:101,Deployability,update,updates,101,"@nathanshammah @quantshah I tried it, but a lot of commits appear which don't belong to me. They are updates from the master branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505048276
https://github.com/qutip/qutip/pull/1025#issuecomment-505057710:90,Deployability,update,updated,90,"The conflicts are because first we branched qip_opt from master, but then qip_opt was not updated to master itself and I tried to update it against master since this will be a PR which gets merged into master and not your GSoC project. This led to many changes which happened over master and were not there in your PR and led to some conflicts between `master` and `qip_opt` I suppose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505057710
https://github.com/qutip/qutip/pull/1025#issuecomment-505057710:130,Deployability,update,update,130,"The conflicts are because first we branched qip_opt from master, but then qip_opt was not updated to master itself and I tried to update it against master since this will be a PR which gets merged into master and not your GSoC project. This led to many changes which happened over master and were not there in your PR and led to some conflicts between `master` and `qip_opt` I suppose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505057710
https://github.com/qutip/qutip/pull/1025#issuecomment-505060556:606,Integrability,message,message,606,"We could take this PR as an example of how to work with a very messy git history. I see some forced pushes which should probably have been rebases to avoid conflicts. But at this point I would suggest to Boxi that you open a fresh PR branching from the current master on your local qutip repo. So do:. ```; git checkout master; git pull upstream master; git push origin master; ```. This syncs your master to QuTiP. Then, start a new branch and make the same changes that you did here on that new branch. . Make the changes, add commit etc.; ```; git checkout -b user_gate2; ...; git add .; git commit -m ""message""; ```. and then make a new PR and close this (without merging). Then delete this branch (locally and remote). ```; git branch -D user_gate; git push origin -delete user_gate; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505060556
https://github.com/qutip/qutip/pull/1025#issuecomment-505060556:150,Safety,avoid,avoid,150,"We could take this PR as an example of how to work with a very messy git history. I see some forced pushes which should probably have been rebases to avoid conflicts. But at this point I would suggest to Boxi that you open a fresh PR branching from the current master on your local qutip repo. So do:. ```; git checkout master; git pull upstream master; git push origin master; ```. This syncs your master to QuTiP. Then, start a new branch and make the same changes that you did here on that new branch. . Make the changes, add commit etc.; ```; git checkout -b user_gate2; ...; git add .; git commit -m ""message""; ```. and then make a new PR and close this (without merging). Then delete this branch (locally and remote). ```; git branch -D user_gate; git push origin -delete user_gate; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505060556
https://github.com/qutip/qutip/issues/1026#issuecomment-506732671:101,Modifiability,variab,variable,101,I solved this by adding C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\ to the PATH variable,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-506732671
https://github.com/qutip/qutip/issues/1026#issuecomment-506745768:207,Deployability,install,installing,207,"> I solved this by adding C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\ to the PATH variable. I don't know why, but setting the PATH variable does not work for me :(; I was using VS2017 before installing qutip. It was recommended that qutip should work with VS2015 on windows. So I uninstalled VS2017 and reinstalled VS2015. I guess something went wrong in this process, but I haven't figured out what it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-506745768
https://github.com/qutip/qutip/issues/1026#issuecomment-506745768:98,Modifiability,variab,variable,98,"> I solved this by adding C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\ to the PATH variable. I don't know why, but setting the PATH variable does not work for me :(; I was using VS2017 before installing qutip. It was recommended that qutip should work with VS2015 on windows. So I uninstalled VS2017 and reinstalled VS2015. I guess something went wrong in this process, but I haven't figured out what it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-506745768
https://github.com/qutip/qutip/issues/1026#issuecomment-506745768:147,Modifiability,variab,variable,147,"> I solved this by adding C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\ to the PATH variable. I don't know why, but setting the PATH variable does not work for me :(; I was using VS2017 before installing qutip. It was recommended that qutip should work with VS2015 on windows. So I uninstalled VS2017 and reinstalled VS2015. I guess something went wrong in this process, but I haven't figured out what it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-506745768
https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:465,Availability,down,download,465,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200
https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:119,Deployability,install,installing,119,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200
https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:232,Deployability,install,install,232,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200
https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:261,Deployability,install,installing,261,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200
https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:495,Deployability,install,install,495,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200
https://github.com/qutip/qutip/issues/1026#issuecomment-1439940914:7,Testability,test,tests,7,"We run tests on Windows in CI now and they pass, so I'm going to close this now. Feel free to comment if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-1439940914
https://github.com/qutip/qutip/issues/1027#issuecomment-536154011:32,Availability,down,downgrade,32,"For the time being, a fix is to downgrade Matplotlib:. conda install matplotlib==3.0.3. On Sat, 28 Sep 2019 at 13:09, XiaoTailong <notifications@github.com> wrote:. > I have the same problem in Bloch() and show() functions in Mac OS 10.14. I; > cannot plot the Bloch sphere. It seems the problem of Matplotlib. But I am; > not sure.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1027?email_source=notifications&email_token=ADPF67AG3SH3L3HWWEZIC2TQL3KHTA5CNFSM4H24W5NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72QMLY#issuecomment-536151599>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67EQT2K5O3K73IHOFQ3QL3KHTANCNFSM4H24W5NA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011
https://github.com/qutip/qutip/issues/1027#issuecomment-536154011:61,Deployability,install,install,61,"For the time being, a fix is to downgrade Matplotlib:. conda install matplotlib==3.0.3. On Sat, 28 Sep 2019 at 13:09, XiaoTailong <notifications@github.com> wrote:. > I have the same problem in Bloch() and show() functions in Mac OS 10.14. I; > cannot plot the Bloch sphere. It seems the problem of Matplotlib. But I am; > not sure.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1027?email_source=notifications&email_token=ADPF67AG3SH3L3HWWEZIC2TQL3KHTA5CNFSM4H24W5NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72QMLY#issuecomment-536151599>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67EQT2K5O3K73IHOFQ3QL3KHTANCNFSM4H24W5NA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011
https://github.com/qutip/qutip/issues/1027#issuecomment-539973018:78,Availability,error,error,78,"``b.add_points([1/np.sqrt(3),1/np.sqrt(3),1/np.sqrt(3)],meth=""l"")``; Gives no error, but produces no output. The other methods fail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-539973018
https://github.com/qutip/qutip/issues/1027#issuecomment-612224658:63,Availability,down,downgrading,63,The above code is working fine with Matplotlib 3.1.3. But when downgrading it to 3.1.0 and running the code is causing error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-612224658
https://github.com/qutip/qutip/issues/1027#issuecomment-612224658:119,Availability,error,error,119,The above code is working fine with Matplotlib 3.1.3. But when downgrading it to 3.1.0 and running the code is causing error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-612224658
https://github.com/qutip/qutip/issues/1027#issuecomment-615872719:444,Availability,error,errors,444,"Matlibplot 3.0.3may work will. 发自我的iPhone. ------------------ Original ------------------; From: Michael Kerschbaum <notifications@github.com&gt;; Date: 周六,4月 18,2020 15:16; To: qutip/qutip <qutip@noreply.github.com&gt;; Cc: XiaoTailong <2449734455@qq.com&gt;, Comment <comment@noreply.github.com&gt;; Subject: Re: [qutip/qutip] `Bloch().add_points()` breaks in Matplotlib 3.1.0 (works in Matplotlib 3.0.3) (#1027). ; I can reproduce the above errors with Matplotlib 3.2.1.; ; —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-615872719
https://github.com/qutip/qutip/pull/1028#issuecomment-505083482:26,Energy Efficiency,reduce,reduce,26,I guess the purpose is to reduce complexity and increase maintainability. I'm not sure how should I reduce this. Separate the input check and use another private method?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505083482
https://github.com/qutip/qutip/pull/1028#issuecomment-505083482:100,Energy Efficiency,reduce,reduce,100,I guess the purpose is to reduce complexity and increase maintainability. I'm not sure how should I reduce this. Separate the input check and use another private method?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505083482
https://github.com/qutip/qutip/pull/1028#issuecomment-505083482:57,Modifiability,maintainab,maintainability,57,I guess the purpose is to reduce complexity and increase maintainability. I'm not sure how should I reduce this. Separate the input check and use another private method?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505083482
https://github.com/qutip/qutip/pull/1028#issuecomment-505092850:15,Testability,test,tests,15,"Functions run, tests ok on my machine (darwin). Can you add a test for `molmer_sorensen` if appropriate?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505092850
https://github.com/qutip/qutip/pull/1028#issuecomment-505092850:62,Testability,test,test,62,"Functions run, tests ok on my machine (darwin). Can you add a test for `molmer_sorensen` if appropriate?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505092850
https://github.com/qutip/qutip/pull/1028#issuecomment-505095685:12,Testability,test,test,12,Could add a test for `molmer_sorensen` and then we can merge I think.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505095685
https://github.com/qutip/qutip/pull/1028#issuecomment-505095971:33,Testability,test,test,33,"@nathanshammah Sure, I can add a test for it. Just I'm not sure what should I test against? If I compare the result matrix, I'm basically just copying the matrix from the code. Test on high dimension?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505095971
https://github.com/qutip/qutip/pull/1028#issuecomment-505095971:78,Testability,test,test,78,"@nathanshammah Sure, I can add a test for it. Just I'm not sure what should I test against? If I compare the result matrix, I'm basically just copying the matrix from the code. Test on high dimension?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505095971
https://github.com/qutip/qutip/pull/1028#issuecomment-505095971:177,Testability,Test,Test,177,"@nathanshammah Sure, I can add a test for it. Just I'm not sure what should I test against? If I compare the result matrix, I'm basically just copying the matrix from the code. Test on high dimension?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505095971
https://github.com/qutip/qutip/pull/1028#issuecomment-505109850:66,Testability,test,testing,66,"Yes, something very simple would work, I guess. . ```; from numpy.testing import assert_,assert_almost_equal; assert_(molmer_sorensen(0)==tensor(qeye(2),qeye(2))); assert_almost_equal(molmer_sorensen(np.pi/2).full(),(np.array([[0.70710678+0.j, 0.+0.j,0. +0.j, 0.-0.70710678j],; [0. +0.j , 0.70710678+0.j,0.-0.70710678j, 0.+0.j],; [0. +0.j , 0. -0.70710678j,0.70710678+0.j, 0. +0.j],; [0.-0.70710678j, 0. +0.j , 0.+0.j , 0.70710678+0.j ]]))); ```; and something for N>3 if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505109850
https://github.com/qutip/qutip/pull/1028#issuecomment-505109850:20,Usability,simpl,simple,20,"Yes, something very simple would work, I guess. . ```; from numpy.testing import assert_,assert_almost_equal; assert_(molmer_sorensen(0)==tensor(qeye(2),qeye(2))); assert_almost_equal(molmer_sorensen(np.pi/2).full(),(np.array([[0.70710678+0.j, 0.+0.j,0. +0.j, 0.-0.70710678j],; [0. +0.j , 0.70710678+0.j,0.-0.70710678j, 0.+0.j],; [0. +0.j , 0. -0.70710678j,0.70710678+0.j, 0. +0.j],; [0.-0.70710678j, 0. +0.j , 0.+0.j , 0.70710678+0.j ]]))); ```; and something for N>3 if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505109850
https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:392,Deployability,update,updated,392,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471
https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:559,Deployability,update,updated,559,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471
https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:169,Testability,benchmark,benchmark,169,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471
https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:283,Testability,test,tests,283,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471
https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:414,Usability,guid,guide,414,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471
https://github.com/qutip/qutip/issues/1029#issuecomment-1345303687:38,Deployability,update,updated,38,The heterodyne stochastic example was updated as part of this year's GSoC tutorial renovation project. The updated notebook can be found at https://nbviewer.org/urls/qutip.org/qutip-tutorials/tutorials-v4/time-evolution/015_smesolve-heterodyne.ipynb. Thank you for reporting this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-1345303687
https://github.com/qutip/qutip/issues/1029#issuecomment-1345303687:107,Deployability,update,updated,107,The heterodyne stochastic example was updated as part of this year's GSoC tutorial renovation project. The updated notebook can be found at https://nbviewer.org/urls/qutip.org/qutip-tutorials/tutorials-v4/time-evolution/015_smesolve-heterodyne.ipynb. Thank you for reporting this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-1345303687
https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:17,Availability,error,error,17,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699
https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:130,Availability,error,error,130,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699
https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:210,Availability,down,down,210,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699
https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:23,Integrability,message,message,23,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699
https://github.com/qutip/qutip/issues/1030#issuecomment-574232335:45,Modifiability,plugin,plugin,45,"When I try it now, it says that the software plugin is incompatible with the OS, which is 10.14.5, Mojave.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-574232335
https://github.com/qutip/qutip/issues/1030#issuecomment-593426036:233,Deployability,install,install,233,The [workaround](https://stackoverflow.com/questions/58897928/macos-sdk-headers-for-macos-10-14-pkg-is-incompatible-with-this-version-of-maco) for me seems to be ; ```; sudo rm -rf /Library/Developer/CommandLineTools; xcode-select --install; cd /Library/Developer/CommandLineTools/Packages/; open macOS_SDK_headers_for_macOS_10.14.pkg; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-593426036
https://github.com/qutip/qutip/issues/1030#issuecomment-760023842:244,Deployability,install,install,244,> The [workaround](https://stackoverflow.com/questions/58897928/macos-sdk-headers-for-macos-10-14-pkg-is-incompatible-with-this-version-of-maco) for me seems to be; > ; > ```; > sudo rm -rf /Library/Developer/CommandLineTools; > xcode-select --install; > cd /Library/Developer/CommandLineTools/Packages/; > open macOS_SDK_headers_for_macOS_10.14.pkg; > ```. thank you!!!!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-760023842
https://github.com/qutip/qutip/issues/1030#issuecomment-760084316:571,Deployability,install,install,571,"For people finding this later, this is not just because of the macOS version, but also because of your _Xcode_ version. As Xcode increases, Apple are making it harder and harder to have a sensible dev environment for command-line tools when all you care about is building for your local machine. You may find that a system include like `_ctermid.h` is missing in the future - it won't always be `limits.h` - especially with Xcode 11+. Since M1 Macs (I assume - I don't have one) ship entirely with Xcode 12, they will likely need this too. I believe even `xcode-select --install` will not always reinstate `/usr/include` any more, and the `*_headers_*.pkg` seems to not work with Xcode 11. `/usr/include` is gone, but Xcode has the correct set of includes for all platforms, so you can set your compiler's `sysroot` to the relevant SDK directory to get correct lookups. By default, the one you want will be at; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MaxOSX.platform/Developer/SDKs/MacOSX.sdk; ```; The system `clang` will likely find this correctly, but if not or if you're using a separate compiler, for either `gcc` or `clang` you should pass the flag; ```bash; gcc -isysroot '/path/to/sdk' ...; ```; to find the correct includes. To automate this procedure, you may want to add that flag to your `CFLAGS` and `CPPFLAGS` environment variables. For example, you could put in your `.bashrc`; ```bash; export CFLAGS=""-isysroot '/path/to/sdk' ${CFLAGS}""; ```; to have it automatically added to all C compilations (after that file has been sourced).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-760084316
https://github.com/qutip/qutip/issues/1030#issuecomment-760084316:1354,Modifiability,variab,variables,1354,"For people finding this later, this is not just because of the macOS version, but also because of your _Xcode_ version. As Xcode increases, Apple are making it harder and harder to have a sensible dev environment for command-line tools when all you care about is building for your local machine. You may find that a system include like `_ctermid.h` is missing in the future - it won't always be `limits.h` - especially with Xcode 11+. Since M1 Macs (I assume - I don't have one) ship entirely with Xcode 12, they will likely need this too. I believe even `xcode-select --install` will not always reinstate `/usr/include` any more, and the `*_headers_*.pkg` seems to not work with Xcode 11. `/usr/include` is gone, but Xcode has the correct set of includes for all platforms, so you can set your compiler's `sysroot` to the relevant SDK directory to get correct lookups. By default, the one you want will be at; ```; /Applications/Xcode.app/Contents/Developer/Platforms/MaxOSX.platform/Developer/SDKs/MacOSX.sdk; ```; The system `clang` will likely find this correctly, but if not or if you're using a separate compiler, for either `gcc` or `clang` you should pass the flag; ```bash; gcc -isysroot '/path/to/sdk' ...; ```; to find the correct includes. To automate this procedure, you may want to add that flag to your `CFLAGS` and `CPPFLAGS` environment variables. For example, you could put in your `.bashrc`; ```bash; export CFLAGS=""-isysroot '/path/to/sdk' ${CFLAGS}""; ```; to have it automatically added to all C compilations (after that file has been sourced).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-760084316
https://github.com/qutip/qutip/issues/1030#issuecomment-769182608:125,Availability,error,error,125,"Hello @jakelishman sorry for hopping in, but I'm having the same problem and I'm desperate... I have xcode 10.3; This is THE error:; ```; /usr/local/Cellar/gcc/10.2.0_3/lib/gcc/10/gcc/x86_64-apple-darwin18/10.2.0/include-fixed/stdio.h:219:10: fatal error: _ctermid.h: No such file or directory; 219 | #include <_ctermid.h>; | ^~~~~~~~~~~~; ```; In the compile flags I see these:. ```; -I/usr/local/include ; -F/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks ; -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk; ```. I've tried all suggested above to reinstall all headers, but it's nowhere in my entire disk. ; do you have any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769182608
https://github.com/qutip/qutip/issues/1030#issuecomment-769182608:249,Availability,error,error,249,"Hello @jakelishman sorry for hopping in, but I'm having the same problem and I'm desperate... I have xcode 10.3; This is THE error:; ```; /usr/local/Cellar/gcc/10.2.0_3/lib/gcc/10/gcc/x86_64-apple-darwin18/10.2.0/include-fixed/stdio.h:219:10: fatal error: _ctermid.h: No such file or directory; 219 | #include <_ctermid.h>; | ^~~~~~~~~~~~; ```; In the compile flags I see these:. ```; -I/usr/local/include ; -F/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks ; -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk; ```. I've tried all suggested above to reinstall all headers, but it's nowhere in my entire disk. ; do you have any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769182608
https://github.com/qutip/qutip/issues/1030#issuecomment-769204657:34,Deployability,update,update,34,"I don't know if there was a macOS update or something, but my configuration has gone funny as well. I find now that using `gcc --sysroot=...` rather than `gcc -isysroot=...` (note the missing `i` and the doubled `--`) works. I'm not 100% sure why this is the case - as far as I'm aware, the only difference between `--sysroot` and `-isysroot` is just that the latter only applies to includes and the former is both libraries and includes - but it works for me right now. I must be wrong in some way about the difference. Hopefully that works for you on a temporary basis. I'm sure Apple will be along shortly to change everything else up for us again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769204657
https://github.com/qutip/qutip/issues/1030#issuecomment-769204657:62,Deployability,configurat,configuration,62,"I don't know if there was a macOS update or something, but my configuration has gone funny as well. I find now that using `gcc --sysroot=...` rather than `gcc -isysroot=...` (note the missing `i` and the doubled `--`) works. I'm not 100% sure why this is the case - as far as I'm aware, the only difference between `--sysroot` and `-isysroot` is just that the latter only applies to includes and the former is both libraries and includes - but it works for me right now. I must be wrong in some way about the difference. Hopefully that works for you on a temporary basis. I'm sure Apple will be along shortly to change everything else up for us again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769204657
https://github.com/qutip/qutip/issues/1030#issuecomment-769204657:62,Modifiability,config,configuration,62,"I don't know if there was a macOS update or something, but my configuration has gone funny as well. I find now that using `gcc --sysroot=...` rather than `gcc -isysroot=...` (note the missing `i` and the doubled `--`) works. I'm not 100% sure why this is the case - as far as I'm aware, the only difference between `--sysroot` and `-isysroot` is just that the latter only applies to includes and the former is both libraries and includes - but it works for me right now. I must be wrong in some way about the difference. Hopefully that works for you on a temporary basis. I'm sure Apple will be along shortly to change everything else up for us again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769204657
https://github.com/qutip/qutip/issues/1030#issuecomment-809712509:49,Availability,error,error,49,"Closing this now because it's not really a QuTiP error, just Apple being Apple.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-809712509
https://github.com/qutip/qutip/issues/1031#issuecomment-506789010:765,Deployability,update,updated,765,"fsa.py is the file analogous to [grape.py](https://github.com/qutip/qutip/blob/master/qutip/control/grape.py). ; tca.py is the example file (almost entirely based on this [notebook](https://github.com/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb) ) where I run it for a closed quantum system (as in the aforementioned [notebook](https://github.com/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb)).; otca.py, otca1.py and other otca*.py are files where I run them for various collapse operators.; tej_plotter.py is just a small python script file to save graphical representation of the final unitaries. > The explanation of the main idea is [here](https://www.dropbox.com/s/ris74oedclzm7vx/Qutip_open_grape.pdf?dl=0). An updated version will be found [here](https://www.overleaf.com/read/bdtqzhgtdkdq). file | output folder | collapse operator; ----|----------------|--------------------; tca.py | copA0 | none; otca.py| ocopA0 | $x\otimes y$; otca1.py| o1copA0 | $x\otimes y$, $y\otimes z$; otca2.py| o2copA0 | $y\otimes z$; otca3.py| o3copA0 | $z \otimes x $; otca4.py| o4copA0 | $x \otimes y $, $ z \otimes x$; otca5.py| o5copA0 | $z \otimes x $, $ y \otimes z$; otca6.py| o6copA0 | $ x \otimes y $, $ y \otimes z$, $ z \otimes x$",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-506789010
https://github.com/qutip/qutip/issues/1031#issuecomment-541810845:335,Integrability,depend,dependency,335,"Not sure if I can answer your specific question but I have used QUTIP GRAPE before. I would first suggest opening a pull request or linking to your fork, so it's easier to compare your modifications to the original code.; I have briefly looked at your code and I would suggest dropping numba as qutip doesn't currently have numba as a dependency. I am confused about why you choose the cnot notebook as your example? There is an example of quantum optimal control using open quantum systems, control-pulseoptim-Lindbladian.ipynb .; Nonetheless, I believe grape.py is definitely not the place to place your additional support for open quantum systems. Grape is an optimization method, you should be looking extending support for open quantum systems in the pulseoptim class.; If you are interested you can also take a look at the quantum optimal control tool I built, QUTIP's quantum optimal control didn't satisfy my needs. ; https://github.com/lifeishard/PADQOC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-541810845
https://github.com/qutip/qutip/issues/1031#issuecomment-541810845:706,Modifiability,extend,extending,706,"Not sure if I can answer your specific question but I have used QUTIP GRAPE before. I would first suggest opening a pull request or linking to your fork, so it's easier to compare your modifications to the original code.; I have briefly looked at your code and I would suggest dropping numba as qutip doesn't currently have numba as a dependency. I am confused about why you choose the cnot notebook as your example? There is an example of quantum optimal control using open quantum systems, control-pulseoptim-Lindbladian.ipynb .; Nonetheless, I believe grape.py is definitely not the place to place your additional support for open quantum systems. Grape is an optimization method, you should be looking extending support for open quantum systems in the pulseoptim class.; If you are interested you can also take a look at the quantum optimal control tool I built, QUTIP's quantum optimal control didn't satisfy my needs. ; https://github.com/lifeishard/PADQOC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-541810845
https://github.com/qutip/qutip/issues/1031#issuecomment-541810845:663,Performance,optimiz,optimization,663,"Not sure if I can answer your specific question but I have used QUTIP GRAPE before. I would first suggest opening a pull request or linking to your fork, so it's easier to compare your modifications to the original code.; I have briefly looked at your code and I would suggest dropping numba as qutip doesn't currently have numba as a dependency. I am confused about why you choose the cnot notebook as your example? There is an example of quantum optimal control using open quantum systems, control-pulseoptim-Lindbladian.ipynb .; Nonetheless, I believe grape.py is definitely not the place to place your additional support for open quantum systems. Grape is an optimization method, you should be looking extending support for open quantum systems in the pulseoptim class.; If you are interested you can also take a look at the quantum optimal control tool I built, QUTIP's quantum optimal control didn't satisfy my needs. ; https://github.com/lifeishard/PADQOC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-541810845
https://github.com/qutip/qutip/issues/1031#issuecomment-542520840:98,Integrability,wrap,wrap,98,"I have commented out numba. I agree with you that grape.py is not suitable, but I couldn't really wrap my head around the pulseoptim class. Hence, the code. I will have a look at https://github.com/lifeishard/PADQOC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-542520840
https://github.com/qutip/qutip/issues/1032#issuecomment-533145168:112,Performance,perform,performance,112,An example is given in this gist https://gist.github.com/nathanshammah/f96f6c1db5c323243a4729467cb7351f. ; Some performance benchmarking was done in PR #1024.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1032#issuecomment-533145168
https://github.com/qutip/qutip/issues/1032#issuecomment-533145168:124,Testability,benchmark,benchmarking,124,An example is given in this gist https://gist.github.com/nathanshammah/f96f6c1db5c323243a4729467cb7351f. ; Some performance benchmarking was done in PR #1024.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1032#issuecomment-533145168
https://github.com/qutip/qutip/issues/1032#issuecomment-533216900:310,Availability,error,errors,310,"Hi @nathanshammah ,. Indeed you are right, but I was concerned that with large Hilbert spaces as in my case storing the individual states at all measuring times would be simply unaffordable. That is why I was wondering if mcsolve could provide not only averaged observables but also the associated statistical errors. I hope this clarifies my problem. Thanks for the example too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1032#issuecomment-533216900
https://github.com/qutip/qutip/issues/1032#issuecomment-533216900:170,Usability,simpl,simply,170,"Hi @nathanshammah ,. Indeed you are right, but I was concerned that with large Hilbert spaces as in my case storing the individual states at all measuring times would be simply unaffordable. That is why I was wondering if mcsolve could provide not only averaged observables but also the associated statistical errors. I hope this clarifies my problem. Thanks for the example too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1032#issuecomment-533216900
https://github.com/qutip/qutip/pull/1034#issuecomment-507687196:23,Testability,test,tests,23,"Thank you, the failing tests were bugging me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1034#issuecomment-507687196
https://github.com/qutip/qutip/pull/1035#issuecomment-513787787:53,Testability,test,tests,53,This is in draft mode and cannot be merged. Only Mac tests are failing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1035#issuecomment-513787787
https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:897,Energy Efficiency,efficient,efficient,897,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514
https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:586,Integrability,depend,dependence,586,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514
https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:764,Integrability,depend,dependence,764,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514
https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:669,Modifiability,coupling,coupling,669,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514
https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:781,Usability,simpl,simplify,781,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514
https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:880,Usability,simpl,simpler,880,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514
https://github.com/qutip/qutip/issues/1038#issuecomment-536151814:66,Integrability,depend,dependent,66,My problem may be more serious. I cannot execute the demo of time-dependent in LZ transition. I guess it is the problem of OS. My platform is MAC OS 10.14 and GCC is 4.2.1. I don't have MS VS 2015. May the environment is not satisfied.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-536151814
https://github.com/qutip/qutip/issues/1038#issuecomment-607315509:60,Deployability,integrat,integration,60,"I also got some wrong result with mesolve, which uses ZVODE integration method. The mesolve raises no warning. But I was able to get the right result with ISODA method. . The situation was applying a Pi pulse(~50 ns) to the qubit and wait about 1000 ns and then apply another Pi pulse. The second Pi pulse had no effect for the final state.; I was using [qobj, func] pairs for the time dependent Hamiltonian, where func is the self-defined gate envelope.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509
https://github.com/qutip/qutip/issues/1038#issuecomment-607315509:60,Integrability,integrat,integration,60,"I also got some wrong result with mesolve, which uses ZVODE integration method. The mesolve raises no warning. But I was able to get the right result with ISODA method. . The situation was applying a Pi pulse(~50 ns) to the qubit and wait about 1000 ns and then apply another Pi pulse. The second Pi pulse had no effect for the final state.; I was using [qobj, func] pairs for the time dependent Hamiltonian, where func is the self-defined gate envelope.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509
https://github.com/qutip/qutip/issues/1038#issuecomment-607315509:386,Integrability,depend,dependent,386,"I also got some wrong result with mesolve, which uses ZVODE integration method. The mesolve raises no warning. But I was able to get the right result with ISODA method. . The situation was applying a Pi pulse(~50 ns) to the qubit and wait about 1000 ns and then apply another Pi pulse. The second Pi pulse had no effect for the final state.; I was using [qobj, func] pairs for the time dependent Hamiltonian, where func is the self-defined gate envelope.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-607315509
https://github.com/qutip/qutip/issues/1038#issuecomment-608335014:101,Modifiability,refactor,refactor,101,"No problem, but to create an example, I need extra time to unwrap the self-defined gate sequence and refactor my test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-608335014
https://github.com/qutip/qutip/issues/1038#issuecomment-608335014:113,Testability,test,test,113,"No problem, but to create an example, I need extra time to unwrap the self-defined gate sequence and refactor my test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-608335014
https://github.com/qutip/qutip/issues/1039#issuecomment-509709052:19,Deployability,install,installation,19,"Hi,; This a manual installation of the master branch?; Are you using the qutip tests in qutip.testing.run(), if so could you tell us which test is failing? (And which similar only are not.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052
https://github.com/qutip/qutip/issues/1039#issuecomment-509709052:79,Testability,test,tests,79,"Hi,; This a manual installation of the master branch?; Are you using the qutip tests in qutip.testing.run(), if so could you tell us which test is failing? (And which similar only are not.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052
https://github.com/qutip/qutip/issues/1039#issuecomment-509709052:94,Testability,test,testing,94,"Hi,; This a manual installation of the master branch?; Are you using the qutip tests in qutip.testing.run(), if so could you tell us which test is failing? (And which similar only are not.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052
https://github.com/qutip/qutip/issues/1039#issuecomment-509709052:139,Testability,test,test,139,"Hi,; This a manual installation of the master branch?; Are you using the qutip tests in qutip.testing.run(), if so could you tell us which test is failing? (And which similar only are not.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509709052
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:213,Availability,error,error,213,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:314,Availability,error,error,314,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:42,Deployability,install,installed,42,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:146,Deployability,install,installation,146,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:117,Testability,test,testing,117,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:134,Testability,test,test,134,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:197,Testability,test,testing,197,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:1067,Availability,error,error,1067,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:15,Deployability,install,installed,15,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:741,Deployability,Install,Installed,741,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:817,Deployability,Install,Installation,817,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:1078,Deployability,install,installing,1078,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:66,Testability,test,testing,66,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:1000,Testability,test,testing,1000,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092
https://github.com/qutip/qutip/issues/1039#issuecomment-519914331:31,Deployability,patch,patch,31,"This bug is only in 4.4.0, the patch has not been released yet.; Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; Or if you can install from source, the working version is in #1040",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519914331
https://github.com/qutip/qutip/issues/1039#issuecomment-519914331:50,Deployability,release,released,50,"This bug is only in 4.4.0, the patch has not been released yet.; Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; Or if you can install from source, the working version is in #1040",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519914331
https://github.com/qutip/qutip/issues/1039#issuecomment-519914331:166,Deployability,install,install,166,"This bug is only in 4.4.0, the patch has not been released yet.; Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; Or if you can install from source, the working version is in #1040",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519914331
https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:228,Availability,down,download,228,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711
https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:33,Deployability,patch,patch,33,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711
https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:52,Deployability,release,released,52,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711
https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:172,Deployability,install,install,172,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711
https://github.com/qutip/qutip/issues/1039#issuecomment-520089216:136,Deployability,release,released,136,See https://github.com/qutip/qutip/pull/1069; The code is (until merged) at https://github.com/qutip/qutip/tree/qutip-4.4.1.; Should be released next week.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-520089216
https://github.com/qutip/qutip/issues/1039#issuecomment-520215959:55,Availability,error,error,55,The version at the last link posted also gives me this error. Should that have been fixed in there?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-520215959
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:15,Availability,error,errors,15,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:115,Availability,error,errors,115,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:141,Availability,error,errors,141,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:195,Availability,ERROR,ERROR,195,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:241,Availability,ERROR,ERROR,241,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:304,Availability,ERROR,ERROR,304,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:363,Availability,ERROR,ERROR,363,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:424,Availability,ERROR,ERROR,424,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:475,Availability,ERROR,ERROR,475,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:513,Availability,ERROR,ERROR,513,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:551,Availability,ERROR,ERROR,551,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:589,Availability,ERROR,ERROR,589,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:647,Availability,ERROR,ERROR,647,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:692,Availability,ERROR,ERROR,692,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:734,Availability,ERROR,ERROR,734,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:221,Integrability,depend,dependent,221,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:267,Integrability,depend,dependent,267,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:330,Integrability,depend,dependent,330,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:389,Integrability,depend,dependent,389,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:40,Testability,test,test,40,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:185,Testability,test,tests,185,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315
https://github.com/qutip/qutip/issues/1039#issuecomment-526840351:16,Availability,error,errors,16,"HI, I have some errors similar to these, and I don't know how to solve it. Is there anyone will face these problems if installing on windows?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351
https://github.com/qutip/qutip/issues/1039#issuecomment-526840351:119,Deployability,install,installing,119,"HI, I have some errors similar to these, and I don't know how to solve it. Is there anyone will face these problems if installing on windows?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351
https://github.com/qutip/qutip/issues/1039#issuecomment-532255000:64,Deployability,release,release,64,"Hi @saiyagami, thanks. Are these still occurring with the 4.4.1 release?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-532255000
https://github.com/qutip/qutip/pull/1042#issuecomment-511349101:22,Testability,test,tests,22,"As @BoxiLi noted, Mac tests are passing for this PR. I ran them twice to check and they passed. This would solve issue #963.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1042#issuecomment-511349101
https://github.com/qutip/qutip/pull/1042#issuecomment-511355307:106,Testability,test,test,106,"@nathanshammah I think it has nothing to do with this PR, I didn't change anything in `qobj.py` where the test failed before. I guess it might have something to do with Erig's commit ""mac without mkl"" and I simply merged it from master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1042#issuecomment-511355307
https://github.com/qutip/qutip/pull/1042#issuecomment-511355307:207,Usability,simpl,simply,207,"@nathanshammah I think it has nothing to do with this PR, I didn't change anything in `qobj.py` where the test failed before. I guess it might have something to do with Erig's commit ""mac without mkl"" and I simply merged it from master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1042#issuecomment-511355307
https://github.com/qutip/qutip/pull/1043#issuecomment-511327483:29,Deployability,update,update,29,I should have opened a PR to update the qip_opt branch instead of the master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1043#issuecomment-511327483
https://github.com/qutip/qutip/pull/1045#issuecomment-511490539:144,Energy Efficiency,green,green,144,"Also, there are two codeclimate issues. One on a blank space and one about a long line. Could you please take a look and change them to get the green on this. :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1045#issuecomment-511490539
https://github.com/qutip/qutip/pull/1045#issuecomment-514213043:10,Testability,test,tests,10,Travis CI tests are passing. Codeclimate issues actually come from improved lines beyond the purity fucntion. cc @quantshah,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1045#issuecomment-514213043
https://github.com/qutip/qutip/pull/1046#issuecomment-514997016:23,Modifiability,refactor,refactored,23,"In the latest commit I refactored the `entropy_vn_dicke` and `purity_dicke` functions in terms of a more general function, `dicke_trace`, which accounts for adding with the correct weight the blocks of a density matrix in the Dicke basis. The `dicke_trace` function can be used by other similarly nonlinear functions that involve taking the trace of a Taylor-expandable function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-514997016
https://github.com/qutip/qutip/pull/1046#issuecomment-529472381:310,Energy Efficiency,green,green,310,"Thanks Nathan. Lets see if the tests pass. Meanwhile, perhaps you could do `black -l 79` to keep the lines only 79 characters long. Also there are some trailing white spaces and spaces in a blank line which seem not to be picked up by black. Could you please quickly check that so that we get the code climate green check? If not then we can still merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529472381
https://github.com/qutip/qutip/pull/1046#issuecomment-529472381:31,Testability,test,tests,31,"Thanks Nathan. Lets see if the tests pass. Meanwhile, perhaps you could do `black -l 79` to keep the lines only 79 characters long. Also there are some trailing white spaces and spaces in a blank line which seem not to be picked up by black. Could you please quickly check that so that we get the code climate green check? If not then we can still merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529472381
https://github.com/qutip/qutip/pull/1046#issuecomment-529485255:165,Usability,guid,guidelines,165,"@quantshah: what about if we make a PR uniforming all code in QuTiP with `black` and automatically enforce also the 79 line limit? Also, what about adding it to the guidelines for contributions?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529485255
https://github.com/qutip/qutip/pull/1046#issuecomment-529505406:220,Testability,test,tests,220,I am not completely familiar with black yet and how much it adheres to pep8 so I will keep that for a big PR some other time. Right now we can slowly start blacking our code for the new modules. . This PR passes all the tests so I will be happy to merge.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529505406
https://github.com/qutip/qutip/issues/1047#issuecomment-514266203:77,Deployability,release,release,77,"As #1049 has been merged, I’m going to assume this will be fixed in the next release. Closing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1047#issuecomment-514266203
https://github.com/qutip/qutip/issues/1048#issuecomment-515517733:50,Deployability,patch,patch,50,"Hi taw181,. Thank you for reporting the bug.; The patch will probably take some time to make and publish. ; A work around for now would be to use string based coefficient. Use `(t)` instead of t in the string, there is another bug in the string shifting code. -------------------------------------------------------------------------------------------; Self notes. The function _transform_L_t_shift of correlation.py has at least 2 bugs:; - lambda have side-effect when defined in loop:; ```; H = [0,1,2]; H_shift = []; for i in range(len(H)):; fn = lambda _: H[i]; H_shift.append(fn); ; for f in H_shift:; print(f(0)); ```; Using class is safer and can be used safely in parallel. - The shift is not applied properly to string when ""t"" is the first or last character of the string coefficient. Could/should this shift capacity be made part of QobjEvo?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1048#issuecomment-515517733
https://github.com/qutip/qutip/issues/1048#issuecomment-515517733:640,Safety,safe,safer,640,"Hi taw181,. Thank you for reporting the bug.; The patch will probably take some time to make and publish. ; A work around for now would be to use string based coefficient. Use `(t)` instead of t in the string, there is another bug in the string shifting code. -------------------------------------------------------------------------------------------; Self notes. The function _transform_L_t_shift of correlation.py has at least 2 bugs:; - lambda have side-effect when defined in loop:; ```; H = [0,1,2]; H_shift = []; for i in range(len(H)):; fn = lambda _: H[i]; H_shift.append(fn); ; for f in H_shift:; print(f(0)); ```; Using class is safer and can be used safely in parallel. - The shift is not applied properly to string when ""t"" is the first or last character of the string coefficient. Could/should this shift capacity be made part of QobjEvo?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1048#issuecomment-515517733
https://github.com/qutip/qutip/issues/1048#issuecomment-515517733:662,Safety,safe,safely,662,"Hi taw181,. Thank you for reporting the bug.; The patch will probably take some time to make and publish. ; A work around for now would be to use string based coefficient. Use `(t)` instead of t in the string, there is another bug in the string shifting code. -------------------------------------------------------------------------------------------; Self notes. The function _transform_L_t_shift of correlation.py has at least 2 bugs:; - lambda have side-effect when defined in loop:; ```; H = [0,1,2]; H_shift = []; for i in range(len(H)):; fn = lambda _: H[i]; H_shift.append(fn); ; for f in H_shift:; print(f(0)); ```; Using class is safer and can be used safely in parallel. - The shift is not applied properly to string when ""t"" is the first or last character of the string coefficient. Could/should this shift capacity be made part of QobjEvo?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1048#issuecomment-515517733
https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:252,Deployability,Continuous,Continuous,252,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964
https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:263,Deployability,Integrat,Integration,263,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964
https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:263,Integrability,Integrat,Integration,263,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964
https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:346,Integrability,message,message,346,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964
https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:327,Testability,test,tests,327,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964
https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:70,Usability,guid,guidelines,70,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964
https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:435,Deployability,Continuous,Continuous,435,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973
https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:449,Deployability,Integrat,Integration,449,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973
https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:449,Integrability,Integrat,Integration,449,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973
https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:535,Integrability,message,message,535,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973
https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:513,Testability,test,tests,513,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973
https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:244,Usability,guid,guidelines,244,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973
https://github.com/qutip/qutip/pull/1050#issuecomment-513900719:98,Testability,test,test,98,"@Ericgig Thanks for the review and comments. I'll make some improvement accordingly. 1. About the test, I think the very last test I added in `test_mesolve`, the case of ""mixed callable"", uses the `scipy.interpolate.interp1d`. But I agree with you that there should be a separate test in `test_qobjevo` for calling the coefficients. I'll add a test similar to `test_QobjEvo_call` for the step coefficient case.; 2. About that ""move out"", I mean move out the `_binary_search` inside functions as `_spline_complex_t_second`. . To be more concrete, for example, in `InterCoeffT` we have the following:; ```; cdef void _call_core(self, double t, complex* coeff):; cdef int i; for i in range(self._num_ops):; coeff[i] = _spline_complex_t_second(t, self.tlist,; self.y[i,:], self.M[i,:], self.n_t); ```; For the same time `t` and `tlist`, we call `_spline_complex_t_second` multiple times. Each time we call it, it will have to do a `_binary_search` for `t` in `tlist`, which has complexity log(`len(tlist)`). But since `t` and `tlist` does not change in the function, it's enough to do it only once outside the loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1050#issuecomment-513900719
https://github.com/qutip/qutip/pull/1050#issuecomment-513900719:126,Testability,test,test,126,"@Ericgig Thanks for the review and comments. I'll make some improvement accordingly. 1. About the test, I think the very last test I added in `test_mesolve`, the case of ""mixed callable"", uses the `scipy.interpolate.interp1d`. But I agree with you that there should be a separate test in `test_qobjevo` for calling the coefficients. I'll add a test similar to `test_QobjEvo_call` for the step coefficient case.; 2. About that ""move out"", I mean move out the `_binary_search` inside functions as `_spline_complex_t_second`. . To be more concrete, for example, in `InterCoeffT` we have the following:; ```; cdef void _call_core(self, double t, complex* coeff):; cdef int i; for i in range(self._num_ops):; coeff[i] = _spline_complex_t_second(t, self.tlist,; self.y[i,:], self.M[i,:], self.n_t); ```; For the same time `t` and `tlist`, we call `_spline_complex_t_second` multiple times. Each time we call it, it will have to do a `_binary_search` for `t` in `tlist`, which has complexity log(`len(tlist)`). But since `t` and `tlist` does not change in the function, it's enough to do it only once outside the loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1050#issuecomment-513900719
https://github.com/qutip/qutip/pull/1050#issuecomment-513900719:280,Testability,test,test,280,"@Ericgig Thanks for the review and comments. I'll make some improvement accordingly. 1. About the test, I think the very last test I added in `test_mesolve`, the case of ""mixed callable"", uses the `scipy.interpolate.interp1d`. But I agree with you that there should be a separate test in `test_qobjevo` for calling the coefficients. I'll add a test similar to `test_QobjEvo_call` for the step coefficient case.; 2. About that ""move out"", I mean move out the `_binary_search` inside functions as `_spline_complex_t_second`. . To be more concrete, for example, in `InterCoeffT` we have the following:; ```; cdef void _call_core(self, double t, complex* coeff):; cdef int i; for i in range(self._num_ops):; coeff[i] = _spline_complex_t_second(t, self.tlist,; self.y[i,:], self.M[i,:], self.n_t); ```; For the same time `t` and `tlist`, we call `_spline_complex_t_second` multiple times. Each time we call it, it will have to do a `_binary_search` for `t` in `tlist`, which has complexity log(`len(tlist)`). But since `t` and `tlist` does not change in the function, it's enough to do it only once outside the loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1050#issuecomment-513900719
https://github.com/qutip/qutip/pull/1050#issuecomment-513900719:344,Testability,test,test,344,"@Ericgig Thanks for the review and comments. I'll make some improvement accordingly. 1. About the test, I think the very last test I added in `test_mesolve`, the case of ""mixed callable"", uses the `scipy.interpolate.interp1d`. But I agree with you that there should be a separate test in `test_qobjevo` for calling the coefficients. I'll add a test similar to `test_QobjEvo_call` for the step coefficient case.; 2. About that ""move out"", I mean move out the `_binary_search` inside functions as `_spline_complex_t_second`. . To be more concrete, for example, in `InterCoeffT` we have the following:; ```; cdef void _call_core(self, double t, complex* coeff):; cdef int i; for i in range(self._num_ops):; coeff[i] = _spline_complex_t_second(t, self.tlist,; self.y[i,:], self.M[i,:], self.n_t); ```; For the same time `t` and `tlist`, we call `_spline_complex_t_second` multiple times. Each time we call it, it will have to do a `_binary_search` for `t` in `tlist`, which has complexity log(`len(tlist)`). But since `t` and `tlist` does not change in the function, it's enough to do it only once outside the loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1050#issuecomment-513900719
https://github.com/qutip/qutip/pull/1050#issuecomment-513900719:985,Testability,log,log,985,"@Ericgig Thanks for the review and comments. I'll make some improvement accordingly. 1. About the test, I think the very last test I added in `test_mesolve`, the case of ""mixed callable"", uses the `scipy.interpolate.interp1d`. But I agree with you that there should be a separate test in `test_qobjevo` for calling the coefficients. I'll add a test similar to `test_QobjEvo_call` for the step coefficient case.; 2. About that ""move out"", I mean move out the `_binary_search` inside functions as `_spline_complex_t_second`. . To be more concrete, for example, in `InterCoeffT` we have the following:; ```; cdef void _call_core(self, double t, complex* coeff):; cdef int i; for i in range(self._num_ops):; coeff[i] = _spline_complex_t_second(t, self.tlist,; self.y[i,:], self.M[i,:], self.n_t); ```; For the same time `t` and `tlist`, we call `_spline_complex_t_second` multiple times. Each time we call it, it will have to do a `_binary_search` for `t` in `tlist`, which has complexity log(`len(tlist)`). But since `t` and `tlist` does not change in the function, it's enough to do it only once outside the loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1050#issuecomment-513900719
https://github.com/qutip/qutip/pull/1050#issuecomment-514654597:147,Performance,bottleneck,bottleneck,147,"Moving out _binary_search would could be done, but I don't believe it will make visible speed increase. I most cases the matrix operations are the bottleneck. Fused types are a good idea, but if you still have a lot to do in your project, they are not a priority.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1050#issuecomment-514654597
https://github.com/qutip/qutip/pull/1053#issuecomment-513148589:14,Testability,test,tests,14,@sbisw002 the tests by Travis CI are failing on all operating systems.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1053#issuecomment-513148589
https://github.com/qutip/qutip/pull/1058#issuecomment-516436835:270,Availability,error,errors,270,"`dims` is an argument of all random Qobj creator, we should keep it.; It should be in [[m,n],[1,1]] format. documentation is not clear / wrong. If used with this format, it does work, but the check and documentation indicate to use [[n,m]] which is wrong and will cause errors. What I was thinking was something along the line of:; ```; def rand_ket(N=0, ...) : ; if not N: ; N = np.prod(dims[0]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1058#issuecomment-516436835
https://github.com/qutip/qutip/pull/1058#issuecomment-516436835:129,Usability,clear,clear,129,"`dims` is an argument of all random Qobj creator, we should keep it.; It should be in [[m,n],[1,1]] format. documentation is not clear / wrong. If used with this format, it does work, but the check and documentation indicate to use [[n,m]] which is wrong and will cause errors. What I was thinking was something along the line of:; ```; def rand_ket(N=0, ...) : ; if not N: ; N = np.prod(dims[0]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1058#issuecomment-516436835
https://github.com/qutip/qutip/pull/1058#issuecomment-518337579:210,Deployability,patch,patch-,210,[![Coverage Status](https://coveralls.io/builds/24995156/badge)](https://coveralls.io/builds/24995156). Coverage increased (+0.01%) to 71.788% when pulling **df9d7c97402f4a8b1d675190fd4e8ed632114cd3 on yarrriv:patch-1** into **181a98e910a1f34bb29be31b91d61f765d6c5a37 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1058#issuecomment-518337579
https://github.com/qutip/qutip/issues/1063#issuecomment-518022521:290,Deployability,release,release,290,"Hi goerz,; Qobj are build on top of scipy's sparse matrix are were affected by this behaviour that appeared in scipy 1.3.0. We have some similar workarround in the code right now. ; I raised an issue in scipy for it and is was taged as a defect. (#10206) So it should be solved in the next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1063#issuecomment-518022521
https://github.com/qutip/qutip/issues/1063#issuecomment-532277455:2,Testability,test,tested,2,I tested the `CNOT` snippet and the results were the same of 4.3.1. Feel free to re-open if this is not fixed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1063#issuecomment-532277455
https://github.com/qutip/qutip/pull/1065#issuecomment-522978891:31,Usability,clear,clear,31,"@ajgpitch Hi, it should be all clear now. Tell me if there is any new issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-522978891
https://github.com/qutip/qutip/pull/1065#issuecomment-527430941:9,Availability,error,error,9,I get an error `error: command 'gcc' failed with exit status 1` if I try `python setup.py install` or `develop`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941
https://github.com/qutip/qutip/pull/1065#issuecomment-527430941:16,Availability,error,error,16,I get an error `error: command 'gcc' failed with exit status 1` if I try `python setup.py install` or `develop`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941
https://github.com/qutip/qutip/pull/1065#issuecomment-527430941:90,Deployability,install,install,90,I get an error `error: command 'gcc' failed with exit status 1` if I try `python setup.py install` or `develop`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941
https://github.com/qutip/qutip/pull/1065#issuecomment-527433444:31,Availability,error,error,31,The problem arises from `fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */`. Something I think @quantshah or someone else might have fixed some time ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433444
https://github.com/qutip/qutip/pull/1065#issuecomment-527433444:111,Availability,down,down,111,The problem arises from `fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */`. Something I think @quantshah or someone else might have fixed some time ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433444
https://github.com/qutip/qutip/pull/1065#issuecomment-527433833:41,Deployability,install,install,41,"I tried a fresh conda environment `conda install gcc cython numpy scipy` etc. Still, the tests pass on Travis CI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433833
https://github.com/qutip/qutip/pull/1065#issuecomment-527433833:89,Testability,test,tests,89,"I tried a fresh conda environment `conda install gcc cython numpy scipy` etc. Still, the tests pass on Travis CI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433833
https://github.com/qutip/qutip/pull/1065#issuecomment-537843702:209,Availability,failure,failures,209,"@BoxiLi I am happy with the code in this PR now. Great work.; Can you resolve the merge conflicts? I am guessing this is why we don't see the Travis test results. I am not concerned about the CodeClimate test failures. Might be worth commenting on this:; 'Function adjacent_gates has a Cognitive Complexity of 142 (exceeds 5 allowed).' ; though, as it's an order of magnitude beyond the rest :-). Thanks, Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702
https://github.com/qutip/qutip/pull/1065#issuecomment-537843702:149,Testability,test,test,149,"@BoxiLi I am happy with the code in this PR now. Great work.; Can you resolve the merge conflicts? I am guessing this is why we don't see the Travis test results. I am not concerned about the CodeClimate test failures. Might be worth commenting on this:; 'Function adjacent_gates has a Cognitive Complexity of 142 (exceeds 5 allowed).' ; though, as it's an order of magnitude beyond the rest :-). Thanks, Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702
https://github.com/qutip/qutip/pull/1065#issuecomment-537843702:204,Testability,test,test,204,"@BoxiLi I am happy with the code in this PR now. Great work.; Can you resolve the merge conflicts? I am guessing this is why we don't see the Travis test results. I am not concerned about the CodeClimate test failures. Might be worth commenting on this:; 'Function adjacent_gates has a Cognitive Complexity of 142 (exceeds 5 allowed).' ; though, as it's an order of magnitude beyond the rest :-). Thanks, Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702
https://github.com/qutip/qutip/pull/1065#issuecomment-545613325:209,Modifiability,refactor,refactoring,209,"Hi Alex and Nathan, thanks for the suggestions, I have resolved the confliction. @ajgpitch Regarding the function `adjacent_gates`. It was there before, I just moved it around. I'm also not happy with it, but refactoring this function needs some careful analysis.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-545613325
https://github.com/qutip/qutip/pull/1066#issuecomment-525362478:31,Testability,test,tests,31,"Thanks for all this. Travis CI tests fail at `""Test the method Lattice1d.k()""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-525362478
https://github.com/qutip/qutip/pull/1066#issuecomment-525362478:47,Testability,Test,Test,47,"Thanks for all this. Travis CI tests fail at `""Test the method Lattice1d.k()""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-525362478
https://github.com/qutip/qutip/pull/1066#issuecomment-533771943:352,Modifiability,variab,variables,352,"@sbisw002 All contributions to QuTiP must follow the pep8 standard. You should read https://www.python.org/dev/peps/pep-0008/, especially the section on naming conventions. I see @nathanshammah has made some specific comments along these lines, but there are too many examples to begin to comment on them. But in general, we like descriptive names for variables. One exception we have to pep8 is that we allow some use of capital letters in variable names, but only at the start, as this relates well to the corresponding mathematics. We reserve these for operators and matrices (in the mathematical sense), so for instance `H` is ok for a Hamiltonian, but `N` is not okay for an integer. `H_cell` is also fine, but `cellH` or `cell_H` is not. All caps are not to be used for anything. If you wish to abbreviate 'periodic boundary condition', then `pbc` would be ok as a local variable, but not as an attribute name, `period_bnd_cond` would be good. I am sorry if this seems a little late in the day, but this is covered in https://github.com/qutip/qutip/wiki/QuTiP-Development-Guidelines and this document https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md was linked in our GSoC page. Coding standards are *very* important, it where quality begins.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-533771943
https://github.com/qutip/qutip/pull/1066#issuecomment-533771943:441,Modifiability,variab,variable,441,"@sbisw002 All contributions to QuTiP must follow the pep8 standard. You should read https://www.python.org/dev/peps/pep-0008/, especially the section on naming conventions. I see @nathanshammah has made some specific comments along these lines, but there are too many examples to begin to comment on them. But in general, we like descriptive names for variables. One exception we have to pep8 is that we allow some use of capital letters in variable names, but only at the start, as this relates well to the corresponding mathematics. We reserve these for operators and matrices (in the mathematical sense), so for instance `H` is ok for a Hamiltonian, but `N` is not okay for an integer. `H_cell` is also fine, but `cellH` or `cell_H` is not. All caps are not to be used for anything. If you wish to abbreviate 'periodic boundary condition', then `pbc` would be ok as a local variable, but not as an attribute name, `period_bnd_cond` would be good. I am sorry if this seems a little late in the day, but this is covered in https://github.com/qutip/qutip/wiki/QuTiP-Development-Guidelines and this document https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md was linked in our GSoC page. Coding standards are *very* important, it where quality begins.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-533771943
https://github.com/qutip/qutip/pull/1066#issuecomment-533771943:877,Modifiability,variab,variable,877,"@sbisw002 All contributions to QuTiP must follow the pep8 standard. You should read https://www.python.org/dev/peps/pep-0008/, especially the section on naming conventions. I see @nathanshammah has made some specific comments along these lines, but there are too many examples to begin to comment on them. But in general, we like descriptive names for variables. One exception we have to pep8 is that we allow some use of capital letters in variable names, but only at the start, as this relates well to the corresponding mathematics. We reserve these for operators and matrices (in the mathematical sense), so for instance `H` is ok for a Hamiltonian, but `N` is not okay for an integer. `H_cell` is also fine, but `cellH` or `cell_H` is not. All caps are not to be used for anything. If you wish to abbreviate 'periodic boundary condition', then `pbc` would be ok as a local variable, but not as an attribute name, `period_bnd_cond` would be good. I am sorry if this seems a little late in the day, but this is covered in https://github.com/qutip/qutip/wiki/QuTiP-Development-Guidelines and this document https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md was linked in our GSoC page. Coding standards are *very* important, it where quality begins.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-533771943
https://github.com/qutip/qutip/pull/1066#issuecomment-533771943:1078,Usability,Guid,Guidelines,1078,"@sbisw002 All contributions to QuTiP must follow the pep8 standard. You should read https://www.python.org/dev/peps/pep-0008/, especially the section on naming conventions. I see @nathanshammah has made some specific comments along these lines, but there are too many examples to begin to comment on them. But in general, we like descriptive names for variables. One exception we have to pep8 is that we allow some use of capital letters in variable names, but only at the start, as this relates well to the corresponding mathematics. We reserve these for operators and matrices (in the mathematical sense), so for instance `H` is ok for a Hamiltonian, but `N` is not okay for an integer. `H_cell` is also fine, but `cellH` or `cell_H` is not. All caps are not to be used for anything. If you wish to abbreviate 'periodic boundary condition', then `pbc` would be ok as a local variable, but not as an attribute name, `period_bnd_cond` would be good. I am sorry if this seems a little late in the day, but this is covered in https://github.com/qutip/qutip/wiki/QuTiP-Development-Guidelines and this document https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md was linked in our GSoC page. Coding standards are *very* important, it where quality begins.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-533771943
https://github.com/qutip/qutip/pull/1066#issuecomment-566115376:18,Deployability,update,update,18,"Hi @sbisw002, any update on this PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-566115376
https://github.com/qutip/qutip/pull/1066#issuecomment-568178589:108,Modifiability,variab,variable,108,"@nathanshammah @ajgpitch @Ericgig @quantshah ; Thanks a lot for the feedback and patience. I have fixed the variable names issue, hopefully. I can make time these days. Please advise the next steps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-568178589
https://github.com/qutip/qutip/pull/1066#issuecomment-568178589:68,Usability,feedback,feedback,68,"@nathanshammah @ajgpitch @Ericgig @quantshah ; Thanks a lot for the feedback and patience. I have fixed the variable names issue, hopefully. I can make time these days. Please advise the next steps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-568178589
https://github.com/qutip/qutip/pull/1066#issuecomment-568514837:175,Testability,test,test,175,"The ""no cython"" case fail because it's using scipy 1.4 an not 1.3. A deprecation warning in a function called at each iteration of a solver is causing so much output that the test give up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-568514837
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:58,Testability,test,tests,58,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:131,Testability,test,test,131,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:248,Testability,Test,Test,248,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:438,Testability,test,test-environment,438,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:525,Testability,test,test,525,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:576,Testability,test,test-environment,576,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:675,Testability,test,tests,675,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:810,Testability,test,test-environment,810,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:861,Testability,test,testing,861,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:916,Testability,Assert,AssertionError,916,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:938,Testability,Assert,AssertionError,938,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575495617:1034,Testability,test,tests,1034,"@sbisw002 can you do a small change so that we see if the tests fail also with `pytest`?; The current fail in OpenBLAS is due to a test in this new module. Please just scrap what is not working so that we can merge this soon. ; ```; FAIL: lattice: Test the methods of Lattice1d in a CROW model.; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+7dcd9be-py3.7-linux-x86_64.egg/qutip/tests/test_lattice.py"", line 580, in test_CROW; assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/numpy/testing/_private/utils.py"", line 98, in assert_; raise AssertionError(smsg); AssertionError; ----------------------------------------------------------------------; Ran 663 tests in 1006.646s; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575495617
https://github.com/qutip/qutip/pull/1066#issuecomment-575498008:121,Integrability,depend,depends,121,"@nathanshammah I changed the precision limit in ""assert_(np.max(abs(val_kns-Ana_val_kns)) < 1.0E-13)"" since I noticed it depends on the machine I run it on. I pushed a new commit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575498008
https://github.com/qutip/qutip/pull/1066#issuecomment-575498581:66,Availability,error,errors,66,"I would not worry too much about codeclimate, but:; - some of the errors are arising due to trailing whitespaces. This is an easy fix; - in some cases, the ""cognitive complexity"" is very high. For example here:; ```; __init__ has a Cognitive Complexity of 68 (exceeds 5 allowed).; ```; Maybe it is worth considering some code refactoring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575498581
https://github.com/qutip/qutip/pull/1066#issuecomment-575498581:326,Modifiability,refactor,refactoring,326,"I would not worry too much about codeclimate, but:; - some of the errors are arising due to trailing whitespaces. This is an easy fix; - in some cases, the ""cognitive complexity"" is very high. For example here:; ```; __init__ has a Cognitive Complexity of 68 (exceeds 5 allowed).; ```; Maybe it is worth considering some code refactoring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575498581
https://github.com/qutip/qutip/pull/1066#issuecomment-575514599:254,Availability,error,errors,254,"@nathanshammah, everything seems to be working now! I fixed the small code-climate issues. I am pushing another commit with the changes. However, I am not eager to change __init__ function which has protective measures against a number of possible input errors and I do not even remember all of them readily.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575514599
https://github.com/qutip/qutip/issues/1067#issuecomment-519446924:34,Availability,error,error,34,"Here's a code that reproduces the error for me (taken from an earlier GitHub issue for qutip):; import qutip as q. ```; import qutip as q; #consider two coupled spin L and S; Lval = 1; Sval = 0.5. [Lx,Ly,Lz] = map(lambda x: q.tensor(x, q.qeye(2*Sval+1)),q.jmat(Lval)); [Sx,Sy,Sz] = map(lambda x: q.tensor(q.qeye(2*Lval+1), x),q.jmat(Sval)). Jx = Lx + Sx; Jy = Ly + Sy; Jz = Lz + Sz. Lsq = Lx*Lx + Ly*Ly + Lz*Lz; Ssq = Sx*Sx + Sy*Sy + Sz*Sz; Jsq = Jx*Jx + Jy*Jy + Jz*Jz. q.simdiag([Lsq,Ssq,Jsq,Jz]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-519446924
https://github.com/qutip/qutip/issues/1067#issuecomment-520054549:107,Deployability,release,released,107,"Thank you for reporting, should work in 4.4.1 ; https://github.com/qutip/qutip/tree/qutip-4.4.1 (Should be released next week).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-520054549
https://github.com/qutip/qutip/issues/1067#issuecomment-532275966:2,Testability,test,tested,2,I tested that this snippet now runs on qutip 4.4.1.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-532275966
https://github.com/qutip/qutip/issues/1071#issuecomment-520490526:76,Availability,error,error,76,"Code in `__init__.py` is executed on import, including printing and raising error.; But I don't know if we can differ between import methods (`import qutip` vs `from qutip import *`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520490526
https://github.com/qutip/qutip/issues/1071#issuecomment-520506756:548,Availability,error,error,548,"I find Python's `collections` module a good example (https://docs.python.org/3/library/collections.html). Python moved Collections Abstract Base Classes like `Iterable` to the `collections.abc` submodule. In python3.7, . The following code still works but there will be a deprecation warning; ```; from collections import Iterable; ```; ```; import collections; collections.Iterable; ```. It won't disturb other users since there is no warning when; ```; import collections; ```; ```; from collections import *; ```. But the following will give an error, ; ```; >>> from collections import *; >>> Iterable; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'Iterable' is not defined; ```; So for those who use ``from qutip import *``, they still don't know what happens. I'm not sure if it is possible to add a deprecation warning for this case separately. Maybe we can modify the top-level __init__.py so that we `qip` function is imported directly with the `qutip` namespace, it is wrapped with a deprecation warning. In this way, the warning only shows when the functions are called. Not sure if this is practical, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756
https://github.com/qutip/qutip/issues/1071#issuecomment-520506756:1023,Integrability,wrap,wrapped,1023,"I find Python's `collections` module a good example (https://docs.python.org/3/library/collections.html). Python moved Collections Abstract Base Classes like `Iterable` to the `collections.abc` submodule. In python3.7, . The following code still works but there will be a deprecation warning; ```; from collections import Iterable; ```; ```; import collections; collections.Iterable; ```. It won't disturb other users since there is no warning when; ```; import collections; ```; ```; from collections import *; ```. But the following will give an error, ; ```; >>> from collections import *; >>> Iterable; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'Iterable' is not defined; ```; So for those who use ``from qutip import *``, they still don't know what happens. I'm not sure if it is possible to add a deprecation warning for this case separately. Maybe we can modify the top-level __init__.py so that we `qip` function is imported directly with the `qutip` namespace, it is wrapped with a deprecation warning. In this way, the warning only shows when the functions are called. Not sure if this is practical, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:23,Integrability,wrap,wrapping,23,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:146,Integrability,wrap,wraps,146,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:203,Integrability,wrap,wrapping,203,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:276,Integrability,wrap,wraps-do,276,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:329,Integrability,wrap,wraps,329,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:569,Integrability,wrap,wraps,569,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-521029871:614,Integrability,wrap,wraps,614,"This could be a way of wrapping all the qip functions in `__init__.py` with a deprecation warning without disturbing other users. I use functools.wraps to make all the name, doc attributes come with the wrapping. https://stackoverflow.com/questions/308999/what-does-functools-wraps-do; ```; import inspect; from functools import wraps; import warnings; import qutip.qip as qip. # all the functions in qutip; func_pairs = inspect.getmembers(qip, inspect.isfunction); # choose cnot as an example; qip_cnot = func_pairs[1][1]. def qip_func_wrapper(func):; # use functools.wraps so that help(cnot) give correct doc.; @wraps(func); def deprecated_func(*args, **kwargs):; warnings.warn(; ""Importing functions from the `qip` module under ""; ""the namespace `qutip` will be deprecated, please use from ""; ""`qutip.qip import {}` instead."".format(; func.__name__, func.__name__),; DeprecationWarning); return func(*args, **kwargs); return deprecated_func. cnot = qip_func_wrapper(qip_cnot); ```; It will only give a deprecation warning when `cnot` imported under the namespace of `qutip` is called It should be possible to write something similar for class objects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-521029871
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:932,Integrability,inject,injects,932,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:243,Safety,detect,detecting,243,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:443,Security,access,access,443,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:932,Security,inject,injects,932,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:1272,Testability,test,test,1272,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:1300,Testability,test,test,1300,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:1354,Testability,test,test,1354,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-605502925:1390,Testability,test,test,1390,"> Does anyone know how we would give some kind of deprecation warning when `from qutip import *` is made to say that only core functions will be imported from v5 onwards?. @ajgpitch . I know I'm resurrecting a dead thread, but I have a way of detecting star imports if you can cope with a fairly gross hack. The only internal difference in `from qutip import *` (that I know about) from `import qutip` is that in the former, the import system access the `qutip.__all__` list to see which names it should import. This is intended to be a list of names, so the star import doesn't _have_ to import every single name, i.e. so you can manually set what's public to a module; the star import is designed for use within packages, and the user importing a package like that is strongly recommended against (though in scientific code, I'm 100% sure that's a losing battle). So, what if we make `__all__` _look_ like a list, but a list that injects a warning whenever anyone tries to see what items it has? An example:; ```python; import warnings as _warnings. x = 2. class _all_wrapper(list):; def __iter__(self, *args, **kwargs):; _warnings.warn(""You star-imported!""); return super().__iter__(*args, **kwargs). __all__ = _all_wrapper(['x']); ```; I put that in a package called ""test"".; ```python; >>> from test import x; >>> x; 2; ```; or; ```python; >>> from test import *; /Users/jake/code/tmp/test/__init__.py:7: UserWarning: You star-imported!; _warnings.warn(""You star-imported!""); >>> x; 2; ```. I won't complain if you want to scream after that...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-605502925
https://github.com/qutip/qutip/issues/1071#issuecomment-1427874263:52,Security,expose,exposes,52,Note that 5.0 is already a lot better about what it exposes via `from qutip import *`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-1427874263
https://github.com/qutip/qutip/pull/1074#issuecomment-572220880:99,Testability,test,tests,99,Could you fix the import in `test_entropy.py`. It would be better in we don't raise warning in our tests. Otherwise it seems good.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1074#issuecomment-572220880
https://github.com/qutip/qutip/pull/1074#issuecomment-577880321:131,Testability,test,test,131,"Thanks Eric, you are correct. I didn't know that. I guess that's why it was totally fine on my own machine. Now all the Python 3.7 test passes except for the Python 3.6 one.; I guess it is because 3.7 supports some circular importation. ""Circular imports involving absolute imports with binding a submodule to a name are now supported."" from https://docs.python.org/3/whatsnew/3.7.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1074#issuecomment-577880321
https://github.com/qutip/qutip/issues/1076#issuecomment-527603726:102,Testability,test,tested,102,"Thank you for the code.; The present version use sparse matrices so it can be used for bigger system (tested up to 26 Qbit). ; For size that fit in memory, your version is great. And we don't have any ket version.; I can make the PR if you don't feel comfortable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1076#issuecomment-527603726
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:177,Availability,Avail,Available,177,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:469,Availability,toler,tolerance,469,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:290,Energy Efficiency,power,power,290,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:299,Energy Efficiency,power,power-gmres,299,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:314,Energy Efficiency,power,power-lgmres,314,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:330,Energy Efficiency,power,power-bicgstab,330,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:365,Energy Efficiency,power,power,365,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:549,Integrability,depend,depending,549,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:1472,Testability,log,logger,1472,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834
https://github.com/qutip/qutip/issues/1077#issuecomment-653144199:12,Deployability,install,installed,12,"I have just installed qutip using the master branch. When running the tests script test_steadystate.py, I receive a similar violation as above. . ```python; packages\qutip\qutip\steadystate.py:275: in steadystate; return _steadystate_direct_sparse(A, ss_args); packages\qutip\qutip\steadystate.py:442: in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm=in_perm, verbose=ss_args['verbose'],; packages\qutip\qutip\_mkl\spsolve.py:393: in mkl_spsolve; x = lu.solve(b, verbose=verbose); OSError: exception: access violation reading 0x00000000000000C4; packages\qutip\qutip\_mkl\spsolve.py:167: OSError; ```; Is this a known bug with windows, or is there a fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199
https://github.com/qutip/qutip/issues/1077#issuecomment-653144199:510,Security,access,access,510,"I have just installed qutip using the master branch. When running the tests script test_steadystate.py, I receive a similar violation as above. . ```python; packages\qutip\qutip\steadystate.py:275: in steadystate; return _steadystate_direct_sparse(A, ss_args); packages\qutip\qutip\steadystate.py:442: in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm=in_perm, verbose=ss_args['verbose'],; packages\qutip\qutip\_mkl\spsolve.py:393: in mkl_spsolve; x = lu.solve(b, verbose=verbose); OSError: exception: access violation reading 0x00000000000000C4; packages\qutip\qutip\_mkl\spsolve.py:167: OSError; ```; Is this a known bug with windows, or is there a fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199
https://github.com/qutip/qutip/issues/1077#issuecomment-653144199:70,Testability,test,tests,70,"I have just installed qutip using the master branch. When running the tests script test_steadystate.py, I receive a similar violation as above. . ```python; packages\qutip\qutip\steadystate.py:275: in steadystate; return _steadystate_direct_sparse(A, ss_args); packages\qutip\qutip\steadystate.py:442: in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm=in_perm, verbose=ss_args['verbose'],; packages\qutip\qutip\_mkl\spsolve.py:393: in mkl_spsolve; x = lu.solve(b, verbose=verbose); OSError: exception: access violation reading 0x00000000000000C4; packages\qutip\qutip\_mkl\spsolve.py:167: OSError; ```; Is this a known bug with windows, or is there a fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-653144199
https://github.com/qutip/qutip/issues/1077#issuecomment-1097178459:16,Testability,test,tests,16,"The steadystate tests pass in our Windows GitHub Actions test runs now, so I'm closing this under the assumption that it was fixed between 2020 and now. Very happy for a new bug to filed if it still persists in 4.6.3 or 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-1097178459
https://github.com/qutip/qutip/issues/1077#issuecomment-1097178459:57,Testability,test,test,57,"The steadystate tests pass in our Windows GitHub Actions test runs now, so I'm closing this under the assumption that it was fixed between 2020 and now. Very happy for a new bug to filed if it still persists in 4.6.3 or 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-1097178459
https://github.com/qutip/qutip/issues/1078#issuecomment-526821321:232,Energy Efficiency,reduce,reduced,232,"The state you defined is a pure state, so even if you write it as a density matrix it has zero entropy.; So that output is correct. The entropy being 1 for a Bell state is true when you trace out one of the two systems, so that the reduced state is now mixed,; e.g., ; ```; RR2=ptrace(RR,0); print(entropy_vn(RR2, base=2, sparse=False)). ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1078#issuecomment-526821321
https://github.com/qutip/qutip/issues/1079#issuecomment-527691554:16,Deployability,install,installed,16,"actually, I had installed the 4.4.1 firstly, but it had always a similar problem. have you had other advice?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-527691554
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:21,Availability,error,errors,21,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:122,Availability,error,error,122,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:541,Availability,error,errors,541,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:614,Availability,error,error,614,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:156,Deployability,install,installed,156,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:330,Deployability,install,install,330,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:432,Deployability,install,install,432,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:835,Deployability,install,install-on-windows,835,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:471,Modifiability,config,configures,471,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401
https://github.com/qutip/qutip/issues/1079#issuecomment-540029251:114,Availability,error,error,114,"Hi @tehruhn, Openmp is not needed to run Qutip in parrallel. We are using the module multiprocessing. ; The 4.4.0 error is an error on my part. The 4.4.1 error seems to comes from temp files being erased too quickly for windows version of multiprocessing. ; multiprocessing does not use shared memory and reload all libraries from the files. string based coefficient are written to file as importable libraries and imported at runtime. In 4.4.1 once imported the file is immediately erased. Work file on linux, but I believe this is the cause of the error on windows. My PR #1082 keep the files until the object using it is no longer used, I am hoping this solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251
https://github.com/qutip/qutip/issues/1079#issuecomment-540029251:126,Availability,error,error,126,"Hi @tehruhn, Openmp is not needed to run Qutip in parrallel. We are using the module multiprocessing. ; The 4.4.0 error is an error on my part. The 4.4.1 error seems to comes from temp files being erased too quickly for windows version of multiprocessing. ; multiprocessing does not use shared memory and reload all libraries from the files. string based coefficient are written to file as importable libraries and imported at runtime. In 4.4.1 once imported the file is immediately erased. Work file on linux, but I believe this is the cause of the error on windows. My PR #1082 keep the files until the object using it is no longer used, I am hoping this solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251
https://github.com/qutip/qutip/issues/1079#issuecomment-540029251:154,Availability,error,error,154,"Hi @tehruhn, Openmp is not needed to run Qutip in parrallel. We are using the module multiprocessing. ; The 4.4.0 error is an error on my part. The 4.4.1 error seems to comes from temp files being erased too quickly for windows version of multiprocessing. ; multiprocessing does not use shared memory and reload all libraries from the files. string based coefficient are written to file as importable libraries and imported at runtime. In 4.4.1 once imported the file is immediately erased. Work file on linux, but I believe this is the cause of the error on windows. My PR #1082 keep the files until the object using it is no longer used, I am hoping this solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251
https://github.com/qutip/qutip/issues/1079#issuecomment-540029251:550,Availability,error,error,550,"Hi @tehruhn, Openmp is not needed to run Qutip in parrallel. We are using the module multiprocessing. ; The 4.4.0 error is an error on my part. The 4.4.1 error seems to comes from temp files being erased too quickly for windows version of multiprocessing. ; multiprocessing does not use shared memory and reload all libraries from the files. string based coefficient are written to file as importable libraries and imported at runtime. In 4.4.1 once imported the file is immediately erased. Work file on linux, but I believe this is the cause of the error on windows. My PR #1082 keep the files until the object using it is no longer used, I am hoping this solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251
https://github.com/qutip/qutip/pull/1082#issuecomment-529838231:146,Availability,avail,available,146,Nice work Eric. I had a quick look at the code.; Does this PR mean that string type td will be used to construct Python functions when Cython not available? Just checking that I understand.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-529838231
https://github.com/qutip/qutip/pull/1082#issuecomment-530016047:65,Availability,avail,available,65,"Yes, string will be turned to python function when cython is not available.; It is possible to use python even if cython is available if preferred.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-530016047
https://github.com/qutip/qutip/pull/1082#issuecomment-530016047:124,Availability,avail,available,124,"Yes, string will be turned to python function when cython is not available.; It is possible to use python even if cython is available if preferred.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-530016047
https://github.com/qutip/qutip/pull/1082#issuecomment-532268201:34,Testability,test,test,34,Wait 1 more commit so I check the test skipped without cython.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-532268201
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:160,Availability,Error,Error,160,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:531,Availability,down,downloaded,531,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:575,Availability,error,error,575,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:617,Deployability,install,installation,617,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:139,Integrability,depend,dependent,139,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:84,Testability,test,test,84,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:149,Testability,test,tests,149,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:294,Testability,test,tested,294,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336
https://github.com/qutip/qutip/pull/1082#issuecomment-540419070:84,Testability,test,tests,84,Restarted the Travis CI build to check whether this keeps being the latest PR where tests run fine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-540419070
https://github.com/qutip/qutip/pull/1082#issuecomment-540448526:0,Testability,Test,Tests,0,"Tests still run fine, also against the current master, cc @tehruhn.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-540448526
https://github.com/qutip/qutip/pull/1083#issuecomment-529844660:82,Integrability,depend,dependence,82,@Ericgig I think these are mishaps. I found them when experimenting with the time-dependence options.; Maybe merge these into #1082 ?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1083#issuecomment-529844660
https://github.com/qutip/qutip/issues/1084#issuecomment-531317211:160,Integrability,depend,dependent,160,"Hi; String coefficient do not work in parallel on windows. ; There are no other windows specific bug reported, so if you stick to function coefficient for time dependent system, you should be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531317211
https://github.com/qutip/qutip/issues/1084#issuecomment-531466956:153,Availability,error,errors,153,"Hey,; Thanks! Since test did not continue after this point, I am not sure whether to continue to use the qutip. Is there any way to bypass these kind of errors and continue the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956
https://github.com/qutip/qutip/issues/1084#issuecomment-531466956:20,Testability,test,test,20,"Hey,; Thanks! Since test did not continue after this point, I am not sure whether to continue to use the qutip. Is there any way to bypass these kind of errors and continue the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956
https://github.com/qutip/qutip/issues/1084#issuecomment-531466956:177,Testability,test,test,177,"Hey,; Thanks! Since test did not continue after this point, I am not sure whether to continue to use the qutip. Is there any way to bypass these kind of errors and continue the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:93,Availability,error,error,93,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:135,Deployability,install,installation,135,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:67,Safety,risk,risky,67,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:291,Testability,test,tests,291,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:346,Testability,test,testfile,346,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:385,Testability,test,tests,385,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:399,Testability,test,test,399,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:406,Testability,test,testfile,406,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:483,Testability,test,tests,483,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:524,Testability,test,test,524,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694
https://github.com/qutip/qutip/issues/1084#issuecomment-543262454:35,Availability,error,error,35,"After merging #1097, the following error is given on a Linux machine from travis CI ; AttributeError: 'QobjEvo' object has no attribute 'coeff_files'; 1656Exception in thread Thread-546:; 1657Traceback (most recent call last):; 1658 File ""/Users/travis/miniconda/envs/test-environment/lib/python3.7/threading.py"", line 926, in _bootstrap_inner; 1659 self.run()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-543262454
https://github.com/qutip/qutip/issues/1084#issuecomment-543262454:268,Testability,test,test-environment,268,"After merging #1097, the following error is given on a Linux machine from travis CI ; AttributeError: 'QobjEvo' object has no attribute 'coeff_files'; 1656Exception in thread Thread-546:; 1657Traceback (most recent call last):; 1658 File ""/Users/travis/miniconda/envs/test-environment/lib/python3.7/threading.py"", line 926, in _bootstrap_inner; 1659 self.run()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-543262454
https://github.com/qutip/qutip/issues/1085#issuecomment-531283266:48,Availability,error,error,48,"Hi,; This seems to ba accumulation of numerical error.; You can increase the solver precision (atol, rtol, max_step) in options:; `sesolve(..., options=qutip.Options(atol=1e-9)`.; You could also remove the normalization of the state `Options(normalize_output=False)`, then the error will not spread to the ""010"" state.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531283266
https://github.com/qutip/qutip/issues/1085#issuecomment-531283266:277,Availability,error,error,277,"Hi,; This seems to ba accumulation of numerical error.; You can increase the solver precision (atol, rtol, max_step) in options:; `sesolve(..., options=qutip.Options(atol=1e-9)`.; You could also remove the normalization of the state `Options(normalize_output=False)`, then the error will not spread to the ""010"" state.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531283266
https://github.com/qutip/qutip/issues/1085#issuecomment-531289790:164,Availability,down,downwards,164,ah great the rtol set to 1e-9 solved it.; thanks a lot !. out of a curiosity I need to ask though: why is the bias so constantly driving the population exclusively downwards (or upwards) ? I have no idea where the numerical error actually comes into play but I would have expected the error to be a lil' more all over the place...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790
https://github.com/qutip/qutip/issues/1085#issuecomment-531289790:224,Availability,error,error,224,ah great the rtol set to 1e-9 solved it.; thanks a lot !. out of a curiosity I need to ask though: why is the bias so constantly driving the population exclusively downwards (or upwards) ? I have no idea where the numerical error actually comes into play but I would have expected the error to be a lil' more all over the place...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790
https://github.com/qutip/qutip/issues/1085#issuecomment-531289790:285,Availability,error,error,285,ah great the rtol set to 1e-9 solved it.; thanks a lot !. out of a curiosity I need to ask though: why is the bias so constantly driving the population exclusively downwards (or upwards) ? I have no idea where the numerical error actually comes into play but I would have expected the error to be a lil' more all over the place...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790
https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:5,Availability,error,error,5,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708
https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:26,Deployability,integrat,integration,26,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708
https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:26,Integrability,integrat,integration,26,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708
https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:106,Usability,simpl,simple,106,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708
https://github.com/qutip/qutip/pull/1088#issuecomment-532284445:64,Availability,error,error,64,"Sorry, the blame is on me. Qutip works fine as it is, it was an error on my side. So I'll close the pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1088#issuecomment-532284445
https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254:106,Availability,down,down,106,"Yes, configuring a bot is beneficial for several tasks. However, the scope would be broad then. Narrowing down seems reasonable. What do you think about opening a new issue, mentioning several examples that can be worked on?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254
https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254:5,Modifiability,config,configuring,5,"Yes, configuring a bot is beneficial for several tasks. However, the scope would be broad then. Narrowing down seems reasonable. What do you think about opening a new issue, mentioning several examples that can be worked on?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254
https://github.com/qutip/qutip/pull/1090#issuecomment-536360074:454,Testability,Test,Tests,454,"Thank you @hodgestar, glad to see many details coming with this nicely drafted PR. . Functions design seems sensible. ; What is the main difference between `expect` and `measure`? That's the main thing that comes up to my mind. What different question are you answering? I also wonder if `expect` could be called. The description of the `measure` function is a bit general maybe with this regard. But I might have missed the point completely (my bad). . Tests seem quite elaborate, I wouldn't know how to add more. They can be even very simple in general. . Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536360074
https://github.com/qutip/qutip/pull/1090#issuecomment-536360074:577,Testability,test,tests,577,"Thank you @hodgestar, glad to see many details coming with this nicely drafted PR. . Functions design seems sensible. ; What is the main difference between `expect` and `measure`? That's the main thing that comes up to my mind. What different question are you answering? I also wonder if `expect` could be called. The description of the `measure` function is a bit general maybe with this regard. But I might have missed the point completely (my bad). . Tests seem quite elaborate, I wouldn't know how to add more. They can be even very simple in general. . Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536360074
https://github.com/qutip/qutip/pull/1090#issuecomment-536360074:537,Usability,simpl,simple,537,"Thank you @hodgestar, glad to see many details coming with this nicely drafted PR. . Functions design seems sensible. ; What is the main difference between `expect` and `measure`? That's the main thing that comes up to my mind. What different question are you answering? I also wonder if `expect` could be called. The description of the `measure` function is a bit general maybe with this regard. But I might have missed the point completely (my bad). . Tests seem quite elaborate, I wouldn't know how to add more. They can be even very simple in general. . Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536360074
https://github.com/qutip/qutip/pull/1090#issuecomment-536753408:785,Availability,failure,failure,785,"> What is the main difference between `expect` and `measure`? That's the main thing that comes up ; > to my mind. What different question are you answering? I also wonder if `expect` could be called. . `expect` returns the expectation value (i.e. probability weighted average of the measurements). `measure` returns a *single* measurement (i.e. an eigenvalue and an eigenstate, selected randomly with weighted probabilities). > The description of the `measure` function is a bit general maybe with this regard. But I might have ; > missed the point completely (my bad). Open to suggestions. I will also re-read it and see if I can think of something clearer.; ; > Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it. I'll dig a bit and see if the failure is related somehow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408
https://github.com/qutip/qutip/pull/1090#issuecomment-536753408:683,Testability,test,tests,683,"> What is the main difference between `expect` and `measure`? That's the main thing that comes up ; > to my mind. What different question are you answering? I also wonder if `expect` could be called. . `expect` returns the expectation value (i.e. probability weighted average of the measurements). `measure` returns a *single* measurement (i.e. an eigenvalue and an eigenstate, selected randomly with weighted probabilities). > The description of the `measure` function is a bit general maybe with this regard. But I might have ; > missed the point completely (my bad). Open to suggestions. I will also re-read it and see if I can think of something clearer.; ; > Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it. I'll dig a bit and see if the failure is related somehow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408
https://github.com/qutip/qutip/pull/1090#issuecomment-536753408:650,Usability,clear,clearer,650,"> What is the main difference between `expect` and `measure`? That's the main thing that comes up ; > to my mind. What different question are you answering? I also wonder if `expect` could be called. . `expect` returns the expectation value (i.e. probability weighted average of the measurements). `measure` returns a *single* measurement (i.e. an eigenvalue and an eigenstate, selected randomly with weighted probabilities). > The description of the `measure` function is a bit general maybe with this regard. But I might have ; > missed the point completely (my bad). Open to suggestions. I will also re-read it and see if I can think of something clearer.; ; > Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it. I'll dig a bit and see if the failure is related somehow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408
https://github.com/qutip/qutip/pull/1090#issuecomment-536773249:29,Testability,test,tests,29,Re failing `smesolve` -- the tests pass together locally. I see Travis builds master with the PR merged in. I've merged master in to this branch in case that helps.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536773249
https://github.com/qutip/qutip/pull/1090#issuecomment-537232313:49,Testability,test,tests,49,"Hi hodgestar,; Thank you for the PR.; The broken tests (smesolve) is not caused by your addition, you do not have to worry about it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-537232313
https://github.com/qutip/qutip/pull/1090#issuecomment-538153627:206,Availability,avail,available,206,"> Just an 'out there' question... what about superoperators?. I'm still reading, but I imagine superoperator measurements will correspond to partial measurements on systems where only part of the system is available for measurement (e.g. quantum channels), so perhaps lets do partial measurements next and then superoperator measurements after that?. Edit: We'll need superoperators to describe POVMs (i.e. more general measurements on density matrices).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-538153627
https://github.com/qutip/qutip/pull/1090#issuecomment-541419814:13,Availability,ping,pinging,13,@ajgpitch Re-pinging (in case life got busy).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-541419814
https://github.com/qutip/qutip/pull/1090#issuecomment-546811896:453,Usability,simpl,simple,453,"@hodgestar Hi Simon, really sorry about the delay. ; All the requested changes look good to me. I am happy this is ready to merge this now. . Normally we ask for a new feature PR to be accompanied by an example notebook and a section in the documentation. I guess we can work on the documentation later, it is a bit of a hassle getting the doc build working. However, an example Jupyter notebook would be really nice to go along with this. Can be quite simple - just take the examples from the docstring. Would be good to show the maths as well. We can then build on the notebook as we add more measuring features.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-546811896
https://github.com/qutip/qutip/pull/1090#issuecomment-547162310:379,Testability,test,test,379,"Happy to create a notebook with some examples. Should it live at https://github.com/qutip/qutip-notebooks/tree/master/docs/guide ? If so, I'll make a PR there. For documentation, do I add them at https://github.com/qutip/qutip-doc/blob/master/apidoc/functions.rst?. Re measurement and teleportation -- that sounds like ordinary quantum teleportation, and probably would be a fun test to write once we get there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547162310
https://github.com/qutip/qutip/pull/1090#issuecomment-547162310:123,Usability,guid,guide,123,"Happy to create a notebook with some examples. Should it live at https://github.com/qutip/qutip-notebooks/tree/master/docs/guide ? If so, I'll make a PR there. For documentation, do I add them at https://github.com/qutip/qutip-doc/blob/master/apidoc/functions.rst?. Re measurement and teleportation -- that sounds like ordinary quantum teleportation, and probably would be a fun test to write once we get there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547162310
https://github.com/qutip/qutip/pull/1090#issuecomment-547176797:278,Deployability,update,update,278,The notebook book would live in here:; https://github.com/qutip/qutip-notebooks/tree/master/examples; We would then link it in here:; https://github.com/qutip/qutip.github.io/blob/master/tutorials.html; I guess in the Basics section. As for the qutip-docs:; It would be good to update functions.rst. This is for the auto-generated API docs. If you are feeling super keen then you could add a guide-measurement.rst in:; https://github.com/qutip/qutip-doc/tree/master/guide; and link it from:; https://github.com/qutip/qutip-doc/blob/master/guide/guide.rst. Barring a few build problems here and there the docs building has been okay recently (I think).; Instructions can be found here:; https://github.com/qutip/qutip-doc/blob/master/README.md,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797
https://github.com/qutip/qutip/pull/1090#issuecomment-547176797:392,Usability,guid,guide-measurement,392,The notebook book would live in here:; https://github.com/qutip/qutip-notebooks/tree/master/examples; We would then link it in here:; https://github.com/qutip/qutip.github.io/blob/master/tutorials.html; I guess in the Basics section. As for the qutip-docs:; It would be good to update functions.rst. This is for the auto-generated API docs. If you are feeling super keen then you could add a guide-measurement.rst in:; https://github.com/qutip/qutip-doc/tree/master/guide; and link it from:; https://github.com/qutip/qutip-doc/blob/master/guide/guide.rst. Barring a few build problems here and there the docs building has been okay recently (I think).; Instructions can be found here:; https://github.com/qutip/qutip-doc/blob/master/README.md,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797
https://github.com/qutip/qutip/pull/1090#issuecomment-547176797:466,Usability,guid,guide,466,The notebook book would live in here:; https://github.com/qutip/qutip-notebooks/tree/master/examples; We would then link it in here:; https://github.com/qutip/qutip.github.io/blob/master/tutorials.html; I guess in the Basics section. As for the qutip-docs:; It would be good to update functions.rst. This is for the auto-generated API docs. If you are feeling super keen then you could add a guide-measurement.rst in:; https://github.com/qutip/qutip-doc/tree/master/guide; and link it from:; https://github.com/qutip/qutip-doc/blob/master/guide/guide.rst. Barring a few build problems here and there the docs building has been okay recently (I think).; Instructions can be found here:; https://github.com/qutip/qutip-doc/blob/master/README.md,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797
https://github.com/qutip/qutip/pull/1090#issuecomment-547176797:539,Usability,guid,guide,539,The notebook book would live in here:; https://github.com/qutip/qutip-notebooks/tree/master/examples; We would then link it in here:; https://github.com/qutip/qutip.github.io/blob/master/tutorials.html; I guess in the Basics section. As for the qutip-docs:; It would be good to update functions.rst. This is for the auto-generated API docs. If you are feeling super keen then you could add a guide-measurement.rst in:; https://github.com/qutip/qutip-doc/tree/master/guide; and link it from:; https://github.com/qutip/qutip-doc/blob/master/guide/guide.rst. Barring a few build problems here and there the docs building has been okay recently (I think).; Instructions can be found here:; https://github.com/qutip/qutip-doc/blob/master/README.md,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797
https://github.com/qutip/qutip/pull/1090#issuecomment-547176797:545,Usability,guid,guide,545,The notebook book would live in here:; https://github.com/qutip/qutip-notebooks/tree/master/examples; We would then link it in here:; https://github.com/qutip/qutip.github.io/blob/master/tutorials.html; I guess in the Basics section. As for the qutip-docs:; It would be good to update functions.rst. This is for the auto-generated API docs. If you are feeling super keen then you could add a guide-measurement.rst in:; https://github.com/qutip/qutip-doc/tree/master/guide; and link it from:; https://github.com/qutip/qutip-doc/blob/master/guide/guide.rst. Barring a few build problems here and there the docs building has been okay recently (I think).; Instructions can be found here:; https://github.com/qutip/qutip-doc/blob/master/README.md,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797
https://github.com/qutip/qutip/pull/1090#issuecomment-573575219:70,Testability,test,tests,70,"It would be nice to merge this if everything is fine. Not sure of why tests are failing, it seems to pick `smesolve` that is unaffected by these changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-573575219
https://github.com/qutip/qutip/pull/1090#issuecomment-579621896:109,Deployability,release,release,109,Happy to merge this soon if the conflicts are solved. cc @hodgestar @ajgpitch. We are aiming for a new qutip release this week.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-579621896
https://github.com/qutip/qutip/pull/1090#issuecomment-581037319:87,Availability,error,error,87,"@nathanshammah I've merged in master, waiting for builds to complete. The code climate error is seems largely unrelated to this PR (the PR adds a tiny snippet of code that is similar to 4 other existing pieces of code). I'm happy to refactor this a bit if someone makes a suggestion, but the code climate error seems overly zealous to me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319
https://github.com/qutip/qutip/pull/1090#issuecomment-581037319:305,Availability,error,error,305,"@nathanshammah I've merged in master, waiting for builds to complete. The code climate error is seems largely unrelated to this PR (the PR adds a tiny snippet of code that is similar to 4 other existing pieces of code). I'm happy to refactor this a bit if someone makes a suggestion, but the code climate error seems overly zealous to me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319
https://github.com/qutip/qutip/pull/1090#issuecomment-581037319:233,Modifiability,refactor,refactor,233,"@nathanshammah I've merged in master, waiting for builds to complete. The code climate error is seems largely unrelated to this PR (the PR adds a tiny snippet of code that is similar to 4 other existing pieces of code). I'm happy to refactor this a bit if someone makes a suggestion, but the code climate error seems overly zealous to me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319
https://github.com/qutip/qutip/pull/1090#issuecomment-626381159:15,Deployability,update,updates,15,"@hodgestar any updates on merging this, I'm hoping to extend some of this functionality!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-626381159
https://github.com/qutip/qutip/pull/1090#issuecomment-626381159:54,Modifiability,extend,extend,54,"@hodgestar any updates on merging this, I'm hoping to extend some of this functionality!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-626381159
https://github.com/qutip/qutip/pull/1090#issuecomment-633748439:25,Usability,guid,guide,25,"@ajgpitch I've started a guide and docs in https://github.com/qutip/qutip-doc/pull/113. Would you mind having a quick look and letting me know if the direction is good. I'll try finish the measurement_statistics section tomrrow. Could we perhaps land this PR with just the guide? I'm happy to add a notebook straight afterwards (and it should be fairly straight forward once we have the guide), I just don't want to end up having too many different pieces in flight and holding up @sarsid more than necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-633748439
https://github.com/qutip/qutip/pull/1090#issuecomment-633748439:273,Usability,guid,guide,273,"@ajgpitch I've started a guide and docs in https://github.com/qutip/qutip-doc/pull/113. Would you mind having a quick look and letting me know if the direction is good. I'll try finish the measurement_statistics section tomrrow. Could we perhaps land this PR with just the guide? I'm happy to add a notebook straight afterwards (and it should be fairly straight forward once we have the guide), I just don't want to end up having too many different pieces in flight and holding up @sarsid more than necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-633748439
https://github.com/qutip/qutip/pull/1090#issuecomment-633748439:387,Usability,guid,guide,387,"@ajgpitch I've started a guide and docs in https://github.com/qutip/qutip-doc/pull/113. Would you mind having a quick look and letting me know if the direction is good. I'll try finish the measurement_statistics section tomrrow. Could we perhaps land this PR with just the guide? I'm happy to add a notebook straight afterwards (and it should be fairly straight forward once we have the guide), I just don't want to end up having too many different pieces in flight and holding up @sarsid more than necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-633748439
https://github.com/qutip/qutip/pull/1090#issuecomment-634285515:0,Usability,Guid,Guide,0,Guide and docs are ready for review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-634285515
https://github.com/qutip/qutip/pull/1091#issuecomment-537176077:55,Availability,error,errors,55,"Look good,; Thank you sameshl.; We can ignore the test errors as they are not related to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077
https://github.com/qutip/qutip/pull/1091#issuecomment-537176077:50,Testability,test,test,50,"Look good,; Thank you sameshl.; We can ignore the test errors as they are not related to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077
https://github.com/qutip/qutip/issues/1531#issuecomment-574250631:70,Deployability,release,releases,70,"While this has been fixed ""by hand"" by @tehruhn, a fix for the future releases is needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1531#issuecomment-574250631
https://github.com/qutip/qutip/issues/1531#issuecomment-1100139852:635,Modifiability,config,configure,635,"@Darshil9120 I actually don't know what the ""correct"" fix should be. The links are actually correct in the documentation source, but Jekyll, which is used to generate qutip.org, ignore folders with leading underscores, so they underscores need to be removed from the folders and the links to them. There is a script https://github.com/qutip/qutip.github.io/ called `docs/remove_leading_underscore.py` that does this. I'm inclined to close this issue for now unless since we have a solution, but I'm happy to reopen it if someone has a good concrete suggestion (I think change the Sphinx defaults is a bit of a mess, but maybe we could configure Jekyll to not ignore some specific folders -- e.g. all folders with leading underscores that are under the docs folder).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1531#issuecomment-1100139852
https://github.com/qutip/qutip/pull/1092#issuecomment-875598365:114,Deployability,release,released,114,"@goerz We've added support for loky in QuTiP 5. Is that good enough for you? It might be awhile before QuTiP 5 is released (e.g. later this year). If yes, we can close this PR (loky support was added to dev.major in #1462). If no, we can try make a plan to get it into 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1092#issuecomment-875598365
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:2707,Deployability,release,release,2707,"rmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (OO) ... ok; ```. This shows that it is probably not an issue with the source code. I was looking at the output you provided from `qutip.about`, and you seem to be using `QuTiP Version: 4.5.0.dev0+d377c997`. I suspect this could be the issue, since the dev version is probably not stable yet. So I'd recommend you try this with a stable release of QuTiP.; Would you try running the same with QuTiP 4.4.1, by explicitly installing the same in conda as follows, and get back to us? :; `conda install qutip=4.4.1`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:2789,Deployability,install,installing,2789,"rmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (OO) ... ok; ```. This shows that it is probably not an issue with the source code. I was looking at the output you provided from `qutip.about`, and you seem to be using `QuTiP Version: 4.5.0.dev0+d377c997`. I suspect this could be the issue, since the dev version is probably not stable yet. So I'd recommend you try this with a stable release of QuTiP.; Would you try running the same with QuTiP 4.4.1, by explicitly installing the same in conda as follows, and get back to us? :; `conda install qutip=4.4.1`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:2860,Deployability,install,install,2860,"rmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (OO) ... ok; ```. This shows that it is probably not an issue with the source code. I was looking at the output you provided from `qutip.about`, and you seem to be using `QuTiP Version: 4.5.0.dev0+d377c997`. I suspect this could be the issue, since the dev version is probably not stable yet. So I'd recommend you try this with a stable release of QuTiP.; Would you try running the same with QuTiP 4.4.1, by explicitly installing the same in conda as follows, and get back to us? :; `conda install qutip=4.4.1`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1209,Integrability,depend,dependent,1209,"ver-package=qutip qutip; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear in",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1252,Integrability,depend,dependent,1252,"asis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hada",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1312,Integrability,depend,dependent,1312,"genbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; contro",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1368,Integrability,depend,dependent,1368,"s and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (O",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:1176,Testability,test,tests,1176,"$ nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:734,Usability,simpl,simple,734,"Hi @goerz ,. I tried to replicate your issue on my Linux machine, and it seems to work fine :. ```(qutip-env) tarun@trolldem0rt:~/miniconda3/envs/qutip-env/bin$ nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:270,Availability,failure,failures,270,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:835,Availability,robust,robust,835,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:17,Deployability,release,release,17,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:618,Deployability,release,release,618,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:457,Integrability,depend,dependent,457,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:134,Testability,test,tests,134,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:212,Testability,test,tests,212,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:265,Testability,test,test,265,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:307,Testability,test,tests,307,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:206,Availability,error,error,206,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:268,Availability,error,error,268,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:40,Testability,test,tests,40,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:77,Testability,test,tests,77,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:172,Testability,test,tests,172,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:410,Testability,test,tests,410,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:496,Testability,test,testfiles,496,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:540,Testability,test,tests,540,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:554,Testability,test,testfiles,554,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:567,Testability,test,testfile,567,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:580,Testability,test,testfile,580,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:592,Testability,test,testfiles,592,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:617,Testability,test,testfile,617,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:651,Testability,test,testfiles,651,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:664,Testability,test,testfile,664,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:677,Testability,test,testfile,677,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:689,Testability,test,testfiles,689,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:720,Testability,test,testfile,720,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:752,Testability,test,tests,752,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:761,Testability,test,testfile,761,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:794,Testability,test,testfile,794,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:806,Testability,test,testfiles,806,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:822,Testability,test,test,822,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:830,Testability,test,tests,830,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:866,Testability,test,tests,866,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:876,Testability,test,test,876,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:170,Deployability,install,install,170,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:310,Deployability,install,install,310,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:412,Deployability,install,install,412,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:1265,Safety,Abort,Abort,1265,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:1063,Security,checksum,checksum,1063,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:78,Testability,test,testing,78,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:492,Testability,test,tests,492,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:571,Testability,test,test,571,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:628,Testability,test,test,628,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-540141378:737,Testability,Test,Test,737,"I had a bit more success by switching as much as possible in the setup of the testing environment to pip:; ~~~; conda create -q -n qutip_testing_env -y python=3.7; conda install -n qutip_testing_env -y numpy scipy cython; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install -e .; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/bin/python -m pip install nose ipython; ~~~; I also added a `unittest.skipIf` decorator to `qutip/tests/test_stochastic_se.py:test_smesolve_homodyne_methods`, which is the only test that consistently fails on `master`. With this, the test suite runs through about 50% of the time. The other 50% it crashes with the following:; ~~~; ...; PIQS: Test the warning for diagonal Hamiltonians to use internal solver. ... ok; Propagator: HO ('single mode') ... ok; Propagator: HO ('batch mode') ... ok; Propagator: HO parallel ... ok; Propagator: str td format ... ok; Propagator: func td format ... ok; Propagator: steady state ... python(52709,0x10fc1f5c0) malloc: Incorrect checksum for freed object 0x7fcbf338af10: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(52709,0x10fc1f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540141378
https://github.com/qutip/qutip/issues/1093#issuecomment-576516559:22,Safety,abort,abort,22,"Yes, I also get a few abort trap 6 crashes. I wonder why on Travis CI they seem to always run fine lately. By the way, we have migrated to `pytest`. Hopefully this will help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-576516559
https://github.com/qutip/qutip/issues/1093#issuecomment-809350853:195,Availability,down,down,195,"This particular segfault is solved by #1288 - it's related to a bust `zheevr` implementation in the Mac OpenBLAS stack somewhere or another (may even be in `scipy`'s binding, we never tracked it down exactly). This doesn't mean all segfaults on Mac are fixed - see also #1160, which I believe still occasionally rears its head and we have no idea about.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-809350853
https://github.com/qutip/qutip/pull/1095#issuecomment-539493808:30,Testability,test,tests,30,"I'm disregarding the fails in tests on Travis CI as this is due to pre-existent conditions due to `smesolve`, not affected here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1095#issuecomment-539493808
https://github.com/qutip/qutip/issues/1096#issuecomment-592936636:61,Testability,test,tested,61,"Hi, I just added the support for QCircuit 2.6 in my fork and tested it with [quantum-gates.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb). Do you have any other notebook suggestion, which I could use for testing? . I didn't look into Quantikz yet.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-592936636
https://github.com/qutip/qutip/issues/1096#issuecomment-592936636:247,Testability,test,testing,247,"Hi, I just added the support for QCircuit 2.6 in my fork and tested it with [quantum-gates.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb). Do you have any other notebook suggestion, which I could use for testing? . I didn't look into Quantikz yet.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-592936636
https://github.com/qutip/qutip/issues/1096#issuecomment-593089971:44,Deployability,update,update,44,The deprecation is because of the QuTiP 4.5 update. The notebook is a bit outdated. The importation should be `from qutip.qip.operations import *`. This should solve the problem,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-593089971
https://github.com/qutip/qutip/issues/1096#issuecomment-1097171860:88,Deployability,install,installed,88,"`qcircuit` is no longer vendored by QuTiP, so it uses whatever version of `qcircuit` is installed along with LaTeX (e.g. TexLive includes `qcircuit`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-1097171860
https://github.com/qutip/qutip/pull/1098#issuecomment-540272340:20,Testability,test,test,20,"Yes, the `smesolve` test is failing elsewhere already and it's unrelated. Sorry could you explain me a bit the tensor issue and if this is merge-ready?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-540272340
https://github.com/qutip/qutip/pull/1098#issuecomment-541953594:400,Modifiability,enhance,enhancement,400,"@nathanshammah: Sure. An assumption had previously been hard-coded into various conversion functions between super-operator representations that the input and output Hilbert spaces for the superoperator have the same dimension. An example is `_super_tofrom_choi` which converts between Liouville and Choi matrix representations, for example the line:. ``sqrt_shape = int(sqrt(data.shape[0]))``. This enhancement removes these assumptions and instead looks at the input and ouput dimensions of the `Qobj`s, which is stored in the `dims` attribute, to correctly convert in the case when the input and output dims are different. It's needed in all sorts of applications. Since the failing tests are unrelated to this pull request, it is merge ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-541953594
https://github.com/qutip/qutip/pull/1098#issuecomment-541953594:686,Testability,test,tests,686,"@nathanshammah: Sure. An assumption had previously been hard-coded into various conversion functions between super-operator representations that the input and output Hilbert spaces for the superoperator have the same dimension. An example is `_super_tofrom_choi` which converts between Liouville and Choi matrix representations, for example the line:. ``sqrt_shape = int(sqrt(data.shape[0]))``. This enhancement removes these assumptions and instead looks at the input and ouput dimensions of the `Qobj`s, which is stored in the `dims` attribute, to correctly convert in the case when the input and output dims are different. It's needed in all sorts of applications. Since the failing tests are unrelated to this pull request, it is merge ready.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-541953594
https://github.com/qutip/qutip/pull/1098#issuecomment-547716872:25,Modifiability,variab,variable,25,"@arnelg What if we add a variable `shape` also to the `_super_tofrom_choi`, `choi_to_kraus`, and `kraus_to_choi` functions?; In that way, if `shape=None` the function uses the old code, while if `shape=""rectangular""` it implements the new version of the code.; Moreover, for the sake of completeness, I think this option should be implemented also in the Stinespring and $\chi$ representation.; Commenting the docstring on this issue could help the user, even if these are private functions.; I have been reviewing this with @nathanshammah.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-547716872
https://github.com/qutip/qutip/pull/1098#issuecomment-565329722:725,Availability,error,error,725,"> @arnelg What if we add a variable `shape` also to the `_super_tofrom_choi`, `choi_to_kraus`, and `kraus_to_choi` functions?; > In that way, if `shape=None` the function uses the old code, while if `shape=""rectangular""` it implements the new version of the code. I don't think this is a good idea. The ""square"" case is really just a special case of ""rectangular"", and there is no reason the user should need to specify that it is square or not through an additional argument; this information is already there by looking at the `Qobj` in question. The code as submitted already correctly handles a square input (as before), so why create a separate code path? Also by sticking to one code path we ensure that if there is an error, it only needs to be fixed once. > Moreover, for the sake of completeness, I think this option should be implemented also in the Stinespring and $\chi$ representation.; > Commenting the docstring on this issue could help the user, even if these are private functions.; > I have been reviewing this with @nathanshammah. Yeah good point. I will have a look at this together with @joshcombes. (It is fine to accept the current pull request, and we can open another one for further improvements, however.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-565329722
https://github.com/qutip/qutip/pull/1098#issuecomment-565329722:27,Modifiability,variab,variable,27,"> @arnelg What if we add a variable `shape` also to the `_super_tofrom_choi`, `choi_to_kraus`, and `kraus_to_choi` functions?; > In that way, if `shape=None` the function uses the old code, while if `shape=""rectangular""` it implements the new version of the code. I don't think this is a good idea. The ""square"" case is really just a special case of ""rectangular"", and there is no reason the user should need to specify that it is square or not through an additional argument; this information is already there by looking at the `Qobj` in question. The code as submitted already correctly handles a square input (as before), so why create a separate code path? Also by sticking to one code path we ensure that if there is an error, it only needs to be fixed once. > Moreover, for the sake of completeness, I think this option should be implemented also in the Stinespring and $\chi$ representation.; > Commenting the docstring on this issue could help the user, even if these are private functions.; > I have been reviewing this with @nathanshammah. Yeah good point. I will have a look at this together with @joshcombes. (It is fine to accept the current pull request, and we can open another one for further improvements, however.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-565329722
https://github.com/qutip/qutip/pull/1098#issuecomment-570133990:79,Deployability,integrat,integrating,79,I'd be happy to help on the future improvements (e.g. chi and Stinespring) and integrating these changes with other parts of qutip. The more piecemeal we can make the changes the easier it will be to review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-570133990
https://github.com/qutip/qutip/pull/1098#issuecomment-570133990:79,Integrability,integrat,integrating,79,I'd be happy to help on the future improvements (e.g. chi and Stinespring) and integrating these changes with other parts of qutip. The more piecemeal we can make the changes the easier it will be to review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-570133990
https://github.com/qutip/qutip/pull/1098#issuecomment-571299702:37,Deployability,update,updates,37,"Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. I admit that part of this resistance is that I cannot really foresee the implications of this change. Now the Qobj permute tests are failing for example. I also see your point for more general definitions. I would recommend that docstrings and tests be included and possibly even some dev notebook or tutorial, or even just a gist here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702
https://github.com/qutip/qutip/pull/1098#issuecomment-571299702:393,Testability,test,tests,393,"Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. I admit that part of this resistance is that I cannot really foresee the implications of this change. Now the Qobj permute tests are failing for example. I also see your point for more general definitions. I would recommend that docstrings and tests be included and possibly even some dev notebook or tutorial, or even just a gist here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702
https://github.com/qutip/qutip/pull/1098#issuecomment-571299702:514,Testability,test,tests,514,"Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. I admit that part of this resistance is that I cannot really foresee the implications of this change. Now the Qobj permute tests are failing for example. I also see your point for more general definitions. I would recommend that docstrings and tests be included and possibly even some dev notebook or tutorial, or even just a gist here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702
https://github.com/qutip/qutip/pull/1098#issuecomment-571303251:40,Testability,test,test,40,"I'm not sure the `Qobj permute` failing test is related, by the way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571303251
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:137,Availability,error,error,137,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:198,Availability,toler,tolerance,198,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:370,Availability,toler,tolerance,370,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:808,Availability,error,error,808,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:42,Testability,test,test,42,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:272,Testability,test,test,272,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:349,Testability,test,test,349,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111
https://github.com/qutip/qutip/pull/1098#issuecomment-571355512:39,Deployability,update,updates,39,"> Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. OK let me think about this some more. Our plan is to not modify any core parts of the code, only superoperator representation conversion functions, and in such a way that passing a square superoperator gives exactly the same behavior as before. My argument against passing a ""shape=rectangular"" flag is that the information we need is already stored in the `Qobj` `shape` and `dims` attributes. But I've removed the ""merge ready"" flag until we have thought it through some more.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571355512
https://github.com/qutip/qutip/pull/1098#issuecomment-573569425:30,Deployability,release,release,30,We aim at delivering the next release in a couple of weeks. Maybe just adding tests to be sure nothing is broken here would help including this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-573569425
https://github.com/qutip/qutip/pull/1098#issuecomment-573569425:78,Testability,test,tests,78,We aim at delivering the next release in a couple of weeks. Maybe just adding tests to be sure nothing is broken here would help including this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-573569425
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:16,Availability,error,error,16,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:32,Availability,ERROR,ERROR,32,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:129,Testability,test,test-environment,129,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:216,Testability,test,test,216,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:267,Testability,test,test-environment,267,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:367,Testability,test,tests,367,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:404,Testability,test,testSuperJC,404,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:498,Testability,test,test-environment,498,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:598,Testability,test,tests,598,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:722,Testability,test,test-environment,722,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:955,Testability,test,test-environment,955,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693
https://github.com/qutip/qutip/pull/1098#issuecomment-575501006:4,Availability,error,error,4,"The error is genuine. I think I have narrowed down the problem. The issue is reshaping (specifically vector_to_operator ) when the vector represents a tensor product system. ```python; from qutip import *. psi0 = tensor(basis(4, 0), basis(2, 0)); rho0vec = operator_to_vector(ket2dm(psi0)). print(rho0vec). vector_to_operator(rho0vec); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575501006
https://github.com/qutip/qutip/pull/1098#issuecomment-575501006:46,Availability,down,down,46,"The error is genuine. I think I have narrowed down the problem. The issue is reshaping (specifically vector_to_operator ) when the vector represents a tensor product system. ```python; from qutip import *. psi0 = tensor(basis(4, 0), basis(2, 0)); rho0vec = operator_to_vector(ket2dm(psi0)). print(rho0vec). vector_to_operator(rho0vec); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575501006
https://github.com/qutip/qutip/pull/1098#issuecomment-576093035:72,Testability,test,test,72,"So the last commit fixed the **Travis CI** problems. Aside from writing test and documentation I think there is one issue left. It has to do with constructing non square operators. Consider. ```python. from qutip import *. zero = basis(2,0) . zero_log = tensor(zero, zero, zero). print(zero_log). print(zero.dag()). zero_log * zero.dag(). ```. The last line fails. . ```python; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-69-9ea42be37847> in <module>; 11 print(zero.dag()); 12 ; ---> 13 zero_log * zero.dag(). ~/qutip/qutip/qobj.py in __mul__(self, other); 544 ; 545 else:; --> 546 raise TypeError(""Incompatible Qobj shapes""); 547 ; 548 elif isinstance(other, np.ndarray):. TypeError: Incompatible Qobj shapes; ```. It seems like `*` should allow one to construct non square operators, otherwise they need to constructed in numpy and then turned into a Qobj. In the latter case the `dims` won't be correct as the tensor product structure is not understood.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576093035
https://github.com/qutip/qutip/pull/1098#issuecomment-576981021:0,Deployability,Update,Update,0,"Update Travis build passes. ### Summary . This PR helps convert between superop reps with non-square shape. This is needed because quantum channels can have input and output spaces of different dimension. It works between super, choi, kraus. It correctly handles tensor product structures and systems with different dimensions e.g. a qubit and a qutrit. . It does not work for Chi rep or the Steinspring rep. In the Chi rep only the qubit Pauli basis has been implemented. One would need to first get the Chi rep working for Qudits. At the moment it is unclear how to generalize to the Stinespring rep. . **changes**; - in `type_from_dims` the flag `enforce_square` was set to `False`. This helps in the conversion.; - in `qobj`, `__mul__` was extended to allow construction of non square operators from an outer product using the suggestion of @Ericgig ; - `_super_tofrom_choi`, `choi_to_kraus`, `kraus_to_choi` have been changed so they work with non-square shapes.; - to support the above changes `vector_to_operator` and `vec2mat` were changed to allow for non square shapes. **other changes**; - `Qobj permute`. `tidyup` was removed from to resolve a failing test at the suggestion of @nonhermitian ; - `choi_to_kraus` and `to_kraus`. When converting from Choi to to Kraus there are many small norm Kraus operators. A `tol` parameter was added to help remove these spurious operators. ### Added Tests; **test_superoperator_reps**; - Convert non-square Kraus operator to Super + Choi matrix and back.; - Neglect tiny Kraus operators when converting Choi to Kraus. **test_superoper**; - Operator - vector - operator conversion with a tensor product state.; - Operator - vector - operator conversion for non-square matrix. **test_qobj**; - bra and ket multiplication with different dims e.g. [N, 1] and [1, M] for M \neq N",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021
https://github.com/qutip/qutip/pull/1098#issuecomment-576981021:744,Modifiability,extend,extended,744,"Update Travis build passes. ### Summary . This PR helps convert between superop reps with non-square shape. This is needed because quantum channels can have input and output spaces of different dimension. It works between super, choi, kraus. It correctly handles tensor product structures and systems with different dimensions e.g. a qubit and a qutrit. . It does not work for Chi rep or the Steinspring rep. In the Chi rep only the qubit Pauli basis has been implemented. One would need to first get the Chi rep working for Qudits. At the moment it is unclear how to generalize to the Stinespring rep. . **changes**; - in `type_from_dims` the flag `enforce_square` was set to `False`. This helps in the conversion.; - in `qobj`, `__mul__` was extended to allow construction of non square operators from an outer product using the suggestion of @Ericgig ; - `_super_tofrom_choi`, `choi_to_kraus`, `kraus_to_choi` have been changed so they work with non-square shapes.; - to support the above changes `vector_to_operator` and `vec2mat` were changed to allow for non square shapes. **other changes**; - `Qobj permute`. `tidyup` was removed from to resolve a failing test at the suggestion of @nonhermitian ; - `choi_to_kraus` and `to_kraus`. When converting from Choi to to Kraus there are many small norm Kraus operators. A `tol` parameter was added to help remove these spurious operators. ### Added Tests; **test_superoperator_reps**; - Convert non-square Kraus operator to Super + Choi matrix and back.; - Neglect tiny Kraus operators when converting Choi to Kraus. **test_superoper**; - Operator - vector - operator conversion with a tensor product state.; - Operator - vector - operator conversion for non-square matrix. **test_qobj**; - bra and ket multiplication with different dims e.g. [N, 1] and [1, M] for M \neq N",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021
https://github.com/qutip/qutip/pull/1098#issuecomment-576981021:1164,Testability,test,test,1164,"Update Travis build passes. ### Summary . This PR helps convert between superop reps with non-square shape. This is needed because quantum channels can have input and output spaces of different dimension. It works between super, choi, kraus. It correctly handles tensor product structures and systems with different dimensions e.g. a qubit and a qutrit. . It does not work for Chi rep or the Steinspring rep. In the Chi rep only the qubit Pauli basis has been implemented. One would need to first get the Chi rep working for Qudits. At the moment it is unclear how to generalize to the Stinespring rep. . **changes**; - in `type_from_dims` the flag `enforce_square` was set to `False`. This helps in the conversion.; - in `qobj`, `__mul__` was extended to allow construction of non square operators from an outer product using the suggestion of @Ericgig ; - `_super_tofrom_choi`, `choi_to_kraus`, `kraus_to_choi` have been changed so they work with non-square shapes.; - to support the above changes `vector_to_operator` and `vec2mat` were changed to allow for non square shapes. **other changes**; - `Qobj permute`. `tidyup` was removed from to resolve a failing test at the suggestion of @nonhermitian ; - `choi_to_kraus` and `to_kraus`. When converting from Choi to to Kraus there are many small norm Kraus operators. A `tol` parameter was added to help remove these spurious operators. ### Added Tests; **test_superoperator_reps**; - Convert non-square Kraus operator to Super + Choi matrix and back.; - Neglect tiny Kraus operators when converting Choi to Kraus. **test_superoper**; - Operator - vector - operator conversion with a tensor product state.; - Operator - vector - operator conversion for non-square matrix. **test_qobj**; - bra and ket multiplication with different dims e.g. [N, 1] and [1, M] for M \neq N",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021
https://github.com/qutip/qutip/pull/1098#issuecomment-576981021:1400,Testability,Test,Tests,1400,"Update Travis build passes. ### Summary . This PR helps convert between superop reps with non-square shape. This is needed because quantum channels can have input and output spaces of different dimension. It works between super, choi, kraus. It correctly handles tensor product structures and systems with different dimensions e.g. a qubit and a qutrit. . It does not work for Chi rep or the Steinspring rep. In the Chi rep only the qubit Pauli basis has been implemented. One would need to first get the Chi rep working for Qudits. At the moment it is unclear how to generalize to the Stinespring rep. . **changes**; - in `type_from_dims` the flag `enforce_square` was set to `False`. This helps in the conversion.; - in `qobj`, `__mul__` was extended to allow construction of non square operators from an outer product using the suggestion of @Ericgig ; - `_super_tofrom_choi`, `choi_to_kraus`, `kraus_to_choi` have been changed so they work with non-square shapes.; - to support the above changes `vector_to_operator` and `vec2mat` were changed to allow for non square shapes. **other changes**; - `Qobj permute`. `tidyup` was removed from to resolve a failing test at the suggestion of @nonhermitian ; - `choi_to_kraus` and `to_kraus`. When converting from Choi to to Kraus there are many small norm Kraus operators. A `tol` parameter was added to help remove these spurious operators. ### Added Tests; **test_superoperator_reps**; - Convert non-square Kraus operator to Super + Choi matrix and back.; - Neglect tiny Kraus operators when converting Choi to Kraus. **test_superoper**; - Operator - vector - operator conversion with a tensor product state.; - Operator - vector - operator conversion for non-square matrix. **test_qobj**; - bra and ket multiplication with different dims e.g. [N, 1] and [1, M] for M \neq N",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021
https://github.com/qutip/qutip/pull/1100#issuecomment-540438166:29,Availability,error,error,29,"So Travis CI says there's an error in smesolve, which I haven't touched. :/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1100#issuecomment-540438166
https://github.com/qutip/qutip/pull/1100#issuecomment-541548331:109,Modifiability,refactor,refactoring,109,"There is a bunch of .xml and .iml files that keep being tracked in your PR, I expect this is not part of the refactoring but just due to your local environment? You can fix it setting up a specific gitignore in your workspace I think.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1100#issuecomment-541548331
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:176,Deployability,integrat,integrate,176,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:201,Deployability,integrat,integrate,201,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:236,Deployability,integrat,integrator,236,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:546,Deployability,install,installation,546,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:35,Integrability,interface,interface,35,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:176,Integrability,integrat,integrate,176,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:201,Integrability,integrat,integrate,201,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:236,Integrability,integrat,integrator,236,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153
https://github.com/qutip/qutip/issues/1103#issuecomment-541321578:140,Testability,test,test,140,"HI @Titanosaurus , have submitted a PR, you will have your fix when it gets merged. :). Usage would be as follows:; ```b = Bloch(); b.save(""test"", dpsi=500); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1103#issuecomment-541321578
https://github.com/qutip/qutip/pull/1104#issuecomment-541539574:63,Deployability,update,update,63,"The dpsi option worked fine on my mac from jupyter. ; - please update the docstring to highlight this option (could also add the presence of the `name` option, besides directory and format); - It is a nice feature, it could be highlighted in the documentation, here https://github.com/qutip/qutip-doc/blob/master/guide/guide-bloch.rst; - add to 4.4.1 enhancements in the changelog, https://github.com/qutip/qutip-doc/blob/master/changelog.rst; Let's skip the codeclimate issues for the moment, but in the future it might be nice to refactor the Bloch class inner workings, as it took me a while to sort out issue #1027.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574
https://github.com/qutip/qutip/pull/1104#issuecomment-541539574:351,Modifiability,enhance,enhancements,351,"The dpsi option worked fine on my mac from jupyter. ; - please update the docstring to highlight this option (could also add the presence of the `name` option, besides directory and format); - It is a nice feature, it could be highlighted in the documentation, here https://github.com/qutip/qutip-doc/blob/master/guide/guide-bloch.rst; - add to 4.4.1 enhancements in the changelog, https://github.com/qutip/qutip-doc/blob/master/changelog.rst; Let's skip the codeclimate issues for the moment, but in the future it might be nice to refactor the Bloch class inner workings, as it took me a while to sort out issue #1027.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574
https://github.com/qutip/qutip/pull/1104#issuecomment-541539574:532,Modifiability,refactor,refactor,532,"The dpsi option worked fine on my mac from jupyter. ; - please update the docstring to highlight this option (could also add the presence of the `name` option, besides directory and format); - It is a nice feature, it could be highlighted in the documentation, here https://github.com/qutip/qutip-doc/blob/master/guide/guide-bloch.rst; - add to 4.4.1 enhancements in the changelog, https://github.com/qutip/qutip-doc/blob/master/changelog.rst; Let's skip the codeclimate issues for the moment, but in the future it might be nice to refactor the Bloch class inner workings, as it took me a while to sort out issue #1027.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574
https://github.com/qutip/qutip/pull/1104#issuecomment-541539574:313,Usability,guid,guide,313,"The dpsi option worked fine on my mac from jupyter. ; - please update the docstring to highlight this option (could also add the presence of the `name` option, besides directory and format); - It is a nice feature, it could be highlighted in the documentation, here https://github.com/qutip/qutip-doc/blob/master/guide/guide-bloch.rst; - add to 4.4.1 enhancements in the changelog, https://github.com/qutip/qutip-doc/blob/master/changelog.rst; Let's skip the codeclimate issues for the moment, but in the future it might be nice to refactor the Bloch class inner workings, as it took me a while to sort out issue #1027.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574
https://github.com/qutip/qutip/pull/1104#issuecomment-541539574:319,Usability,guid,guide-bloch,319,"The dpsi option worked fine on my mac from jupyter. ; - please update the docstring to highlight this option (could also add the presence of the `name` option, besides directory and format); - It is a nice feature, it could be highlighted in the documentation, here https://github.com/qutip/qutip-doc/blob/master/guide/guide-bloch.rst; - add to 4.4.1 enhancements in the changelog, https://github.com/qutip/qutip-doc/blob/master/changelog.rst; Let's skip the codeclimate issues for the moment, but in the future it might be nice to refactor the Bloch class inner workings, as it took me a while to sort out issue #1027.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574
https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:91,Deployability,update,update,91,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457
https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:215,Deployability,update,update,215,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457
https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:257,Deployability,release,release,257,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457
https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:109,Testability,log,log,109,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457
https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:233,Testability,log,log,233,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457
https://github.com/qutip/qutip/pull/1107#issuecomment-543197728:30,Integrability,depend,dependent,30,"Having any callable as a time-dependent components is good but the way here breaks the tests.; Moving the callable check after the check for `Cublic_Spline`, should fix the problem. `Cublic_Spline` is callable but not treated as a function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1107#issuecomment-543197728
https://github.com/qutip/qutip/pull/1107#issuecomment-543197728:87,Testability,test,tests,87,"Having any callable as a time-dependent components is good but the way here breaks the tests.; Moving the callable check after the check for `Cublic_Spline`, should fix the problem. `Cublic_Spline` is callable but not treated as a function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1107#issuecomment-543197728
https://github.com/qutip/qutip/issues/1109#issuecomment-542708686:29,Availability,error,error,29,"Hi @tehruhn, I also have the error but it does not appear when using jupyter so I missed it. The error comes from a line inside a `try` block, so I am not sure why it is not properly suppressed... I did touch much in that area so it should be a simple fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686
https://github.com/qutip/qutip/issues/1109#issuecomment-542708686:97,Availability,error,error,97,"Hi @tehruhn, I also have the error but it does not appear when using jupyter so I missed it. The error comes from a line inside a `try` block, so I am not sure why it is not properly suppressed... I did touch much in that area so it should be a simple fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686
https://github.com/qutip/qutip/issues/1109#issuecomment-542708686:245,Usability,simpl,simple,245,"Hi @tehruhn, I also have the error but it does not appear when using jupyter so I missed it. The error comes from a line inside a `try` block, so I am not sure why it is not properly suppressed... I did touch much in that area so it should be a simple fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686
https://github.com/qutip/qutip/issues/1111#issuecomment-809411375:258,Safety,avoid,avoided,258,"Closing now due to lack of activity. The problem is likely caused by `from math import *` shadowing many functions that should be called from `numpy`, as noted above. (I take this opportunity to evangelise the belief that star-imports are evil and should be avoided in almost all situations.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1111#issuecomment-809411375
https://github.com/qutip/qutip/issues/1112#issuecomment-1970976650:1051,Modifiability,rewrite,rewrite,1051,"I have come across the same problem. If you set g=2 you will have a different normalization for the Wigner function. W(0,0)=-0.63661977 is the 0,0 point of the single photon, which usually should be -1/pi so here we multiplied it by two. Same goes for g=1 where you divide it by 2 as far as I see. This does not change the normalization of the marginal distributions so all of those Wigner functions with different g are valid phase-space quasi-probabilities. What does change in fact with the factor g is the commutator relation [x,p]=a*i, where if g!=sqrt(2) a!=1. This will in fact change how we connect annihilation, creation, position and momentum operators together. ; In the case g=sqrt(2) we have the definition x=1/sqrt(2)(a^\dagger + a) and p = i/sqrt(2)(a^\dagger - a).; If we now consider the question at hand concerning the coherent state amplitude we easily understand what is happening. A coherent state is defined by the displacement operator D(\alpha) which is defined as D(\alpha)=Exp[\alpha a^\dagger - Conj[\alpha]a], where we can rewrite the exponential argument as Re(\alpha)(a^\dagger - a) + i Im(\alpha) (a^\dagger + a) which is Re(\alpha) p sqrt(2) + Im(\alpha) x sqrt(2). You can see that with this definition there is a scaling factor alpha/sqrt(2) if we want to plot it in x,p phase space. So all you need to do is rescale your amplitude.; If you instead want to have g=2 then there is no rescaling needed, but your commutator relation and therefore your Heisenberg uncertainty minimum will change.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1112#issuecomment-1970976650
https://github.com/qutip/qutip/pull/1113#issuecomment-558986865:0,Availability,Ping,Pinging,0,Pinging @tehruhn for help in reviewing this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1113#issuecomment-558986865
https://github.com/qutip/qutip/pull/1115#issuecomment-546760124:24,Safety,safe,safety,24,I also added a few more safety checks. These may be helpful for anyone trying to convert some old example to v4.4 compatible.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546760124
https://github.com/qutip/qutip/pull/1115#issuecomment-546778114:226,Availability,error,error,226,I also switched the `general_stochastic` parameter checking exceptions type from `Exception` to:; `TypeError` for incorrect object type; `ValueError` for some incorrect property of object; `RuntimeError` for unknown source of error. I think this is good practice.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546778114
https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:252,Availability,avail,available,252,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283
https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:470,Energy Efficiency,adapt,adapted,470,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283
https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:470,Modifiability,adapt,adapted,470,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283
https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:660,Performance,perform,performance,660,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283
https://github.com/qutip/qutip/pull/1115#issuecomment-547215581:284,Modifiability,enhance,enhancement,284,Thanks @Ericgig for feedback.; I see (having read more carefully) in; https://github.com/qutip/qutip-notebooks/blob/master/examples/smesolve-inefficient-detection.ipynb; there is an example showing the equivalence of using `smesolve` and `general_stochastic` with a clear performance enhancement in the former. So I think I can easily switch my example to use `smesolve`. Thanks.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547215581
https://github.com/qutip/qutip/pull/1115#issuecomment-547215581:272,Performance,perform,performance,272,Thanks @Ericgig for feedback.; I see (having read more carefully) in; https://github.com/qutip/qutip-notebooks/blob/master/examples/smesolve-inefficient-detection.ipynb; there is an example showing the equivalence of using `smesolve` and `general_stochastic` with a clear performance enhancement in the former. So I think I can easily switch my example to use `smesolve`. Thanks.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547215581
https://github.com/qutip/qutip/pull/1115#issuecomment-547215581:153,Safety,detect,detection,153,Thanks @Ericgig for feedback.; I see (having read more carefully) in; https://github.com/qutip/qutip-notebooks/blob/master/examples/smesolve-inefficient-detection.ipynb; there is an example showing the equivalence of using `smesolve` and `general_stochastic` with a clear performance enhancement in the former. So I think I can easily switch my example to use `smesolve`. Thanks.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547215581
https://github.com/qutip/qutip/pull/1115#issuecomment-547215581:20,Usability,feedback,feedback,20,Thanks @Ericgig for feedback.; I see (having read more carefully) in; https://github.com/qutip/qutip-notebooks/blob/master/examples/smesolve-inefficient-detection.ipynb; there is an example showing the equivalence of using `smesolve` and `general_stochastic` with a clear performance enhancement in the former. So I think I can easily switch my example to use `smesolve`. Thanks.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547215581
https://github.com/qutip/qutip/pull/1115#issuecomment-547215581:266,Usability,clear,clear,266,Thanks @Ericgig for feedback.; I see (having read more carefully) in; https://github.com/qutip/qutip-notebooks/blob/master/examples/smesolve-inefficient-detection.ipynb; there is an example showing the equivalence of using `smesolve` and `general_stochastic` with a clear performance enhancement in the former. So I think I can easily switch my example to use `smesolve`. Thanks.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547215581
https://github.com/qutip/qutip/pull/1115#issuecomment-547219289:159,Modifiability,variab,variable,159,"The `general_stochastic` function does process the `e_ops`. ; I see your point about it being it being a general solver of SDEs and so it makes sense that the variable is a vector. Certainly no value in changing the processing to work on Qobj.; I just think it would make usage easier if `state0` and `e_ops` (and I guess `m_ops`) could be provided as dm and opers rather than vectorised and superoperators. These could be recognised as such and converted before processing. We could then convert the `result.states` accordingly. . Anyway, I am only just beginning to understand this stuff, so I will leave it up to your judgement as to whether this is worth the effort. If the aim to try always to avoid `general_stochastic`, then I suppose it is not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547219289
https://github.com/qutip/qutip/pull/1115#issuecomment-547219289:699,Safety,avoid,avoid,699,"The `general_stochastic` function does process the `e_ops`. ; I see your point about it being it being a general solver of SDEs and so it makes sense that the variable is a vector. Certainly no value in changing the processing to work on Qobj.; I just think it would make usage easier if `state0` and `e_ops` (and I guess `m_ops`) could be provided as dm and opers rather than vectorised and superoperators. These could be recognised as such and converted before processing. We could then convert the `result.states` accordingly. . Anyway, I am only just beginning to understand this stuff, so I will leave it up to your judgement as to whether this is worth the effort. If the aim to try always to avoid `general_stochastic`, then I suppose it is not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547219289
https://github.com/qutip/qutip/pull/1115#issuecomment-547310886:25,Testability,test,tested,25,re latest commit: I have tested some but not all of the `StochasticSolverOptions.__init__()` checking exceptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547310886
https://github.com/qutip/qutip/pull/1115#issuecomment-547751565:205,Security,access,access,205,"`traj_states` property added to result object. This is just `states` unless `average_states` is used. When `average_states` is used then it is the original trajectory states. Sometimes it can be useful to access the original trajectory states. . `avg_states` property added to result object. This is the same as `states` when `average_states` is used, otherwise it is `None`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-547751565
https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:52,Availability,error,error,52,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373
https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:203,Availability,error,errors,203,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373
https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:556,Deployability,Install,Installed,556,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373
https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:46,Testability,test,test,46,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373
https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:78,Testability,test,test,78,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:100,Deployability,install,installed,100,"I am with the same problem. Note that the QuTiP version and the python version is different. I have installed the python via macports, but I have also tested in anaconda system. The problem is the same in the anaconda. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.loggin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:836,Deployability,Install,Installed,836,"I am with the same problem. Note that the QuTiP version and the python version is different. I have installed the python via macports, but I have also tested in anaconda system. The problem is the same in the anaconda. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.loggin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:908,Deployability,Install,Installation,908,"I am with the same problem. Note that the QuTiP version and the python version is different. I have installed the python via macports, but I have also tested in anaconda system. The problem is the same in the anaconda. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.loggin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3323,Integrability,depend,dependent,3323,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3366,Integrability,depend,dependent,3366,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3426,Integrability,depend,dependent,3426,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3482,Integrability,depend,dependent,3482,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2043,Performance,optimiz,optimizer,2043,"15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2222,Performance,load,loadparams,2222,"========================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input lis",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:151,Testability,test,tested,151,"I am with the same problem. Note that the QuTiP version and the python version is different. I have installed the python via macports, but I have also tested in anaconda system. The problem is the same in the anaconda. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.loggin",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1399,Testability,log,logger,1399,"admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Tra",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1485,Testability,log,logger,1485,"l Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigen",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1577,Testability,log,logger,1577,e collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+3421bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency be,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1666,Testability,log,logger,1666,bc5c; Numpy Version: 1.17.4; Scipy Version: 1.3.2; Cython Version: 0.29.14; Matplotlib Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eige,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1751,Testability,log,logger,1751,b Version: 3.1.1; Python Version: 3.8.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations m,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1841,Testability,log,logger,1841,stalled: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; b,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:1929,Testability,log,logger,1929, /opt/local/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_op,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2018,Testability,log,logger,2018,"qutip-4.5.0.dev0+3421bc5c-py3.8-macosx-10.15-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic os",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2108,Testability,log,logger,2108,"===================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2197,Testability,log,logger,2197,"n.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2288,Testability,log,logger,2288,"r convenience a bibtex reference can be easily generated using `qutip.cite()`; DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:3290,Testability,test,tests,3290,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/issues/1124#issuecomment-552991482:2848,Usability,simpl,simple,2848,"ing logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1124#issuecomment-552991482
https://github.com/qutip/qutip/pull/1125#issuecomment-552629094:122,Testability,test,tests,122,I got a hard crash (segfault?) on macOS 10.14 but not on macOS 10.13: xcode10 vs xcode11.2; We should wait a bit more for tests python 3.8,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1125#issuecomment-552629094
https://github.com/qutip/qutip/pull/1127#issuecomment-553129753:0,Testability,Test,Tests,0,Tests should all pass once #1125 is merged,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1127#issuecomment-553129753
https://github.com/qutip/qutip/issues/1128#issuecomment-590317281:287,Deployability,update,update,287,"I discovered the issue originated from this commit da642a3539cbf1d3d8c391576eedd3a3f6bdc50e. This prevented the Husimi Q function being correctly calculated for non-integer spin systems. There is a remaining factor of 1/pi to be included as well, which I might treat as an option when I update the code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1128#issuecomment-590317281
https://github.com/qutip/qutip/issues/1129#issuecomment-607721916:587,Testability,test,testing,587,"This is old, but caught my eye - it might be worth us revisiting. There's a few places in the code where the version requirement is 0.14, and also I'm not 100% certain that 0.21 is the minimum requirement anymore; I think the ability to pickle `cdef`'ed classes requires 0.26. Perhaps @Ericgig knows? The `cython >= 0.21` requirement was added in 836ab63 back in December 2016. Also, `cython` isn't actually a hard requirement, just like `matplotlib` (which was removed from `requirements.txt` in bc7b3c0 (February 2014) because they weren't mandatory. Maybe something to add in to the [testing and distribution project](https://github.com/qutip/qutip/projects/3)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607721916
https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:171,Availability,avail,available,171,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651
https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:88,Deployability,install,installation,88,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651
https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:105,Deployability,install,installation,105,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651
https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:307,Integrability,depend,depend,307,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651
https://github.com/qutip/qutip/issues/1129#issuecomment-809407636:66,Deployability,update,updated,66,Closing this for now as the runtime optional requirement has been updated to 0.29.20 as of #1465.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-809407636
https://github.com/qutip/qutip/issues/1130#issuecomment-560242929:149,Usability,guid,guidelines,149,"All open issues and PRs have now been labeled with the `code` and `physics` labels, some of them with both. I would add in the contributing to QuTiP guidelines something about this for new issues and PRs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1130#issuecomment-560242929
https://github.com/qutip/qutip/pull/1131#issuecomment-560232262:87,Testability,test,test,87,"So, in travis, only test_control_pulseoptim.py fails, but for all containers. The same test also fails locally for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560232262
https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:56,Availability,error,error,56,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003
https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:135,Testability,test,test,135,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003
https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:173,Testability,Test,TestPulseOptim,173,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003
https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:238,Testability,Test,TestPulseOptim,238,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003
https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:379,Testability,test,test,379,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003
https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:449,Testability,test,test,449,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003
https://github.com/qutip/qutip/pull/1131#issuecomment-560254158:89,Availability,avail,available,89,"The problem was that I was using a pytest plugin to output the docstrings, which are not available in conda. Now I just increased verbosity to 2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560254158
https://github.com/qutip/qutip/pull/1131#issuecomment-560254158:42,Modifiability,plugin,plugin,42,"The problem was that I was using a pytest plugin to output the docstrings, which are not available in conda. Now I just increased verbosity to 2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560254158
https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:146,Deployability,update,update,146,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938
https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:335,Deployability,install,installation,335,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938
https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:443,Deployability,install,installation,443,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938
https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:300,Integrability,depend,dependencies,300,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938
https://github.com/qutip/qutip/pull/1131#issuecomment-560280938:483,Usability,guid,guidelines,483,"All builds pass, besides the build on Python 3.7 without Cython. I would still merge this PR and focus on that issue separately. . Now we need to update places where `nose` is mentioned, I found these in `qutip-doc`; - the [changelog](https://github.com/qutip/qutip-doc), ; - the instructions on the dependencies in the documentation [installation instructions](https://github.com/qutip/qutip-doc/blob/402ec10de7a314ba9f124ddac7514621e92496df/installation.rst), ; - and [development guidelines](https://github.com/qutip/qutip-doc/blob/2ffd6d1cc581e858674d43fe97a9297e9476a278/qutip_dev_contrib.md).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560280938
https://github.com/qutip/qutip/pull/1131#issuecomment-560281185:9,Testability,test,tests,9,"Now only tests which fail are on the ""Python 3.7 no Cython container"". Everything else passes. Looking into these right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560281185
https://github.com/qutip/qutip/pull/1131#issuecomment-560292804:40,Testability,test,testing,40,"Latest commit changes the code in qutip.testing to run pytest instead of nose. ; That is,; ```; import qutip.testing as qt; qt.run(); ```; will now use pytest and not nose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560292804
https://github.com/qutip/qutip/pull/1131#issuecomment-560292804:109,Testability,test,testing,109,"Latest commit changes the code in qutip.testing to run pytest instead of nose. ; That is,; ```; import qutip.testing as qt; qt.run(); ```; will now use pytest and not nose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560292804
https://github.com/qutip/qutip/pull/1131#issuecomment-561931270:193,Testability,test,tests,193,"Hi @Ericgig , ; Could you please take a look at this? Me and @nathanshammah were wondering if this should be merged as-is, but a new issue should be opened to reflect that the Python no Cython tests fail? Or maybe we could fix them, and could you help with what's going wrong?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-561931270
https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:299,Availability,error,error,299,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739
https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:32,Testability,test,tests,32,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739
https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:62,Testability,test,test,62,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739
https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:88,Testability,test,tests,88,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739
https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:173,Testability,test,tests,173,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739
https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:243,Testability,test,tests,243,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739
https://github.com/qutip/qutip/pull/1131#issuecomment-562414356:65,Testability,test,tests,65,@nathanshammah I think @Ericgig is right because it doesn't fail tests locally. Should this be merged for now? If it causes problems we can create new issues later.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562414356
https://github.com/qutip/qutip/pull/1131#issuecomment-563243088:422,Availability,fault,fault,422,"@tehruhn let's look into this together this week so that I can understand better also Eric comments. I would be happy to merge, and open a separate issue on the np-Cython bit. nose to pytest migration has been dragging on for ages. Also, please let's try to find a way to have the docstrings print to screen, the verbosity=2 thing does not seem to work. With `nose` and current development master now I get a segmentation fault on Mac 10.14 so I cannot test locally.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-563243088
https://github.com/qutip/qutip/pull/1131#issuecomment-563243088:453,Testability,test,test,453,"@tehruhn let's look into this together this week so that I can understand better also Eric comments. I would be happy to merge, and open a separate issue on the np-Cython bit. nose to pytest migration has been dragging on for ages. Also, please let's try to find a way to have the docstrings print to screen, the verbosity=2 thing does not seem to work. With `nose` and current development master now I get a segmentation fault on Mac 10.14 so I cannot test locally.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-563243088
https://github.com/qutip/qutip/pull/1131#issuecomment-563919205:65,Availability,fault,fault,65,"locally on my machine, also with pytest, it gives a segmentation fault at brmesolve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-563919205
https://github.com/qutip/qutip/pull/1131#issuecomment-570710549:162,Modifiability,rewrite,rewrite,162,"Could you make 2 changes:; `verbosity=1`, it looks a lot cleaner.; The tests that ""XFAIL"" use `yield` and are skipped as it is not supported by pytest. Could you rewrite them without it. (4 in `test_qobj`, not sure if there are more.) I will be looking at the failing tests in more detail next week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-570710549
https://github.com/qutip/qutip/pull/1131#issuecomment-570710549:71,Testability,test,tests,71,"Could you make 2 changes:; `verbosity=1`, it looks a lot cleaner.; The tests that ""XFAIL"" use `yield` and are skipped as it is not supported by pytest. Could you rewrite them without it. (4 in `test_qobj`, not sure if there are more.) I will be looking at the failing tests in more detail next week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-570710549
https://github.com/qutip/qutip/pull/1131#issuecomment-570710549:268,Testability,test,tests,268,"Could you make 2 changes:; `verbosity=1`, it looks a lot cleaner.; The tests that ""XFAIL"" use `yield` and are skipped as it is not supported by pytest. Could you rewrite them without it. (4 in `test_qobj`, not sure if there are more.) I will be looking at the failing tests in more detail next week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-570710549
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:259,Availability,error,error,259,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:1118,Energy Efficiency,energy,energy,1118,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:1137,Energy Efficiency,energy,energy,1137,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:116,Modifiability,variab,variable,116,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:128,Modifiability,variab,variable,128,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:165,Modifiability,rewrite,rewrite,165,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:1339,Modifiability,rewrite,rewrite,1339,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:101,Testability,test,test,101,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:178,Testability,test,tests,178,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:548,Testability,test,testing,548,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:1106,Testability,assert,assert,1106,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:1355,Testability,test,tests,1355,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013
https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:512,Integrability,message,message,512,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523
https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:376,Testability,Test,Test,376,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523
https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:583,Testability,test,test,583,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523
https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:740,Testability,test,tests,740,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523
https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:757,Testability,test,testing,757,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523
https://github.com/qutip/qutip/pull/1131#issuecomment-571198523:311,Usability,simpl,simply,311,"I believe that all permutation are run with `parametrize`. So the input (`qobj`) is compared to each outputs `(expected`), not just the matching one. Also the rotation matrix (`U = rand_unitary(3)`) must be constant. Here, at least 4 different random operators are created. Instead of `parametrize` and `yield` simply calling the function `case` would work:; ```; yield case(""Test Qobj: trunc_neg works for positive opers.""), \; rand_dm(5), method; ```; to; ```; case(rand_dm(5), method, None); ```; To keep the message, `assert_almost_equal` has a `err_msg` keyword to raise if the test fails. I do not believe the `yield` is the cause of the no cython fails. ps. I will make a branch of this PR and will add `mark` to prepare a subset of tests for faster testing #1147.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571198523
https://github.com/qutip/qutip/pull/1131#issuecomment-574189773:28,Testability,test,tests,28,@nathanshammah @Ericgig all tests seem to pass. Please review. Also thanks for your fix @Ericgig.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-574189773
https://github.com/qutip/qutip/pull/1131#issuecomment-574215718:34,Testability,test,testing,34,"Can confirm that on running qutip.testing.run( ) locally, it prints a one line description of tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-574215718
https://github.com/qutip/qutip/pull/1131#issuecomment-574215718:94,Testability,test,tests,94,"Can confirm that on running qutip.testing.run( ) locally, it prints a one line description of tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-574215718
https://github.com/qutip/qutip/pull/1131#issuecomment-574221111:79,Testability,test,test,79,"I get the not the docstring but the function name. `verbosity=2` also give the test file full path, but not the docstring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-574221111
https://github.com/qutip/qutip/issues/1132#issuecomment-563696592:126,Availability,down,downside,126,"# Projects. Another option is to use the Projects section on GitHub, which I am testing for a couple of ongoing projects. The downside of this option is that only organization members / owners can add or edit projects. https://github.com/qutip/qutip/projects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1132#issuecomment-563696592
https://github.com/qutip/qutip/issues/1132#issuecomment-563696592:80,Testability,test,testing,80,"# Projects. Another option is to use the Projects section on GitHub, which I am testing for a couple of ongoing projects. The downside of this option is that only organization members / owners can add or edit projects. https://github.com/qutip/qutip/projects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1132#issuecomment-563696592
https://github.com/qutip/qutip/issues/1134#issuecomment-560293809:54,Deployability,install,install,54,"We only use it for Travis, the end user only needs to install pytest.; I don't think removing it should change the output, but we can try it if you think it might work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1134#issuecomment-560293809
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:504,Deployability,release,release,504,"Hi @Ericgig ; Thanks for investigating this so thoroughly. ; I guess it makes sense that unpacking a dict at each call is inefficient, so I think we should drop this idea. As you have suggested previously, users can always use module variables if they wish to avoid passing vars in `args`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:1867,Energy Efficiency,efficient,efficient,1867,"ospection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there are special_value_kind args given, these are replaced with an arg `{name:value}` with the `value` being the value of the special_value_kind at time t. We should use internal flags (attribs) to control the special_value_kind processing, This will be more efficient than checking the args dict at every time step for special_value_kind keys, e.g.; - `_state_vec_key`: default `None`, or string key to the arg element. So, unless I have missed something regarding the importance of `**args`, then I think this plan covers what we need and makes everything a bit simpler, which is always ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:2542,Energy Efficiency,efficient,efficient,2542,"ion to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there are special_value_kind args given, these are replaced with an arg `{name:value}` with the `value` being the value of the special_value_kind at time t. We should use internal flags (attribs) to control the special_value_kind processing, This will be more efficient than checking the args dict at every time step for special_value_kind keys, e.g.; - `_state_vec_key`: default `None`, or string key to the arg element. So, unless I have missed something regarding the importance of `**args`, then I think this plan covers what we need and makes everything a bit simpler, which is always good.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:234,Modifiability,variab,variables,234,"Hi @Ericgig ; Thanks for investigating this so thoroughly. ; I guess it makes sense that unpacking a dict at each call is inefficient, so I think we should drop this idea. As you have suggested previously, users can always use module variables if they wish to avoid passing vars in `args`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:260,Safety,avoid,avoid,260,"Hi @Ericgig ; Thanks for investigating this so thoroughly. ; I guess it makes sense that unpacking a dict at each call is inefficient, so I think we should drop this idea. As you have suggested previously, users can always use module variables if they wish to avoid passing vars in `args`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:326,Usability,simpl,simple,326,"Hi @Ericgig ; Thanks for investigating this so thoroughly. ; I guess it makes sense that unpacking a dict at each call is inefficient, so I think we should drop this idea. As you have suggested previously, users can always use module variables if they wish to avoid passing vars in `args`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:943,Usability,clear,clearly,943,"Hi @Ericgig ; Thanks for investigating this so thoroughly. ; I guess it makes sense that unpacking a dict at each call is inefficient, so I think we should drop this idea. As you have suggested previously, users can always use module variables if they wish to avoid passing vars in `args`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:1300,Usability,simpl,simple,1300,"`. So I think we should aim to keep it simple. I think adding `f(t)` as a signature option will be sufficient for what @goerz wanted and would be sufficient for using a Numba jit. So, my suggestion for the next major release (v5) would be that we have only two call sigs:; - `f(t, args)` (default); - `f(t)`. For now we will have to have the three (although I don't think the `rhs_with_state` is not widely used, if at all).; - `f(t, args)` (default); - `f(t)`; - `f(t, state, args)`; The default needs to remain as it is, because it is widely used. I think it makes sense to use introspection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:1846,Usability,clear,clearly,1846,"ospection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there are special_value_kind args given, these are replaced with an arg `{name:value}` with the `value` being the value of the special_value_kind at time t. We should use internal flags (attribs) to control the special_value_kind processing, This will be more efficient than checking the args dict at every time step for special_value_kind keys, e.g.; - `_state_vec_key`: default `None`, or string key to the arg element. So, unless I have missed something regarding the importance of `**args`, then I think this plan covers what we need and makes everything a bit simpler, which is always ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:2847,Usability,simpl,simpler,2847,"ion to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there are special_value_kind args given, these are replaced with an arg `{name:value}` with the `value` being the value of the special_value_kind at time t. We should use internal flags (attribs) to control the special_value_kind processing, This will be more efficient than checking the args dict at every time step for special_value_kind keys, e.g.; - `_state_vec_key`: default `None`, or string key to the arg element. So, unless I have missed something regarding the importance of `**args`, then I think this plan covers what we need and makes everything a bit simpler, which is always good.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162
https://github.com/qutip/qutip/issues/1136#issuecomment-562812696:224,Integrability,depend,dependent,224,"Sorry for the slow response... It seems to me like @Ericgig summed it up pretty concisely. Although I'm not sure I understand how #1123 fits in: what is the plan for `Qobjevofunc`, and how would it fit in to specifying time-dependent Hamiltonians?. The only thing that's ever really bothered me was the mandatory `args` as part of the signature, even if it's not used. That's lead to the need for workarounds like the `allow_args` parameter in; https://github.com/qucontrol/qdynpylib/blob/f7b54af3e586683cdfd9b3dd666c5cf540d843e1/src/qdyn/pulse.py#L555. If there's a future `f(t)` option, I should be happy. In the abstract, `f(t, **args)` and `f(t, state_vec, **args)` would be the most elegant, but if there's a severe performance hit, that could be a problem. I'm surprised, though: I would have thought that `f(t, **args)` and `f(t, args)` should be almost the same thing in the Python internals, since you can modify `args` inside of `f` and pass it to lowerlevel function as `**args` again. Even from the user's perspective any current code with signature `f(t, args)` could have its signature replaced with `f(t, **args)` without requiring any change to the function body. But I'm clearly missing something. Can you point me to lines in the code where this becomes a bottleneck?. I'm also quite in favor of introspection to accept a wide variety of signatures: you can even introspect argument names, so the possibilities are endless. The introspection is probably slow, but if it only has to be done in a very high level function, that might be alright.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562812696
https://github.com/qutip/qutip/issues/1136#issuecomment-562812696:721,Performance,perform,performance,721,"Sorry for the slow response... It seems to me like @Ericgig summed it up pretty concisely. Although I'm not sure I understand how #1123 fits in: what is the plan for `Qobjevofunc`, and how would it fit in to specifying time-dependent Hamiltonians?. The only thing that's ever really bothered me was the mandatory `args` as part of the signature, even if it's not used. That's lead to the need for workarounds like the `allow_args` parameter in; https://github.com/qucontrol/qdynpylib/blob/f7b54af3e586683cdfd9b3dd666c5cf540d843e1/src/qdyn/pulse.py#L555. If there's a future `f(t)` option, I should be happy. In the abstract, `f(t, **args)` and `f(t, state_vec, **args)` would be the most elegant, but if there's a severe performance hit, that could be a problem. I'm surprised, though: I would have thought that `f(t, **args)` and `f(t, args)` should be almost the same thing in the Python internals, since you can modify `args` inside of `f` and pass it to lowerlevel function as `**args` again. Even from the user's perspective any current code with signature `f(t, args)` could have its signature replaced with `f(t, **args)` without requiring any change to the function body. But I'm clearly missing something. Can you point me to lines in the code where this becomes a bottleneck?. I'm also quite in favor of introspection to accept a wide variety of signatures: you can even introspect argument names, so the possibilities are endless. The introspection is probably slow, but if it only has to be done in a very high level function, that might be alright.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562812696
https://github.com/qutip/qutip/issues/1136#issuecomment-562812696:1274,Performance,bottleneck,bottleneck,1274,"Sorry for the slow response... It seems to me like @Ericgig summed it up pretty concisely. Although I'm not sure I understand how #1123 fits in: what is the plan for `Qobjevofunc`, and how would it fit in to specifying time-dependent Hamiltonians?. The only thing that's ever really bothered me was the mandatory `args` as part of the signature, even if it's not used. That's lead to the need for workarounds like the `allow_args` parameter in; https://github.com/qucontrol/qdynpylib/blob/f7b54af3e586683cdfd9b3dd666c5cf540d843e1/src/qdyn/pulse.py#L555. If there's a future `f(t)` option, I should be happy. In the abstract, `f(t, **args)` and `f(t, state_vec, **args)` would be the most elegant, but if there's a severe performance hit, that could be a problem. I'm surprised, though: I would have thought that `f(t, **args)` and `f(t, args)` should be almost the same thing in the Python internals, since you can modify `args` inside of `f` and pass it to lowerlevel function as `**args` again. Even from the user's perspective any current code with signature `f(t, args)` could have its signature replaced with `f(t, **args)` without requiring any change to the function body. But I'm clearly missing something. Can you point me to lines in the code where this becomes a bottleneck?. I'm also quite in favor of introspection to accept a wide variety of signatures: you can even introspect argument names, so the possibilities are endless. The introspection is probably slow, but if it only has to be done in a very high level function, that might be alright.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562812696
https://github.com/qutip/qutip/issues/1136#issuecomment-562812696:1188,Usability,clear,clearly,1188,"Sorry for the slow response... It seems to me like @Ericgig summed it up pretty concisely. Although I'm not sure I understand how #1123 fits in: what is the plan for `Qobjevofunc`, and how would it fit in to specifying time-dependent Hamiltonians?. The only thing that's ever really bothered me was the mandatory `args` as part of the signature, even if it's not used. That's lead to the need for workarounds like the `allow_args` parameter in; https://github.com/qucontrol/qdynpylib/blob/f7b54af3e586683cdfd9b3dd666c5cf540d843e1/src/qdyn/pulse.py#L555. If there's a future `f(t)` option, I should be happy. In the abstract, `f(t, **args)` and `f(t, state_vec, **args)` would be the most elegant, but if there's a severe performance hit, that could be a problem. I'm surprised, though: I would have thought that `f(t, **args)` and `f(t, args)` should be almost the same thing in the Python internals, since you can modify `args` inside of `f` and pass it to lowerlevel function as `**args` again. Even from the user's perspective any current code with signature `f(t, args)` could have its signature replaced with `f(t, **args)` without requiring any change to the function body. But I'm clearly missing something. Can you point me to lines in the code where this becomes a bottleneck?. I'm also quite in favor of introspection to accept a wide variety of signatures: you can even introspect argument names, so the possibilities are endless. The introspection is probably slow, but if it only has to be done in a very high level function, that might be alright.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562812696
https://github.com/qutip/qutip/issues/1136#issuecomment-563011840:4,Performance,perform,performance,4,"The performance hit come from filtering the args. This is pretty much what I am doing:; ```; def f(t, args):; args_now = {key:args[key] for key in dict if not key.startswith(""_"")}; return original(t, **args_now); ```; With some work, I should be able to remove the need for `args_now` and get much faster. But there is still an extra layer. ; Introspection only need to be done once at setup, not at each call so it should have a great effect.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-563011840
https://github.com/qutip/qutip/pull/1139#issuecomment-562831745:145,Availability,mainten,maintenance,145,"Hi, @abhisekupadhyaya nice work! . Usually a high cognitive complexity indicates that the function is too long or too deep for understanding and maintenance, but sometimes it exaggerates a bit, so it's fine as long as everything is clear. To reduce the function length, for example, if the checking part and each gate parsing can be resued (e.g for QASM v2), they can be defined in a separate function. Another minor thing, what about leaving a short warning when ignoring the unsupported code?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745
https://github.com/qutip/qutip/pull/1139#issuecomment-562831745:242,Energy Efficiency,reduce,reduce,242,"Hi, @abhisekupadhyaya nice work! . Usually a high cognitive complexity indicates that the function is too long or too deep for understanding and maintenance, but sometimes it exaggerates a bit, so it's fine as long as everything is clear. To reduce the function length, for example, if the checking part and each gate parsing can be resued (e.g for QASM v2), they can be defined in a separate function. Another minor thing, what about leaving a short warning when ignoring the unsupported code?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745
https://github.com/qutip/qutip/pull/1139#issuecomment-562831745:232,Usability,clear,clear,232,"Hi, @abhisekupadhyaya nice work! . Usually a high cognitive complexity indicates that the function is too long or too deep for understanding and maintenance, but sometimes it exaggerates a bit, so it's fine as long as everything is clear. To reduce the function length, for example, if the checking part and each gate parsing can be resued (e.g for QASM v2), they can be defined in a separate function. Another minor thing, what about leaving a short warning when ignoring the unsupported code?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745
https://github.com/qutip/qutip/pull/1140#issuecomment-579635784:75,Deployability,release,release,75,"I think it is better to keep this on hold, and merge it after the upcoming release, also as my comments have not been addressed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-579635784
https://github.com/qutip/qutip/pull/1140#issuecomment-590470786:77,Deployability,release,release,77,"> I think it is better to keep this on hold, and merge it after the upcoming release, also as my comments have not been addressed. Sorry for the late reply. I think it would be better to keep it in the project tab. Code Climate Issues will be delt soon enough. I suppose it would be better if the advantage of #1090 is taken to support measurement in the qutip-circuit before moving on to Qiskit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-590470786
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:123,Deployability,update,updates,123,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:202,Deployability,update,updates,202,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:138,Testability,test,tests,138,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:359,Testability,test,tests,359,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:409,Testability,test,tests,409,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:448,Testability,test,tests,448,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:807,Testability,test,test,807,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:1016,Testability,test,test,1016,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/pull/1140#issuecomment-621946565:800,Usability,simpl,simply,800,"I was checking the status of this PR, sorry for the delay, @abhisekupadhyaya. . 1) **Address comments**: There's been some updates and CI tests pass. However, my comments are still not addressed, e.g., updates in docstrings, see above. Addressing this before the next months is crucial as then there may be quite some activity on the `qip` module. . 2) **Add tests**: We also need to add at least a couple of tests with some examples circuits. The tests could check:; 2.a) that the circuit does the same thing; 2.b) that the circuit is exactly the same (no change of gates into other gates). 2) **Qasm export**: Adding an export feature, e.g. `to_qasm`, would be great. But this PR could address just the import and be fine (changing name would be best). If the `to_qasm` feature was here, one could simply test it one way and return, and check that, e.g.; ```; read_qasm(qutip_circuit1.to_qasm()) == qutip_circuit1; read_qasm(qasm_circuit2).to_qasm() ==qasm_circuit2; ```; if this feature was there, one could also test randomly generated circuits. @abhisekupadhyaya do you think you can address 1) and 2)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1140#issuecomment-621946565
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:116,Availability,avail,available,116,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:1143,Availability,ping,pinged,1143,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:409,Deployability,configurat,configurations,409,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:409,Modifiability,config,configurations,409,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:47,Testability,test,test,47,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:340,Testability,test,tests,340,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:761,Testability,test,tests,761,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:810,Testability,test,tests,810,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:842,Testability,test,tests,842,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:861,Testability,test,tests,861,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:902,Testability,test,tests,902,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:991,Testability,test,testing,991,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:1072,Testability,test,tests,1072,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:1040,Usability,clear,clear,1040,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:57,Deployability,install,install,57,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:148,Deployability,install,installation,148,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:0,Testability,Test,Testing,0,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:77,Testability,test,tests,77,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:133,Testability,test,tests,133,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:223,Testability,test,test,223,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:370,Testability,test,test,370,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:93,Deployability,install,installation,93,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:113,Deployability,update,update,113,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:241,Deployability,update,update,241,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:313,Deployability,release,release,313,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:63,Testability,test,tests,63,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:88,Testability,test,test,88,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:220,Testability,test,tests,220,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:280,Testability,test,test,280,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1147#issuecomment-569797675:171,Usability,responsiv,responsive,171,@Ericgig not in any huge hurry. Once there is a nice subset of tests that can be run to test installation I will update the nixpkgs package for qutip. Thanks for being so responsive! For now I'll just delete some of the tests and can always update the package once the ability to test only a subset is added to a release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569797675
https://github.com/qutip/qutip/issues/1148#issuecomment-571526904:314,Usability,guid,guide,314,"You can make two pull requests: ; 1. You could add this information in the docstring of the `wigner` functions here in `qutip/qutip`, ; so that it appears here http://qutip.org/docs/latest/modules/qutip/wigner.html; 2. PR to to [`qutip/qutip-doc`]( https://github.com/qutip/qutip-doc) http://qutip.org/docs/latest/guide/guide-visualization.html#quasi-probability-distributions; by modifying the file `guide/guide-visualization.rst`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-571526904
https://github.com/qutip/qutip/issues/1148#issuecomment-571526904:320,Usability,guid,guide-visualization,320,"You can make two pull requests: ; 1. You could add this information in the docstring of the `wigner` functions here in `qutip/qutip`, ; so that it appears here http://qutip.org/docs/latest/modules/qutip/wigner.html; 2. PR to to [`qutip/qutip-doc`]( https://github.com/qutip/qutip-doc) http://qutip.org/docs/latest/guide/guide-visualization.html#quasi-probability-distributions; by modifying the file `guide/guide-visualization.rst`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-571526904
https://github.com/qutip/qutip/issues/1148#issuecomment-571526904:401,Usability,guid,guide,401,"You can make two pull requests: ; 1. You could add this information in the docstring of the `wigner` functions here in `qutip/qutip`, ; so that it appears here http://qutip.org/docs/latest/modules/qutip/wigner.html; 2. PR to to [`qutip/qutip-doc`]( https://github.com/qutip/qutip-doc) http://qutip.org/docs/latest/guide/guide-visualization.html#quasi-probability-distributions; by modifying the file `guide/guide-visualization.rst`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-571526904
https://github.com/qutip/qutip/issues/1148#issuecomment-571526904:407,Usability,guid,guide-visualization,407,"You can make two pull requests: ; 1. You could add this information in the docstring of the `wigner` functions here in `qutip/qutip`, ; so that it appears here http://qutip.org/docs/latest/modules/qutip/wigner.html; 2. PR to to [`qutip/qutip-doc`]( https://github.com/qutip/qutip-doc) http://qutip.org/docs/latest/guide/guide-visualization.html#quasi-probability-distributions; by modifying the file `guide/guide-visualization.rst`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-571526904
https://github.com/qutip/qutip/issues/1148#issuecomment-574254948:15,Availability,ping,pinging,15,@nquesada just pinging you as it would be great to have your contribution in the upcoming version release in a week or so.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948
https://github.com/qutip/qutip/issues/1148#issuecomment-574254948:98,Deployability,release,release,98,@nquesada just pinging you as it would be great to have your contribution in the upcoming version release in a week or so.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948
https://github.com/qutip/qutip/issues/1148#issuecomment-578520593:138,Deployability,release,release,138,Sorry for the delay @nathanshammah . I have made the changes in https://github.com/qutip/qutip/pull/1165 . Looking forward to see the new release!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-578520593
https://github.com/qutip/qutip/issues/1150#issuecomment-575503917:58,Integrability,depend,dependence,58,"The block-redfield solver only supports string-based time-dependence, ; http://qutip.org/docs/latest/guide/dynamics/dynamics-bloch-redfield.html#time-dependent-bloch-redfield-dynamics; so in your example something like H=[[initial_H,'1-0.01*{i}*t'.format(i=i)],[final_H,'0.01*{i}*t'.format(i=i)]] should work. I don't know whether that will give you the same issue as reported for repeated calls to mesolve/sesolve. Probably will, if that hasn't been resolved yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1150#issuecomment-575503917
https://github.com/qutip/qutip/issues/1150#issuecomment-575503917:150,Integrability,depend,dependent-bloch-redfield-dynamics,150,"The block-redfield solver only supports string-based time-dependence, ; http://qutip.org/docs/latest/guide/dynamics/dynamics-bloch-redfield.html#time-dependent-bloch-redfield-dynamics; so in your example something like H=[[initial_H,'1-0.01*{i}*t'.format(i=i)],[final_H,'0.01*{i}*t'.format(i=i)]] should work. I don't know whether that will give you the same issue as reported for repeated calls to mesolve/sesolve. Probably will, if that hasn't been resolved yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1150#issuecomment-575503917
https://github.com/qutip/qutip/issues/1150#issuecomment-575503917:101,Usability,guid,guide,101,"The block-redfield solver only supports string-based time-dependence, ; http://qutip.org/docs/latest/guide/dynamics/dynamics-bloch-redfield.html#time-dependent-bloch-redfield-dynamics; so in your example something like H=[[initial_H,'1-0.01*{i}*t'.format(i=i)],[final_H,'0.01*{i}*t'.format(i=i)]] should work. I don't know whether that will give you the same issue as reported for repeated calls to mesolve/sesolve. Probably will, if that hasn't been resolved yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1150#issuecomment-575503917
https://github.com/qutip/qutip/pull/1151#issuecomment-573570257:10,Testability,test,tests,10,No cython tests are failing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1151#issuecomment-573570257
https://github.com/qutip/qutip/pull/1151#issuecomment-577266894:99,Testability,test,testing,99,I added the feature explanation in the docstring. I don't think we have special documentation for `testing.run`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1151#issuecomment-577266894
https://github.com/qutip/qutip/pull/1155#issuecomment-577155245:142,Deployability,update,update,142,"@nathanshammah @ajgpitch . Hi Nathan and Alex, this PR is ready. Is it be possible to get it merged before 1st Feb? It would be great if this update is ready before the talk. The main change I did was in; - processor.py; - pulse.py; - noise.py. The others are just updating, renaming and moving around.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-577155245
https://github.com/qutip/qutip/pull/1155#issuecomment-578532075:120,Deployability,update,update,120,"Move compiler to a separate package. The new code climate issues are all from there. After #1074 get merged, one has to update all the `qutip.qip.gates` to `qutip.qip.operations` in this PR. Everything else should be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-578532075
https://github.com/qutip/qutip/pull/1155#issuecomment-578951420:5,Deployability,update,update,5,I'll update the notebook and test this more.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-578951420
https://github.com/qutip/qutip/pull/1155#issuecomment-578951420:29,Testability,test,test,29,I'll update the notebook and test this more.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-578951420
https://github.com/qutip/qutip/pull/1155#issuecomment-579661462:19,Testability,test,tests,19,@nathanshammah All tests passed now,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-579661462
https://github.com/qutip/qutip/issues/1156#issuecomment-578547513:54,Testability,log,logging,54,It seems that the library you are using turns off the logging stream. Maybe you can try `logging.disable(logging.DEBUG)`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578547513
https://github.com/qutip/qutip/issues/1156#issuecomment-578547513:89,Testability,log,logging,89,It seems that the library you are using turns off the logging stream. Maybe you can try `logging.disable(logging.DEBUG)`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578547513
https://github.com/qutip/qutip/issues/1156#issuecomment-578547513:105,Testability,log,logging,105,It seems that the library you are using turns off the logging stream. Maybe you can try `logging.disable(logging.DEBUG)`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578547513
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:373,Modifiability,config,config,373,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:87,Testability,log,log,87,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:114,Testability,log,logging,114,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:123,Testability,log,logging,123,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:152,Testability,log,logging,152,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:240,Testability,log,log,240,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-578627722:325,Testability,log,logging,325,"I worked around this by doing; ```py; import qutip; import the_library # this sets the log level to DEBUG; import logging; logging.getLogger().setLevel(logging.WARNING); ```; I supposes that it's a bit weird/wrong that the library sets the log level like that, and maybe it's understandable that qutip has somewhat automatic logging for IPython. The real issue is that the config for `log_handler` is broken. I could possibly submit a PR for that at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-578627722
https://github.com/qutip/qutip/issues/1156#issuecomment-2029146647:14,Testability,log,logging,14,Qutip use the logging library anymore.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1156#issuecomment-2029146647
https://github.com/qutip/qutip/issues/1158#issuecomment-575858423:458,Testability,test,tests,458,"I think you are right. According to [this version](https://github.com/qutip/qutip/commit/0d23a5b72e3eb2c9567d8a3918388cf96370438a#diff-b979016620c6998841cf7cefe791ebfe) and [this one](https://github.com/qutip/qutip/commit/97a65a3fee0983ae2d823a4fdf886aa02965ee5b#diff-b979016620c6998841cf7cefe791ebfe), before some of the latest and recent commits, the changes should be ; - `import qutip.settings as qset` ; - set the settings properties before running the tests; - delete the `nose` tests.; ; Would you like to fix it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-575858423
https://github.com/qutip/qutip/issues/1158#issuecomment-575858423:485,Testability,test,tests,485,"I think you are right. According to [this version](https://github.com/qutip/qutip/commit/0d23a5b72e3eb2c9567d8a3918388cf96370438a#diff-b979016620c6998841cf7cefe791ebfe) and [this one](https://github.com/qutip/qutip/commit/97a65a3fee0983ae2d823a4fdf886aa02965ee5b#diff-b979016620c6998841cf7cefe791ebfe), before some of the latest and recent commits, the changes should be ; - `import qutip.settings as qset` ; - set the settings properties before running the tests; - delete the `nose` tests.; ; Would you like to fix it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-575858423
https://github.com/qutip/qutip/issues/1158#issuecomment-575906709:194,Testability,test,tests,194,"I've sent a PR #1161 that fixes this, but a bigger worry is why this wasn't caught on Travis on other commits? I'm not familiar with the CI system, but at a cursory glance it looks like it just tests that QuTiP builds, and not that the tests succeed. Is that intentional?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-575906709
https://github.com/qutip/qutip/issues/1158#issuecomment-575906709:236,Testability,test,tests,236,"I've sent a PR #1161 that fixes this, but a bigger worry is why this wasn't caught on Travis on other commits? I'm not familiar with the CI system, but at a cursory glance it looks like it just tests that QuTiP builds, and not that the tests succeed. Is that intentional?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-575906709
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:414,Availability,error,errors,414,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:245,Deployability,install,install,245,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:401,Safety,abort,abort,401,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:20,Testability,test,testing,20,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:37,Testability,test,tests,37,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:259,Testability,test,test,259,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:357,Testability,test,tests,357,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319
https://github.com/qutip/qutip/issues/1158#issuecomment-576016364:270,Deployability,install,installation,270,"Yeah, that was what I was referring to - Travis just tests that the Cython parts compile. I'm new to working on code in any kind of organisation, so I wasn't sure if it's normal to have the unit tests run as part of the CI process, or if that was only meant to test the installation path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364
https://github.com/qutip/qutip/issues/1158#issuecomment-576016364:53,Testability,test,tests,53,"Yeah, that was what I was referring to - Travis just tests that the Cython parts compile. I'm new to working on code in any kind of organisation, so I wasn't sure if it's normal to have the unit tests run as part of the CI process, or if that was only meant to test the installation path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364
https://github.com/qutip/qutip/issues/1158#issuecomment-576016364:195,Testability,test,tests,195,"Yeah, that was what I was referring to - Travis just tests that the Cython parts compile. I'm new to working on code in any kind of organisation, so I wasn't sure if it's normal to have the unit tests run as part of the CI process, or if that was only meant to test the installation path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364
https://github.com/qutip/qutip/issues/1158#issuecomment-576016364:261,Testability,test,test,261,"Yeah, that was what I was referring to - Travis just tests that the Cython parts compile. I'm new to working on code in any kind of organisation, so I wasn't sure if it's normal to have the unit tests run as part of the CI process, or if that was only meant to test the installation path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364
https://github.com/qutip/qutip/issues/1160#issuecomment-575861207:18,Testability,test,tests,18,"Upon a third run, tests ran fine, and then the bug found in #1158 occurred.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-575861207
https://github.com/qutip/qutip/issues/1160#issuecomment-820355903:160,Safety,detect,detected,160,"There is a chance that this is the same bug as #1495, which has a fix posited in #1498 - it matches all the versioning criteria, though on that issue we hadn't detected a problem with this particular test at these dimensions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-820355903
https://github.com/qutip/qutip/issues/1160#issuecomment-820355903:200,Testability,test,test,200,"There is a chance that this is the same bug as #1495, which has a fix posited in #1498 - it matches all the versioning criteria, though on that issue we hadn't detected a problem with this particular test at these dimensions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-820355903
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:165,Availability,reliab,reliable,165,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:892,Availability,FAILURE,FAILURES,892,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1297,Availability,error,error,1297," pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 479 in _proce",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1317,Availability,fault,fault,1317," pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 479 in _proce",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:5984,Availability,fault,fault,5984,"le ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 304 in wrap_session; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 316 in pytest_cmdline_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:6231,Availability,error,error,6231,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:6498,Availability,reliab,reliably,6498,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:6661,Availability,reliab,reliably,6661,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:7010,Availability,robust,robust,7010,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:7221,Availability,avail,avail,7221,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:669,Modifiability,config,configfile,669,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:693,Modifiability,plugin,plugins,693,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:5727,Modifiability,config,config,5727,"a>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 304 in wrap_session; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 316 in pytest_cmdline_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:5846,Modifiability,config,config,5846,"ile ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 304 in wrap_session; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/main.py"", line 316 in pytest_cmdline_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:311,Testability,test,tests,311,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:431,Testability,test,test,431,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:662,Testability,test,tests,662,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:743,Testability,test,tests,743,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1085,Testability,Test,TestSuperopReps,1085,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1220,Testability,test,tests,1220,"ight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/e",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1244,Testability,Test,TestSuperopReps,1244,"'s an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:7166,Testability,test,tests,7166,"utip-dev/lib/python3.8/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 84 in <lambda>; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 162 in main; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/_pytest/config/__init__.py"", line 185 in console_main; File ""/Users/jake/.anaconda3/envs/qutip-dev/bin/pytest"", line 11 in <module>; Segmentation fault: 11; ```. This was done with commit 624405e7, SciPy 1.6.2 and Numpy 1.19.5. My BLAS version has chopped and changed an awful lot, but I believe that run was with MKL implementations. The ""random"" stack trace from pytest looks to me like the error came about during garbage collection, and I really don't imagine pytest is to blame. We have in the past had issues with some bad calls in SciPy linalg functions, so it's _possible_ that they are the cause again, but I doubt it; we'd expect the stack traces to reliably show scipy to be the problem in that case. I wasn't able to reproduce this segfault on Windows, but that doesn't mean a huge amount, because I also can't reliably reproduce it on Mac. I suspect that the cause is some dodgy handling of pointers in the `struct CSR_Matrix` type in `qutip/cy/sparse_routines.pxi`, but this is just a suspicion. As far as I remember, I have _never_ seen this segfault when using the `dev.major` branch, which completely removes `CSR_Matrix` and replaces it with a much more robust Cython `CSR` type, which adds to my suspicion, but again, because the reproducer is unreliable, I cannot be sure. I have tried running these failing tests through valgrind before, but unfortunately to no avail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:417,Availability,fault,fault,417,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:494,Availability,fault,faults,494,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:789,Availability,reliab,reliably,789,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:928,Availability,mask,mask,928,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:1378,Availability,mask,mask,1378,"e just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, wh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2041,Availability,fault,fault,2041,"to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2075,Availability,error,error,2075,"n at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2384,Availability,failure,failure,2384,"g - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2498,Availability,failure,failure,2498,"g - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3412,Availability,error,error,3412,"rtain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3902,Availability,reliab,reliably,3902,"iginally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.lina",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4695,Availability,error,error,4695," current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invali",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4989,Availability,down,down,4989,". s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:5535,Availability,error,errors,5535,"00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6392,Availability,down,down,6392," in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:7333,Availability,error,error,7333,"ucer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8183,Availability,down,down,8183," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8262,Availability,down,down,8262," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8291,Availability,down,down,8291," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8355,Availability,down,down,8355," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:644,Energy Efficiency,allocate,allocated,644,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:5206,Energy Efficiency,allocate,allocated,5206,"0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2081,Integrability,message,message,2081,"n at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6794,Integrability,message,message,6794,"/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x1031237",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8331,Integrability,wrap,wrappers,8331," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:388,Safety,Abort,Abort,388,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2243,Safety,detect,detected,2243,"ers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3580,Safety,Abort,Abort,3580," only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OU",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4863,Safety,Abort,Abort,4863,"g`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_int",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:5297,Safety,detect,detected,5297,"0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:7153,Safety,Abort,Abort,7153,"re exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:7339,Safety,detect,detector,7339,"ucer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2325,Security,checksum,checksumming,2325,"ers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6951,Security,checksum,checksum,6951,": ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:1248,Testability,test,test,1248,"e just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, wh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:3740,Testability,test,test,3740,"PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7fa2ddc04270). Current thread 0x00000001123d55c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. ## Relation to `to_kraus`. The above `Malloc.py` file uses `scipy.linalg.eig` via use of an `eseries` version of `correlation`. The current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:2114,Usability,clear,clear,2114,"n at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation completes (it prints ""500""), and _then_ the fault occurs. This along with the error message should hopefully make it clear that an out-of-bounds write occurs occasionally, and it is temperamental where exactly this happens. This is typically not detected until the object is freed, when the Python allocators do a little bit of checksumming. I think that in _all_ cases we're seeing the failure come from the garbage collection, but I can't be 100% certain - note that this almost certainly means the failure is somewhere completely different, and it's only _detected_ at garbage collection. Here is the output of a Python 3.8 crash on the `Malloc.py` file with some additional debugging enabled. This is with Python 3.8.8, Numpy 1.19.2, Scipy 1.6.2 and MKL:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler Malloc.py; 500; Debug memory block at address p=0x7fa2e02de610: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7fa2e02ed64f are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUC",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6148,Usability,clear,clearly,6148,"ild of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) mall",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807
https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:188,Deployability,integrat,integrating-with-setuptools-python-setup-py-test-pytest-runner,188,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587
https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:188,Integrability,integrat,integrating-with-setuptools-python-setup-py-test-pytest-runner,188,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587
https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:232,Testability,test,test-pytest-runner,232,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587
https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:329,Testability,test,testing,329,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587
https://github.com/qutip/qutip/pull/1161#issuecomment-576003587:26,Usability,simpl,simply,26,"Good points. I suggest to simply remove the comment in `test_qobj`, and change to pytest in the `setup.py`. Something like what's [here](https://doc.pytest.org/en/3.0.4/goodpractices.html#integrating-with-setuptools-python-setup-py-test-pytest-runner) should work (basically changing `nose` with `pytest`). It seems however that testing it's a thorny [issue](https://github.com/pypa/setuptools/issues/1684), but these changes for the time being make the whole package at least consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576003587
https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:518,Integrability,wrap,wrappers,518,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085
https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:902,Integrability,depend,dependency,902,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085
https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:320,Testability,test,test,320,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085
https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:461,Testability,Test,Test,461,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085
https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:823,Testability,test,tests,823,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085
https://github.com/qutip/qutip/pull/1161#issuecomment-576056085:1001,Testability,test,tests,1001,"So I pushed two commits here - one which makes the changes to `setup.py`, and another which doesn't just remove the commented reference to `nose`, it completely overhauls `test_qobj.py` into a more `pytest`-friendly format. I found that removing the comment would have left a very odd function that was used to decorate test cases, which isn't necessary in `pytest` so much because you can use parametrisation, more description function names, and grouping in `Test*` classes to achieve the same goal with less custom wrappers. Once I was on that, I kind of got carried away changing the rest of the file. Let me know if that's too much - I could rebase this PR (and resubmit it) to split up the commits if you'd rather, or I can I just remove that last commit which makes all those changes. At the time of writing, the CI tests haven't run, and I'm a little worried that they'll fail due to the added dependency on `pytest-runner` in `setup.py`, when I haven't modified `.travis.yml`. Even if the CI tests don't fail, I think there might be some knock-on effects for documentation or packaging from that change?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056085
https://github.com/qutip/qutip/pull/1161#issuecomment-576056391:55,Testability,test,tests,55,"Also, when you run `pytest` on the file (`pytest qutip/tests/test_qobj.py` from the git root), it moans a lot about `np.matrix` being essentially deprecated, and `Qobj` uses it as a data representation in some cases. I haven't touched that, but I also didn't want to hide the warning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1161#issuecomment-576056391
https://github.com/qutip/qutip/issues/1163#issuecomment-576462702:277,Modifiability,extend,extended,277,"It refers to the system's Liouvillian, I'd say. I think all the `C_n` there are stochastic jumps, `sc_ops `, while the system Liouvillian is the constant part, `c_ops`. But I am not 100% sure. . The user guide is partly out of date there, @Ericgig and others have considerably extended the functionalities of the stochastic solvers. Looking at the [API documentation](http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.stochastic) is safer, and the [source code](http://qutip.org/docs/latest/modules/qutip/stochastic.html) is even more complete. . Meanwhile, you can also have a look at these development notebooks [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-milstein-speed-test.ipynb), [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb), and [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) with regards to the new methods (you can find them all, a bit hidden, at the bottom of the http://qutip.org/tutorials.html list). Technically this issue could be transferred under [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702
https://github.com/qutip/qutip/issues/1163#issuecomment-576462702:447,Safety,safe,safer,447,"It refers to the system's Liouvillian, I'd say. I think all the `C_n` there are stochastic jumps, `sc_ops `, while the system Liouvillian is the constant part, `c_ops`. But I am not 100% sure. . The user guide is partly out of date there, @Ericgig and others have considerably extended the functionalities of the stochastic solvers. Looking at the [API documentation](http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.stochastic) is safer, and the [source code](http://qutip.org/docs/latest/modules/qutip/stochastic.html) is even more complete. . Meanwhile, you can also have a look at these development notebooks [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-milstein-speed-test.ipynb), [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb), and [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) with regards to the new methods (you can find them all, a bit hidden, at the bottom of the http://qutip.org/tutorials.html list). Technically this issue could be transferred under [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702
https://github.com/qutip/qutip/issues/1163#issuecomment-576462702:753,Testability,test,test,753,"It refers to the system's Liouvillian, I'd say. I think all the `C_n` there are stochastic jumps, `sc_ops `, while the system Liouvillian is the constant part, `c_ops`. But I am not 100% sure. . The user guide is partly out of date there, @Ericgig and others have considerably extended the functionalities of the stochastic solvers. Looking at the [API documentation](http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.stochastic) is safer, and the [source code](http://qutip.org/docs/latest/modules/qutip/stochastic.html) is even more complete. . Meanwhile, you can also have a look at these development notebooks [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-milstein-speed-test.ipynb), [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb), and [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) with regards to the new methods (you can find them all, a bit hidden, at the bottom of the http://qutip.org/tutorials.html list). Technically this issue could be transferred under [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702
https://github.com/qutip/qutip/issues/1163#issuecomment-576462702:876,Testability,test,tests,876,"It refers to the system's Liouvillian, I'd say. I think all the `C_n` there are stochastic jumps, `sc_ops `, while the system Liouvillian is the constant part, `c_ops`. But I am not 100% sure. . The user guide is partly out of date there, @Ericgig and others have considerably extended the functionalities of the stochastic solvers. Looking at the [API documentation](http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.stochastic) is safer, and the [source code](http://qutip.org/docs/latest/modules/qutip/stochastic.html) is even more complete. . Meanwhile, you can also have a look at these development notebooks [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-milstein-speed-test.ipynb), [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb), and [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) with regards to the new methods (you can find them all, a bit hidden, at the bottom of the http://qutip.org/tutorials.html list). Technically this issue could be transferred under [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702
https://github.com/qutip/qutip/issues/1163#issuecomment-576462702:204,Usability,guid,guide,204,"It refers to the system's Liouvillian, I'd say. I think all the `C_n` there are stochastic jumps, `sc_ops `, while the system Liouvillian is the constant part, `c_ops`. But I am not 100% sure. . The user guide is partly out of date there, @Ericgig and others have considerably extended the functionalities of the stochastic solvers. Looking at the [API documentation](http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.stochastic) is safer, and the [source code](http://qutip.org/docs/latest/modules/qutip/stochastic.html) is even more complete. . Meanwhile, you can also have a look at these development notebooks [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-milstein-speed-test.ipynb), [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb), and [here](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) with regards to the new methods (you can find them all, a bit hidden, at the bottom of the http://qutip.org/tutorials.html list). Technically this issue could be transferred under [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1163#issuecomment-576462702
https://github.com/qutip/qutip/pull/1164#issuecomment-579636625:104,Testability,test,tests,104,"This could be ready and be part 1 of a part 1 and part 2 project, in order to start merging, if missing tests are independent on these.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1164#issuecomment-579636625
https://github.com/qutip/qutip/pull/1164#issuecomment-579719426:90,Testability,test,tests,90,"Yeah, sure, though parts one through fifteen might be more appropriate - there's a lot of tests. I'll rebase this branch onto master first, though, since I think there will be some merge conflicts after the merging of #1151.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1164#issuecomment-579719426
https://github.com/qutip/qutip/pull/1164#issuecomment-579729658:122,Testability,test,tests,122,"Ok, it's rebased onto master as of 663523e, so it should currently merge without conflicts, and I've ensured that all the tests in `test_brmesolve_td.py` that Eric marked as slow have had that mark maintained in this new format.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1164#issuecomment-579729658
https://github.com/qutip/qutip/pull/1168#issuecomment-633711479:69,Availability,ping,ping,69,"Nathan, could you resolve the conflict. You can merge it yourself or ping me if you prefer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1168#issuecomment-633711479
https://github.com/qutip/qutip/issues/1534#issuecomment-675696166:139,Modifiability,config,configured,139,"In doctest, we can add an option which runs specific commands only conditionally. This is already the case right now for parfor. It can be configured before building in conf.py.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1534#issuecomment-675696166
https://github.com/qutip/qutip/pull/1170#issuecomment-581046004:100,Energy Efficiency,reduce,reduce,100,Build succeeded. Should we merge this? Or should I extend this to perhaps do more builds on 3.8 and reduce 3.7 to just the basic build? Should 3.6 be dropped or kept?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-581046004
https://github.com/qutip/qutip/pull/1170#issuecomment-581046004:51,Modifiability,extend,extend,51,Build succeeded. Should we merge this? Or should I extend this to perhaps do more builds on 3.8 and reduce 3.7 to just the basic build? Should 3.6 be dropped or kept?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-581046004
https://github.com/qutip/qutip/pull/1170#issuecomment-583543437:15,Testability,test,test,15,"We will keep 1 test for each 3.6 and 3.7. If the test passes, other tests should be moved to 3.8. But this may be another PR is you are ready to merge this as is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-583543437
https://github.com/qutip/qutip/pull/1170#issuecomment-583543437:49,Testability,test,test,49,"We will keep 1 test for each 3.6 and 3.7. If the test passes, other tests should be moved to 3.8. But this may be another PR is you are ready to merge this as is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-583543437
https://github.com/qutip/qutip/pull/1170#issuecomment-583543437:68,Testability,test,tests,68,"We will keep 1 test for each 3.6 and 3.7. If the test passes, other tests should be moved to 3.8. But this may be another PR is you are ready to merge this as is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-583543437
https://github.com/qutip/qutip/pull/1170#issuecomment-602517640:135,Testability,test,test,135,Sorry what is the difference between `stage_linux_38: &stage_linux_38` and this? And in general between the `stage_linux_...` and the `test`?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602517640
https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:195,Integrability,depend,dependencies,195,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137
https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:59,Testability,test,test,59,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137
https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:123,Testability,test,test,123,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137
https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:148,Testability,test,test,148,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137
https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:236,Testability,test,test,236,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137
https://github.com/qutip/qutip/pull/1170#issuecomment-602619137:314,Testability,test,tests,314,"`stage_linux_38: &stage_linux_38` define what to do in the test, but does not run it. This addition tell travis to run the test. When I defined the test, 3.8 just came out and there were missing dependencies. We still have no automated test running on 3.8. I am merging this and will make another PR to move other tests from 3.7 to 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-602619137
https://github.com/qutip/qutip/issues/1175#issuecomment-582772817:229,Testability,test,test,229,"I’ve never enforced this, so I am no expert. Though, would enforcing the options in a dynamical solver work? Maybe you do not need the dynamical solver, but checking if that works could help understanding this issue too. I would test it by creating an Options object and passing it to a dynamical solver. http://qutip.org/docs/latest/guide/dynamics/dynamics-options.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-582772817
https://github.com/qutip/qutip/issues/1175#issuecomment-582772817:334,Usability,guid,guide,334,"I’ve never enforced this, so I am no expert. Though, would enforcing the options in a dynamical solver work? Maybe you do not need the dynamical solver, but checking if that works could help understanding this issue too. I would test it by creating an Options object and passing it to a dynamical solver. http://qutip.org/docs/latest/guide/dynamics/dynamics-options.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-582772817
https://github.com/qutip/qutip/issues/1175#issuecomment-583684535:297,Deployability,install,install,297,"@Ericgig at the moment, the issue can be reproduced by. ```; from qutip import settings, coherent; settings.num_cpus = 1; a = coherent(2000, 5); ```. The creation of the coherent state alone consumes all the cpus in my computer. I do not know how to check if openmp is involved. I made a standard install via pip install qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583684535
https://github.com/qutip/qutip/issues/1175#issuecomment-583684535:313,Deployability,install,install,313,"@Ericgig at the moment, the issue can be reproduced by. ```; from qutip import settings, coherent; settings.num_cpus = 1; a = coherent(2000, 5); ```. The creation of the coherent state alone consumes all the cpus in my computer. I do not know how to check if openmp is involved. I made a standard install via pip install qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583684535
https://github.com/qutip/qutip/issues/1175#issuecomment-583685282:86,Deployability,install,installation,86,Print `qutip.about()` to get info on open mp. In general if you did not enforce it in installation it should be `False`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583685282
https://github.com/qutip/qutip/issues/1175#issuecomment-583693680:654,Deployability,Install,Installed,654,"QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.14; Matplotlib Version: 3.1.2; Python Version: 3.7.3; Number of CPUs: 32; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583693680
https://github.com/qutip/qutip/issues/1175#issuecomment-583773226:172,Modifiability,variab,variable,172,"This parallelism does not come from `qutip` but `scipy`: `coherent` use `scipy.sparse.linalg.expm` which run in parallel for big matrix.; This can be fixed with enviroment variable like`$ export OPENBLAS_NUM_THREADS=1` in bash or `os.environ[""OPENBLAS_NUM_THREADS""] = ""1""` in python, but there are a few possibilities:; ```; OMP_NUM_THREADS: openmp,; OPENBLAS_NUM_THREADS: openblas,; MKL_NUM_THREADS: mkl,; VECLIB_MAXIMUM_THREADS: accelerate,; NUMEXPR_NUM_THREADS: numexpr; ```; See https://stackoverflow.com/questions/30791550/limit-number-of-threads-in-numpy",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583773226
https://github.com/qutip/qutip/issues/1176#issuecomment-582891331:39,Availability,down,down,39,Thanks for the details and tracking it down. Could you open a Pull Request and add a test for that?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331
https://github.com/qutip/qutip/issues/1176#issuecomment-582891331:85,Testability,test,test,85,Thanks for the details and tracking it down. Could you open a Pull Request and add a test for that?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331
https://github.com/qutip/qutip/pull/1177#issuecomment-583539450:53,Testability,test,test,53,"Hi taw181, thank you for the PR. ; There are already test for `clebsch` in `test_utilities`. Could you move your new test there?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583539450
https://github.com/qutip/qutip/pull/1177#issuecomment-583539450:117,Testability,test,test,117,"Hi taw181, thank you for the PR. ; There are already test for `clebsch` in `test_utilities`. Could you move your new test there?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583539450
https://github.com/qutip/qutip/pull/1177#issuecomment-583730951:20,Testability,test,test,20,"> There are already test for `clebsch` in `test_utilities`. Could you move your new test there?. Yes sorry I didn't realise that was there, I put something together quickly because I was asked to include a test. I'll write something that fits better with the existing test and include it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583730951
https://github.com/qutip/qutip/pull/1177#issuecomment-583730951:84,Testability,test,test,84,"> There are already test for `clebsch` in `test_utilities`. Could you move your new test there?. Yes sorry I didn't realise that was there, I put something together quickly because I was asked to include a test. I'll write something that fits better with the existing test and include it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583730951
https://github.com/qutip/qutip/pull/1177#issuecomment-583730951:206,Testability,test,test,206,"> There are already test for `clebsch` in `test_utilities`. Could you move your new test there?. Yes sorry I didn't realise that was there, I put something together quickly because I was asked to include a test. I'll write something that fits better with the existing test and include it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583730951
https://github.com/qutip/qutip/pull/1177#issuecomment-583730951:268,Testability,test,test,268,"> There are already test for `clebsch` in `test_utilities`. Could you move your new test there?. Yes sorry I didn't realise that was there, I put something together quickly because I was asked to include a test. I'll write something that fits better with the existing test and include it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-583730951
https://github.com/qutip/qutip/pull/1177#issuecomment-600798812:27,Testability,test,test,27,Are you still working on a test?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1177#issuecomment-600798812
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:54,Availability,avail,available,54,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:362,Deployability,install,installed,362,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:412,Deployability,update,updated,412,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:491,Deployability,update,updated,491,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:342,Integrability,depend,dependency,342,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:460,Integrability,depend,dependency,460,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:883,Modifiability,variab,variable,883,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:840,Performance,cache,cache,840,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:924,Testability,log,logic,924,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473
https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:885,Availability,avail,available,885,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793
https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:528,Modifiability,variab,variable,528,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793
https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:485,Performance,cache,cache,485,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793
https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:569,Testability,log,logic,569,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793
https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:1086,Testability,log,log,1086,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793
https://github.com/qutip/qutip/issues/1180#issuecomment-583781780:505,Integrability,depend,depend,505,"The core of `mesolve` is also `scipy.ode`, but the default method is `adams` instead of `bdf` and we use sparse matrix for the liouvillian. There are a lot of small time lost with using mesolve like this. Just looking at rhos' datatype: ; `self.psi0: dense -> rho0: Qobj(sparse matrix) -> dense vector (for ode) -> mesolve return: sparse matrix -> rhot: dense...`; Also `mesolve` will check if the Hamiltonian is really an Hamitonian or a Liouvillian or a function returning an Hamiltonian, if the system depend on time, if all the dimensions match, etc. So the overhead of `mesolve` will be important. Finally, depending on the Hamiltonian there can be a good difference in speed. We use sparse matrix for the Liouvillian, good if the Hamiltonian is large with few non-zeros, but slower that simple dense matrices otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1180#issuecomment-583781780
https://github.com/qutip/qutip/issues/1180#issuecomment-583781780:612,Integrability,depend,depending,612,"The core of `mesolve` is also `scipy.ode`, but the default method is `adams` instead of `bdf` and we use sparse matrix for the liouvillian. There are a lot of small time lost with using mesolve like this. Just looking at rhos' datatype: ; `self.psi0: dense -> rho0: Qobj(sparse matrix) -> dense vector (for ode) -> mesolve return: sparse matrix -> rhot: dense...`; Also `mesolve` will check if the Hamiltonian is really an Hamitonian or a Liouvillian or a function returning an Hamiltonian, if the system depend on time, if all the dimensions match, etc. So the overhead of `mesolve` will be important. Finally, depending on the Hamiltonian there can be a good difference in speed. We use sparse matrix for the Liouvillian, good if the Hamiltonian is large with few non-zeros, but slower that simple dense matrices otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1180#issuecomment-583781780
https://github.com/qutip/qutip/issues/1180#issuecomment-583781780:793,Usability,simpl,simple,793,"The core of `mesolve` is also `scipy.ode`, but the default method is `adams` instead of `bdf` and we use sparse matrix for the liouvillian. There are a lot of small time lost with using mesolve like this. Just looking at rhos' datatype: ; `self.psi0: dense -> rho0: Qobj(sparse matrix) -> dense vector (for ode) -> mesolve return: sparse matrix -> rhot: dense...`; Also `mesolve` will check if the Hamiltonian is really an Hamitonian or a Liouvillian or a function returning an Hamiltonian, if the system depend on time, if all the dimensions match, etc. So the overhead of `mesolve` will be important. Finally, depending on the Hamiltonian there can be a good difference in speed. We use sparse matrix for the Liouvillian, good if the Hamiltonian is large with few non-zeros, but slower that simple dense matrices otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1180#issuecomment-583781780
https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:9,Availability,error,error,9,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030
https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:64,Availability,error,error,64,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030
https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:109,Performance,load,load,109,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030
https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:38,Testability,log,log,38,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030
https://github.com/qutip/qutip/pull/1181#issuecomment-586622667:223,Availability,mainten,maintenance,223,"You're welcome! I've used `qutip` a lot throughout my PhD, so it seems fair that I'd contribute back to development. While I'm still getting used to the code base, I'm quite happy to do some ""boring"" software engineering-y maintenance bits, and plus, this helps me learn `pytest` a lot better. This PR can be merged whenever if you're happy with the changes - I'll open a new one if/when I convert more files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586622667
https://github.com/qutip/qutip/pull/1181#issuecomment-586622667:265,Usability,learn,learn,265,"You're welcome! I've used `qutip` a lot throughout my PhD, so it seems fair that I'd contribute back to development. While I'm still getting used to the code base, I'm quite happy to do some ""boring"" software engineering-y maintenance bits, and plus, this helps me learn `pytest` a lot better. This PR can be merged whenever if you're happy with the changes - I'll open a new one if/when I convert more files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586622667
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:212,Testability,test,tests,212,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:254,Testability,log,logic,254,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:265,Testability,test,tests,265,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:587,Testability,test,test,587,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:609,Testability,Test,Test,609,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:705,Testability,test,tests,705,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:745,Testability,test,tested,745,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:859,Testability,test,tests,859,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591399487:94,Usability,learn,learn,94,"Hi @jakelishman , Thanks for the great work and effort! I'm reading your code and also try to learn some pytest. . If I may, I have a minor suggestion. Could you maybe leave some more descriptive comments in the tests? I find it a bit hard to follow the logic when tests are automatically generated or parametrized, e.g. in test_control_pulseoptim. A lot of things are defined for the fixtures in the beging. It took me some time to understand what is happening. I guess it is because I'm not yet very familiar with the tools in pytest. Maybe some description like ; > We first define 4 test cases: ... or. > Test function1 against case1, case2 ... This might make it easier for whoever wants to add more tests later to understand what has been tested without too much digging. And another personal idea, maybe it is good to make a separate PR every 10 or 15 tests? A new branch can still base on this one. Just after the old PR is merged, fewer changes will be shown the new PR. It might make the later review a bit easier. Just personal ideas. Thanks again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591399487
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:2053,Deployability,release,release,2053,"ing clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a good amount of free time at the same time as a `qutip` release happened, and most of the maintainers took a break for a few weeks. Right now I'm a bit busier with work so my conversion rate has slowed a little. I'll probably be back on it in a week or so.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:775,Integrability,message,messages,775,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:618,Performance,load,load,618,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:637,Testability,test,test,637,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:908,Testability,test,tests,908,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:1339,Testability,test,tests,1339,"ing clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a good amount of free time at the same time as a `qutip` release happened, and most of the maintainers took a break for a few weeks. Right now I'm a bit busier with work so my conversion rate has slowed a little. I'll probably be back on it in a week or so.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:1722,Testability,log,log,1722,"ing clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a good amount of free time at the same time as a `qutip` release happened, and most of the maintainers took a break for a few weeks. Right now I'm a bit busier with work so my conversion rate has slowed a little. I'll probably be back on it in a week or so.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:257,Usability,clear,clearer,257,"Hi!. About the comments: yes, absolutely I'll leave more. It's a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a goo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:1027,Usability,learn,learning,1027," a bit silly that I haven't yet, since one thing that was frustrating me previously was not understanding what was trying to be done! I think as time goes by I'm getting a bit better about being clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a good amount of free time at the same time as a `qutip` release h",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241
https://github.com/qutip/qutip/pull/1181#issuecomment-591687380:173,Deployability,update,updated,173,"Hi, you are absolutely correct that this is not a good place ""intro to pytest"". Comments on what is tested would be most helpful. I see your point. If some files need to be updated all the time then you are probably right. I'm also no maintainer of QuTiP so merging is beyond my ability :) But I'm sure there is no hurry in this. I'm also using my spare time browsing around here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591687380
https://github.com/qutip/qutip/pull/1181#issuecomment-591687380:100,Testability,test,tested,100,"Hi, you are absolutely correct that this is not a good place ""intro to pytest"". Comments on what is tested would be most helpful. I see your point. If some files need to be updated all the time then you are probably right. I'm also no maintainer of QuTiP so merging is beyond my ability :) But I'm sure there is no hurry in this. I'm also using my spare time browsing around here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591687380
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:469,Availability,fail-safe,fail-safe,469,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:110,Integrability,message,message,110,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:474,Safety,safe,safe,474,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:479,Safety,sanity check,sanity check,479,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:193,Security,hash,hash,193,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:53,Testability,test,testing,53,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:292,Testability,test,tests,292,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:407,Testability,test,tests,407,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553
https://github.com/qutip/qutip/pull/1181#issuecomment-593334189:163,Testability,test,tests,163,"I also note that Coveralls isn't running on any of these commits, and hasn't been run on `master` since December last year. While so far I've just been converting tests, rather than writing new ones (for the most part), it seems wrong that it isn't being run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593334189
https://github.com/qutip/qutip/pull/1181#issuecomment-601734555:207,Testability,test,tests,207,"Hi jakelishman,; Thank you for your work.; Why do you change the `from qutip import ...` to `import qutip`? Seems to be a lot of work with no real improvement. Also, do you know if pytest has a way to order tests? The tests are running in alphabetical order of the file name. It would be nice to test more basic function first, then does which build on them: `Qobj` -> `sesolve`, `mesolve` -> `floquet`, `correlation`. Say sesolve is broken, then a lot of other tests will also fail because of it, so catching it earlier in the test suite would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555
https://github.com/qutip/qutip/pull/1181#issuecomment-601734555:218,Testability,test,tests,218,"Hi jakelishman,; Thank you for your work.; Why do you change the `from qutip import ...` to `import qutip`? Seems to be a lot of work with no real improvement. Also, do you know if pytest has a way to order tests? The tests are running in alphabetical order of the file name. It would be nice to test more basic function first, then does which build on them: `Qobj` -> `sesolve`, `mesolve` -> `floquet`, `correlation`. Say sesolve is broken, then a lot of other tests will also fail because of it, so catching it earlier in the test suite would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555
https://github.com/qutip/qutip/pull/1181#issuecomment-601734555:296,Testability,test,test,296,"Hi jakelishman,; Thank you for your work.; Why do you change the `from qutip import ...` to `import qutip`? Seems to be a lot of work with no real improvement. Also, do you know if pytest has a way to order tests? The tests are running in alphabetical order of the file name. It would be nice to test more basic function first, then does which build on them: `Qobj` -> `sesolve`, `mesolve` -> `floquet`, `correlation`. Say sesolve is broken, then a lot of other tests will also fail because of it, so catching it earlier in the test suite would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555
https://github.com/qutip/qutip/pull/1181#issuecomment-601734555:462,Testability,test,tests,462,"Hi jakelishman,; Thank you for your work.; Why do you change the `from qutip import ...` to `import qutip`? Seems to be a lot of work with no real improvement. Also, do you know if pytest has a way to order tests? The tests are running in alphabetical order of the file name. It would be nice to test more basic function first, then does which build on them: `Qobj` -> `sesolve`, `mesolve` -> `floquet`, `correlation`. Say sesolve is broken, then a lot of other tests will also fail because of it, so catching it earlier in the test suite would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555
https://github.com/qutip/qutip/pull/1181#issuecomment-601734555:528,Testability,test,test,528,"Hi jakelishman,; Thank you for your work.; Why do you change the `from qutip import ...` to `import qutip`? Seems to be a lot of work with no real improvement. Also, do you know if pytest has a way to order tests? The tests are running in alphabetical order of the file name. It would be nice to test more basic function first, then does which build on them: `Qobj` -> `sesolve`, `mesolve` -> `floquet`, `correlation`. Say sesolve is broken, then a lot of other tests will also fail because of it, so catching it earlier in the test suite would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601734555
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2461,Availability,down,down,2461,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:3042,Energy Efficiency,power,powerfully,3042,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2218,Integrability,depend,dependency,2218,"much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:1925,Modifiability,plugin,plugin,1925,"which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:544,Testability,test,test,544,"Hi!. #### Imports; Honestly it wasn't really a particularly conscious decision, and there's no problem with `from qutip import (x, y, z)` lines though I don't think `from qutip import *` is a very good idea, especially with quite how many names `qutip` exports. The `from qutip.very.deep.nested.module import name` is certainly good, and I think I've generally left those. I think I started converting in a few places because there were things like `from qutip import Cubic_Spline` and `from scipy.interpolate import CubicSpline`, and then the test was unreadable as to which was which. Having `qutip.Cubic_Spline` and `scipy.interpolate.CubicSpline` is unambiguous. The smaller cases like `from qutip import Qobj` are highly unlikely to have any conflicts, but in general I just went for consistency. That all said, there's certainly arguments both ways, e.g. explicit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:1172,Testability,Test,Test,1172,"cially with quite how many names `qutip` exports. The `from qutip.very.deep.nested.module import name` is certainly good, and I think I've generally left those. I think I started converting in a few places because there were things like `from qutip import Cubic_Spline` and `from scipy.interpolate import CubicSpline`, and then the test was unreadable as to which was which. Having `qutip.Cubic_Spline` and `scipy.interpolate.CubicSpline` is unambiguous. The smaller cases like `from qutip import Qobj` are highly unlikely to have any conflicts, but in general I just went for consistency. That all said, there's certainly arguments both ways, e.g. explicit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:1846,Testability,log,logic,1846,"icit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:1899,Testability,test,tests,1899,"icit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2074,Testability,log,logic,2074,"n't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2288,Testability,log,logical,2288,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2815,Testability,test,testing,2815,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:2957,Testability,log,logic,2957,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:3022,Testability,test,tests,3022,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:3127,Testability,log,logic,3127,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:3148,Testability,test,test,3148,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:3244,Testability,log,logic,3244,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:906,Usability,clear,clearly,906,"Hi!. #### Imports; Honestly it wasn't really a particularly conscious decision, and there's no problem with `from qutip import (x, y, z)` lines though I don't think `from qutip import *` is a very good idea, especially with quite how many names `qutip` exports. The `from qutip.very.deep.nested.module import name` is certainly good, and I think I've generally left those. I think I started converting in a few places because there were things like `from qutip import Cubic_Spline` and `from scipy.interpolate import CubicSpline`, and then the test was unreadable as to which was which. Having `qutip.Cubic_Spline` and `scipy.interpolate.CubicSpline` is unambiguous. The smaller cases like `from qutip import Qobj` are highly unlikely to have any conflicts, but in general I just went for consistency. That all said, there's certainly arguments both ways, e.g. explicit `qutip.member` is good because it's clearly explicit at point of use which makes reading the code much easier, but bad because it adds unnecessary chaff which makes scanning lines take longer. I hadn't put much thought into it before, and I think I was just generally writing in my default style. #### Test ordering; I hadn't much considered this, but there are certainly ways of doing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386
https://github.com/qutip/qutip/pull/1181#issuecomment-603229265:110,Deployability,update,updated,110,"Whoops, that's a mistake in fef7a9c - I accidentally removed a `skipif` checking for the Cython version. I've updated my local setup so I have two environments, one with and one without `Cython` so I can catch that kind of thing locally. I'm force-pushing over fef7a9c and bf6f75c after a nice little rebase to keep the commit history tidier. (Ideally I would have caught this locally and wouldn't have needed to force-push a rebase commit, but c'est la vie, and `--force-with-lease` didn't complain).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603229265
https://github.com/qutip/qutip/pull/1181#issuecomment-603230950:132,Availability,error,error,132,"Hmm. Travis didn't run on the force-pushed version. That's frustrating, particularly because I was force-pushing to correct a silly error that CI caught.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603230950
https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:279,Integrability,message,messages,279,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885
https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:357,Integrability,message,messages,357,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885
https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:527,Integrability,message,messages,527,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885
https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:482,Testability,test,tests,482,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885
https://github.com/qutip/qutip/pull/1181#issuecomment-603938885:81,Usability,simpl,simply,81,"No problem. I would suggest that at merge time, this PR is _not_ squashed but is simply rebased onto or merged into master. A merge would ensure that the PR number is included in the git history if that's desired, but all the relevant explanations are also already in the commit messages. It's a very large change, there's a lot of exposition in the commit messages, and each commit is a modular unit of work already, while the PR title won't actually be true (since not all of the tests are converted). I know that the commit messages are all combined on github, but it's much more difficult to search for the small bit you need out of several pages of writing, rather than having only the relevant parts presented to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603938885
https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:18,Availability,failure,failures,18,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734
https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:199,Availability,failure,failure,199,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734
https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:236,Availability,error,error,236,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734
https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:337,Availability,error,errors,337,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734
https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:194,Testability,test,test,194,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734
https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:589,Testability,test,test,589,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734
https://github.com/qutip/qutip/pull/1181#issuecomment-605457825:47,Testability,test,test,47,Is it possible somehow to split the review? 21 test files seems a lot. I'll start from `qip` related tests and see how far I can go.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605457825
https://github.com/qutip/qutip/pull/1181#issuecomment-605457825:101,Testability,test,tests,101,Is it possible somehow to split the review? 21 test files seems a lot. I'll start from `qip` related tests and see how far I can go.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605457825
https://github.com/qutip/qutip/pull/1181#issuecomment-605494875:201,Integrability,message,message,201,"If you click into ""Files changed"" you can just tick the files as you've looked at them. To make it easier for you, I'd suggest having a copy of the old version next to them and reading the full commit message, because I usually explain what I'm doing in them and why I'm doing it that way. If you're worried about the size of the PR in total, then I'd strongly recommend _not_ squashing this PR if/when it's merged, but instead just rebasing it onto `master` or doing a direct merge. That way it doesn't look huge, it looks like a series of commits which each change one file, which is what you'd get if the PR was initially split. The review doesn't end at the point the code is merged - somebody in the future may very well want to see why I made certain changes. I know I've spent a long time looking through the old `git` logs to work out why tests were the way they were, and it's always much much more difficult when you've got one of those squash commits with like 30 sub-parts. The commits in this PR are already modular, and with the exception that 7a0d6e6 could be squashed into ; 1d60b46, they all represent an isolated unit of progression and there aren't any ""work in progress"" commits. I didn't perform that squash locally because I would have had to force-push over 10+ commits. Squashing the PR does make sense when there are a lot of wip commits for a small unit of work, but for a very large unit of work like this one, it's much better to interactive rebase to keep it neat locally (I've already done that for the most part), and never push wip commits in the first place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875
https://github.com/qutip/qutip/pull/1181#issuecomment-605494875:1209,Performance,perform,perform,1209,"If you click into ""Files changed"" you can just tick the files as you've looked at them. To make it easier for you, I'd suggest having a copy of the old version next to them and reading the full commit message, because I usually explain what I'm doing in them and why I'm doing it that way. If you're worried about the size of the PR in total, then I'd strongly recommend _not_ squashing this PR if/when it's merged, but instead just rebasing it onto `master` or doing a direct merge. That way it doesn't look huge, it looks like a series of commits which each change one file, which is what you'd get if the PR was initially split. The review doesn't end at the point the code is merged - somebody in the future may very well want to see why I made certain changes. I know I've spent a long time looking through the old `git` logs to work out why tests were the way they were, and it's always much much more difficult when you've got one of those squash commits with like 30 sub-parts. The commits in this PR are already modular, and with the exception that 7a0d6e6 could be squashed into ; 1d60b46, they all represent an isolated unit of progression and there aren't any ""work in progress"" commits. I didn't perform that squash locally because I would have had to force-push over 10+ commits. Squashing the PR does make sense when there are a lot of wip commits for a small unit of work, but for a very large unit of work like this one, it's much better to interactive rebase to keep it neat locally (I've already done that for the most part), and never push wip commits in the first place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875
https://github.com/qutip/qutip/pull/1181#issuecomment-605494875:826,Testability,log,logs,826,"If you click into ""Files changed"" you can just tick the files as you've looked at them. To make it easier for you, I'd suggest having a copy of the old version next to them and reading the full commit message, because I usually explain what I'm doing in them and why I'm doing it that way. If you're worried about the size of the PR in total, then I'd strongly recommend _not_ squashing this PR if/when it's merged, but instead just rebasing it onto `master` or doing a direct merge. That way it doesn't look huge, it looks like a series of commits which each change one file, which is what you'd get if the PR was initially split. The review doesn't end at the point the code is merged - somebody in the future may very well want to see why I made certain changes. I know I've spent a long time looking through the old `git` logs to work out why tests were the way they were, and it's always much much more difficult when you've got one of those squash commits with like 30 sub-parts. The commits in this PR are already modular, and with the exception that 7a0d6e6 could be squashed into ; 1d60b46, they all represent an isolated unit of progression and there aren't any ""work in progress"" commits. I didn't perform that squash locally because I would have had to force-push over 10+ commits. Squashing the PR does make sense when there are a lot of wip commits for a small unit of work, but for a very large unit of work like this one, it's much better to interactive rebase to keep it neat locally (I've already done that for the most part), and never push wip commits in the first place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875
https://github.com/qutip/qutip/pull/1181#issuecomment-605494875:847,Testability,test,tests,847,"If you click into ""Files changed"" you can just tick the files as you've looked at them. To make it easier for you, I'd suggest having a copy of the old version next to them and reading the full commit message, because I usually explain what I'm doing in them and why I'm doing it that way. If you're worried about the size of the PR in total, then I'd strongly recommend _not_ squashing this PR if/when it's merged, but instead just rebasing it onto `master` or doing a direct merge. That way it doesn't look huge, it looks like a series of commits which each change one file, which is what you'd get if the PR was initially split. The review doesn't end at the point the code is merged - somebody in the future may very well want to see why I made certain changes. I know I've spent a long time looking through the old `git` logs to work out why tests were the way they were, and it's always much much more difficult when you've got one of those squash commits with like 30 sub-parts. The commits in this PR are already modular, and with the exception that 7a0d6e6 could be squashed into ; 1d60b46, they all represent an isolated unit of progression and there aren't any ""work in progress"" commits. I didn't perform that squash locally because I would have had to force-push over 10+ commits. Squashing the PR does make sense when there are a lot of wip commits for a small unit of work, but for a very large unit of work like this one, it's much better to interactive rebase to keep it neat locally (I've already done that for the most part), and never push wip commits in the first place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-605494875
https://github.com/qutip/qutip/pull/1181#issuecomment-609702252:326,Modifiability,refactor,refactor,326,"Everyone: (@ajgpitch, @BoxiLi, @Ericgig, @nathanshammah). Apologies for bumping this again. It would be good to get a strategy in place to handle a review for this. Would it be easier if I close this PR and then make a whole series of new PRs with (say) 5 files in at a time?. I'm particularly keen to get the `test_gates.py` refactor merged in, because there's seemingly quite a lot of movement in the `qip` module. If I do split the PR, then I'll rebase onto `master` so that the new tests added in #1224 are included without a merge resolution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-609702252
https://github.com/qutip/qutip/pull/1181#issuecomment-609702252:486,Testability,test,tests,486,"Everyone: (@ajgpitch, @BoxiLi, @Ericgig, @nathanshammah). Apologies for bumping this again. It would be good to get a strategy in place to handle a review for this. Would it be easier if I close this PR and then make a whole series of new PRs with (say) 5 files in at a time?. I'm particularly keen to get the `test_gates.py` refactor merged in, because there's seemingly quite a lot of movement in the `qip` module. If I do split the PR, then I'll rebase onto `master` so that the new tests added in #1224 are included without a merge resolution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-609702252
https://github.com/qutip/qutip/pull/1181#issuecomment-609960145:138,Testability,test,tests,138,It's certainly easier if it was multiple smaller ones but we can do it like this. You can simply continue in another Pr for the remaining tests.; I will start evaluating file by file starting with parts of the code I am the most familiar with:; - [x] test_mcsolve.py; - [x] test_lattice.py ; - [x] test_interpolate.py ; - [x] test_fastsparse.py ; - [ ] test_expect.py ; - [ ] test_eigenstates.py ; - [ ] test_dimensions.py ; - [ ] test_cy_structs.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-609960145
https://github.com/qutip/qutip/pull/1181#issuecomment-609960145:90,Usability,simpl,simply,90,It's certainly easier if it was multiple smaller ones but we can do it like this. You can simply continue in another Pr for the remaining tests.; I will start evaluating file by file starting with parts of the code I am the most familiar with:; - [x] test_mcsolve.py; - [x] test_lattice.py ; - [x] test_interpolate.py ; - [x] test_fastsparse.py ; - [ ] test_expect.py ; - [ ] test_eigenstates.py ; - [ ] test_dimensions.py ; - [ ] test_cy_structs.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-609960145
https://github.com/qutip/qutip/pull/1181#issuecomment-619420541:123,Testability,test,tests,123,"The conflicts are due to some recent change in `qip`. I had a look at the PRs, those not merged #1187, #1226 do not modify tests. So it should be fine now to resolve it I suppose.; @jakelishman Would you like me to review the current version of `test_gates` or after the conflicts are resolved? I suppose resolving the conflicts won't change the existing test functions. I'll start with; - [x] test_cavityqed.py; - [ ] test_gates.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619420541
https://github.com/qutip/qutip/pull/1181#issuecomment-619420541:355,Testability,test,test,355,"The conflicts are due to some recent change in `qip`. I had a look at the PRs, those not merged #1187, #1226 do not modify tests. So it should be fine now to resolve it I suppose.; @jakelishman Would you like me to review the current version of `test_gates` or after the conflicts are resolved? I suppose resolving the conflicts won't change the existing test functions. I'll start with; - [x] test_cavityqed.py; - [ ] test_gates.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619420541
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:178,Integrability,depend,depending,178,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:904,Integrability,depend,depend,904,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:560,Testability,test,test,560,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:582,Testability,test,test,582,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:685,Testability,test,tests,685,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:1547,Testability,log,logical,1547,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:119,Usability,simpl,simple,119,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:220,Usability,simpl,simplest,220,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/pull/1181#issuecomment-619434033:1418,Usability,simpl,simple,1418,"Hi guys,; yeah, the conflicts are because of the now merged #1224, which we knew about when we merged that one. It's a simple fix, but I'm hesitant to do it directly on this PR, depending on how we want to merge it. The simplest way is that I make the required changes, fix the merge conflict, and we keep going until this whole behemoth merges in one go. This ends up in the commit history being a bit of a mess, and it'll take ages. Instead, I think it might be better if I instead split this PR into a few different ones:; 1. add `pytest` markers and other test niceties; 2. the test files that Eric is checking; 3. the QIP-related ones so that Boxi can check those; 4. `brmesolve` tests; 5. trivially changed files; 6. whatever's left. This has the advantage that I can rebase them all individually to neaten them up with any changes suggested, and we can get parts merged in faster. PRs 2 to 6 will depend on PR 1, so this would require getting that first one merged ASAP, then the others will all be modular and can be merged in any order at any speed. If you're happy with that plan, I'll cherry-pick/rebase out the necessary bits of the history and form the new PRs. The end result will be 6 PRs, which, when merged, will have no conflicts, and will leave the repository in the exact same state it would be if this PR was merged in one lump (with the relevant conflict fixed). For each PR, then we just have a simple process:; 1. you review files; 2. I make suggested changes; 3. repeat until happy; 4. I rebase the PR to squash it into a logical form; 5. you merge",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-619434033
https://github.com/qutip/qutip/issues/1182#issuecomment-593700465:64,Usability,pause,pause,64,We can potentially work-around this behavior by including a plt.pause() statement right after the show statement in the bloch.show() code. It is a hacky way to display the figure and it will keep displaying as long as the code runs. This will ensure that you do not need to use plt.show().,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1182#issuecomment-593700465
https://github.com/qutip/qutip/issues/1183#issuecomment-588771589:154,Integrability,depend,dependent,154,"> Hi, `tesnor` takes a list of Qobj, not a nested list. For example: `tensor([destroy(2), destroy(2)])`. The nested list you are referring to is the time dependent operator who's tensor product I am taking. The argument is,; [destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]),dims=[[2],[2]]), u_t]]; Which is a time dependent operator in the H = [H0, [H1, py_coeff1]] format. Here; H0 =destroy(2) , H1=Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]) and py_coeff1=u_t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1183#issuecomment-588771589
https://github.com/qutip/qutip/issues/1183#issuecomment-588771589:334,Integrability,depend,dependent,334,"> Hi, `tesnor` takes a list of Qobj, not a nested list. For example: `tensor([destroy(2), destroy(2)])`. The nested list you are referring to is the time dependent operator who's tensor product I am taking. The argument is,; [destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]),dims=[[2],[2]]), u_t]]; Which is a time dependent operator in the H = [H0, [H1, py_coeff1]] format. Here; H0 =destroy(2) , H1=Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]) and py_coeff1=u_t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1183#issuecomment-588771589
https://github.com/qutip/qutip/issues/1183#issuecomment-588902598:108,Integrability,depend,dependent,108,"I see, `tensor` does not support this. You need to use `tensor` for each `Qobj` and then construct the time-dependent format.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1183#issuecomment-588902598
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:494,Availability,Error,Error,494,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:779,Availability,Error,Error,779,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1642,Availability,error,error,1642,"s it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse sche",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2739,Availability,error,error,2739,"igation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2793,Availability,error,error,2793,"igation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:830,Deployability,release,release,830,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1501,Deployability,integrat,integration,1501," 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1871,Energy Efficiency,schedul,schedule,1871,"; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2631,Energy Efficiency,schedul,scheduling,2631,"> also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67E",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1501,Integrability,integrat,integration,1501," 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:949,Modifiability,enhance,enhanced,949,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2576,Modifiability,Refactor,Refactoring,2576,"> also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67E",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2731,Performance,perform,perform,2731,"igation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:561,Security,access,access,561,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2618,Usability,simpl,simple,2618,"> also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67E",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:333,Availability,Error,Error,333,"Hi Nathan,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1161,Availability,error,error,1161," the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2210,Availability,error,error,2210,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2261,Availability,error,error,2261,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:379,Deployability,release,release,379,"Hi Nathan,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1024,Deployability,integrat,integration,1024,"han,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1374,Energy Efficiency,schedul,schedule,1374,"e, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. th",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2107,Energy Efficiency,schedul,scheduling,2107,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1024,Integrability,integrat,integration,1024,"han,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:495,Modifiability,enhance,enhanced,495,"Hi Nathan,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2052,Modifiability,Refactor,Refactoring,2052,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2202,Performance,perform,perform,2202,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2094,Usability,simpl,simple,2094,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:928,Availability,Error,Error,928,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1794,Availability,error,error,1794,"’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2901,Availability,error,error,2901,"resentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2955,Availability,error,error,2955,"resentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4094,Availability,Error,Error,4094,"uage e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4396,Availability,Error,Error,4396,"to:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5287,Availability,error,error,5287,"iki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6433,Availability,error,error,6433," conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ; > >; > > .; > >; >; >; > —; > You are receiving this because you authored t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6489,Availability,error,error,6489," conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ; > >; > > .; > >; >; >; > —; > You are receiving this because you authored t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:52,Deployability,update,updated,52,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:976,Deployability,release,release,976,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1651,Deployability,integrat,integration,1651,"a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4451,Deployability,release,release,4451,"Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5142,Deployability,integrat,integration,5142," in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2023,Energy Efficiency,schedul,schedule,2023,"antum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other soft",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2793,Energy Efficiency,schedul,scheduling,2793,"ossible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5529,Energy Efficiency,schedul,schedule,5529,"h was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import qu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6321,Energy Efficiency,schedul,scheduling,6321,"tigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://g",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1651,Integrability,integrat,integration,1651,"a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5142,Integrability,integrat,integration,5142," in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1095,Modifiability,enhance,enhanced,1095,"nfo on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2738,Modifiability,Refactor,Refactoring,2738,"ossible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4572,Modifiability,enhance,enhanced,4572,"n you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6266,Modifiability,Refactor,Refactoring,6266,"tigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://g",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2893,Performance,perform,perform,2893,"resentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6425,Performance,perform,perform,6425," conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ; > >; > > .; > >; >; >; > —; > You are receiving this because you authored t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4166,Security,access,access,4166,"----------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:118,Usability,learn,learn,118,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2780,Usability,simpl,simple,2780,"ossible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6308,Usability,simpl,simple,6308,"tigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://g",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553
https://github.com/qutip/qutip/issues/1184#issuecomment-591284346:0,Deployability,update,updated,0,updated on the Wiki GSoC 2020 page. https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-591284346
https://github.com/qutip/qutip/issues/1185#issuecomment-593375737:180,Availability,robust,robust,180,"`pdf2svg` isn't part of ImageMagick, (at least on `brew`) is http://www.cityinthesky.co.uk/opensource/pdf2svg. It feels like all of these system commands should be made a bit more robust. In particular, the bare `os.system` is not the recommended way of calling out to system commands any more. It's now preferable to use [`subprocess.run`](https://docs.python.org/3/library/subprocess.html#subprocess.run). Here, the bug is, I would assume, actually on the previous line:; ```python; os.system('command_which_does_not_exist'); ```; will return a non-zero error code which isn't checked for, but will not raise an exception. . If Jupyter supports displaying embedded PDF files and that's all it's being used for, then it might be worth removing the conversion to SVG. (pdf)LaTeX certainly supports embedded PDF files as graphics. The fewer little dependencies we require, the better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737
https://github.com/qutip/qutip/issues/1185#issuecomment-593375737:556,Availability,error,error,556,"`pdf2svg` isn't part of ImageMagick, (at least on `brew`) is http://www.cityinthesky.co.uk/opensource/pdf2svg. It feels like all of these system commands should be made a bit more robust. In particular, the bare `os.system` is not the recommended way of calling out to system commands any more. It's now preferable to use [`subprocess.run`](https://docs.python.org/3/library/subprocess.html#subprocess.run). Here, the bug is, I would assume, actually on the previous line:; ```python; os.system('command_which_does_not_exist'); ```; will return a non-zero error code which isn't checked for, but will not raise an exception. . If Jupyter supports displaying embedded PDF files and that's all it's being used for, then it might be worth removing the conversion to SVG. (pdf)LaTeX certainly supports embedded PDF files as graphics. The fewer little dependencies we require, the better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737
https://github.com/qutip/qutip/issues/1185#issuecomment-593375737:847,Integrability,depend,dependencies,847,"`pdf2svg` isn't part of ImageMagick, (at least on `brew`) is http://www.cityinthesky.co.uk/opensource/pdf2svg. It feels like all of these system commands should be made a bit more robust. In particular, the bare `os.system` is not the recommended way of calling out to system commands any more. It's now preferable to use [`subprocess.run`](https://docs.python.org/3/library/subprocess.html#subprocess.run). Here, the bug is, I would assume, actually on the previous line:; ```python; os.system('command_which_does_not_exist'); ```; will return a non-zero error code which isn't checked for, but will not raise an exception. . If Jupyter supports displaying embedded PDF files and that's all it's being used for, then it might be worth removing the conversion to SVG. (pdf)LaTeX certainly supports embedded PDF files as graphics. The fewer little dependencies we require, the better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737
https://github.com/qutip/qutip/issues/1185#issuecomment-601944385:201,Deployability,install,installation,201,"Just a small comment in the meanwhile, might be instructive to run the code on ipython (on the terminal instead of jupyter), usually it gives the behavior of os.run() commands as well. Might help with installation of missing packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-601944385
https://github.com/qutip/qutip/pull/1187#issuecomment-602522398:290,Deployability,install,install,290,"Thank you for picking up my suggestion in #1096. ### Suggested Changes; - 1) There are some minor issues with CodeClimate ([here](https://codeclimate.com/github/qutip/qutip/pull/1187)). @christian512 can you please reformat to 79 lines?; This can be done with tools like `black`:; ```; pip install black; black circuit.py --line-length 79; ```; - 2) @christian512 could you add something also in `qutip-doc` to acknowledge the use of this library in the documentation? @BoxiLi recently added circuits to the User Guide, if I remember correctly. . ## Questions and comments; - 3) I then leave it to @BoxiLi to review the PR more closely, if he has time, otherwise I'll look into it this week. . - 4) Is there a problem in theory using `qcircuit` code, which is with license `gpl-2.0` into a BSD-new (maybe @Ericgig @ajgpitch or @goerz know more)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602522398
https://github.com/qutip/qutip/pull/1187#issuecomment-602522398:513,Usability,Guid,Guide,513,"Thank you for picking up my suggestion in #1096. ### Suggested Changes; - 1) There are some minor issues with CodeClimate ([here](https://codeclimate.com/github/qutip/qutip/pull/1187)). @christian512 can you please reformat to 79 lines?; This can be done with tools like `black`:; ```; pip install black; black circuit.py --line-length 79; ```; - 2) @christian512 could you add something also in `qutip-doc` to acknowledge the use of this library in the documentation? @BoxiLi recently added circuits to the User Guide, if I remember correctly. . ## Questions and comments; - 3) I then leave it to @BoxiLi to review the PR more closely, if he has time, otherwise I'll look into it this week. . - 4) Is there a problem in theory using `qcircuit` code, which is with license `gpl-2.0` into a BSD-new (maybe @Ericgig @ajgpitch or @goerz know more)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602522398
https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:233,Deployability,install,installing,233,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277
https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:120,Usability,guid,guidelines,120,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277
https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:296,Usability,guid,guide-qip,296,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277
https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:358,Usability,guid,guide,358,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277
https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:364,Usability,guid,guide-qip,364,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277
https://github.com/qutip/qutip/pull/1187#issuecomment-602749277:519,Usability,simpl,simplicity,519,"I see @christian512, so maybe we can skip that. . With regards to the documentation, Sphinx can be a mess. I wrote some guidelines [here](https://github.com/nathanshammah/scikit-project/blob/master/5-docs.md). I think you could skip installing it properly and just fork the repo and modify; the [guide-qip.rst](https://github.com/qutip/qutip-doc/blob/master/guide/guide-qip.rst) file, adding some information on the visualization of quantum circuits using this LaTeX-based tool. It could be a standalone subsection for simplicity. `.rst` files are restructured text file very similar to markdown.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602749277
https://github.com/qutip/qutip/pull/1187#issuecomment-602814171:138,Usability,feedback,feedback,138,I've created a new PR for the qutip-doc repository containing these changes: https://github.com/qutip/qutip-doc/pull/108; Might need some feedback on the text I wrote.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602814171
https://github.com/qutip/qutip/pull/1187#issuecomment-602907441:157,Availability,resilien,resilient,157,"@BoxiLi #1179 is possibly not a suitable solution, because it would remove support for IM6. I implemented an alternative at #1194 which should be a bit more resilient. Both would be easy to merge in with this one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602907441
https://github.com/qutip/qutip/pull/1187#issuecomment-606142418:35,Testability,test,tested,35,"Thanks for the PR @christian512. I tested it on my machine, looks all good. . > Is there a problem in theory using `qcircuit` code, which is with license `gpl-2.0` into a BSD-new (maybe @Ericgig @ajgpitch or @goerz know more)?. I'm not very familiar with license, but QuTiP was using this package (older version) before. Any idea on how to proceed? @Ericgig @ajgpitch or @goerz",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-606142418
https://github.com/qutip/qutip/pull/1187#issuecomment-607176262:774,Availability,down,downstream,774,"Out of interest, I had a look around. BSD-3 clause and GPL-v2 are ""compatible"", but only in the sense that the resultant _must_ be GPL-licensed (see [a bit of discussion here](https://opensource.stackexchange.com/questions/7180/can-i-combine-gplv2-and-bsd-3-clause-code-and-keep-the-bsd-permissions)). That probably means that we're technically not following the rules at the moment. That said, my understanding is that licences are just a general statement of rights that are given to everyone. If we get explicit permission from the creator of the library to include it in this library with a rider that this particular section cannot be copied or used in a public project except under GPL-v2 terms, then I think we'd be fine (except that might make it super annoying for downstream projects...). In general I think the primary reason that we can't release GPL'd code under a BSD licence is that the BSD licence doesn't have the restriction that source code must be made available. I _think_, however, that since the circuit drawing isn't an integral part of QuTiP, it would be allowed for us to distribute this portion as a stand-alone extension to QuTiP which is individually GPL'd, even if we couldn't get a relicensed version of the LaTeX package. It's always fine for private use to use GPL'd stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262
https://github.com/qutip/qutip/pull/1187#issuecomment-607176262:973,Availability,avail,available,973,"Out of interest, I had a look around. BSD-3 clause and GPL-v2 are ""compatible"", but only in the sense that the resultant _must_ be GPL-licensed (see [a bit of discussion here](https://opensource.stackexchange.com/questions/7180/can-i-combine-gplv2-and-bsd-3-clause-code-and-keep-the-bsd-permissions)). That probably means that we're technically not following the rules at the moment. That said, my understanding is that licences are just a general statement of rights that are given to everyone. If we get explicit permission from the creator of the library to include it in this library with a rider that this particular section cannot be copied or used in a public project except under GPL-v2 terms, then I think we'd be fine (except that might make it super annoying for downstream projects...). In general I think the primary reason that we can't release GPL'd code under a BSD licence is that the BSD licence doesn't have the restriction that source code must be made available. I _think_, however, that since the circuit drawing isn't an integral part of QuTiP, it would be allowed for us to distribute this portion as a stand-alone extension to QuTiP which is individually GPL'd, even if we couldn't get a relicensed version of the LaTeX package. It's always fine for private use to use GPL'd stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262
https://github.com/qutip/qutip/pull/1187#issuecomment-607176262:851,Deployability,release,release,851,"Out of interest, I had a look around. BSD-3 clause and GPL-v2 are ""compatible"", but only in the sense that the resultant _must_ be GPL-licensed (see [a bit of discussion here](https://opensource.stackexchange.com/questions/7180/can-i-combine-gplv2-and-bsd-3-clause-code-and-keep-the-bsd-permissions)). That probably means that we're technically not following the rules at the moment. That said, my understanding is that licences are just a general statement of rights that are given to everyone. If we get explicit permission from the creator of the library to include it in this library with a rider that this particular section cannot be copied or used in a public project except under GPL-v2 terms, then I think we'd be fine (except that might make it super annoying for downstream projects...). In general I think the primary reason that we can't release GPL'd code under a BSD licence is that the BSD licence doesn't have the restriction that source code must be made available. I _think_, however, that since the circuit drawing isn't an integral part of QuTiP, it would be allowed for us to distribute this portion as a stand-alone extension to QuTiP which is individually GPL'd, even if we couldn't get a relicensed version of the LaTeX package. It's always fine for private use to use GPL'd stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262
https://github.com/qutip/qutip/pull/1187#issuecomment-633932995:90,Availability,ping,ping,90,"Thank you @jakelishman for the summary on the use of a GPL-2.0 in BSD-3.0. ; Maybe we can ping directly @Travis-S regarding the use of `qcircuit` 2.6 here for input on how to proceed. Let me point out that recently, reference to this project and a link was added in QuTiP's [user guide](https://github.com/qutip/qutip-doc/blob/f3592e9ad5a4083c19a8c7b81db8b2ae282cf4b4/guide/guide-qip.rst#plotting-a-quantum-circuit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995
https://github.com/qutip/qutip/pull/1187#issuecomment-633932995:280,Usability,guid,guide,280,"Thank you @jakelishman for the summary on the use of a GPL-2.0 in BSD-3.0. ; Maybe we can ping directly @Travis-S regarding the use of `qcircuit` 2.6 here for input on how to proceed. Let me point out that recently, reference to this project and a link was added in QuTiP's [user guide](https://github.com/qutip/qutip-doc/blob/f3592e9ad5a4083c19a8c7b81db8b2ae282cf4b4/guide/guide-qip.rst#plotting-a-quantum-circuit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995
https://github.com/qutip/qutip/pull/1187#issuecomment-633932995:368,Usability,guid,guide,368,"Thank you @jakelishman for the summary on the use of a GPL-2.0 in BSD-3.0. ; Maybe we can ping directly @Travis-S regarding the use of `qcircuit` 2.6 here for input on how to proceed. Let me point out that recently, reference to this project and a link was added in QuTiP's [user guide](https://github.com/qutip/qutip-doc/blob/f3592e9ad5a4083c19a8c7b81db8b2ae282cf4b4/guide/guide-qip.rst#plotting-a-quantum-circuit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995
https://github.com/qutip/qutip/pull/1187#issuecomment-633932995:374,Usability,guid,guide-qip,374,"Thank you @jakelishman for the summary on the use of a GPL-2.0 in BSD-3.0. ; Maybe we can ping directly @Travis-S regarding the use of `qcircuit` 2.6 here for input on how to proceed. Let me point out that recently, reference to this project and a link was added in QuTiP's [user guide](https://github.com/qutip/qutip-doc/blob/f3592e9ad5a4083c19a8c7b81db8b2ae282cf4b4/guide/guide-qip.rst#plotting-a-quantum-circuit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995
https://github.com/qutip/qutip/pull/1187#issuecomment-661856927:52,Deployability,release,release,52,We can keep this in mind for the next micro version release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-661856927
https://github.com/qutip/qutip/pull/1188#issuecomment-593098940:23,Deployability,continuous,continuous-integration,23,I don't know what the `continuous-integration/travis-ci/push` failing means...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593098940
https://github.com/qutip/qutip/pull/1188#issuecomment-593098940:34,Integrability,integrat,integration,34,I don't know what the `continuous-integration/travis-ci/push` failing means...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593098940
https://github.com/qutip/qutip/pull/1188#issuecomment-593255331:72,Modifiability,Enhance,Enhancement,72,"I've also thought of making these ENH proposals I made as sort of QuTiP Enhancement Proposals (QEP), similarly to PEP and NEP. So far, keeping them as ENH and Q&A github issues may be fine. Or one could possibly use the Projects section of Github, too, but there is no possibility for others to chip in there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593255331
https://github.com/qutip/qutip/pull/1188#issuecomment-593255566:59,Testability,test,tests,59,"What is strange about this Travis CI thing is that usually tests do not run on push, I think.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1188#issuecomment-593255566
https://github.com/qutip/qutip/issues/1189#issuecomment-809405566:57,Modifiability,evolve,evolves,57,"I'm not entirely sure what's being asked here. `mcsolve` evolves the state `psi0` by the given Hamiltonian for the given times, and returns a `qutip.solver.Result` object that contains various quantities, such as how the state evolved for each of the trajectories at a given time, and values of expectation operators at those times if `e_ops` is given. This looks like a question that's best answered by [reading the user guide on solving system dynamics](http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1189#issuecomment-809405566
https://github.com/qutip/qutip/issues/1189#issuecomment-809405566:227,Modifiability,evolve,evolved,227,"I'm not entirely sure what's being asked here. `mcsolve` evolves the state `psi0` by the given Hamiltonian for the given times, and returns a `qutip.solver.Result` object that contains various quantities, such as how the state evolved for each of the trajectories at a given time, and values of expectation operators at those times if `e_ops` is given. This looks like a question that's best answered by [reading the user guide on solving system dynamics](http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1189#issuecomment-809405566
https://github.com/qutip/qutip/issues/1189#issuecomment-809405566:422,Usability,guid,guide,422,"I'm not entirely sure what's being asked here. `mcsolve` evolves the state `psi0` by the given Hamiltonian for the given times, and returns a `qutip.solver.Result` object that contains various quantities, such as how the state evolved for each of the trajectories at a given time, and values of expectation operators at those times if `e_ops` is given. This looks like a question that's best answered by [reading the user guide on solving system dynamics](http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1189#issuecomment-809405566
https://github.com/qutip/qutip/issues/1189#issuecomment-809405566:485,Usability,guid,guide,485,"I'm not entirely sure what's being asked here. `mcsolve` evolves the state `psi0` by the given Hamiltonian for the given times, and returns a `qutip.solver.Result` object that contains various quantities, such as how the state evolved for each of the trajectories at a given time, and values of expectation operators at those times if `e_ops` is given. This looks like a question that's best answered by [reading the user guide on solving system dynamics](http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1189#issuecomment-809405566
https://github.com/qutip/qutip/issues/1190#issuecomment-1171589413:98,Testability,test,tests,98,@BoxiLi I believe this is already solved in QuTiP 5 (or at least I haven't seen it in the Windows tests easily). Do you have an easy way to check?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171589413
https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:565,Deployability,Release,Release,565,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449
https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:618,Deployability,Release,Release,618,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449
https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:747,Deployability,Release,Release,747,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449
https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:800,Deployability,Release,Release,800,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449
https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:12,Integrability,depend,depends,12,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449
https://github.com/qutip/qutip/issues/1190#issuecomment-1171725959:113,Testability,test,testing,113,"Oh wait, I must have made a mistake. The `compile` method does not exist anymore in qutip 5, so I was not really testing the qutip5 version. Now I run it again but with the last line replaced by `mesolve`. It does seem to be solved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171725959
https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:148,Availability,error,error,148,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010
https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:40,Deployability,update,update,40,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010
https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:154,Integrability,message,message,154,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010
https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:274,Availability,error,error,274,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820
https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:553,Availability,error,error,553,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820
https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:280,Integrability,message,messages,280,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820
https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:559,Integrability,message,messages,559,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820
https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:303,Testability,log,log,303,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820
https://github.com/qutip/qutip/pull/1194#issuecomment-605290310:55,Security,access,access,55,"My computer is a Mac, by the way - I don't have direct access to a Windows machine at the moment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605290310
https://github.com/qutip/qutip/pull/1194#issuecomment-605322812:62,Integrability,message,message,62,Nothing at all. IPython also crushes. None of them leaves any message... Let me try to make some breakpoints to locate it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605322812
https://github.com/qutip/qutip/pull/1194#issuecomment-605326436:24,Usability,simpl,simple,24,I'm trying to make some simple example to see what went wrong. The `tempfile.TemporaryDirectory()` itself seems ok.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605326436
https://github.com/qutip/qutip/pull/1194#issuecomment-605333270:790,Availability,reliab,reliably,790,"Using `tempfile.TemporaryDirectory()` as a context manager doesn't change the current directory, so we should be allowed to `cd` into the directory it returns... The documentation doesn't mention anything about not being able to as far as I can see, and regardless, if it fails it should raise an `OSError` and not crash the interpreter. I need to get a Windows box to try and debug this myself - it's difficult to know how to proceed without working out exactly what the problem is. We could try using the `cwd` kwarg of `subprocess.run`, but if you're not allowed to change into a temporary directory on Windows in any manner, then that may also fail. We don't want to run `pdflatex` in the user's directory, but ""officially"" we don't know exactly what files it will produce, so we can't reliably clean them all up. That's also not to mention the potential race condition that we get if two processes are trying to draw circuits simultaneously.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605333270
https://github.com/qutip/qutip/pull/1194#issuecomment-605333270:859,Performance,race condition,race condition,859,"Using `tempfile.TemporaryDirectory()` as a context manager doesn't change the current directory, so we should be allowed to `cd` into the directory it returns... The documentation doesn't mention anything about not being able to as far as I can see, and regardless, if it fails it should raise an `OSError` and not crash the interpreter. I need to get a Windows box to try and debug this myself - it's difficult to know how to proceed without working out exactly what the problem is. We could try using the `cwd` kwarg of `subprocess.run`, but if you're not allowed to change into a temporary directory on Windows in any manner, then that may also fail. We don't want to run `pdflatex` in the user's directory, but ""officially"" we don't know exactly what files it will produce, so we can't reliably clean them all up. That's also not to mention the potential race condition that we get if two processes are trying to draw circuits simultaneously.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605333270
https://github.com/qutip/qutip/pull/1194#issuecomment-605336931:146,Availability,down,download,146,"[mkdtemp.txt](https://github.com/qutip/qutip/files/4396123/mkdtemp.txt). Could you try and apply this patch and see if it fixes the problem? Just download it somewhere, then; ```; git apply /path/to/mkdtemp.txt; ```; should do it. If so, I'll commit and push.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931
https://github.com/qutip/qutip/pull/1194#issuecomment-605336931:102,Deployability,patch,patch,102,"[mkdtemp.txt](https://github.com/qutip/qutip/files/4396123/mkdtemp.txt). Could you try and apply this patch and see if it fixes the problem? Just download it somewhere, then; ```; git apply /path/to/mkdtemp.txt; ```; should do it. If so, I'll commit and push.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931
https://github.com/qutip/qutip/pull/1194#issuecomment-605345803:191,Deployability,patch,patching,191,"That's actually a very nice solution that I hadn't thought about. I guess it's kind of weird that we have a `try/finally` directly inside a context manager, but effectively we're just monkey-patching the `__exit__` method so that `os.chdir(previous_dir)` gets called first, so it's always going to look a little funky. There's our nice commit that swaps them over.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605345803
https://github.com/qutip/qutip/pull/1194#issuecomment-605443125:51,Deployability,install,installed,51,"I'm trying it now on a Windows without ImageMagick installed. However, it finds a wrong executable `convert`, which is a default command on Windows...... Is there a way to identify if the `convert` is the one we want? Otherwise, we can also just catch the CalledProcessError at line 148 and add an instruction. ```; 147 in_file = file_stem + "".pdf""; 148 out_file = file_stem + ""."" + configuration.file_type; --> 149 _run_command((which, *configuration.arguments, in_file, out_file)); 150 with open(out_file, mode) as file:; 151 return file.read(). ~\Miniconda3\envs\qutip-dev-py3\lib\subprocess.py in run(input, capture_output, timeout, check, *popenargs, **kwargs); 485 if check and retcode:; 486 raise CalledProcessError(retcode, process.args,; --> 487 output=stdout, stderr=stderr); 488 return CompletedProcess(process.args, retcode, stdout, stderr); 489 . CalledProcessError: Command '('convert', '-density', '100', 'qcirc.pdf', 'qcirc.png')' returned non-zero exit status 4.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605443125
https://github.com/qutip/qutip/pull/1194#issuecomment-605443125:383,Deployability,configurat,configuration,383,"I'm trying it now on a Windows without ImageMagick installed. However, it finds a wrong executable `convert`, which is a default command on Windows...... Is there a way to identify if the `convert` is the one we want? Otherwise, we can also just catch the CalledProcessError at line 148 and add an instruction. ```; 147 in_file = file_stem + "".pdf""; 148 out_file = file_stem + ""."" + configuration.file_type; --> 149 _run_command((which, *configuration.arguments, in_file, out_file)); 150 with open(out_file, mode) as file:; 151 return file.read(). ~\Miniconda3\envs\qutip-dev-py3\lib\subprocess.py in run(input, capture_output, timeout, check, *popenargs, **kwargs); 485 if check and retcode:; 486 raise CalledProcessError(retcode, process.args,; --> 487 output=stdout, stderr=stderr); 488 return CompletedProcess(process.args, retcode, stdout, stderr); 489 . CalledProcessError: Command '('convert', '-density', '100', 'qcirc.pdf', 'qcirc.png')' returned non-zero exit status 4.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605443125
https://github.com/qutip/qutip/pull/1194#issuecomment-605443125:438,Deployability,configurat,configuration,438,"I'm trying it now on a Windows without ImageMagick installed. However, it finds a wrong executable `convert`, which is a default command on Windows...... Is there a way to identify if the `convert` is the one we want? Otherwise, we can also just catch the CalledProcessError at line 148 and add an instruction. ```; 147 in_file = file_stem + "".pdf""; 148 out_file = file_stem + ""."" + configuration.file_type; --> 149 _run_command((which, *configuration.arguments, in_file, out_file)); 150 with open(out_file, mode) as file:; 151 return file.read(). ~\Miniconda3\envs\qutip-dev-py3\lib\subprocess.py in run(input, capture_output, timeout, check, *popenargs, **kwargs); 485 if check and retcode:; 486 raise CalledProcessError(retcode, process.args,; --> 487 output=stdout, stderr=stderr); 488 return CompletedProcess(process.args, retcode, stdout, stderr); 489 . CalledProcessError: Command '('convert', '-density', '100', 'qcirc.pdf', 'qcirc.png')' returned non-zero exit status 4.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605443125
https://github.com/qutip/qutip/pull/1194#issuecomment-605443125:383,Modifiability,config,configuration,383,"I'm trying it now on a Windows without ImageMagick installed. However, it finds a wrong executable `convert`, which is a default command on Windows...... Is there a way to identify if the `convert` is the one we want? Otherwise, we can also just catch the CalledProcessError at line 148 and add an instruction. ```; 147 in_file = file_stem + "".pdf""; 148 out_file = file_stem + ""."" + configuration.file_type; --> 149 _run_command((which, *configuration.arguments, in_file, out_file)); 150 with open(out_file, mode) as file:; 151 return file.read(). ~\Miniconda3\envs\qutip-dev-py3\lib\subprocess.py in run(input, capture_output, timeout, check, *popenargs, **kwargs); 485 if check and retcode:; 486 raise CalledProcessError(retcode, process.args,; --> 487 output=stdout, stderr=stderr); 488 return CompletedProcess(process.args, retcode, stdout, stderr); 489 . CalledProcessError: Command '('convert', '-density', '100', 'qcirc.pdf', 'qcirc.png')' returned non-zero exit status 4.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605443125
https://github.com/qutip/qutip/pull/1194#issuecomment-605443125:438,Modifiability,config,configuration,438,"I'm trying it now on a Windows without ImageMagick installed. However, it finds a wrong executable `convert`, which is a default command on Windows...... Is there a way to identify if the `convert` is the one we want? Otherwise, we can also just catch the CalledProcessError at line 148 and add an instruction. ```; 147 in_file = file_stem + "".pdf""; 148 out_file = file_stem + ""."" + configuration.file_type; --> 149 _run_command((which, *configuration.arguments, in_file, out_file)); 150 with open(out_file, mode) as file:; 151 return file.read(). ~\Miniconda3\envs\qutip-dev-py3\lib\subprocess.py in run(input, capture_output, timeout, check, *popenargs, **kwargs); 485 if check and retcode:; 486 raise CalledProcessError(retcode, process.args,; --> 487 output=stdout, stderr=stderr); 488 return CompletedProcess(process.args, retcode, stdout, stderr); 489 . CalledProcessError: Command '('convert', '-density', '100', 'qcirc.pdf', 'qcirc.png')' returned non-zero exit status 4.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605443125
https://github.com/qutip/qutip/pull/1194#issuecomment-605443125:628,Safety,timeout,timeout,628,"I'm trying it now on a Windows without ImageMagick installed. However, it finds a wrong executable `convert`, which is a default command on Windows...... Is there a way to identify if the `convert` is the one we want? Otherwise, we can also just catch the CalledProcessError at line 148 and add an instruction. ```; 147 in_file = file_stem + "".pdf""; 148 out_file = file_stem + ""."" + configuration.file_type; --> 149 _run_command((which, *configuration.arguments, in_file, out_file)); 150 with open(out_file, mode) as file:; 151 return file.read(). ~\Miniconda3\envs\qutip-dev-py3\lib\subprocess.py in run(input, capture_output, timeout, check, *popenargs, **kwargs); 485 if check and retcode:; 486 raise CalledProcessError(retcode, process.args,; --> 487 output=stdout, stderr=stderr); 488 return CompletedProcess(process.args, retcode, stdout, stderr); 489 . CalledProcessError: Command '('convert', '-density', '100', 'qcirc.pdf', 'qcirc.png')' returned non-zero exit status 4.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605443125
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:812,Availability,error,error,812,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:296,Deployability,install,install,296,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:424,Deployability,patch,patch,424,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:564,Testability,log,logical,564,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:648,Testability,test,tests,648,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:979,Testability,log,logic,979,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:1233,Usability,simpl,simple,1233,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526
https://github.com/qutip/qutip/pull/1194#issuecomment-605527437:40,Deployability,install,install,40,"> If you run convert -version on an IM6 install, does it output a string that looks like; > `Version: ImageMagick 6.blahblahblah`; > or something similar?. Yes, it does. In the patch, I guess by ; `return ""imagemagick"" in proces.decode('utf-8').lower()`; you mean ; `return ""imagemagick"" in process.stdout.decode('utf-8').lower()`. Otherwise, I think it's all good!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605527437
https://github.com/qutip/qutip/pull/1194#issuecomment-605527437:177,Deployability,patch,patch,177,"> If you run convert -version on an IM6 install, does it output a string that looks like; > `Version: ImageMagick 6.blahblahblah`; > or something similar?. Yes, it does. In the patch, I guess by ; `return ""imagemagick"" in proces.decode('utf-8').lower()`; you mean ; `return ""imagemagick"" in process.stdout.decode('utf-8').lower()`. Otherwise, I think it's all good!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605527437
https://github.com/qutip/qutip/pull/1194#issuecomment-605528198:108,Deployability,patch,patch,108,"Oh man, yeah, that's embarrassing. Yeah, that's exactly what I _meant_ to put. I dunno how I screwed up the patch that badly!. I'll rebase these commits onto `master` and squash them into one or two nice modular commits. I think a little bit of the development here is worth preserving in the commit history for if someone looks at it in the future (there's no guarantee that this PR discussion will _always_ be up, but commit messages are forever). I'll force-push to this branch, so you'll have to force-pull a copy (or just delete your copy of this branch). Not the best practice, but better for keeping the `master` commit history neat.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605528198
https://github.com/qutip/qutip/pull/1194#issuecomment-605528198:427,Integrability,message,messages,427,"Oh man, yeah, that's embarrassing. Yeah, that's exactly what I _meant_ to put. I dunno how I screwed up the patch that badly!. I'll rebase these commits onto `master` and squash them into one or two nice modular commits. I think a little bit of the development here is worth preserving in the commit history for if someone looks at it in the future (there's no guarantee that this PR discussion will _always_ be up, but commit messages are forever). I'll force-push to this branch, so you'll have to force-pull a copy (or just delete your copy of this branch). Not the best practice, but better for keeping the `master` commit history neat.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605528198
https://github.com/qutip/qutip/pull/1194#issuecomment-605529223:80,Testability,log,log,80,"There we go. A gross history according to this Github PR, but a nice clean `git log`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605529223
https://github.com/qutip/qutip/pull/1195#issuecomment-892768442:45,Testability,test,tested,45,"@maij @nathanshammah Do you remember how you tested `spin_q_function` when these changes were made? The changes were merged, but I only get the expected results if I invert the direction of theta:; ```python; psi = qutip.spin_coherent(spin, theta, phi); [[husimi_q]], _, _ = qutip.spin_q_function(psi, np.pi - theta, phi); # assert husimi_q == 1 / np.pi; ```; Without inverting theta, the bug persists for me (regardless of whether the spin is integer or half integer). I have a fix that works in my test cases, but I was wondering about the history of the changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-892768442
https://github.com/qutip/qutip/pull/1195#issuecomment-892768442:325,Testability,assert,assert,325,"@maij @nathanshammah Do you remember how you tested `spin_q_function` when these changes were made? The changes were merged, but I only get the expected results if I invert the direction of theta:; ```python; psi = qutip.spin_coherent(spin, theta, phi); [[husimi_q]], _, _ = qutip.spin_q_function(psi, np.pi - theta, phi); # assert husimi_q == 1 / np.pi; ```; Without inverting theta, the bug persists for me (regardless of whether the spin is integer or half integer). I have a fix that works in my test cases, but I was wondering about the history of the changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-892768442
https://github.com/qutip/qutip/pull/1195#issuecomment-892768442:500,Testability,test,test,500,"@maij @nathanshammah Do you remember how you tested `spin_q_function` when these changes were made? The changes were merged, but I only get the expected results if I invert the direction of theta:; ```python; psi = qutip.spin_coherent(spin, theta, phi); [[husimi_q]], _, _ = qutip.spin_q_function(psi, np.pi - theta, phi); # assert husimi_q == 1 / np.pi; ```; Without inverting theta, the bug persists for me (regardless of whether the spin is integer or half integer). I have a fix that works in my test cases, but I was wondering about the history of the changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-892768442
https://github.com/qutip/qutip/pull/1195#issuecomment-893072105:29,Testability,test,testing,29,"@hodgestar Good catch, I was testing this by plotting 2D images over theta and phi, but I was a bit careless because the top of the plot is theta=pi (for theta on the y-axis) which isn't the top of the Bloch sphere, but the bottom. So the result was what I expected, but for the wrong reason. I thought this looked like an easy fix; I believe the exponents are incorrect, where there is addition there should be subtraction, and vice versa. I fixed this and tested as follows:; ```python; j = 1/2; t,p = 0,0; for t in np.linspace(0, np.pi, 100):; for p in np.linspace(-np.pi, np.pi, 100):; psi = spin_coherent(j, t, p); h, _, _ = spin_q_function(psi, t, p); # assert(abs(h - 1/np.pi) < 1e-3) # This assertion fails for some theta and phi, it seems like the angle is incorrect; ```; But it doesn't work for all theta and phi. Moreover, I tried this test on the current qutip code 'as-is' but using @hodgestar fix `h, _, _ = spin_q_function(psi, np.pi - t, p)` but this fails in the exact same way. There might also be a numerical inaccuracy here, because the maximum does reach 1/pi, it's just at a slightly tilted angle. This is a good reference for Q function calculation here : https://arxiv.org/abs/1309.6346.; Although they don't provide the density matrix form, it should be easy enough to expand the Q = <theta, phi| rho |theta,phi> as the spin-coherent states using the calculations from the paper.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893072105
https://github.com/qutip/qutip/pull/1195#issuecomment-893072105:458,Testability,test,tested,458,"@hodgestar Good catch, I was testing this by plotting 2D images over theta and phi, but I was a bit careless because the top of the plot is theta=pi (for theta on the y-axis) which isn't the top of the Bloch sphere, but the bottom. So the result was what I expected, but for the wrong reason. I thought this looked like an easy fix; I believe the exponents are incorrect, where there is addition there should be subtraction, and vice versa. I fixed this and tested as follows:; ```python; j = 1/2; t,p = 0,0; for t in np.linspace(0, np.pi, 100):; for p in np.linspace(-np.pi, np.pi, 100):; psi = spin_coherent(j, t, p); h, _, _ = spin_q_function(psi, t, p); # assert(abs(h - 1/np.pi) < 1e-3) # This assertion fails for some theta and phi, it seems like the angle is incorrect; ```; But it doesn't work for all theta and phi. Moreover, I tried this test on the current qutip code 'as-is' but using @hodgestar fix `h, _, _ = spin_q_function(psi, np.pi - t, p)` but this fails in the exact same way. There might also be a numerical inaccuracy here, because the maximum does reach 1/pi, it's just at a slightly tilted angle. This is a good reference for Q function calculation here : https://arxiv.org/abs/1309.6346.; Although they don't provide the density matrix form, it should be easy enough to expand the Q = <theta, phi| rho |theta,phi> as the spin-coherent states using the calculations from the paper.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893072105
https://github.com/qutip/qutip/pull/1195#issuecomment-893072105:660,Testability,assert,assert,660,"@hodgestar Good catch, I was testing this by plotting 2D images over theta and phi, but I was a bit careless because the top of the plot is theta=pi (for theta on the y-axis) which isn't the top of the Bloch sphere, but the bottom. So the result was what I expected, but for the wrong reason. I thought this looked like an easy fix; I believe the exponents are incorrect, where there is addition there should be subtraction, and vice versa. I fixed this and tested as follows:; ```python; j = 1/2; t,p = 0,0; for t in np.linspace(0, np.pi, 100):; for p in np.linspace(-np.pi, np.pi, 100):; psi = spin_coherent(j, t, p); h, _, _ = spin_q_function(psi, t, p); # assert(abs(h - 1/np.pi) < 1e-3) # This assertion fails for some theta and phi, it seems like the angle is incorrect; ```; But it doesn't work for all theta and phi. Moreover, I tried this test on the current qutip code 'as-is' but using @hodgestar fix `h, _, _ = spin_q_function(psi, np.pi - t, p)` but this fails in the exact same way. There might also be a numerical inaccuracy here, because the maximum does reach 1/pi, it's just at a slightly tilted angle. This is a good reference for Q function calculation here : https://arxiv.org/abs/1309.6346.; Although they don't provide the density matrix form, it should be easy enough to expand the Q = <theta, phi| rho |theta,phi> as the spin-coherent states using the calculations from the paper.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893072105
https://github.com/qutip/qutip/pull/1195#issuecomment-893072105:699,Testability,assert,assertion,699,"@hodgestar Good catch, I was testing this by plotting 2D images over theta and phi, but I was a bit careless because the top of the plot is theta=pi (for theta on the y-axis) which isn't the top of the Bloch sphere, but the bottom. So the result was what I expected, but for the wrong reason. I thought this looked like an easy fix; I believe the exponents are incorrect, where there is addition there should be subtraction, and vice versa. I fixed this and tested as follows:; ```python; j = 1/2; t,p = 0,0; for t in np.linspace(0, np.pi, 100):; for p in np.linspace(-np.pi, np.pi, 100):; psi = spin_coherent(j, t, p); h, _, _ = spin_q_function(psi, t, p); # assert(abs(h - 1/np.pi) < 1e-3) # This assertion fails for some theta and phi, it seems like the angle is incorrect; ```; But it doesn't work for all theta and phi. Moreover, I tried this test on the current qutip code 'as-is' but using @hodgestar fix `h, _, _ = spin_q_function(psi, np.pi - t, p)` but this fails in the exact same way. There might also be a numerical inaccuracy here, because the maximum does reach 1/pi, it's just at a slightly tilted angle. This is a good reference for Q function calculation here : https://arxiv.org/abs/1309.6346.; Although they don't provide the density matrix form, it should be easy enough to expand the Q = <theta, phi| rho |theta,phi> as the spin-coherent states using the calculations from the paper.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893072105
https://github.com/qutip/qutip/pull/1195#issuecomment-893072105:848,Testability,test,test,848,"@hodgestar Good catch, I was testing this by plotting 2D images over theta and phi, but I was a bit careless because the top of the plot is theta=pi (for theta on the y-axis) which isn't the top of the Bloch sphere, but the bottom. So the result was what I expected, but for the wrong reason. I thought this looked like an easy fix; I believe the exponents are incorrect, where there is addition there should be subtraction, and vice versa. I fixed this and tested as follows:; ```python; j = 1/2; t,p = 0,0; for t in np.linspace(0, np.pi, 100):; for p in np.linspace(-np.pi, np.pi, 100):; psi = spin_coherent(j, t, p); h, _, _ = spin_q_function(psi, t, p); # assert(abs(h - 1/np.pi) < 1e-3) # This assertion fails for some theta and phi, it seems like the angle is incorrect; ```; But it doesn't work for all theta and phi. Moreover, I tried this test on the current qutip code 'as-is' but using @hodgestar fix `h, _, _ = spin_q_function(psi, np.pi - t, p)` but this fails in the exact same way. There might also be a numerical inaccuracy here, because the maximum does reach 1/pi, it's just at a slightly tilted angle. This is a good reference for Q function calculation here : https://arxiv.org/abs/1309.6346.; Although they don't provide the density matrix form, it should be easy enough to expand the Q = <theta, phi| rho |theta,phi> as the spin-coherent states using the calculations from the paper.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893072105
https://github.com/qutip/qutip/pull/1195#issuecomment-893157034:432,Testability,test,test,432,"@hodgestar I think I have found a fix, the problems were two-fold:; - The addition/subtraction for the cos/sin(theta/2) terms were swapped, which gives you a flipped result (high Q value on opposite side of sphere); - The phase factor for the diagonal terms of the density matrix were swapped, which gave you flipped result in the Y axis (high Q value for -Y if you give it +Y state). I can submit a new fix for this alongside some test code that does some basic verification (sorry -- I'm not sure what would be a good set of tests, the ones I have come up with are certainly not exhaustive.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893157034
https://github.com/qutip/qutip/pull/1195#issuecomment-893157034:527,Testability,test,tests,527,"@hodgestar I think I have found a fix, the problems were two-fold:; - The addition/subtraction for the cos/sin(theta/2) terms were swapped, which gives you a flipped result (high Q value on opposite side of sphere); - The phase factor for the diagonal terms of the density matrix were swapped, which gave you flipped result in the Y axis (high Q value for -Y if you give it +Y state). I can submit a new fix for this alongside some test code that does some basic verification (sorry -- I'm not sure what would be a good set of tests, the ones I have come up with are certainly not exhaustive.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1195#issuecomment-893157034
https://github.com/qutip/qutip/issues/1196#issuecomment-595050108:278,Modifiability,variab,variables,278,"It looks like the loop on line 64 https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L64 completes on the first try, but doesn't manage to import any objects, so the import_list remains empty. Could you use pdb to access local variables?. ---; P.S. You can use Markdown to format the traceback in a user-friendly way:; e.g. ; \`\`\`python-traceback; /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext; \`\`\`. Renders to:; ```python-traceback; /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595050108
https://github.com/qutip/qutip/issues/1196#issuecomment-595050108:265,Security,access,access,265,"It looks like the loop on line 64 https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L64 completes on the first try, but doesn't manage to import any objects, so the import_list remains empty. Could you use pdb to access local variables?. ---; P.S. You can use Markdown to format the traceback in a user-friendly way:; e.g. ; \`\`\`python-traceback; /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext; \`\`\`. Renders to:; ```python-traceback; /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595050108
https://github.com/qutip/qutip/issues/1196#issuecomment-595050108:350,Usability,user-friendly,user-friendly,350,"It looks like the loop on line 64 https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L64 completes on the first try, but doesn't manage to import any objects, so the import_list remains empty. Could you use pdb to access local variables?. ---; P.S. You can use Markdown to format the traceback in a user-friendly way:; e.g. ; \`\`\`python-traceback; /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext; \`\`\`. Renders to:; ```python-traceback; /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595050108
https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:127,Availability,error,error,127,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212
https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:469,Availability,error,error,469,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212
https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:752,Availability,error,error,752,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212
https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:475,Integrability,message,message,475,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212
https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:758,Integrability,message,message,758,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212
https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:4,Modifiability,variab,variable,4,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212
https://github.com/qutip/qutip/issues/1196#issuecomment-596178441:424,Deployability,upgrade,upgraded,424,"Thank you for the answer. I will try to use functions as you suggested. I didn't know how to use pdb so I didn't know what to do. I added print(e) but nothing happens. I can attach my code (in Jupyter notebook) if you'd like to look at it. To give you more information, I tried the same code in a Linux machine and it works fine. So I think the problem might be for Mac computers only. Also, these problem popped up after I upgraded to qutip 4.5. The problem didn't go away when I reverted to the previous Conda environment though...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-596178441
https://github.com/qutip/qutip/issues/1196#issuecomment-599356968:23,Availability,error,error,23,"Hi All; I get the same error when attempting to run the qutip tutorial ; ""Bloch sphere with colorbar"". from the qutip tutorials with a virgin install of qutip from the conda-forge on Python 3.7.6 using the latest version of Anaconda..in a new environment. Whats up?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968
https://github.com/qutip/qutip/issues/1196#issuecomment-599356968:142,Deployability,install,install,142,"Hi All; I get the same error when attempting to run the qutip tutorial ; ""Bloch sphere with colorbar"". from the qutip tutorials with a virgin install of qutip from the conda-forge on Python 3.7.6 using the latest version of Anaconda..in a new environment. Whats up?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968
https://github.com/qutip/qutip/issues/1196#issuecomment-809400723:29,Deployability,release,released,29,Should be fixed by #1199 and released in QuTiP 4.5.2.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-809400723
https://github.com/qutip/qutip/issues/1197#issuecomment-595872761:31,Availability,fault,fault,31,I am not really seeing the seg fault clearly in this trace. ; Please could you add some more description in here about what exactly you doing. That is steps to replicate. Please also include details about your environment by running `qutip.about()`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-595872761
https://github.com/qutip/qutip/issues/1197#issuecomment-595872761:37,Usability,clear,clearly,37,I am not really seeing the seg fault clearly in this trace. ; Please could you add some more description in here about what exactly you doing. That is steps to replicate. Please also include details about your environment by running `qutip.about()`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-595872761
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:226,Deployability,install,install,226,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:270,Deployability,install,install,270,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:332,Deployability,install,install,332,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:791,Deployability,release,release,791,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:424,Modifiability,config,config,424,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:522,Modifiability,config,config,522,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:52,Testability,test,tests,52,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:155,Testability,test,tests,155,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:365,Testability,test,test,365,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:370,Testability,log,log,370,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:463,Testability,test,test,463,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:468,Testability,log,log,468,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:561,Testability,test,test,561,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:566,Testability,log,log,566,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:611,Testability,test,testing,611,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:655,Testability,test,test,655,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:660,Testability,log,log,660,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:702,Testability,test,test,702,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:707,Testability,log,log,707,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:758,Testability,test,test,758,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596633885:763,Testability,log,log,763,"I'm seeing the same segfault when trying to run the tests on MacOS. I'm using the following script `run_tests.sh` in the qutip root folder for running the tests:; ~~~; #!/usr/bin/env bash; python3 -m venv venv; ./venv/bin/pip install -r requirements.txt; ./venv/bin/pip install pytest matplotlib ipython; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~; This results in the attached [`test.log`](https://github.com/qutip/qutip/files/4307785/test.log). This is for the 4.5.1 release candidate, but I'm getting the same segfault on the current `master` (01132789581821517986fad1a14ab3feec7d2de2)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596633885
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:321,Deployability,install,install,321,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:413,Modifiability,config,config,413,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:511,Modifiability,config,config,511,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:48,Safety,avoid,avoids,48,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:15,Testability,test,testing,15,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:110,Testability,test,tests,110,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:354,Testability,test,test,354,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:359,Testability,log,log,359,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:452,Testability,test,test,452,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:457,Testability,log,log,457,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:550,Testability,test,test,550,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:555,Testability,log,log,555,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:600,Testability,test,testing,600,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:644,Testability,test,test,644,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:649,Testability,log,log,649,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:689,Testability,test,test,689,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:694,Testability,log,log,694,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:745,Testability,test,test,745,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:750,Testability,log,log,750,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:756,Testability,test,testing,756,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939
https://github.com/qutip/qutip/issues/1197#issuecomment-596676557:433,Deployability,install,installation,433,"For the record, the combination of conda and Python 3.7 (instead of 3.8) works:; ~~~; = 629 passed, 11 skipped, 61 deselected, 2 xfailed, 906 warnings in 590.30s (0:09:50) =; ~~~; If mcsolve uses multiprocessing internally, it's possible the hanging test is related to the changes in Python 3.8 to use ""spawn"" instead of ""fork"" for multiprocessing on macOS (see also https://github.com/qutip/qutip-notebooks/issues/100). For the pip installation, the segfault occurs with both Python 3.7 and Python 3.8",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596676557
https://github.com/qutip/qutip/issues/1197#issuecomment-596676557:250,Testability,test,test,250,"For the record, the combination of conda and Python 3.7 (instead of 3.8) works:; ~~~; = 629 passed, 11 skipped, 61 deselected, 2 xfailed, 906 warnings in 590.30s (0:09:50) =; ~~~; If mcsolve uses multiprocessing internally, it's possible the hanging test is related to the changes in Python 3.8 to use ""spawn"" instead of ""fork"" for multiprocessing on macOS (see also https://github.com/qutip/qutip-notebooks/issues/100). For the pip installation, the segfault occurs with both Python 3.7 and Python 3.8",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596676557
https://github.com/qutip/qutip/issues/1197#issuecomment-596712910:102,Availability,error,errors,102,"Yes `multiprocessing` is used by `mcsolve`. If there are issues pickling function, then it will cause errors. I hope that this could be fixed with the function `set_start_method` from `multiprocessing`. In the segfault case, the problematic function call lapack from cython by using scipy interface. So it could be a couple of things. On mac, there is the accelerate blas/lapack implementation which does not have the same interface, so if it links to this, then a segfault would not be surprising. But I can't say for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910
https://github.com/qutip/qutip/issues/1197#issuecomment-596712910:289,Integrability,interface,interface,289,"Yes `multiprocessing` is used by `mcsolve`. If there are issues pickling function, then it will cause errors. I hope that this could be fixed with the function `set_start_method` from `multiprocessing`. In the segfault case, the problematic function call lapack from cython by using scipy interface. So it could be a couple of things. On mac, there is the accelerate blas/lapack implementation which does not have the same interface, so if it links to this, then a segfault would not be surprising. But I can't say for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910
https://github.com/qutip/qutip/issues/1197#issuecomment-596712910:423,Integrability,interface,interface,423,"Yes `multiprocessing` is used by `mcsolve`. If there are issues pickling function, then it will cause errors. I hope that this could be fixed with the function `set_start_method` from `multiprocessing`. In the segfault case, the problematic function call lapack from cython by using scipy interface. So it could be a couple of things. On mac, there is the accelerate blas/lapack implementation which does not have the same interface, so if it links to this, then a segfault would not be surprising. But I can't say for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:102,Availability,fault,faults,102,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:206,Availability,fault,fault,206,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:270,Availability,fault,fault,270,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:551,Availability,fault,fault,551,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:233,Integrability,message,message,233,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:183,Testability,test,tests,183,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:328,Testability,test,tests,328,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:457,Testability,test,test,457,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:528,Testability,test,tests,528,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257
https://github.com/qutip/qutip/issues/1197#issuecomment-598855427:269,Security,access,access,269,"It *should* also affect Windows, even with Python 3.7: Windows has always (I think) used ""spawn"" for multiprocessing. Thus, if there's a workaround in place that makes `mcsolve` work on Windows, it should also be applicable to macOS/Python 3.8. Alas, I don't have easy access to a Windows system, so I haven't tested this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598855427
https://github.com/qutip/qutip/issues/1197#issuecomment-598855427:310,Testability,test,tested,310,"It *should* also affect Windows, even with Python 3.7: Windows has always (I think) used ""spawn"" for multiprocessing. Thus, if there's a workaround in place that makes `mcsolve` work on Windows, it should also be applicable to macOS/Python 3.8. Alas, I don't have easy access to a Windows system, so I haven't tested this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598855427
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:145,Deployability,install,installing,145,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:194,Deployability,install,installing,194,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:722,Deployability,Install,Installing,722,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:975,Deployability,install,installation,975,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:1032,Deployability,install,install,1032,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:1050,Deployability,install,install,1050,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:1238,Energy Efficiency,adapt,adapt,1238,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:228,Integrability,depend,depend,228,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:933,Integrability,interface,interface,933,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:1238,Modifiability,adapt,adapt,1238,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:1177,Safety,risk,risking,1177,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:11,Testability,test,tests,11,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:411,Testability,test,tests,411,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:521,Deployability,install,installing,521,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:573,Deployability,install,installing,573,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1122,Deployability,Install,Installing,1122,"ly note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1386,Deployability,install,installation,1386,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1446,Deployability,install,install,1446,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1464,Deployability,install,install,1464,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1662,Energy Efficiency,adapt,adapt,1662,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:609,Integrability,depend,depend,609,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1341,Integrability,interface,interface,1341,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1662,Modifiability,adapt,adapt,1662,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1599,Safety,risk,risking,1599,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:381,Testability,test,tests,381,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:798,Testability,test,tests,798,"@EricGig thank you for the extensive investigation. What do you think of; adding (even with a temporarily note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264
https://github.com/qutip/qutip/issues/1197#issuecomment-628675623:19,Deployability,install,installation,19,"It could be in the installation instruction. . Or solution 3 should be easy and quick do implement as a temporary patch. A good first cython PR.; We just need to decide if we accept it like this, go back to make a better fix later or wait for scipy / blas to fix it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628675623
https://github.com/qutip/qutip/issues/1197#issuecomment-628675623:114,Deployability,patch,patch,114,"It could be in the installation instruction. . Or solution 3 should be easy and quick do implement as a temporary patch. A good first cython PR.; We just need to decide if we accept it like this, go back to make a better fix later or wait for scipy / blas to fix it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628675623
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:283,Availability,reliab,reliably,283,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:633,Availability,reliab,reliably,633,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1258,Availability,down,down,1258,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1321,Availability,error,error,1321,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:847,Deployability,install,install,847,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:943,Deployability,install,install,943,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1700,Deployability,install,installs,1700,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1187,Integrability,wrap,wrapper,1187,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1314,Security,access,access,1314,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:1391,Security,access,access,1391,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:858,Testability,test,test,858,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955
https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:293,Availability,error,error,293,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918
https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:155,Deployability,continuous,continuous,155,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918
https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:127,Integrability,interface,interface,127,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918
https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:224,Testability,test,tests,224,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918
https://github.com/qutip/qutip/issues/1197#issuecomment-636995874:133,Deployability,install,installed,133,"I also ran into segfaults on MacOS, using `qutip.simdiag` and `Qobj.eigenstates`, it seems like the same issue. This was using scipy installed via conda, from the `conda-forge` channel. Installing scipy from the `defaults` channel instead resolved the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-636995874
https://github.com/qutip/qutip/issues/1197#issuecomment-636995874:186,Deployability,Install,Installing,186,"I also ran into segfaults on MacOS, using `qutip.simdiag` and `Qobj.eigenstates`, it seems like the same issue. This was using scipy installed via conda, from the `conda-forge` channel. Installing scipy from the `defaults` channel instead resolved the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-636995874
https://github.com/qutip/qutip/pull/1198#issuecomment-602628987:209,Deployability,release,release,209,"I only have doubt about the 'other' form. Does that mean that issues cannot be open without using a template? Having the changelog in the PR is the best I believe. The file in qutip-doc can be undated at each release. A file in qutip could create a lot of conflict since each PR would have to add something at the end of 1 file and a lot of PR would be waiting on it. The same way we have good PR that are only waiting for a test to be added before merging. In the pull request template, I would mention the need for tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987
https://github.com/qutip/qutip/pull/1198#issuecomment-602628987:425,Testability,test,test,425,"I only have doubt about the 'other' form. Does that mean that issues cannot be open without using a template? Having the changelog in the PR is the best I believe. The file in qutip-doc can be undated at each release. A file in qutip could create a lot of conflict since each PR would have to add something at the end of 1 file and a lot of PR would be waiting on it. The same way we have good PR that are only waiting for a test to be added before merging. In the pull request template, I would mention the need for tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987
https://github.com/qutip/qutip/pull/1198#issuecomment-602628987:517,Testability,test,tests,517,"I only have doubt about the 'other' form. Does that mean that issues cannot be open without using a template? Having the changelog in the PR is the best I believe. The file in qutip-doc can be undated at each release. A file in qutip could create a lot of conflict since each PR would have to add something at the end of 1 file and a lot of PR would be waiting on it. The same way we have good PR that are only waiting for a test to be added before merging. In the pull request template, I would mention the need for tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602628987
https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:342,Deployability,release,release,342,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649
https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:328,Energy Efficiency,charge,charge,328,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649
https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:94,Testability,test,tests,94,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649
https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:363,Usability,simpl,simple,363,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649
https://github.com/qutip/qutip/pull/1198#issuecomment-602778824:424,Testability,test,tests,424,"You can still open an empty issue or PR without the template, although the button for that is a bit smaller and is at the end of the template list. I set this up in my fork https://github.com/BoxiLi/qutip, you can try open one there. The behaviour should be exactly the same for the QuTiP main repo after this PR is merged. Let me know if you have suggestions on a better name than ""others"". Sure I can add a suggestion for tests. A proposal for automatization is in https://github.com/qutip/qutip/issues/1108. I'm not yet sure if that can be directly applied to this template.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602778824
https://github.com/qutip/qutip/issues/1202#issuecomment-603919447:19,Availability,error,error,19,"I can get the same error on linux with:; ```; from qutip.testing import run; import multiprocessing as mp; mp.set_start_method('spawn'); run(); ```; It hangs on qutip/tests/test_mcsolve.py::test_MCTDFunc.; So maybe, set_start_method('fork') could probably fix the problem on mac.; Also this hang, both at console and jupyter:; ```; import multiprocessing as mp; mp.set_start_method('spawn'). def f(i):; return i+1. p = mp.Pool(); p.map(f, [1,2,3,4]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447
https://github.com/qutip/qutip/issues/1202#issuecomment-603919447:57,Testability,test,testing,57,"I can get the same error on linux with:; ```; from qutip.testing import run; import multiprocessing as mp; mp.set_start_method('spawn'); run(); ```; It hangs on qutip/tests/test_mcsolve.py::test_MCTDFunc.; So maybe, set_start_method('fork') could probably fix the problem on mac.; Also this hang, both at console and jupyter:; ```; import multiprocessing as mp; mp.set_start_method('spawn'). def f(i):; return i+1. p = mp.Pool(); p.map(f, [1,2,3,4]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447
https://github.com/qutip/qutip/issues/1202#issuecomment-603919447:167,Testability,test,tests,167,"I can get the same error on linux with:; ```; from qutip.testing import run; import multiprocessing as mp; mp.set_start_method('spawn'); run(); ```; It hangs on qutip/tests/test_mcsolve.py::test_MCTDFunc.; So maybe, set_start_method('fork') could probably fix the problem on mac.; Also this hang, both at console and jupyter:; ```; import multiprocessing as mp; mp.set_start_method('spawn'). def f(i):; return i+1. p = mp.Pool(); p.map(f, [1,2,3,4]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:1753,Energy Efficiency,efficient,efficiently,1753,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:466,Integrability,inject,injected,466,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:517,Integrability,protocol,protocol,517,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:212,Modifiability,inherit,inheriting,212,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:250,Modifiability,variab,variables,250,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:466,Security,inject,injected,466,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:1304,Testability,test,tests,1304,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416
https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757:51,Availability,avail,available,51,"Version 5 has `loky` (and mpi) based parallel maps available for when `multiprocessing` doesn't want to cooperate.; All maps are tests of linux, mac and windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757
https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757:129,Testability,test,tests,129,"Version 5 has `loky` (and mpi) based parallel maps available for when `multiprocessing` doesn't want to cooperate.; All maps are tests of linux, mac and windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757
https://github.com/qutip/qutip/issues/1204#issuecomment-600614619:89,Usability,simpl,simply,89,"As a minor note, as of qutip 4.5 you can achieve the tensor product basis state creation simply with; ```python; qutip.basis([2]*n_qubits, [0]*n_qubits); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600614619
https://github.com/qutip/qutip/issues/1204#issuecomment-600771828:523,Deployability,release,release,523,"Interesting observation, the vector_to_operator seems to expect an ""operator-ket"" class, as seen in the examples: . http://qutip.org/docs/3.1.0/guide/guide-states.html. In the code, it expects the dimensions of the operator(""op"") should be: . `op.dims = [ [[rows], [cols]], [1]]`. This is probably to keep in line with the way operator_to_vector sets the dimensions. I am not sure what the expected behavior is supposed to be with a ""ket"" instead of a ""operator-ket"". You are correct to think that this behavior changed in release 4.5 as the shape passed to the sp_reshape function in vector_to_operator changed from:. `n = int(np.sqrt(op.shape[0]))`; `shape = (n, n)`. to . `shape = (np.prod(q.dims[0]), np.prod(q.dims[1]))`. The first preserves the correct ""size"" (which is later used in the check which throws ""Exception: Total size of array must be unchanged."") but the latter one does not for kets. . Maybe we should return the shape assignment to the previous one ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600771828
https://github.com/qutip/qutip/issues/1204#issuecomment-600771828:144,Usability,guid,guide,144,"Interesting observation, the vector_to_operator seems to expect an ""operator-ket"" class, as seen in the examples: . http://qutip.org/docs/3.1.0/guide/guide-states.html. In the code, it expects the dimensions of the operator(""op"") should be: . `op.dims = [ [[rows], [cols]], [1]]`. This is probably to keep in line with the way operator_to_vector sets the dimensions. I am not sure what the expected behavior is supposed to be with a ""ket"" instead of a ""operator-ket"". You are correct to think that this behavior changed in release 4.5 as the shape passed to the sp_reshape function in vector_to_operator changed from:. `n = int(np.sqrt(op.shape[0]))`; `shape = (n, n)`. to . `shape = (np.prod(q.dims[0]), np.prod(q.dims[1]))`. The first preserves the correct ""size"" (which is later used in the check which throws ""Exception: Total size of array must be unchanged."") but the latter one does not for kets. . Maybe we should return the shape assignment to the previous one ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600771828
https://github.com/qutip/qutip/issues/1204#issuecomment-600771828:150,Usability,guid,guide-states,150,"Interesting observation, the vector_to_operator seems to expect an ""operator-ket"" class, as seen in the examples: . http://qutip.org/docs/3.1.0/guide/guide-states.html. In the code, it expects the dimensions of the operator(""op"") should be: . `op.dims = [ [[rows], [cols]], [1]]`. This is probably to keep in line with the way operator_to_vector sets the dimensions. I am not sure what the expected behavior is supposed to be with a ""ket"" instead of a ""operator-ket"". You are correct to think that this behavior changed in release 4.5 as the shape passed to the sp_reshape function in vector_to_operator changed from:. `n = int(np.sqrt(op.shape[0]))`; `shape = (n, n)`. to . `shape = (np.prod(q.dims[0]), np.prod(q.dims[1]))`. The first preserves the correct ""size"" (which is later used in the check which throws ""Exception: Total size of array must be unchanged."") but the latter one does not for kets. . Maybe we should return the shape assignment to the previous one ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600771828
https://github.com/qutip/qutip/issues/1204#issuecomment-600781981:76,Testability,test,test,76,"@Francesco-Benfenati: can you tell us what the expected behaviour from your test case is? Are you intending to create a superoperator, or are you intending to create a a density matrix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600781981
https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1668,Availability,error,error,1668,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011
https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1856,Energy Efficiency,reduce,reduce,1856,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011
https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:871,Security,access,access,871,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011
https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1011,Security,access,access,1011,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011
https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1541,Testability,test,test,1541,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011
https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1531,Usability,simpl,simply,1531,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011
https://github.com/qutip/qutip/issues/1204#issuecomment-601662221:581,Availability,error,error,581,"Hi, thank you all for the answers, and sorry for the delay. I understand there is some confusion because what I'm trying to do doesn't really have a physical meaning, I simply wanted to convert between matrices and vectors because I'm looking for computational gains by doing so. ; If this was numpy, I would simply use numpy.reshape. ; I guess it actually makes sense if this is not a permitted operation in qutip, I was just exploiting the operator_to_vector function for a different reason. @quantshah ; Thanks, I tried the code, but even the test_vec implementation fails with error ; File ""qutip\superoperator.py"", line 278, in vector_to_operator; shape = (np.prod(q.dims[0]), np.prod(q.dims[1])). IndexError: list index out of range. @jakelishman ; Thanks for the tip for the tensor product basis state creation.; It's not a density matrix that I want to do, I just wanted to reshape the array. As a side note, I notice that I have a very large computational cost when I work with dense matrices and state vectors, as you do when you simulate a quantum circuit with parametric rotations on each qubit, and this is due to the fact that qutip uses a sparse matrix representation. If I do the same operations with numpy I get a large computational gain, because the arrays are dense. Is there any way that I don't know about to save the Qobj data in dense form?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221
https://github.com/qutip/qutip/issues/1204#issuecomment-601662221:169,Usability,simpl,simply,169,"Hi, thank you all for the answers, and sorry for the delay. I understand there is some confusion because what I'm trying to do doesn't really have a physical meaning, I simply wanted to convert between matrices and vectors because I'm looking for computational gains by doing so. ; If this was numpy, I would simply use numpy.reshape. ; I guess it actually makes sense if this is not a permitted operation in qutip, I was just exploiting the operator_to_vector function for a different reason. @quantshah ; Thanks, I tried the code, but even the test_vec implementation fails with error ; File ""qutip\superoperator.py"", line 278, in vector_to_operator; shape = (np.prod(q.dims[0]), np.prod(q.dims[1])). IndexError: list index out of range. @jakelishman ; Thanks for the tip for the tensor product basis state creation.; It's not a density matrix that I want to do, I just wanted to reshape the array. As a side note, I notice that I have a very large computational cost when I work with dense matrices and state vectors, as you do when you simulate a quantum circuit with parametric rotations on each qubit, and this is due to the fact that qutip uses a sparse matrix representation. If I do the same operations with numpy I get a large computational gain, because the arrays are dense. Is there any way that I don't know about to save the Qobj data in dense form?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221
https://github.com/qutip/qutip/issues/1204#issuecomment-601662221:309,Usability,simpl,simply,309,"Hi, thank you all for the answers, and sorry for the delay. I understand there is some confusion because what I'm trying to do doesn't really have a physical meaning, I simply wanted to convert between matrices and vectors because I'm looking for computational gains by doing so. ; If this was numpy, I would simply use numpy.reshape. ; I guess it actually makes sense if this is not a permitted operation in qutip, I was just exploiting the operator_to_vector function for a different reason. @quantshah ; Thanks, I tried the code, but even the test_vec implementation fails with error ; File ""qutip\superoperator.py"", line 278, in vector_to_operator; shape = (np.prod(q.dims[0]), np.prod(q.dims[1])). IndexError: list index out of range. @jakelishman ; Thanks for the tip for the tensor product basis state creation.; It's not a density matrix that I want to do, I just wanted to reshape the array. As a side note, I notice that I have a very large computational cost when I work with dense matrices and state vectors, as you do when you simulate a quantum circuit with parametric rotations on each qubit, and this is due to the fact that qutip uses a sparse matrix representation. If I do the same operations with numpy I get a large computational gain, because the arrays are dense. Is there any way that I don't know about to save the Qobj data in dense form?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221
https://github.com/qutip/qutip/issues/1204#issuecomment-601795001:372,Availability,error,error,372,"Right now there's no way to make `Qobj` use a dense representation, but that is something that's been discussed elsewhere. If you just want to use `qutip` functions to build up a system then do the heavy lifting using `numpy`, you can convert a `Qobj` to a dense array with `Qobj.full` (e.g. `qutip.qeye(10000).full()`). Your question certainly did spot a place where the error message could be improved, though!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001
https://github.com/qutip/qutip/issues/1204#issuecomment-601795001:378,Integrability,message,message,378,"Right now there's no way to make `Qobj` use a dense representation, but that is something that's been discussed elsewhere. If you just want to use `qutip` functions to build up a system then do the heavy lifting using `numpy`, you can convert a `Qobj` to a dense array with `Qobj.full` (e.g. `qutip.qeye(10000).full()`). Your question certainly did spot a place where the error message could be improved, though!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001
https://github.com/qutip/qutip/issues/1204#issuecomment-641690849:92,Deployability,update,updated,92,"Just noticed this thread. . I can take a detailed look, perhaps with @arnelg as we recently updated the superoperator functions in 4.5. . My initial reaction is this is ""off label use"" of `vector_to_operator`. If so, then we can update the docs to make this point clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-641690849
https://github.com/qutip/qutip/issues/1204#issuecomment-641690849:229,Deployability,update,update,229,"Just noticed this thread. . I can take a detailed look, perhaps with @arnelg as we recently updated the superoperator functions in 4.5. . My initial reaction is this is ""off label use"" of `vector_to_operator`. If so, then we can update the docs to make this point clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-641690849
https://github.com/qutip/qutip/issues/1204#issuecomment-641690849:264,Usability,clear,clear,264,"Just noticed this thread. . I can take a detailed look, perhaps with @arnelg as we recently updated the superoperator functions in 4.5. . My initial reaction is this is ""off label use"" of `vector_to_operator`. If so, then we can update the docs to make this point clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-641690849
https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:231,Availability,error,errors,231,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973
https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:53,Deployability,install,install,53,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973
https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:89,Deployability,install,install,89,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973
https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:120,Deployability,install,installation,120,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973
https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:152,Deployability,install,install,152,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973
https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:185,Deployability,install,installed,185,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973
https://github.com/qutip/qutip/issues/1205#issuecomment-606944113:193,Availability,error,error,193,"Finally, here is the temporal solution for those who might have the same issue. My bug report is ; ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. There is no `src/zspmv_openmp.hpp` in that folder, i.e. `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`. One can download [this folder](https://github.com/qutip/qutip/tree/master/qutip/cy/openmp/src) and put this `src` folder into the target folder `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-606944113
https://github.com/qutip/qutip/issues/1205#issuecomment-606944113:466,Availability,down,download,466,"Finally, here is the temporal solution for those who might have the same issue. My bug report is ; ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. There is no `src/zspmv_openmp.hpp` in that folder, i.e. `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`. One can download [this folder](https://github.com/qutip/qutip/tree/master/qutip/cy/openmp/src) and put this `src` folder into the target folder `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-606944113
https://github.com/qutip/qutip/issues/1205#issuecomment-828360653:58,Deployability,release,release,58,"This file is now correctly distributed in the `4.6` sdist release (see #1449), though do note that people who want to use OpenMP will probably have an easier time of it if they are installing from the latest `git` source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-828360653
https://github.com/qutip/qutip/issues/1205#issuecomment-828360653:181,Deployability,install,installing,181,"This file is now correctly distributed in the `4.6` sdist release (see #1449), though do note that people who want to use OpenMP will probably have an easier time of it if they are installing from the latest `git` source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-828360653
https://github.com/qutip/qutip/issues/1207#issuecomment-600826564:237,Availability,error,error,237,"String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; ```; def f(t,args):; return sin(args[""w""]*t); H = [H0, [H1, f]]; ```; Here there is also an error in the error message, we will fix that bug soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564
https://github.com/qutip/qutip/issues/1207#issuecomment-600826564:250,Availability,error,error,250,"String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; ```; def f(t,args):; return sin(args[""w""]*t); H = [H0, [H1, f]]; ```; Here there is also an error in the error message, we will fix that bug soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564
https://github.com/qutip/qutip/issues/1207#issuecomment-600826564:256,Integrability,message,message,256,"String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; ```; def f(t,args):; return sin(args[""w""]*t); H = [H0, [H1, f]]; ```; Here there is also an error in the error message, we will fix that bug soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564
https://github.com/qutip/qutip/issues/1207#issuecomment-603532427:243,Availability,error,error,243,"Hi, I think you may have some typos in your code, for example you have a pi instead of np.pi in line 9. Also in the definition of the constants you have 2np.pi instead of 2*np.pi. . I've run your code changing those typos and I didn't get any error. I am running it in Mac OS X Catalina. . Try to run the code I've run in your machine: . ```; import numpy as np; from qutip import *; import matplotlib.pyplot as plt. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); H1 = A/2.0 * sigmaz(); args = {'w': omega}; H = [H0, [H1, 'sin(w * t)']]; T = 2*np.pi / omega; f_modes_0, f_energies = floquet_modes(H, T, args); f_energies; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603532427
https://github.com/qutip/qutip/issues/1207#issuecomment-603977040:259,Availability,error,error,259,"> String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; > ; > ```; > def f(t,args):; > return sin(args[""w""]*t); > H = [H0, [H1, f]]; > ```; > ; > Here there is also an error in the error message, we will fix that bug soon. Thanks this worked. > import numpy as np; > from qutip import *; > import matplotlib.pyplot as plt; > ; > delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; > H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); > H1 = A/2.0 * sigmaz(); > args = {'w': omega}; > H = [H0, [H1, 'sin(w * t)']]; > T = 2*np.pi / omega; > f_modes_0, f_energies = floquet_modes(H, T, args); > f_energies. This didnt' work for me. I'm also running it on a Mac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040
https://github.com/qutip/qutip/issues/1207#issuecomment-603977040:272,Availability,error,error,272,"> String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; > ; > ```; > def f(t,args):; > return sin(args[""w""]*t); > H = [H0, [H1, f]]; > ```; > ; > Here there is also an error in the error message, we will fix that bug soon. Thanks this worked. > import numpy as np; > from qutip import *; > import matplotlib.pyplot as plt; > ; > delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; > H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); > H1 = A/2.0 * sigmaz(); > args = {'w': omega}; > H = [H0, [H1, 'sin(w * t)']]; > T = 2*np.pi / omega; > f_modes_0, f_energies = floquet_modes(H, T, args); > f_energies. This didnt' work for me. I'm also running it on a Mac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040
https://github.com/qutip/qutip/issues/1207#issuecomment-603977040:278,Integrability,message,message,278,"> String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; > ; > ```; > def f(t,args):; > return sin(args[""w""]*t); > H = [H0, [H1, f]]; > ```; > ; > Here there is also an error in the error message, we will fix that bug soon. Thanks this worked. > import numpy as np; > from qutip import *; > import matplotlib.pyplot as plt; > ; > delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; > H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); > H1 = A/2.0 * sigmaz(); > args = {'w': omega}; > H = [H0, [H1, 'sin(w * t)']]; > T = 2*np.pi / omega; > f_modes_0, f_energies = floquet_modes(H, T, args); > f_energies. This didnt' work for me. I'm also running it on a Mac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040
https://github.com/qutip/qutip/issues/1207#issuecomment-809399835:52,Deployability,release,released,52,"The particular reported bug was fixed in #1199, and released in QuTiP 4.5.2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-809399835
https://github.com/qutip/qutip/issues/1208#issuecomment-601552795:37,Modifiability,enhance,enhancement,37,"Hello, . I am trying to work on this enhancement. Do you think it's also a good idea to add the controlled version of the above gates? This can be done by defining a custom gate as well as given in the example (for rx) in the docs. Also, is it better if we name the gates ""X"" or ""XGATE"". I am not sure what convention the naming follows, if any. I can issue a pull request as soon as this is clarified. . Best, ; Sidhant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1208#issuecomment-601552795
https://github.com/qutip/qutip/pull/1209#issuecomment-602514600:30,Testability,test,tests,30,Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-602514600
https://github.com/qutip/qutip/pull/1209#issuecomment-602757325:32,Testability,test,tests,32,"> Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review. Hello, Nathan! I already submitted a PR for a notebook testing the new functions under the branch ; https://github.com/qutip/qutip-notebooks/pull/106. If you want to see the notebook, here it's at my fork of the repo (latex equations display well in Jupyter): . https://github.com/mlaguna10/qutip-notebooks/blob/master/examples/Pauli-X%2C%20Y%2C%20Z%20and%20S%2CT%20Quantum%20Gates%20using%20QuTiP%20(Test%20under%20%231208).ipynb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-602757325
https://github.com/qutip/qutip/pull/1209#issuecomment-602757325:143,Testability,test,testing,143,"> Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review. Hello, Nathan! I already submitted a PR for a notebook testing the new functions under the branch ; https://github.com/qutip/qutip-notebooks/pull/106. If you want to see the notebook, here it's at my fork of the repo (latex equations display well in Jupyter): . https://github.com/mlaguna10/qutip-notebooks/blob/master/examples/Pauli-X%2C%20Y%2C%20Z%20and%20S%2CT%20Quantum%20Gates%20using%20QuTiP%20(Test%20under%20%231208).ipynb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-602757325
https://github.com/qutip/qutip/pull/1209#issuecomment-602757325:489,Testability,Test,Test,489,"> Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review. Hello, Nathan! I already submitted a PR for a notebook testing the new functions under the branch ; https://github.com/qutip/qutip-notebooks/pull/106. If you want to see the notebook, here it's at my fork of the repo (latex equations display well in Jupyter): . https://github.com/mlaguna10/qutip-notebooks/blob/master/examples/Pauli-X%2C%20Y%2C%20Z%20and%20S%2CT%20Quantum%20Gates%20using%20QuTiP%20(Test%20under%20%231208).ipynb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-602757325
https://github.com/qutip/qutip/pull/1209#issuecomment-605883973:42,Testability,test,tests,42,"#1212 . > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > . By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-605883973
https://github.com/qutip/qutip/pull/1209#issuecomment-605883973:111,Testability,test,tests,111,"#1212 . > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > . By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-605883973
https://github.com/qutip/qutip/pull/1209#issuecomment-605883973:134,Testability,test,tests,134,"#1212 . > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > . By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-605883973
https://github.com/qutip/qutip/pull/1209#issuecomment-605883973:150,Testability,test,tests,150,"#1212 . > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > . By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-605883973
https://github.com/qutip/qutip/pull/1209#issuecomment-606060551:49,Testability,test,tests,49,"> #1212; > ; > > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > ; > By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this. Hi Alex! I thought 'adding test' means creating a notebook using the new features, but great that Martin can have the chance to do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606060551
https://github.com/qutip/qutip/pull/1209#issuecomment-606060551:120,Testability,test,tests,120,"> #1212; > ; > > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > ; > By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this. Hi Alex! I thought 'adding test' means creating a notebook using the new features, but great that Martin can have the chance to do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606060551
https://github.com/qutip/qutip/pull/1209#issuecomment-606060551:143,Testability,test,tests,143,"> #1212; > ; > > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > ; > By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this. Hi Alex! I thought 'adding test' means creating a notebook using the new features, but great that Martin can have the chance to do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606060551
https://github.com/qutip/qutip/pull/1209#issuecomment-606060551:159,Testability,test,tests,159,"> #1212; > ; > > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > ; > By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this. Hi Alex! I thought 'adding test' means creating a notebook using the new features, but great that Martin can have the chance to do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606060551
https://github.com/qutip/qutip/pull/1209#issuecomment-606060551:314,Testability,test,test,314,"> #1212; > ; > > > Thank you. Can you please add tests for this? I'm leaving to @BoxiLi a closer review.; > ; > By ""add tests"" we mean include tests in `qutip/tests'. See #1212 for example. @mlaguna10 please don't do this just now. We will give @MartinSandeCosta opportunity to do this. Hi Alex! I thought 'adding test' means creating a notebook using the new features, but great that Martin can have the chance to do it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606060551
https://github.com/qutip/qutip/pull/1209#issuecomment-606714637:662,Integrability,message,message,662,"There's a distinction between `git` and GitHub here, in that PRs are purely a GitHub thing. As far as `git` is concerned, there's actually no problem at all with a PR being merged from `master` on somebody else's fork (`master` after all is an arbitrary label). The reason to do it is that the person who created the PR will find it harder to incorporate upstream changes, because their `master` will now always be out-of-sync from ours until they fetch from our `master` and do a `git reset --hard` onto it, which would delete their commits and force their branch to line up with ours again. From our side, it makes no difference except that the default commit message that Github gives us will say `Merge branch mlaguna10:master into qutip:master`. You can just change the message and no-one would ever know from looking at the `git log`. I think this is all Boxi meant - it's no issue on our side. If you do the funky two-PR merge/rebase that Alex and I were talking about (by email) then it's all moot anyway, because all commits from this PR and #1212 will get squashed together and GitHub won't know that the PRs were actually merged (the author contributions will count, but I think the PRs will have to be manually closed).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637
https://github.com/qutip/qutip/pull/1209#issuecomment-606714637:775,Integrability,message,message,775,"There's a distinction between `git` and GitHub here, in that PRs are purely a GitHub thing. As far as `git` is concerned, there's actually no problem at all with a PR being merged from `master` on somebody else's fork (`master` after all is an arbitrary label). The reason to do it is that the person who created the PR will find it harder to incorporate upstream changes, because their `master` will now always be out-of-sync from ours until they fetch from our `master` and do a `git reset --hard` onto it, which would delete their commits and force their branch to line up with ours again. From our side, it makes no difference except that the default commit message that Github gives us will say `Merge branch mlaguna10:master into qutip:master`. You can just change the message and no-one would ever know from looking at the `git log`. I think this is all Boxi meant - it's no issue on our side. If you do the funky two-PR merge/rebase that Alex and I were talking about (by email) then it's all moot anyway, because all commits from this PR and #1212 will get squashed together and GitHub won't know that the PRs were actually merged (the author contributions will count, but I think the PRs will have to be manually closed).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637
https://github.com/qutip/qutip/pull/1209#issuecomment-606714637:835,Testability,log,log,835,"There's a distinction between `git` and GitHub here, in that PRs are purely a GitHub thing. As far as `git` is concerned, there's actually no problem at all with a PR being merged from `master` on somebody else's fork (`master` after all is an arbitrary label). The reason to do it is that the person who created the PR will find it harder to incorporate upstream changes, because their `master` will now always be out-of-sync from ours until they fetch from our `master` and do a `git reset --hard` onto it, which would delete their commits and force their branch to line up with ours again. From our side, it makes no difference except that the default commit message that Github gives us will say `Merge branch mlaguna10:master into qutip:master`. You can just change the message and no-one would ever know from looking at the `git log`. I think this is all Boxi meant - it's no issue on our side. If you do the funky two-PR merge/rebase that Alex and I were talking about (by email) then it's all moot anyway, because all commits from this PR and #1212 will get squashed together and GitHub won't know that the PRs were actually merged (the author contributions will count, but I think the PRs will have to be manually closed).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-606714637
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:86,Availability,error,error,86,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:162,Availability,FAILURE,FAILURES,162,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:92,Integrability,message,message,92,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:529,Modifiability,coupling,coupling,529,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:22,Testability,test,test,22,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:1006,Testability,Assert,AssertionError,1006,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:1109,Testability,test,test-environment,1109,"his randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:1214,Testability,test,tests,1214,"his randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:1241,Testability,Assert,AssertionError,1241,"his randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:1996,Testability,test,tests,1996,"his randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:88,Availability,error,error,88,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:172,Availability,FAILURE,FAILURES,172,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:94,Integrability,message,message,94,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:557,Modifiability,coupling,coupling,557,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:24,Testability,test,test,24,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:1056,Testability,Assert,AssertionError,1056," really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -------",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:1167,Testability,test,test-environment,1167,"AILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; > Name ; > ```; > ; > Restart the tests. I agree with you, it's annoying. On my personal Travis CI dashboard, all the ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:1272,Testability,test,tests,1272,"________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; > Name ; > ```; > ; > Restart the tests. I agree with you, it's annoying. On my personal Travis CI dashboard, all the tests passed, but for qutip dashboard, the last one always fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:1299,Testability,Assert,AssertionError,1299,"________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; > Name ; > ```; > ; > Restart the tests. I agree with you, it's annoying. On my personal Travis CI dashboard, all the tests passed, but for qutip dashboard, the last one always fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:2090,Testability,test,tests,2090,"________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; > Name ; > ```; > ; > Restart the tests. I agree with you, it's annoying. On my personal Travis CI dashboard, all the tests passed, but for qutip dashboard, the last one always fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:2174,Testability,test,tests,2174,"________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; > Name ; > ```; > ; > Restart the tests. I agree with you, it's annoying. On my personal Travis CI dashboard, all the tests passed, but for qutip dashboard, the last one always fails.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896
https://github.com/qutip/qutip/pull/1209#issuecomment-607480196:156,Availability,error,error,156,"It would be really good to get #1181 merged - I put in a couple of commits that would show us a lot more whether it's a minor random Monte-Carlo randomness error, or if it's completely wrong. I wouldn't worry too much about it for the purposes of this PR - we know it's not related so it's probably ok to merge despite it. Even if it passed, the subsequent run on merge might fail anyway. (pinging @Ericgig as he asked)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607480196
https://github.com/qutip/qutip/pull/1209#issuecomment-607480196:390,Availability,ping,pinging,390,"It would be really good to get #1181 merged - I put in a couple of commits that would show us a lot more whether it's a minor random Monte-Carlo randomness error, or if it's completely wrong. I wouldn't worry too much about it for the purposes of this PR - we know it's not related so it's probably ok to merge despite it. Even if it passed, the subsequent run on merge might fail anyway. (pinging @Ericgig as he asked)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607480196
https://github.com/qutip/qutip/pull/1209#issuecomment-607480527:12,Testability,test,tests,12,@BoxiLi ; ![tests](https://user-images.githubusercontent.com/15188655/78184791-ae03f000-742f-11ea-8736-03e929654bf2.png),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607480527
https://github.com/qutip/qutip/pull/1209#issuecomment-607482278:56,Testability,log,logging,56,I think you can get one running for your fork by simply logging in.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607482278
https://github.com/qutip/qutip/pull/1209#issuecomment-607482278:49,Usability,simpl,simply,49,I think you can get one running for your fork by simply logging in.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607482278
https://github.com/qutip/qutip/pull/1209#issuecomment-607483835:291,Usability,simpl,simply,291,"@jakelishman well, I haven't paid yet anything on Travis CI platform. However, I used my GitHub account (which I think it has some benefits since it's associated with an educational institution) to connect to the service, then I don't know if there was an exception due to that or it's just simply free.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607483835
https://github.com/qutip/qutip/pull/1212#issuecomment-603441970:43,Modifiability,refactor,refactors,43,"Commit #bea29a1 breaks some tests since it refactors some attribute names to follow PEP8 snake_case standard (i.e., qubit.qit.circuit.N ->qubit.qit.circuit.n_qubits )",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603441970
https://github.com/qutip/qutip/pull/1212#issuecomment-603441970:28,Testability,test,tests,28,"Commit #bea29a1 breaks some tests since it refactors some attribute names to follow PEP8 snake_case standard (i.e., qubit.qit.circuit.N ->qubit.qit.circuit.n_qubits )",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603441970
https://github.com/qutip/qutip/pull/1212#issuecomment-603454503:68,Testability,Test,TestCase,68,Should a new issue be created to replace deprecated method unittest.TestCase.assert_() with newer assertEqual/NotEqual?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603454503
https://github.com/qutip/qutip/pull/1212#issuecomment-603454503:98,Testability,assert,assertEqual,98,Should a new issue be created to replace deprecated method unittest.TestCase.assert_() with newer assertEqual/NotEqual?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603454503
https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:266,Availability,failure,failure,266,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557
https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:240,Modifiability,variab,variables,240,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557
https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:105,Testability,test,tests,105,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557
https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:188,Testability,assert,assert,188,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557
https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:256,Testability,assert,assertion,256,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557
https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:352,Testability,log,logical,352,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557
https://github.com/qutip/qutip/pull/1212#issuecomment-603579386:375,Modifiability,refactor,refactoring,375,"It is not discouraging at all, quite the contrary. Thank you very much for; looking at it and taking the time to let me know your thoughts. I will take; peek on #1181 and provide any help I can. Regarding the PEP changes: I am extremely inexperienced with this project; and contrasted my ideas with others such as Qskit and projectQ before; proceeding. I also find that this refactoring can be excessively thorough; and not needed since it breaks backwards compatibility.; On the other side, I knew these changes would not go through to master but; they can serve some purpose as to help me get a better understanding of the; library as well as get in touch with the community. It also helped me on; how to approach potential improvements for the tool.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603579386
https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:116,Deployability,release,release,116,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345
https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:79,Integrability,interface,interface,79,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345
https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:284,Modifiability,enhance,enhancements,284,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345
https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:628,Modifiability,enhance,enhancement,628,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345
https://github.com/qutip/qutip/pull/1212#issuecomment-605881345:368,Usability,clear,clear,368,"Firstly, just to underline @jakelishman comment. We *cannot* change the public interface unless we make a new major release. I also don't like the `.N` property, but it snuck in before my time. We could look to change this in v.5, but not before. . It seems this PR does contain some enhancements that are not part of #1209. However, @mlaguna10 did seem to make quite clear that they were already working on the issue. I believe #1209 is ready to merge, but we'll wait for @BoxiLi to confirm. . So what I suggest is that we merge #1209. @MartinSandeCosta can then merge the master into this PR and see what is left that adds to enhancement request outlined #1208. Assuming (with good reason) that there are valuable additions, then we will merge this too. Thanks everyone for contributing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-605881345
https://github.com/qutip/qutip/pull/1212#issuecomment-607489616:306,Modifiability,enhance,enhancement,306,"Hi @MartinSandeCosta, I have merged the PR of @mlaguna10. You can see now there is a few conflicts. Could you make a fresh PR including your changes based on the current master branch? . It could include:; - The controlled version of the gates; - Changes in QubitCircuit.propagator(); - Tests; and another enhancement you have related to #1208 . We shouldn't include the change of the attribution name `N` and `U_list` in this PR, as @jakelishman and @ajgpitch explained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-607489616
https://github.com/qutip/qutip/pull/1212#issuecomment-607489616:287,Testability,Test,Tests,287,"Hi @MartinSandeCosta, I have merged the PR of @mlaguna10. You can see now there is a few conflicts. Could you make a fresh PR including your changes based on the current master branch? . It could include:; - The controlled version of the gates; - Changes in QubitCircuit.propagator(); - Tests; and another enhancement you have related to #1208 . We shouldn't include the change of the attribution name `N` and `U_list` in this PR, as @jakelishman and @ajgpitch explained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-607489616
https://github.com/qutip/qutip/pull/1214#issuecomment-604135928:0,Testability,test,test,0,"test passes on mac with python 3.8 withour hanging on parallel mcsolve by forcing ""fork"" multiprocessing (#1202). Still on xcode 10. segfault probably not fixed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-604135928
https://github.com/qutip/qutip/pull/1214#issuecomment-610534948:23,Testability,test,tests,23,"Finally I settled on 5 tests sets: 3 linux and 2 MacOS. ; The test on python 3.6 use no-cython and openblas.; mkl and openmp run together on python 3.7 and python 3.8 use conda's default.; On Mac, tests use openblas, no openmp and cython, repeated for python 3.7 and 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-610534948
https://github.com/qutip/qutip/pull/1214#issuecomment-610534948:62,Testability,test,test,62,"Finally I settled on 5 tests sets: 3 linux and 2 MacOS. ; The test on python 3.6 use no-cython and openblas.; mkl and openmp run together on python 3.7 and python 3.8 use conda's default.; On Mac, tests use openblas, no openmp and cython, repeated for python 3.7 and 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-610534948
https://github.com/qutip/qutip/pull/1214#issuecomment-610534948:197,Testability,test,tests,197,"Finally I settled on 5 tests sets: 3 linux and 2 MacOS. ; The test on python 3.6 use no-cython and openblas.; mkl and openmp run together on python 3.7 and python 3.8 use conda's default.; On Mac, tests use openblas, no openmp and cython, repeated for python 3.7 and 3.8.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-610534948
https://github.com/qutip/qutip/pull/1214#issuecomment-613056053:47,Testability,test,test,47,It would be nice since it makes the python 3.8 test not freeze on mac. But if you don't thinks it's a good PR we can wait. It is a PR that does 2 things. Changes which tests are run and fix a bug that made one of the new tests fails. I can split it into 2 PRs if you prefer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-613056053
https://github.com/qutip/qutip/pull/1214#issuecomment-613056053:168,Testability,test,tests,168,It would be nice since it makes the python 3.8 test not freeze on mac. But if you don't thinks it's a good PR we can wait. It is a PR that does 2 things. Changes which tests are run and fix a bug that made one of the new tests fails. I can split it into 2 PRs if you prefer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-613056053
https://github.com/qutip/qutip/pull/1214#issuecomment-613056053:221,Testability,test,tests,221,It would be nice since it makes the python 3.8 test not freeze on mac. But if you don't thinks it's a good PR we can wait. It is a PR that does 2 things. Changes which tests are run and fix a bug that made one of the new tests fails. I can split it into 2 PRs if you prefer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-613056053
https://github.com/qutip/qutip/pull/1214#issuecomment-619441566:162,Testability,log,logical,162,"LGTM. Eric already made the changes I'd suggesting. This will cause another merge conflict in #1181, but that's not a problem at all (that PR will make this same logical change anyway).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1214#issuecomment-619441566
https://github.com/qutip/qutip/pull/1215#issuecomment-604030641:69,Testability,test,test,69,"@ajgpitch @nathanshammah ; I would like to make 4.5.1 from this. All test passes, there is only windows and mac 3.8 to check.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-604030641
https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:516,Availability,error,error,516,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746
https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:34,Deployability,release,release,34,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746
https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:448,Deployability,release,release,448,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746
https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:138,Testability,test,testing,138,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746
https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:533,Testability,test,test,533,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746
https://github.com/qutip/qutip/pull/1215#issuecomment-613054510:293,Deployability,release,release,293,I saw you merged #1219 to master but merged this one also. Should I also push it to 4.5.1 (another PR) or are we not including #1219 and #1215 in 4.5.1?; My process was to cherry-pick commits merged to master to this PR to then when this was ready to be 4.5.1 merge it to the branch 4.5.1 and release it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613054510
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:869,Availability,avail,available,869,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:1173,Integrability,depend,depend,1173,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:147,Testability,test,testing,147,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:181,Testability,test,tests,181,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:249,Testability,test,tests,249,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:538,Testability,test,test-generation,538,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:554,Testability,log,logic,554,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:710,Testability,test,test,710,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:975,Testability,test,tests,975,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:1215,Testability,test,tests,1215,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:1232,Testability,test,tests,1232,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:1442,Testability,test,tests,1442,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:102,Usability,simpl,simpler,102,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:458,Usability,simpl,simpler,458,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:585,Usability,simpl,simply,585,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776
https://github.com/qutip/qutip/issues/1217#issuecomment-604026374:117,Testability,test,test,117,"I am hoping to save more time with ""not slow"", about a 3~4x faster. Maybe I will remove 3.6 to save more time. Other test that need mark will wait for #1181 for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604026374
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:169,Availability,down,down,169,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:13,Testability,test,tests,13,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:137,Testability,test,tests,137,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:203,Testability,test,tests,203,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:394,Testability,Test,TestSESolve,394,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:486,Testability,Test,TestTimeDependence,486,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:588,Testability,test,testPropHOStrTd,588,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:634,Testability,Test,TestMESolveSuperInit,634,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:656,Testability,test,testMETDDecayAsStrList,656,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:874,Testability,Test,TestTimeDependence,874,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:972,Testability,Test,TestMESolveStepFuncCoeff,972,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1207,Testability,Test,TestOptimization,1207,5.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_i,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1319,Testability,Test,TestMESolverConstDecay,1319,test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1343,Testability,test,testMEDecayAsStrList,1343,test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1393,Testability,Test,TestSESolve,1393,_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call t,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1609,Testability,Test,TestMESolveTDDecay,1609,py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1629,Testability,test,testMETDDecayAsStrList,1629,py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1839,Testability,Test,TestScattering,1839,orrelation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dim,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:1855,Testability,test,testScatteringProbability,1855,orrelation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dim,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2020,Testability,Test,TestOptimization,2020,89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_st,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2296,Testability,Test,TestFileIO,2296,ve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseop,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2359,Testability,Test,TestSESolve,2359,sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_c,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2433,Testability,Test,TestMESolveSuperInit,2433,all test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Q,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2455,Testability,test,testSuperJC,2455,all test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Q,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2542,Testability,Test,TestSESolve,2542,o_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2709,Testability,Test,TestOptimization,2709,1s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2899,Testability,Test,TestMESolveSuperInit,2899,liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimizat,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:2921,Testability,test,testMETDDecayAsArray,2921,liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimizat,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3021,Testability,Test,TestSpinChain,3021,test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-Qobj propagation]; 6.04s call test_qubit_evolution.py::test_MCSolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3147,Testability,Test,TestTimeDependence,3147,SolverCase1; 5.90s call test_brmesolve_td.py::test_time_dependent_spline_in_c_ops; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3231,Testability,Test,TestMESolveSuperInit,3231,; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3253,Testability,test,testMETDDecayAsPartFuncList,3253,; 5.71s call test_control_pulseoptim.py::TestFileIO::test_dumping_to_files; 5.67s call test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call ,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3321,Testability,Test,TestOptimization,3321, test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H; 5.36s call test_mesolve.py::TestMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3403,Testability,Test,TestOptimization,3403,estMESolveSuperInit::testSuperJC; 5.23s call test_parallel.py::test_serial_map; 5.11s call test_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py:,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3507,Testability,Test,TestOptimization,3507,_sesolve.py::TestSESolve::test_06_2_compare_state_and_unitary_func; 5.05s call test_partial_transpose.py::test_partial_transpose_comparison; 5.05s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-de,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3652,Testability,Test,TestOptimization,3652,seoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Ising state-to-state-Qobj propagation]; 5.01s call test_qobj.py::test_dual_channel[sub_dimensions3]; 4.84s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equiv,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:3882,Testability,Test,TestOptimization,3882,estMETDDecayAsArray; 4.79s call test_parallel.py::test_parallel_map; 4.27s call test_spinchain.py::TestSpinChain::test_analytical_evo; 3.92s call test_stochastic_se.py::test_ssesolve_homodyne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_cle,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:4127,Testability,Test,TestOptimization,4127,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:4346,Testability,Test,TestMESolveStepFuncCoeff,4346,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:4436,Testability,Test,TestOptimization,4436,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:4757,Testability,Test,TestMESolveSuperInit,4757,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:4779,Testability,test,testMETDDecayAsFunc,4779,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:4838,Testability,Test,TestOptPulseProcessor,4838,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:5065,Testability,Test,TestSubsysApply,5065,yne; 3.86s call test_correlation.py::TestTimeDependence::test_hamiltonian_from_function_2ls; 3.25s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsPartFuncList; 3.23s call test_control_pulseoptim.py::TestOptimization::test_unitarity_via_dump; 3.03s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[QFT-Qobj propagation]; 2.65s call test_control_pulseoptim.py::TestOptimization::test_crab[Qobj propagation]; 2.57s call test_wigner.py::test_wigner_compare_methods_dm; 2.46s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Symplectic coupled oscillators-Qobj propagation]; 2.31s call test_parallel.py::test_parfor1; 2.11s call test_wigner.py::test_wigner_bell1_su2parity; 1.90s call test_control_pulseoptim.py::TestOptimization::test_basic_optimization[Ising state-to-state-Qobj propagation]; 1.86s call test_sparse.py::test_sp_profile; 1.66s call test_correlation.py::test_correlation_solver_equivalence[es-legacy]; 1.65s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Lindbladian amplitude damping channel-Qobj propagation]; 1.56s call test_correlation.py::test_correlation_solver_equivalence[es]; 1.43s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_py_coeff; 1.43s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[Symplectic coupled oscillators-default propagation]; 1.40s call test_correlation.py::test_correlation_solver_equivalence[es-steady state]; 1.38s call test_correlation.py::test_correlation_solver_equivalence[es-steady state-legacy]; 1.32s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsFunc; 1.17s call test_optpulseprocessor.py::TestOptPulseProcessor::test_multi_gates; 1.13s call test_utilities.py::test_unit_clebsch; 1.08s call test_brtools.py::test_vec_to_eigbasis; 1.03s call test_brtools.py::test_eigvec_to_fockbasis; 1.02s call test_subsys_apply.py::TestSubsysApply::test_ComplexSingleApply; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373
https://github.com/qutip/qutip/issues/1217#issuecomment-604140927:63,Testability,test,tests,63,"We need to be careful not to remove too much, we need keep the tests meaningful, with a good coverage. ; The first 2 are quite rare cases and could be marked as slow. Or at least one of them since they are quite similar.; Tests in QobjEvo could be rearranged to limit the number of compilations.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604140927
https://github.com/qutip/qutip/issues/1217#issuecomment-604140927:222,Testability,Test,Tests,222,"We need to be careful not to remove too much, we need keep the tests meaningful, with a good coverage. ; The first 2 are quite rare cases and could be marked as slow. Or at least one of them since they are quite similar.; Tests in QobjEvo could be rearranged to limit the number of compilations.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604140927
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:735,Availability,down,down,735,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:823,Availability,down,down,823,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:481,Deployability,configurat,configurations,481,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:308,Energy Efficiency,reduce,reduce,308,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:167,Integrability,depend,dependent,167,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:396,Integrability,depend,dependent,396,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:593,Integrability,depend,dependent,593,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:481,Modifiability,config,configurations,481,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:1106,Performance,perform,performance,1106,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:1011,Safety,hazard,hazard,1011,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:42,Testability,test,tests,42,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:67,Testability,test,testing,67,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:329,Testability,test,testing,329,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:382,Testability,test,tests,382,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:446,Testability,test,tests,446,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:468,Testability,test,test,468,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:789,Testability,test,tests,789,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:881,Testability,test,tests,881,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:980,Testability,test,tests,980,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:159,Energy Efficiency,reduce,reduced,159,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:178,Performance,load,load,178,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:193,Performance,concurren,concurrent,193,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:4,Testability,test,tests,4,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:204,Testability,test,tests,204,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:236,Testability,test,tests,236,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:398,Testability,test,testing,398,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:37,Availability,failure,failure,37,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:126,Availability,failure,failure,126,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:193,Availability,error,error,193,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:255,Availability,error,error,255,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:199,Integrability,message,message,199,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:261,Integrability,message,message,261,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:286,Security,hash,hash,286,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:32,Testability,test,test,32,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:145,Usability,clear,clearly,145,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672
https://github.com/qutip/qutip/pull/1221#issuecomment-607079474:37,Testability,test,tests,37,Do you want me to restart the Travis tests? Or should we look into these random failing tests a bit before? Maybe @Ericgig knows something about it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607079474
https://github.com/qutip/qutip/pull/1221#issuecomment-607079474:88,Testability,test,tests,88,Do you want me to restart the Travis tests? Or should we look into these random failing tests a bit before? Maybe @Ericgig knows something about it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607079474
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:111,Availability,failure,failures,111,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:257,Availability,failure,failures,257,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:429,Availability,down,down,429,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:504,Availability,failure,failure,504,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:106,Testability,test,test,106,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:400,Testability,test,tests,400,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:464,Testability,test,tests,464,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:1111,Availability,error,errors,1111,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:41,Deployability,install,installed,41,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:140,Deployability,install,install,140,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:174,Deployability,install,installing,174,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:1001,Deployability,install,installed,1001,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:1076,Deployability,install,install,1076,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:207,Testability,test,test,207,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:325,Testability,test,tests,325,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:389,Testability,test,tests,389,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:455,Testability,test,tests,455,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:519,Testability,test,tests,519,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:593,Testability,test,tests,593,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:662,Testability,test,tests,662,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:733,Testability,test,tests,733,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:801,Testability,test,tests,801,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:209,Deployability,update,updated,209,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:263,Deployability,install,installed,263,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:527,Deployability,install,installed,527,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:633,Deployability,install,installation,633,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:672,Deployability,install,installation,672,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:716,Deployability,install,installation,716,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:821,Deployability,install,installing,821,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:872,Deployability,install,install,872,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:287,Integrability,message,message,287,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:142,Testability,test,tests,142,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1222#issuecomment-606166596:174,Testability,test,testing,174,"1. Don't worry, those aren't problems. A problem would just say ""FAIL"". ""XFAIL"" means ""expected to fail"", which in this case is because those tests were written for an older testing framework and haven't been updated yet.; 2. No, you don't need to worry. If it's installed, you'll get a message at the end which says something like; ```====== 1000 passed, 50 skipped, 10 xfailed in 120s ======```; where the numbers and times will be different, but there won't be any red text saying ""10 failed"" (""xfailed"" is fine). If you've installed `qutip` from `conda` following the [recommended instructions here](http://qutip.org/docs/latest/installation.html#platform-independent-installation), then you should have a valid installation without any issues, and Cython should have sorted itself out. The general principle is that installing `qutip` is as easy as running; ```conda install qutip```; if you've got the `conda-forge` channel activated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-606166596
https://github.com/qutip/qutip/issues/1223#issuecomment-605703993:975,Availability,error,error,975,"Good catch, this seems to be a problem with how the arguments are structured in the function signature for brme_solve. For the tensor formation, . `def bloch_redfield_tensor(H, a_ops, spectra_cb=None, c_ops=[], use_secular=True, sec_cutoff=0.1):`. In this case, the spectra_cb is given the [ohmic_spectrum] argument, which is the correct argument. However, for the brme_solve, the signature is . ```; def brmesolve(H, psi0, tlist, a_ops=[], e_ops=[], c_ops=[],. args={}, use_secular=True, sec_cutoff = 0.1,; tol=qset.atol,; spectra_cb=None, options=None,; progress_bar=None, _safe_mode=True, verbose=False):; ```. If you run the same code with . `output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, spectra_cb = [ohmic_spectrum]); `. the code will run perfectly. However, this is an issue we should fix since spectra_cb is a depreciated argument and technically the c_ops list should accommodate arbitrary noise power spectrum functions that spectra_cb handled before. The error seems to be originating because ohmic_spectrum is of type function but the safety checker expects either a Qobj or a tuple. Also, once we fix the documentation/code on how to use c_ops, we also need to add depreciate warning to bloch_redfield_tensor to maintain uniformity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993
https://github.com/qutip/qutip/issues/1223#issuecomment-605703993:914,Energy Efficiency,power,power,914,"Good catch, this seems to be a problem with how the arguments are structured in the function signature for brme_solve. For the tensor formation, . `def bloch_redfield_tensor(H, a_ops, spectra_cb=None, c_ops=[], use_secular=True, sec_cutoff=0.1):`. In this case, the spectra_cb is given the [ohmic_spectrum] argument, which is the correct argument. However, for the brme_solve, the signature is . ```; def brmesolve(H, psi0, tlist, a_ops=[], e_ops=[], c_ops=[],. args={}, use_secular=True, sec_cutoff = 0.1,; tol=qset.atol,; spectra_cb=None, options=None,; progress_bar=None, _safe_mode=True, verbose=False):; ```. If you run the same code with . `output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, spectra_cb = [ohmic_spectrum]); `. the code will run perfectly. However, this is an issue we should fix since spectra_cb is a depreciated argument and technically the c_ops list should accommodate arbitrary noise power spectrum functions that spectra_cb handled before. The error seems to be originating because ohmic_spectrum is of type function but the safety checker expects either a Qobj or a tuple. Also, once we fix the documentation/code on how to use c_ops, we also need to add depreciate warning to bloch_redfield_tensor to maintain uniformity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993
https://github.com/qutip/qutip/issues/1223#issuecomment-605703993:1056,Safety,safe,safety,1056,"Good catch, this seems to be a problem with how the arguments are structured in the function signature for brme_solve. For the tensor formation, . `def bloch_redfield_tensor(H, a_ops, spectra_cb=None, c_ops=[], use_secular=True, sec_cutoff=0.1):`. In this case, the spectra_cb is given the [ohmic_spectrum] argument, which is the correct argument. However, for the brme_solve, the signature is . ```; def brmesolve(H, psi0, tlist, a_ops=[], e_ops=[], c_ops=[],. args={}, use_secular=True, sec_cutoff = 0.1,; tol=qset.atol,; spectra_cb=None, options=None,; progress_bar=None, _safe_mode=True, verbose=False):; ```. If you run the same code with . `output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, spectra_cb = [ohmic_spectrum]); `. the code will run perfectly. However, this is an issue we should fix since spectra_cb is a depreciated argument and technically the c_ops list should accommodate arbitrary noise power spectrum functions that spectra_cb handled before. The error seems to be originating because ohmic_spectrum is of type function but the safety checker expects either a Qobj or a tuple. Also, once we fix the documentation/code on how to use c_ops, we also need to add depreciate warning to bloch_redfield_tensor to maintain uniformity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993
https://github.com/qutip/qutip/issues/1223#issuecomment-605704959:39,Availability,error,error,39,"Thanks for the quick reply.; Will this error affect other examples and notebooks present on the website where a spectra_cb is needed? Because right now I'm trying to run this example ( https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb ) and the code hungs on the 8th cell, from the Jupyter terminal I get the following message; ```AttributeError: Can't get attribute 'brme_step' on <module '__main__' (built-in)>```. Conda env is the same as the above.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959
https://github.com/qutip/qutip/issues/1223#issuecomment-605704959:279,Integrability,depend,dependent-Liouvillian,279,"Thanks for the quick reply.; Will this error affect other examples and notebooks present on the website where a spectra_cb is needed? Because right now I'm trying to run this example ( https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb ) and the code hungs on the 8th cell, from the Jupyter terminal I get the following message; ```AttributeError: Can't get attribute 'brme_step' on <module '__main__' (built-in)>```. Conda env is the same as the above.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959
https://github.com/qutip/qutip/issues/1223#issuecomment-605704959:391,Integrability,message,message,391,"Thanks for the quick reply.; Will this error affect other examples and notebooks present on the website where a spectra_cb is needed? Because right now I'm trying to run this example ( https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb ) and the code hungs on the 8th cell, from the Jupyter terminal I get the following message; ```AttributeError: Can't get attribute 'brme_step' on <module '__main__' (built-in)>```. Conda env is the same as the above.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959
https://github.com/qutip/qutip/issues/1223#issuecomment-605706487:130,Availability,error,error,130,"That notebook seems to be running fine for me and terminates. Did you interrupt it manually, if not can you post the trace of the error ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605706487
https://github.com/qutip/qutip/issues/1223#issuecomment-605711703:311,Deployability,update,updated,311,"That is true. I'll try to look into why this is the case. However, it does have three expectation calculated. You can check this with output.expect ! . Edit: . So, I just realized that the noise-spectrum is associated with the coupling operator [sigmax()], I think the correct call to brmesolve must infact be (updated to current qutip standards) . `output = brmesolve(H, psi0, tlist, [[sigmax(), ohmic_spectrum]], e_ops)`. This is in line with the notation we use in example (https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb). I will make a pull request updating both the example notebook (http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) to reflect this and make sure we depreciate the spectra_cb argument in bloch_redfield_tensor to eliminate the confusion. Thanks for bringing this to notice !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703
https://github.com/qutip/qutip/issues/1223#issuecomment-605711703:571,Integrability,depend,dependent-Liouvillian,571,"That is true. I'll try to look into why this is the case. However, it does have three expectation calculated. You can check this with output.expect ! . Edit: . So, I just realized that the noise-spectrum is associated with the coupling operator [sigmax()], I think the correct call to brmesolve must infact be (updated to current qutip standards) . `output = brmesolve(H, psi0, tlist, [[sigmax(), ohmic_spectrum]], e_ops)`. This is in line with the notation we use in example (https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb). I will make a pull request updating both the example notebook (http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) to reflect this and make sure we depreciate the spectra_cb argument in bloch_redfield_tensor to eliminate the confusion. Thanks for bringing this to notice !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703
https://github.com/qutip/qutip/issues/1223#issuecomment-605711703:227,Modifiability,coupling,coupling,227,"That is true. I'll try to look into why this is the case. However, it does have three expectation calculated. You can check this with output.expect ! . Edit: . So, I just realized that the noise-spectrum is associated with the coupling operator [sigmax()], I think the correct call to brmesolve must infact be (updated to current qutip standards) . `output = brmesolve(H, psi0, tlist, [[sigmax(), ohmic_spectrum]], e_ops)`. This is in line with the notation we use in example (https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb). I will make a pull request updating both the example notebook (http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) to reflect this and make sure we depreciate the spectra_cb argument in bloch_redfield_tensor to eliminate the confusion. Thanks for bringing this to notice !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703
https://github.com/qutip/qutip/issues/1223#issuecomment-605711703:692,Usability,guid,guide,692,"That is true. I'll try to look into why this is the case. However, it does have three expectation calculated. You can check this with output.expect ! . Edit: . So, I just realized that the noise-spectrum is associated with the coupling operator [sigmax()], I think the correct call to brmesolve must infact be (updated to current qutip standards) . `output = brmesolve(H, psi0, tlist, [[sigmax(), ohmic_spectrum]], e_ops)`. This is in line with the notation we use in example (https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb). I will make a pull request updating both the example notebook (http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) to reflect this and make sure we depreciate the spectra_cb argument in bloch_redfield_tensor to eliminate the confusion. Thanks for bringing this to notice !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703
https://github.com/qutip/qutip/issues/1223#issuecomment-605778801:166,Usability,guid,guide,166,"Just a quick reply.. for the original problem, the documentation you were looking at is out of date, better to check the latest version. http://qutip.org/docs/latest/guide/dynamics/dynamics-bloch-redfield.html#bloch-redfield-master-; equation-in-qutip . I think the example there works fine. For the incorrect num_expect, I think there was another issue raised about this. let me check.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605778801
https://github.com/qutip/qutip/pull/1224#issuecomment-607558652:180,Modifiability,refactor,refactoring,180,"These tests seem a little too scant in my opinion, I am not fully satisfied with the final result. They do not provide full coverage of these new functionalities. I am thinking of refactoring the whole thing and start all over again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607558652
https://github.com/qutip/qutip/pull/1224#issuecomment-607558652:6,Testability,test,tests,6,"These tests seem a little too scant in my opinion, I am not fully satisfied with the final result. They do not provide full coverage of these new functionalities. I am thinking of refactoring the whole thing and start all over again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607558652
https://github.com/qutip/qutip/pull/1224#issuecomment-607789973:98,Deployability,update,update,98,> closes #1225. A little more detail in the opening comment is preferred. It helps whoever has to update the changelog.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607789973
https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:764,Availability,error,error,764,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156
https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:151,Modifiability,refactor,refactoring,151,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156
https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:45,Testability,test,tests,45,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156
https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:173,Testability,test,tests,173,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156
https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:228,Testability,test,test,228,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156
https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:712,Testability,log,log,712,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:325,Testability,test,tests,325,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:540,Testability,test,tests,540,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:790,Testability,test,test,790,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:902,Testability,test,tests,902,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:993,Testability,test,tests,993,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:1218,Testability,test,tests,1218,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:1386,Testability,test,testing,1386,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:1466,Testability,test,tests,1466,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607833088:947,Usability,clear,clear,947,"Hmmm. You're right that there will be some nasty merge conflicts with #1181, but I don't see anyway around those, to be honest without that PR being merged before this one (which doesn't look very likely). Barring #1181 getting merged in the next day or two, I'd just go ahead with these commits as written. If the new-style tests were merged, `test_gates.py` would have a much tinier diff. The single-qubit gates would just go between lines 222 and 223 in https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L222-L239 as; ```python; pytest.param(gates.x_gate, 0, ""X""),; pytest.param(gates.y_gate, 0, ""Y""),; ...; ```; (and we'd probably change the function name to `test_one_qubit`). The controlled qubits would similarly go into the next test's parametrisation list: https://github.com/qutip/qutip/blob/77c21f8a97ddfff2353490d3587cc1effdfe9abc/qutip/tests/test_gates.py#L241-L259. Overall, it's clear that you can't write sensible new-style tests without #1181 having been merged, so I wouldn't worry about it too much. I did drop in a couple of comments in-line (minor nitpicking), but given that this file may well get pretty much overwritten - keeping the actual tests, of course! - in short order, I wouldn't consider them changes that need to be made, unless Boxi asks. Also, as you noted, `test_gates.py` doesn't really do much testing of the actual form of the gates yet. I haven't actually been adding new tests as I go, because I wanted to keep #1181 roughly focussed on just converting what we've got so far.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607833088
https://github.com/qutip/qutip/pull/1224#issuecomment-607950035:219,Testability,test,tests,219,"Thank you for taking the time to look at these changes, @jakelishman! It must have been a true nightmare looking at my code haha 😄 . Now on a more formal note. Regarding the pytest side of things, should I reformat the tests (related to my single_qubit implementation) in test_qubitcircuit.py and test_gates to follow the changes in #1181? It would definitely make it easier to merge them later on.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607950035
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:556,Energy Efficiency,reduce,reduce,556,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:666,Modifiability,refactor,refactor,666,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:1126,Modifiability,refactor,refactor,1126,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:297,Testability,log,logic,297,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:699,Testability,test,testing,699,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:834,Testability,log,logical,834,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:965,Testability,log,logically,965,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:246,Usability,clear,clearly,246,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891
https://github.com/qutip/qutip/pull/1228#issuecomment-610412067:322,Testability,log,logos,322,"@ericgig you're right. I have added to this [pull request](https://github.com/qutip/qutip.github.io/pull/114) (114 in qutip.github.io) a new anchor next to the headings #supporting-organizations, and I then wanted to add a link to it here. It could also mention them (or a subset of those listed there) also here, without logos but in writing. . If someone can review that PR 114, I can then modify this one more easily.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1228#issuecomment-610412067
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:840,Availability,error,error,840,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:188,Deployability,install,install,188,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:344,Deployability,install,installed,344,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:465,Deployability,install,installed,465,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:519,Deployability,install,installed,519,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:768,Deployability,configurat,configuration,768,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:846,Integrability,message,message,846,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:421,Modifiability,variab,variables,421,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:768,Modifiability,config,configuration,768,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:866,Usability,clear,clearer,866,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:913,Usability,clear,clear,913,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774
https://github.com/qutip/qutip/pull/1232#issuecomment-612477122:154,Availability,toler,tolerance,154,"Yes, eigenenergies computation, while technically required, is too strict in most case. Other options would be to make the check optional and/or adding a tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-612477122
https://github.com/qutip/qutip/pull/1232#issuecomment-613052212:28,Deployability,continuous,continuous,28,"@araza6 thank you. Tests in continuous integration are failing. There seem to be too many PEP8 changes (from `black`?) in this PR, unrelated to the changed files. I am not so sure about the constraints put on the use of the `fidelity` function. I had left it as this to keep as much freedom as possible and not spoon feed the user. It is basically a shortcut for Tr(x^2), not much else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212
https://github.com/qutip/qutip/pull/1232#issuecomment-613052212:39,Deployability,integrat,integration,39,"@araza6 thank you. Tests in continuous integration are failing. There seem to be too many PEP8 changes (from `black`?) in this PR, unrelated to the changed files. I am not so sure about the constraints put on the use of the `fidelity` function. I had left it as this to keep as much freedom as possible and not spoon feed the user. It is basically a shortcut for Tr(x^2), not much else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212
https://github.com/qutip/qutip/pull/1232#issuecomment-613052212:39,Integrability,integrat,integration,39,"@araza6 thank you. Tests in continuous integration are failing. There seem to be too many PEP8 changes (from `black`?) in this PR, unrelated to the changed files. I am not so sure about the constraints put on the use of the `fidelity` function. I had left it as this to keep as much freedom as possible and not spoon feed the user. It is basically a shortcut for Tr(x^2), not much else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212
https://github.com/qutip/qutip/pull/1232#issuecomment-613052212:19,Testability,Test,Tests,19,"@araza6 thank you. Tests in continuous integration are failing. There seem to be too many PEP8 changes (from `black`?) in this PR, unrelated to the changed files. I am not so sure about the constraints put on the use of the `fidelity` function. I had left it as this to keep as much freedom as possible and not spoon feed the user. It is basically a shortcut for Tr(x^2), not much else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-613052212
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:127,Availability,ERROR,ERRORS,127,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:186,Availability,ERROR,ERROR,186,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1036,Availability,ERROR,ERROR,1036,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1779,Availability,ERROR,ERROR,1779,"ravis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2527,Availability,ERROR,ERROR,2527,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3271,Availability,ERROR,ERROR,3271,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4011,Availability,ERROR,ERROR,4011,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4760,Availability,ERROR,ERROR,4760,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5506,Availability,ERROR,ERROR,5506,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6250,Availability,ERROR,ERROR,6250,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6995,Availability,ERROR,ERROR,6995,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7740,Availability,ERROR,ERROR,7740,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8481,Availability,ERROR,ERROR,8481,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9232,Availability,ERROR,ERROR,9232,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9977,Availability,ERROR,ERROR,9977,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10720,Availability,ERROR,ERROR,10720,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11467,Availability,ERROR,ERROR,11467,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12212,Availability,ERROR,ERROR,12212,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12958,Availability,ERROR,ERROR,12958,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13703,Availability,ERROR,ERROR,13703,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14445,Availability,ERROR,ERROR,14445,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15190,Availability,ERROR,ERROR,15190,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15937,Availability,ERROR,ERROR,15937,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16682,Availability,ERROR,ERROR,16682,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17427,Availability,ERROR,ERROR,17427,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18172,Availability,ERROR,ERROR,18172,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18919,Availability,ERROR,ERROR,18919,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:19663,Availability,ERROR,ERROR,19663,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:20407,Availability,ERROR,ERROR,20407,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:21151,Availability,ERROR,ERROR,21151,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_openmp.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:21892,Availability,ERROR,ERROR,21892,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_operators.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:22641,Availability,ERROR,ERROR,22641,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_optpulseprocessor.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:23382,Availability,ERROR,ERROR,23382,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_parallel.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:24133,Availability,ERROR,ERROR,24133,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting tests/test_partial_transpose.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:24876,Availability,ERROR,ERROR,24876,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_piqs.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:25620,Availability,ERROR,ERROR,25620,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_processor.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:26367,Availability,ERROR,ERROR,26367,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_propagator.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:27113,Availability,ERROR,ERROR,27113,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_ptrace.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:27859,Availability,ERROR,ERROR,27859,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_pulse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:28603,Availability,ERROR,ERROR,28603,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qft.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:29347,Availability,ERROR,ERROR,29347,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_qobj.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:30094,Availability,ERROR,ERROR,30094,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qobjevo.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:30833,Availability,ERROR,ERROR,30833,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_qpt.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:31579,Availability,ERROR,ERROR,31579,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting tests/test_qubit_evolution.py ________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:32327,Availability,ERROR,ERROR,32327,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_qubitcircuit.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:33073,Availability,ERROR,ERROR,33073,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_qubits.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:33817,Availability,ERROR,ERROR,33817,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_rand.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:34561,Availability,ERROR,ERROR,34561,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_random.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:35305,Availability,ERROR,ERROR,35305,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_rhs_reuse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:36052,Availability,ERROR,ERROR,36052,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_scattering.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:36797,Availability,ERROR,ERROR,36797,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:37542,Availability,ERROR,ERROR,37542,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sp_eigs.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:38286,Availability,ERROR,ERROR,38286,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_sparse.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:39032,Availability,ERROR,ERROR,39032,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_spinchain.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:39777,Availability,ERROR,ERROR,39777,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_spmath.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:40520,Availability,ERROR,ERROR,40520,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_states.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:41264,Availability,ERROR,ERROR,41264,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_steadystate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:42009,Availability,ERROR,ERROR,42009,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_me.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:42754,Availability,ERROR,ERROR,42754,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_stochastic_se.py _________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:43499,Availability,ERROR,ERROR,43499,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_subsys_apply.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:44246,Availability,ERROR,ERROR,44246,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_superop_reps.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:44990,Availability,ERROR,ERROR,44990,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_superoper.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:45737,Availability,ERROR,ERROR,45737,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_td_formats.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:46480,Availability,ERROR,ERROR,46480,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_tensor.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:47226,Availability,ERROR,ERROR,47226,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_three_level.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:47972,Availability,ERROR,ERROR,47972,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_utilities.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_wigner.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ---------- coverage: platform linux, python 3.6.10-final-0 -----------; Name Stmts Miss Cover; -----------------------------------------------------------------------------------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50767,Availability,ERROR,ERROR,50767,thon3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/openmp/__init__.py 0 0 100%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/pyxbuilder.py 18 11 39%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50812,Availability,ERROR,ERROR,50812,-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/pyxbuilder.py 18 11 39%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/tes,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50894,Availability,ERROR,ERROR,50894,travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50976,Availability,ERROR,ERROR,50976,1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51058,Availability,ERROR,ERROR,51058,niconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51140,Availability,ERROR,ERROR,51140,-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51222,Availability,ERROR,ERROR,51222,st-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51304,Availability,ERROR,ERROR,51304,6_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51386,Availability,ERROR,ERROR,51386,nt/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51468,Availability,ERROR,ERROR,51468,ip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51550,Availability,ERROR,ERROR,51550,----------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51632,Availability,ERROR,ERROR,51632,------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51714,Availability,ERROR,ERROR,51714,rt test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51796,Availability,ERROR,ERROR,51796,formation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51878,Availability,ERROR,ERROR,51878,s no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51960,Availability,ERROR,ERROR,51960, has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52042,Availability,ERROR,ERROR,52042,no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52124,Availability,ERROR,ERROR,52124,s no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52206,Availability,ERROR,ERROR,52206,qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52288,Availability,ERROR,ERROR,52288,has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52370,Availability,ERROR,ERROR,52370,s no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52452,Availability,ERROR,ERROR,52452,as no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52534,Availability,ERROR,ERROR,52534,as no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52616,Availability,ERROR,ERROR,52616,has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52698,Availability,ERROR,ERROR,52698,qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52780,Availability,ERROR,ERROR,52780,no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52862,Availability,ERROR,ERROR,52862,o attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52944,Availability,ERROR,ERROR,52944,as no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53026,Availability,ERROR,ERROR,53026,o attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53108,Availability,ERROR,ERROR,53108,no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53190,Availability,ERROR,ERROR,53190, attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53272,Availability,ERROR,ERROR,53272, attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53354,Availability,ERROR,ERROR,53354,has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53436,Availability,ERROR,ERROR,53436,has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53518,Availability,ERROR,ERROR,53518,no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53600,Availability,ERROR,ERROR,53600,no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53682,Availability,ERROR,ERROR,53682,no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53764,Availability,ERROR,ERROR,53764,no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53846,Availability,ERROR,ERROR,53846,ttribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53928,Availability,ERROR,ERROR,53928, attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54010,Availability,ERROR,ERROR,54010,o attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54092,Availability,ERROR,ERROR,54092,s no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54174,Availability,ERROR,ERROR,54174,utip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54256,Availability,ERROR,ERROR,54256, no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54338,Availability,ERROR,ERROR,54338,utip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54420,Availability,ERROR,ERROR,54420,attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54502,Availability,ERROR,ERROR,54502,s no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54584,Availability,ERROR,ERROR,54584,as no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54666,Availability,ERROR,ERROR,54666,o attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54748,Availability,ERROR,ERROR,54748, attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54830,Availability,ERROR,ERROR,54830,ttribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54912,Availability,ERROR,ERROR,54912,attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54994,Availability,ERROR,ERROR,54994,no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55076,Availability,ERROR,ERROR,55076,ttribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55158,Availability,ERROR,ERROR,55158,ip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ===================,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55240,Availability,ERROR,ERROR,55240," has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55322,Availability,ERROR,ERROR,55322,"o attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55404,Availability,ERROR,ERROR,55404,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55486,Availability,ERROR,ERROR,55486,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55568,Availability,ERROR,ERROR,55568,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55650,Availability,ERROR,ERROR,55650,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55732,Availability,ERROR,ERROR,55732,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55814,Availability,ERROR,ERROR,55814,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55896,Availability,ERROR,ERROR,55896,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55978,Availability,ERROR,ERROR,55978,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:56096,Availability,error,errors,56096,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:56182,Availability,error,errors,56182,"y - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest --verbosity=1 --disable-pytest-warnings --cov=qutip --pyargs qutip"" exited with 2.; Done. Your build exited with 1.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4,Deployability,update,update,4,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:61,Integrability,message,message,61,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:26,Testability,test,tests,26,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:203,Testability,test,tests,203,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:281,Testability,test,test-environment,281,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:452,Testability,test,test-environment,452,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:581,Testability,test,test-environment,581,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:772,Testability,test,test-environment,772,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1053,Testability,test,tests,1053,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1125,Testability,test,test-environment,1125,"RS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1410,Testability,test,test-environment,1410,"rtmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1539,Testability,test,test-environment,1539,"odname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1796,Testability,test,tests,1796,"ravis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:1870,Testability,test,test-environment,1870,"py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2155,Testability,test,test-environment,2155,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2284,Testability,test,test-environment,2284,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2544,Testability,test,tests,2544,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2615,Testability,test,test-environment,2615,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:2900,Testability,test,test-environment,2900,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3029,Testability,test,test-environment,3029,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3288,Testability,test,tests,3288,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3360,Testability,test,test-environment,3360,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_brtools.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3645,Testability,test,test-environment,3645,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:3774,Testability,test,test-environment,3774,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4028,Testability,test,tests,4028,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4105,Testability,test,test-environment,4105,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_cavityqed.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4390,Testability,test,test-environment,4390,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4519,Testability,test,test-environment,4519,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4777,Testability,test,tests,4777,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:4850,Testability,test,test-environment,4850,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_control_pulseoptim.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5135,Testability,test,test-environment,5135,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5264,Testability,test,test-environment,5264,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5523,Testability,test,tests,5523,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5595,Testability,test,test-environment,5595,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_correlation.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:5880,Testability,test,test-environment,5880,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6009,Testability,test,test-environment,6009,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6267,Testability,test,tests,6267,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6340,Testability,test,test-environment,6340,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting tests/test_countstat.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6625,Testability,test,test-environment,6625,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:6754,Testability,test,test-environment,6754,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7012,Testability,test,tests,7012,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7085,Testability,test,test-environment,7085,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_cy_structs.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7370,Testability,test,test-environment,7370,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7499,Testability,test,test-environment,7499,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7757,Testability,test,tests,7757,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:7830,Testability,test,test-environment,7830,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_dimensions.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8115,Testability,test,test-environment,8115,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8244,Testability,test,test-environment,8244,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8498,Testability,test,tests,8498,"rt__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8575,Testability,test,test-environment,8575,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_eigenstates.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8860,Testability,test,test-environment,8860,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:8989,Testability,test,test-environment,8989,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9249,Testability,test,tests,9249,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9320,Testability,test,test-environment,9320,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting tests/test_enr_state_operator.py _______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9605,Testability,test,test-environment,9605,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9734,Testability,test,test-environment,9734,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:9994,Testability,test,tests,9994,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10065,Testability,test,test-environment,10065,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_entropy.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10350,Testability,test,test-environment,10350,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10479,Testability,test,test-environment,10479,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10737,Testability,test,tests,10737,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:10810,Testability,test,test-environment,10810,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_expect.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11095,Testability,test,test-environment,11095,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11224,Testability,test,test-environment,11224,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11484,Testability,test,tests,11484,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11555,Testability,test,test-environment,11555,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_fastsparse.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11840,Testability,test,test-environment,11840,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:11969,Testability,test,test-environment,11969,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12229,Testability,test,tests,12229,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12300,Testability,test,test-environment,12300,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_fileio.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12585,Testability,test,test-environment,12585,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12714,Testability,test,test-environment,12714,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:12975,Testability,test,tests,12975,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13045,Testability,test,test-environment,13045,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_floquet.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13330,Testability,test,test-environment,13330,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13459,Testability,test,test-environment,13459,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13720,Testability,test,tests,13720,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:13790,Testability,test,test-environment,13790,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_gates.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14075,Testability,test,test-environment,14075,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14204,Testability,test,test-environment,14204,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14462,Testability,test,tests,14462,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14535,Testability,test,test-environment,14535,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_graph.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14820,Testability,test,test-environment,14820,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:14949,Testability,test,test-environment,14949,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15207,Testability,test,tests,15207,"ort__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15280,Testability,test,test-environment,15280,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_heom_solver.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15565,Testability,test,test-environment,15565,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15694,Testability,test,test-environment,15694,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:15954,Testability,test,tests,15954,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16025,Testability,test,test-environment,16025,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting tests/test_interpolate.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16310,Testability,test,test-environment,16310,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16439,Testability,test,test-environment,16439,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16699,Testability,test,tests,16699,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:16770,Testability,test,test-environment,16770,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_lattice.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17055,Testability,test,test-environment,17055,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17184,Testability,test,test-environment,17184,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17444,Testability,test,tests,17444,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17515,Testability,test,test-environment,17515,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mcsolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17800,Testability,test,test-environment,17800,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:17929,Testability,test,test-environment,17929,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18189,Testability,test,tests,18189,"port__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTH",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18260,Testability,test,test-environment,18260,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_mesolve.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18545,Testability,test,test-environment,18545,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18674,Testability,test,test-environment,18674,"THON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:18936,Testability,test,tests,18936,"mport__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYT",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:19005,Testability,test,test-environment,19005,"x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________________ ERROR collecting tests/test_metrics.py ____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:19290,Testability,test,test-environment,19290,"packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________________ ERROR collecting tests/test_mkl.py ______________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________________ ERROR collecting tests/test_noise.py _____________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997
