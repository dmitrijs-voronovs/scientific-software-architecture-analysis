id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/psi4/psi4/issues/3:1110,Integrability,depend,depending,1110,"I'm in the process of implementing forces in my own code, ERKALE. Related; to this, I was looking at the nuclear attraction integral derivative code; in PSI. Interestingly, it would seem that there is a bug in PSI: the loop limits; are the same in the derivative code as in the normal attraction integral; code. The relevant code in src/lib/libmints/osrecur.cc is. ```; int mmax = am1 + am2;. double *F = new double[mmax+1];. // Form Fm(U) from A20; calculate_f(F, mmax, u);. // Perform recursion in m for (a|A(0)|s) using A20; for (m=0; m<=mmax; ++m) {; vi_[0][0][m] = tmp * F[m];; }; for (m=0; m<=mmax-1; ++m) {; vx_[0][0][m] = 2.0*zeta*PC[0]*vi_[0][0][m+1];; vy_[0][0][m] = 2.0*zeta*PC[1]*vi_[0][0][m+1];; vz_[0][0][m] = 2.0*zeta*PC[2]*vi_[0][0][m+1];; }; ```. Table X in the Obara-Saika paper states that; (s | Au | s)^(0) = 2 zeta ( Pu - Cu ) (s | A0 | s)^(1). If you look at what the code above does, it gives a plain zero for this; integral. Furthermore, if you look at the recursion formulas for the integral derivatives A(mu), you see that they are equivalent to the case A(0) with an additional term depending on A(mu-1i). However, in the initializations and the recursions the derivatives only go to mmax-1, not mmax.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3
https://github.com/psi4/psi4/issues/3:479,Performance,Perform,Perform,479,"I'm in the process of implementing forces in my own code, ERKALE. Related; to this, I was looking at the nuclear attraction integral derivative code; in PSI. Interestingly, it would seem that there is a bug in PSI: the loop limits; are the same in the derivative code as in the normal attraction integral; code. The relevant code in src/lib/libmints/osrecur.cc is. ```; int mmax = am1 + am2;. double *F = new double[mmax+1];. // Form Fm(U) from A20; calculate_f(F, mmax, u);. // Perform recursion in m for (a|A(0)|s) using A20; for (m=0; m<=mmax; ++m) {; vi_[0][0][m] = tmp * F[m];; }; for (m=0; m<=mmax-1; ++m) {; vx_[0][0][m] = 2.0*zeta*PC[0]*vi_[0][0][m+1];; vy_[0][0][m] = 2.0*zeta*PC[1]*vi_[0][0][m+1];; vz_[0][0][m] = 2.0*zeta*PC[2]*vi_[0][0][m+1];; }; ```. Table X in the Obara-Saika paper states that; (s | Au | s)^(0) = 2 zeta ( Pu - Cu ) (s | A0 | s)^(1). If you look at what the code above does, it gives a plain zero for this; integral. Furthermore, if you look at the recursion formulas for the integral derivatives A(mu), you see that they are equivalent to the case A(0) with an additional term depending on A(mu-1i). However, in the initializations and the recursions the derivatives only go to mmax-1, not mmax.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/3
https://github.com/psi4/psi4/issues/4:146,Availability,error,error,146,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/4
https://github.com/psi4/psi4/issues/4:405,Availability,error,error,405,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/4
https://github.com/psi4/psi4/issues/4:649,Availability,error,error,649,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/4
https://github.com/psi4/psi4/issues/4:865,Availability,error,error,865,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/4
https://github.com/psi4/psi4/issues/4:1107,Availability,error,error,1107,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/4
https://github.com/psi4/psi4/issues/4:79,Testability,log,log,79,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/4
https://github.com/psi4/psi4/issues/6:26,Performance,optimiz,optimization,26,"I tried to run a geometry optimization on (H_2)+. A segfault occurs. Input file:. memory 250 mb. molecule h2 {; 1 2; H; H 1 1.5; }. set reference uhf; set basis aug-cc-pVDZ; optimize('scf'). Valgrind trace; ==12400== Invalid read of size 8; ==12400== at 0x11C73A9: psi::scfgrad::SCFGrad::compute_gradient() (in /usr/bin/psi4); ==12400== by 0x11BF3EC: psi::scfgrad::scfgrad(psi::Options&) (in /usr/bin/psi4); ==12400== by 0x67BD9E: py_psi_scfgrad() (in /usr/bin/psi4); ==12400== by 0x682F96: boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (in /usr/bin/psi4); ==12400== by 0x31C2429AAA: boost::python::objects::function::call(_object_, _object_) const (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x31C2429CC7: ??? (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x31C2432C4A: boost::python::handle_exception_impl(boost::function0<void>) (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x31C2427F84: ??? (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x3D50849C0D: PyObject_Call (in /usr/lib64/libpython2.7.so.1.0); ==12400== by 0x3D508D9582: PyEval_EvalFrameEx (in /usr/lib64/libpython2.7.so.1.0); ==12400== by 0x3D508DDCBE: PyEval_EvalCodeEx (in /usr/lib64/libpython2.7.so.1.0); ==12400== by 0x3D5086DA36: ??? (in /usr/lib64/libpython2.7.so.1.0); ==12400== Address 0x0 is not stack'd, malloc'd or (recently) free'd",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/6
https://github.com/psi4/psi4/issues/6:174,Performance,optimiz,optimize,174,"I tried to run a geometry optimization on (H_2)+. A segfault occurs. Input file:. memory 250 mb. molecule h2 {; 1 2; H; H 1 1.5; }. set reference uhf; set basis aug-cc-pVDZ; optimize('scf'). Valgrind trace; ==12400== Invalid read of size 8; ==12400== at 0x11C73A9: psi::scfgrad::SCFGrad::compute_gradient() (in /usr/bin/psi4); ==12400== by 0x11BF3EC: psi::scfgrad::scfgrad(psi::Options&) (in /usr/bin/psi4); ==12400== by 0x67BD9E: py_psi_scfgrad() (in /usr/bin/psi4); ==12400== by 0x682F96: boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (in /usr/bin/psi4); ==12400== by 0x31C2429AAA: boost::python::objects::function::call(_object_, _object_) const (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x31C2429CC7: ??? (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x31C2432C4A: boost::python::handle_exception_impl(boost::function0<void>) (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x31C2427F84: ??? (in /usr/lib64/libboost_python.so.1.50.0); ==12400== by 0x3D50849C0D: PyObject_Call (in /usr/lib64/libpython2.7.so.1.0); ==12400== by 0x3D508D9582: PyEval_EvalFrameEx (in /usr/lib64/libpython2.7.so.1.0); ==12400== by 0x3D508DDCBE: PyEval_EvalCodeEx (in /usr/lib64/libpython2.7.so.1.0); ==12400== by 0x3D5086DA36: ??? (in /usr/lib64/libpython2.7.so.1.0); ==12400== Address 0x0 is not stack'd, malloc'd or (recently) free'd",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/6
https://github.com/psi4/psi4/issues/7:498,Availability,error,error,498,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/7:366,Energy Efficiency,energy,energy,366,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/7:688,Energy Efficiency,energy,energy,688,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/7:708,Energy Efficiency,energy,energy,708,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/7:504,Integrability,message,message,504,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/7:992,Safety,sanity check,sanity check,992,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/7:232,Testability,test,test,232,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/7
https://github.com/psi4/psi4/issues/8:113,Availability,fault,fault,113,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1172,Availability,avail,available,1172,"ealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:315,Deployability,install,install,315,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:686,Performance,optimiz,optimized,686,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:717,Performance,optimiz,optimized,717,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:793,Performance,optimiz,optimized,793,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:847,Performance,optimiz,optimized,847,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1342,Performance,optimiz,optimized,1342,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1367,Performance,optimiz,optimized,1367,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1393,Performance,optimiz,optimized,1393,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1414,Performance,optimiz,optimized,1414,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1474,Performance,optimiz,optimized,1474,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1619,Performance,optimiz,optimized,1619,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1641,Performance,optimiz,optimized,1641,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1668,Performance,optimiz,optimized,1668,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:1742,Performance,optimiz,optimized,1742,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/issues/8:2074,Performance,optimiz,optimized,2074,"jects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```. Is this a crash in python/boost misusing python/psi misusing boost and python?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/8
https://github.com/psi4/psi4/pull/9:255,Deployability,patch,patches,255,Hi!. Just a few minor changes to fix python 3 compatibility. The fifth beta is great--I couldn't figure out how to get boost python and python 3 to play nicely in the previous beta whereas it seems to work perfectly (bar the minor changes in the attached patches) out of the box now. Also: would you prefer to receive patches via github or via email or...?. Thanks!,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/9
https://github.com/psi4/psi4/pull/9:318,Deployability,patch,patches,318,Hi!. Just a few minor changes to fix python 3 compatibility. The fifth beta is great--I couldn't figure out how to get boost python and python 3 to play nicely in the previous beta whereas it seems to work perfectly (bar the minor changes in the attached patches) out of the box now. Also: would you prefer to receive patches via github or via email or...?. Thanks!,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/9
https://github.com/psi4/psi4/issues/10:1616,Availability,error,error,1616,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/10
https://github.com/psi4/psi4/issues/10:1630,Availability,ERROR,ERROR,1630,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/10
https://github.com/psi4/psi4/issues/10:56,Performance,optimiz,optimization,56,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/10
https://github.com/psi4/psi4/issues/10:528,Performance,optimiz,optimize,528,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/10
https://github.com/psi4/psi4/issues/10:659,Performance,optimiz,optimization,659,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/10
https://github.com/psi4/psi4/issues/11:260,Availability,down,download,260,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:199,Deployability,patch,patch,199,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:249,Deployability,patch,patch,249,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:273,Deployability,patch,patch,273,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:382,Deployability,patch,patch,382,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:451,Deployability,patch,patch,451,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:492,Deployability,patch,patch,492,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:513,Deployability,patch,patch,513,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/11:532,Deployability,patch,patch,532,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/11
https://github.com/psi4/psi4/issues/12:62,Availability,fault,faults,62,"CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:. ```; molecule f { ; f 0.00 0.00 0.00; }; set basis cc-pVTZ; set scf reference uhf ; energy('ccsd'); ```. (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. Full backtrace from gdb:. ```; (gdb) where; #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:326,Availability,avail,avail,326,"CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:. ```; molecule f { ; f 0.00 0.00 0.00; }; set basis cc-pVTZ; set scf reference uhf ; energy('ccsd'); ```. (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. Full backtrace from gdb:. ```; (gdb) where; #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:401,Availability,fault,fault,401,"CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:. ```; molecule f { ; f 0.00 0.00 0.00; }; set basis cc-pVTZ; set scf reference uhf ; energy('ccsd'); ```. (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. Full backtrace from gdb:. ```; (gdb) where; #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:7409,Availability,down,down,7409,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:223,Energy Efficiency,energy,energy,223,"CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:. ```; molecule f { ; f 0.00 0.00 0.00; }; set basis cc-pVTZ; set scf reference uhf ; energy('ccsd'); ```. (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. Full backtrace from gdb:. ```; (gdb) where; #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:954,Performance,optimiz,optimized,954,"CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:. ```; molecule f { ; f 0.00 0.00 0.00; }; set basis cc-pVTZ; set scf reference uhf ; energy('ccsd'); ```. (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. Full backtrace from gdb:. ```; (gdb) where; #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:1755,Performance,optimiz,optimized,1755,"00000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/pyt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:1845,Performance,optimiz,optimized,1845,"lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::trans",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:1867,Performance,optimiz,optimized,1867,"lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::trans",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:2119,Performance,optimiz,optimized,2119,"00082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(const psi::PsiException&)>, boost::_bi::list2<const boost::python::detail::exception_handler&, const boost::function0<void>&> > (f=..., a=<synthetic pointer>, thi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:2141,Performance,optimiz,optimized,2141,"00082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(const psi::PsiException&)>, boost::_bi::list2<const boost::python::detail::exception_handler&, const boost::function0<void>&> > (f=..., a=<synthetic pointer>, thi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:2161,Performance,optimiz,optimized,2161,"00082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(const psi::PsiException&)>, boost::_bi::list2<const boost::python::detail::exception_handler&, const boost::function0<void>&> > (f=..., a=<synthetic pointer>, thi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:2649,Performance,optimiz,optimized,2649," in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::detail::caller<double (*)(), boost::python::default_call_policies, boost::mpl::vector1<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(const psi::PsiException&)>, boost::_bi::list2<const boost::python::detail::exception_handler&, const boost::function0<void>&> > (f=..., a=<synthetic pointer>, this=<optimized out>) at /usr/include/boost/bind/bind.hpp:382; #15 operator()<boost::python::detail::exception_handler, boost::function0<void> > (a2=..., a1=..., this=<optimized out>); at /usr/include/boost/bind/bind_template.hpp:102; #16 boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> con",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:3079,Performance,optimiz,optimized,3079,"<double> > >::operator() (this=<optimized out>, args=<optimized out>, kw=<optimized out>) at /usr/include/boost/python/object/py_function.hpp:38; #10 0x00007ffff6695f2a in boost::python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(const psi::PsiException&)>, boost::_bi::list2<const boost::python::detail::exception_handler&, const boost::function0<void>&> > (f=..., a=<synthetic pointer>, this=<optimized out>) at /usr/include/boost/bind/bind.hpp:382; #15 operator()<boost::python::detail::exception_handler, boost::function0<void> > (a2=..., a1=..., this=<optimized out>); at /usr/include/boost/bind/bind_template.hpp:102; #16 boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:3241,Performance,optimiz,optimized,3241,"python::objects::function::call(_object*, _object*) const () from /usr/lib/libboost_python3.so.1.54.0; #11 0x00007ffff6696298 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #12 0x00007ffff66a01b3 in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); from /usr/lib/libboost_python3.so.1.54.0; #13 0x000000000070c003 in operator() (this=<optimized out>, translate=0x6f9ff0 <translate_psi_exception(psi::PsiException const&)>, f=..., handler=...); at /usr/include/boost/python/detail/translate_exception.hpp:48; #14 operator()<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(const psi::PsiException&)>, boost::_bi::list2<const boost::python::detail::exception_handler&, const boost::function0<void>&> > (f=..., a=<synthetic pointer>, this=<optimized out>) at /usr/include/boost/bind/bind.hpp:382; #15 operator()<boost::python::detail::exception_handler, boost::function0<void> > (a2=..., a1=..., this=<optimized out>); at /usr/include/boost/bind/bind_template.hpp:102; #16 boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=kw@entry=0x0) at Objects/abstract.c:2084; #20 0x00007ffff5148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceva",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:4169,Performance,optimiz,optimized,4169,"ost::function0<void> > (a2=..., a1=..., this=<optimized out>); at /usr/include/boost/bind/bind_template.hpp:102; #16 boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=kw@entry=0x0) at Objects/abstract.c:2084; #20 0x00007ffff5148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:4189,Performance,optimiz,optimized,4189,"ost::function0<void> > (a2=..., a1=..., this=<optimized out>); at /usr/include/boost/bind/bind_template.hpp:102; #16 boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=kw@entry=0x0) at Objects/abstract.c:2084; #20 0x00007ffff5148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:4236,Performance,optimiz,optimized,4236,"ost::function0<void> > (a2=..., a1=..., this=<optimized out>); at /usr/include/boost/bind/bind_template.hpp:102; #16 boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=kw@entry=0x0) at Objects/abstract.c:2084; #20 0x00007ffff5148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:4302,Performance,optimiz,optimized,4302,"oost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3<boost::arg<1>, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=kw@entry=0x0) at Objects/abstract.c:2084; #20 0x00007ffff5148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:4539,Performance,optimiz,optimized,4539,"ail::exception_handler const&, boost::function0<void> const&>::invoke (function_obj_ptr=..., a0=..., a1=...) at /usr/include/boost/function/function_template.hpp:132; #17 0x00007ffff669ff7d in boost::python::handle_exception_impl(boost::function0<void>) () from /usr/lib/libboost_python3.so.1.54.0; #18 0x00007ffff6694a53 in ?? () from /usr/lib/libboost_python3.so.1.54.0; #19 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x278dbd0, arg=arg@entry=0x7ffff7f4f050, kw=kw@entry=0x0) at Objects/abstract.c:2084; #20 0x00007ffff5148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5111,Performance,optimiz,optimized,5111,"148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5131,Performance,optimiz,optimized,5131,"148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5154,Performance,optimiz,optimized,5154,"148fa6 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x7fffffffdc30, func=<optimized out>) at Python/ceval.c:4283; #21 call_function (oparg=<optimized out>, pp_stack=0x7fffffffdc30) at Python/ceval.c:4086; #22 PyEval_EvalFrameEx (f=f@entry=0x290fc70, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #23 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5423,Performance,optimiz,optimized,5423,"3 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5470,Performance,optimiz,optimized,5470,"3 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=0x7fffef1d9270, globals=<optimized out>, locals=locals@entry=0x0, args=args@entry=0x7ffff7eace28, ; argcount=1, kws=kws@entry=0x7ffff7f4f068, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5657,Performance,optimiz,optimized,5657,"efs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5682,Performance,optimiz,optimized,5682,"efs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5729,Performance,optimiz,optimized,5729,"efs=defs@entry=0x0, defcount=defcount@entry=0, kwdefs=0x0, closure=0x0); at Python/ceval.c:3433; #24 0x00007ffff50c4033 in function_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:5795,Performance,optimiz,optimized,5795,"unction_call (func=0x7fffef2128c0, arg=0x7ffff7eace10, kw=0x7fffef1a75f0) at Objects/funcobject.c:633; #25 0x00007ffff509dfdc in PyObject_Call (func=func@entry=0x7fffef2128c0, arg=arg@entry=0x7ffff7eace10, kw=kw@entry=0x7fffef1a75f0) at Objects/abstract.c:2084; #26 0x00007ffff5148044 in ext_do_call (nk=<optimized out>, na=<optimized out>, flags=<optimized out>, pp_stack=0x7fffffffdf48, func=0x7fffef2128c0); at Python/ceval.c:4378; #27 PyEval_EvalFrameEx (f=f@entry=0x2982860, throwflag=throwflag@entry=0) at Python/ceval.c:2720; #28 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7fffefef5e40, globals=<optimized out>, locals=locals@entry=0x0, args=<optimized out>, ; argcount=argcount@entry=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:6536,Performance,optimiz,optimized,6536,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:6809,Performance,optimiz,optimized,6809,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:7141,Performance,optimiz,optimized,7141,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:7164,Performance,optimiz,optimized,7164,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/12:7284,Performance,optimiz,optimized,7284,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/12
https://github.com/psi4/psi4/issues/13:354,Energy Efficiency,energy,energy,354,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:708,Energy Efficiency,energy,energy,708,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:768,Energy Efficiency,energy,energy,768,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:855,Energy Efficiency,energy,energy,855,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:923,Energy Efficiency,energy,energy,923,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:99,Performance,Perform,Performing,99,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:44,Testability,test,test,44,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:65,Testability,Test,Testing,65,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:647,Testability,Test,Testing,647,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:673,Testability,Test,Testing,673,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:996,Testability,Test,Testing,996,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:1023,Testability,Test,Testing,1023,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:1050,Testability,Test,Testing,1050,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/13:1086,Testability,test,test,1086,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/13
https://github.com/psi4/psi4/issues/14:747,Deployability,install,installation,747,"If I build psi4 and then run make distclean, I do not get the initial tarball content again, as the script doc/sphinxman/document_tests.pl overwrites samples/SUMMARY and some samples with new content. This makes Debian source package building fail after a build:. dpkg-source: info: local changes detected, the modified files are:; psi4.0b5/samples/SUMMARY; psi4.0b5/samples/dcft1/input.dat; psi4.0b5/samples/dcft4/input.dat; psi4.0b5/samples/dcft5/input.dat; psi4.0b5/samples/dcft6/input.dat; psi4.0b5/samples/pywrap-alias/input.dat. I think it would be best if (i) the samples are written to the builddir, or (ii) the samples are not shipped in the tarball in the first place, assuming all of samples/ is being autogenerated during doc-creation/installation anyway.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/14
https://github.com/psi4/psi4/issues/14:297,Safety,detect,detected,297,"If I build psi4 and then run make distclean, I do not get the initial tarball content again, as the script doc/sphinxman/document_tests.pl overwrites samples/SUMMARY and some samples with new content. This makes Debian source package building fail after a build:. dpkg-source: info: local changes detected, the modified files are:; psi4.0b5/samples/SUMMARY; psi4.0b5/samples/dcft1/input.dat; psi4.0b5/samples/dcft4/input.dat; psi4.0b5/samples/dcft5/input.dat; psi4.0b5/samples/dcft6/input.dat; psi4.0b5/samples/pywrap-alias/input.dat. I think it would be best if (i) the samples are written to the builddir, or (ii) the samples are not shipped in the tarball in the first place, assuming all of samples/ is being autogenerated during doc-creation/installation anyway.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/14
https://github.com/psi4/psi4/issues/15:302,Usability,clear,clear,302,"There is no general copyright statement in the Beta5 source tree for the PSI4 source code proper, just the psirmrcc module (Evangelista/Simmonett), some libmints files (carried over from mpqc/libint), libsmartptr (Marcin Kalicinski?) and libscf_solver (Turney). I think it would be advisable to have a clear copyright statement, at least in the README or LICENSE file with the names of all the authors (or ""The PSI4 Developers"" or something). . The statment should include the years and the names of the copyright holders. The only thing which comes close it the WIREs journal reference output at the top of the PSI4 computational output.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/15
https://github.com/psi4/psi4/issues/16:440,Deployability,release,release,440,"The libscf_solver code has a ""Copyright 2008 by Justin M. Turney, Ph.D.. All rights reserved."" copyright line below the GPL2+ boilerplate. I suggest to remove at least the ""All rights reserved."" if possible, as this makes it unclear which license is really considered applicable. The attic/libsmartptr files have no license information, if they are not used (as hinted at by the attic location) I suggest to remove them for the next public release.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/16
https://github.com/psi4/psi4/issues/18:1070,Availability,Ping,Ping,1070,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:631,Energy Efficiency,energy,energy,631,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:56,Performance,optimiz,optimizations,56,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:178,Performance,optimiz,optimizer,178,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:456,Performance,optimiz,optimize,456,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:523,Performance,optimiz,optimize,523,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:590,Performance,optimiz,optimize,590,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:724,Performance,optimiz,optimize-,724,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:793,Performance,optimiz,optimize-,793,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:862,Performance,optimiz,optimize-,862,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/issues/18:931,Performance,optimiz,optimize-,931,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/18
https://github.com/psi4/psi4/pull/25:139,Testability,test,test,139,"I found the bypass_scf option hard to get working based on the documentation and only (kind of!) figured it out by looking at the rasci-ne test and digging through source code. So, here's a stab at improving it...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/25
https://github.com/psi4/psi4/issues/26:542,Energy Efficiency,reduce,reduces,542,"The eps file doc/progman/svn/svn.eps.in is 1.4 MB and takes a long time to render in Gnome evince. Furthermore, it has the following commtens inside:. %%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.; %%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved. Apparently, doc/progman/svn.fig is the source for a previous version of this .eps. As the progman Makefile is no longer generated by configure.ac, maybe the whole directory could be yanked or the .eps regenerated with fig2dev (which also reduces the size to a few kilobytes)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/26
https://github.com/psi4/psi4/issues/26:437,Modifiability,config,configure,437,"The eps file doc/progman/svn/svn.eps.in is 1.4 MB and takes a long time to render in Gnome evince. Furthermore, it has the following commtens inside:. %%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.; %%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved. Apparently, doc/progman/svn.fig is the source for a previous version of this .eps. As the progman Makefile is no longer generated by configure.ac, maybe the whole directory could be yanked or the .eps regenerated with fig2dev (which also reduces the size to a few kilobytes)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/26
https://github.com/psi4/psi4/issues/27:86,Availability,avail,avail,86,"dear psi4 team,. i am trying to restart an interrupted coupled cluster run, but to no avail. the input file has the following keywords:. set cceom restart_eom_cc3 true; set ccenergy restart true; set cclambda restart true; set ccresponse restart true. yet, in the output file in the ccenergy section i find:. Restart = No. the files psi.{pid}.\* from the previous run are in the current working directory, permissions are correct. increasing verbosity didn't seem to help me to trace the problem - i am basically not sure what file and from where psi4 wants to read, and i cannot find it in the manual. could anybody please enlighten me?. cheers,; bartek",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/27
https://github.com/psi4/psi4/issues/30:485,Usability,simpl,simplifications,485,"Dear psi4 developer.; I found out that the MRMP2 method doesn't use out_of_core algorithm like MKCCSD and MRCCSD(T) does for sorting (src/bin/psimrcc/sort_out_of_core.cc).; MRPT2 incore algorithm uses large amounts of memory, for example 31Gb for C8H8 molecule, C2V symmetry, in cc-pVTZ basis, instead of ~11GB for MRCCSD with same options.; I not completely understand algorithm of sorting, but is there an opportunity to use sort_out_of_core.cc algorithm for MRPT2, may be with some simplifications or modification?; Any comments are welcomed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/30
https://github.com/psi4/psi4/issues/32:2380,Performance,optimiz,optimize,2380,"274847835639 -3.351496142704; C 1.013099808976 -0.096716453452 -2.640334263532; C 1.529504298267 0.292928191105 -1.409192139229; C 2.494126536754 -0.467080983006 -0.560933641235; C 3.003582432090 -1.737924160834 -0.783889065036; C 2.769133637687 -2.598542901279 -1.856952991548; C 1.277514575629 1.516518268211 -0.750473230890; C 2.043031766314 1.530064287276 0.429834437874; C 2.781071200241 0.346831462421 0.547222303270; C 0.331279128018 2.597569873302 -1.170283396618; C -1.055809083241 2.619579374400 -0.505102826064; C -3.007822478580 1.467887750457 0.346313567353; C -2.737441971995 1.210386860246 1.823863198791; C -1.771682755626 -0.377549950855 3.288385929391; C -0.725219293291 -1.470001880969 3.265198353103; O -2.011738101654 -0.000473360001 1.946048595534; N -1.814457990750 1.476521947835 -0.495974028017; O -1.486124528571 3.658969974773 -0.022977929056; H 1.983643665259 -3.200384618921 -3.705961229953; H 0.718461117324 -1.345849367127 -4.303825324337; H 0.350907237427 0.616950149147 -3.119075116214; H 3.676140620880 -2.109282391465 -0.017487285463; H 3.272531113987 -3.555754086369 -1.807900216108; H 2.058943071980 2.349266204546 1.134368500502; H 3.472739721386 0.097519945506 1.336731400325; H 0.168474080806 2.547179744292 -2.248127020046; H 0.756093357555 3.571701649289 -0.937344979453; H -3.473888529556 2.443761502993 0.233969033713; H -3.678528703972 0.693841954810 -0.023021795736; H -3.683424826831 1.122758821689 2.369341272280; H -2.158587217937 2.040718408406 2.239661235900; H -1.397654842931 0.478282649094 3.862936033974; H -2.689164190718 -0.745525653670 3.760362229725; H -0.522908742059 -1.829437030547 4.270707232296; H -1.335460161411 0.599637097912 -0.637487324770; H 0.191838379615 -1.070755100110 2.832096282140; N -1.176303107524 -2.652929380092 2.505563226321; N -1.350778086421 -2.531724211116 1.296707152615; N -1.541968166301 -2.578278885168 0.192089082738; }; set_num_threads(12); set_memory(int(10.0e9)); set basis 6-311ppg_d_p_; optimize(""b3lyp"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/32
https://github.com/psi4/psi4/issues/34:125,Availability,error,error,125,"Hello,; This is Jason from Monash Uni again. Thought I'd post my issue here instead of emailing everyone. I'm getting a PSIO error for some FNO-CD-CCSD(T) calculations and I'm hoping someone could help solve my problem. See below for the details. Cheers,; Jason. Input. ```; memory 126 Gb; molecule complex {; *** Atomic coordinates omitted ***; }. set globals {; basis aug-cc-pVDZ; scf_type df; df_basis_cc cholesky; freeze_core True; guess sad; basis_guess 3-21G; }; energy('fno-df-ccsd(t)'); ```. End of calculation output. ```; *** at Mon Feb 10 13:17:33 2014. *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2784. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.157303195170. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:3101,Availability,avail,available,3101,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:3178,Availability,error,error,3178,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:3609,Availability,Error,Error,3609,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:3672,Availability,error,error,3672,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:469,Energy Efficiency,energy,energy,469,"Hello,; This is Jason from Monash Uni again. Thought I'd post my issue here instead of emailing everyone. I'm getting a PSIO error for some FNO-CD-CCSD(T) calculations and I'm hoping someone could help solve my problem. See below for the details. Cheers,; Jason. Input. ```; memory 126 Gb; molecule complex {; *** Atomic coordinates omitted ***; }. set globals {; basis aug-cc-pVDZ; scf_type df; df_basis_cc cholesky; freeze_core True; guess sad; basis_guess 3-21G; }; energy('fno-df-ccsd(t)'); ```. End of calculation output. ```; *** at Mon Feb 10 13:17:33 2014. *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2784. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.157303195170. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:952,Energy Efficiency,energy,energy,952,"Hello,; This is Jason from Monash Uni again. Thought I'd post my issue here instead of emailing everyone. I'm getting a PSIO error for some FNO-CD-CCSD(T) calculations and I'm hoping someone could help solve my problem. See below for the details. Cheers,; Jason. Input. ```; memory 126 Gb; molecule complex {; *** Atomic coordinates omitted ***; }. set globals {; basis aug-cc-pVDZ; scf_type df; df_basis_cc cholesky; freeze_core True; guess sad; basis_guess 3-21G; }; energy('fno-df-ccsd(t)'); ```. End of calculation output. ```; *** at Mon Feb 10 13:17:33 2014. *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2784. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.157303195170. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:1749,Energy Efficiency,Energy,Energy,1749,ex integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2784. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.157303195170. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 3320,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:1758,Energy Efficiency,Energy,Energy,1758,ex integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2784. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.157303195170. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 3320,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2055,Energy Efficiency,energy,energy,2055,irtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *************************,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2099,Energy Efficiency,energy,energy,2099,; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_t,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2140,Energy Efficiency,energy,energy,2140,space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2177,Energy Efficiency,energy,energy,2177,requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2225,Energy Efficiency,energy,energy,2225,09.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2270,Energy Efficiency,energy,energy,2270," mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (In",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2312,Energy Efficiency,energy,energy,2312," (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:2350,Energy Efficiency,energy,energy,2350,"CSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:3432,Energy Efficiency,energy,energy,3432,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/34:3452,Energy Efficiency,energy,energy,3452,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/34
https://github.com/psi4/psi4/issues/35:2913,Availability,Error,Error,2913,"5000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_input(level); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 116; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:2976,Availability,error,error,2976,"5000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_input(level); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 116; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:52,Energy Efficiency,energy,energy,52,"Hi,; I was trying the MRCC interface in Psi4 to run energy('mrccsd(t)_l') but I run into a PSIO_ERROR. Input. ```; memory 126 Gb; molecule complex {; 0 1; C 0.028824000 0.102541000 0.329511000; H -0.846717000 0.257672000 -0.295811000; C 1.368536000 0.016176000 0.003655000; H 1.872535000 0.082040000 -0.957212000; N -0.055760000 -0.031179000 1.697636000; C 1.178669000 -0.178253000 2.203240000; H 1.426085000 -0.303457000 3.252661000; N 2.052611000 -0.167236000 1.184832000; C 3.504230000 -0.205550000 1.365908000; H 3.698001000 -0.576769000 2.380482000; H 3.898020000 0.813550000 1.260411000; H 3.939232000 -0.884942000 0.619049000; C -1.256640000 0.100763000 2.523448000; H -1.529670000 1.162452000 2.578623000; H -1.007837000 -0.272600000 3.525198000; H -2.062908000 -0.500349000 2.079371000; F 1.181657000 2.676729000 1.439625000; B 1.518848000 2.859437000 2.791181000; F 1.689389000 4.189751000 3.137207000; F 0.482658000 2.259079000 3.612149000; F 2.731761000 2.111893000 3.070818000; C 1.992235000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:1924,Energy Efficiency,energy,energy,1924,"89389000 4.189751000 3.137207000; F 0.482658000 2.259079000 3.612149000; F 2.731761000 2.111893000 3.070818000; C 1.992235000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:2720,Energy Efficiency,energy,energy,2720,"5000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_input(level); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 116; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:2740,Energy Efficiency,energy,energy,2740,"5000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_input(level); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 116; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:27,Integrability,interface,interface,27,"Hi,; I was trying the MRCC interface in Psi4 to run energy('mrccsd(t)_l') but I run into a PSIO_ERROR. Input. ```; memory 126 Gb; molecule complex {; 0 1; C 0.028824000 0.102541000 0.329511000; H -0.846717000 0.257672000 -0.295811000; C 1.368536000 0.016176000 0.003655000; H 1.872535000 0.082040000 -0.957212000; N -0.055760000 -0.031179000 1.697636000; C 1.178669000 -0.178253000 2.203240000; H 1.426085000 -0.303457000 3.252661000; N 2.052611000 -0.167236000 1.184832000; C 3.504230000 -0.205550000 1.365908000; H 3.698001000 -0.576769000 2.380482000; H 3.898020000 0.813550000 1.260411000; H 3.939232000 -0.884942000 0.619049000; C -1.256640000 0.100763000 2.523448000; H -1.529670000 1.162452000 2.578623000; H -1.007837000 -0.272600000 3.525198000; H -2.062908000 -0.500349000 2.079371000; F 1.181657000 2.676729000 1.439625000; B 1.518848000 2.859437000 2.791181000; F 1.689389000 4.189751000 3.137207000; F 0.482658000 2.259079000 3.612149000; F 2.731761000 2.111893000 3.070818000; C 1.992235000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/35:2040,Integrability,interface,interface,2040,"5000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_input(level); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 116; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/35
https://github.com/psi4/psi4/issues/36:4366,Availability,Error,Error,4366,ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.h; -- Looking for include file dlfcn.h - found; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for erf; -- Looking for erf - found; -- Looking for MPI_Finalize; -- Looking for MPI_Finalize - not found; -- Checking for restrict keyword; -- Checking for restrict keyword - **restrict**; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran sgemm; -- Looking for Fortran sgemm - not found; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; CMake Error at /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindBLAS.cmake:594 (message):; A required library with BLAS API not found. Please specify library; location.; Call Stack (most recent call first):; /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindLAPACK.cmake:142 (find_package); CMakeLists.txt:135 (find_package),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:123,Deployability,install,install,123,"I know how to fix this myself, but let's pretend I'm a stupid Mac user that has Xcode and, by the grace of god, managed to install gfortran without losing a limb. Don't I deserve for CMake to throw me a bone and auto-detect the fast system BLAS/LAPACK?. I am surprised that CMake doesn't do this already btw. Seems dirt-simple for them. Cheers,. Jeff. Jeffs-MacBook-Pro:build jhammond$ cmake ..; -- The C compiler identification is Clang 4.2.0; -- The CXX compiler identification is Clang 4.2.0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:4448,Integrability,message,message,4448,ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.h; -- Looking for include file dlfcn.h - found; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for erf; -- Looking for erf - found; -- Looking for MPI_Finalize; -- Looking for MPI_Finalize - not found; -- Checking for restrict keyword; -- Checking for restrict keyword - **restrict**; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran sgemm; -- Looking for Fortran sgemm - not found; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; CMake Error at /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindBLAS.cmake:594 (message):; A required library with BLAS API not found. Please specify library; location.; Call Stack (most recent call first):; /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindLAPACK.cmake:142 (find_package); CMakeLists.txt:135 (find_package),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1318,Performance,Perform,Performing,1318,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1359,Performance,Perform,Performing,1359,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1443,Performance,Perform,Performing,1443,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1484,Performance,Perform,Performing,1484,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1569,Performance,Perform,Performing,1569,er: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1610,Performance,Perform,Performing,1610, C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1694,Performance,Perform,Performing,1694,CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1735,Performance,Perform,Performing,1735,for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1813,Performance,Perform,Performing,1813, ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1854,Performance,Perform,Performing,1854,info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1939,Performance,Perform,Performing,1939,ran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Perfo,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1980,Performance,Perform,Performing,1980, Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Perfo,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2065,Performance,Perform,Performing,2065,ortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Per,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2106,Performance,Perform,Performing,2106,rtran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Per,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2188,Performance,Perform,Performing,2188,ts Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2229,Performance,Perform,Performing,2229,ocal/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2309,Performance,Perform,Performing,2309, -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2350,Performance,Perform,Performing,2350, -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTE,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2437,Performance,Perform,Performing,2437, Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; --,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2478,Performance,Perform,Performing,2478, Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; --,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2564,Performance,Perform,Performing,2564,Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: Ope,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2605,Performance,Perform,Performing,2605,Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Lookin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2692,Performance,Perform,Performing,2692,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2733,Performance,Perform,Performing,2733,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2819,Performance,Perform,Performing,2819,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2860,Performance,Perform,Performing,2860,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2940,Performance,Perform,Performing,2940,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2981,Performance,Perform,Performing,2981,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3068,Performance,Perform,Performing,3068,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3109,Performance,Perform,Performing,3109,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3196,Performance,Perform,Performing,3196,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3237,Performance,Perform,Performing,3237,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3321,Performance,Perform,Performing,3321,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3362,Performance,Perform,Performing,3362,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3444,Performance,Perform,Performing,3444,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3485,Performance,Perform,Performing,3485,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:217,Safety,detect,detect,217,"I know how to fix this myself, but let's pretend I'm a stupid Mac user that has Xcode and, by the grace of god, managed to install gfortran without losing a limb. Don't I deserve for CMake to throw me a bone and auto-detect the fast system BLAS/LAPACK?. I am surprised that CMake doesn't do this already btw. Seems dirt-simple for them. Cheers,. Jeff. Jeffs-MacBook-Pro:build jhammond$ cmake ..; -- The C compiler identification is Clang 4.2.0; -- The CXX compiler identification is Clang 4.2.0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:606,Safety,Detect,Detecting,606,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:640,Safety,Detect,Detecting,640,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:796,Safety,Detect,Detecting,796,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:832,Safety,Detect,Detecting,832,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1059,Safety,Detect,Detecting,1059,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1099,Safety,Detect,Detecting,1099,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1329,Testability,Test,Test,1329,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1370,Testability,Test,Test,1370,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1454,Testability,Test,Test,1454,0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1495,Testability,Test,Test,1495,- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test Open,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1580,Testability,Test,Test,1580,/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test Ope,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1621,Testability,Test,Test,1621,ler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test Ope,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1705,Testability,Test,Test,1705,iler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1746,Testability,Test,Test,1746,ing CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1824,Testability,Test,Test,1824,o; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1865,Testability,Test,Test,1865,one; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performi,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1950,Testability,Test,Test,1950,iler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Te,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:1991,Testability,Test,Test,1991,or working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Te,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2076,Testability,Test,Test,2076,ompiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2117,Testability,Test,Test,2117,mpiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2199,Testability,Test,Test,2199,an 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Perfor,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2240,Testability,Test,Test,2240,/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Perfor,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2320,Testability,Test,Test,2320,orming Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Pe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2361,Testability,Test,Test,2361,orming Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Pe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2448,Testability,Test,Test,2448,ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Perform,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2489,Testability,Test,Test,2489,ing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Perform,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2575,Testability,Test,Test,2575,ng Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FL,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2616,Testability,Test,Test,2616,ng Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for in,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2703,Testability,Test,Test,2703,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2744,Testability,Test,Test,2744,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2830,Testability,Test,Test,2830,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2871,Testability,Test,Test,2871,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2951,Testability,Test,Test,2951,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:2992,Testability,Test,Test,2992,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3079,Testability,Test,Test,3079,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3120,Testability,Test,Test,3120,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3207,Testability,Test,Test,3207,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3248,Testability,Test,Test,3248,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3332,Testability,Test,Test,3332,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3373,Testability,Test,Test,3373,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3455,Testability,Test,Test,3455,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:3496,Testability,Test,Test,3496,AG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/36:320,Usability,simpl,simple,320,"I know how to fix this myself, but let's pretend I'm a stupid Mac user that has Xcode and, by the grace of god, managed to install gfortran without losing a limb. Don't I deserve for CMake to throw me a bone and auto-detect the fast system BLAS/LAPACK?. I am surprised that CMake doesn't do this already btw. Seems dirt-simple for them. Cheers,. Jeff. Jeffs-MacBook-Pro:build jhammond$ cmake ..; -- The C compiler identification is Clang 4.2.0; -- The CXX compiler identification is Clang 4.2.0; -- Check for working C compiler: /usr/bin/clang; -- Check for working C compiler: /usr/bin/clang -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++; -- Check for working CXX compiler: /usr/bin/clang++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- The Fortran compiler identification is GNU; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenM",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/36
https://github.com/psi4/psi4/issues/37:0,Deployability,Update,Update,0,"Update the SAPT output to conform with the recommendations of our systematic study in ``Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M. Parrish, A. G. Ryno, and C. D. Sherrill, J. Chem. Phys. 140, 094106 (2014) [doi: 10.1063/1.4867135 ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/37
https://github.com/psi4/psi4/issues/37:107,Energy Efficiency,Adapt,Adapted,107,"Update the SAPT output to conform with the recommendations of our systematic study in ``Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M. Parrish, A. G. Ryno, and C. D. Sherrill, J. Chem. Phys. 140, 094106 (2014) [doi: 10.1063/1.4867135 ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/37
https://github.com/psi4/psi4/issues/37:107,Modifiability,Adapt,Adapted,107,"Update the SAPT output to conform with the recommendations of our systematic study in ``Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M. Parrish, A. G. Ryno, and C. D. Sherrill, J. Chem. Phys. 140, 094106 (2014) [doi: 10.1063/1.4867135 ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/37
https://github.com/psi4/psi4/issues/37:161,Performance,Perform,Performance,161,"Update the SAPT output to conform with the recommendations of our systematic study in ``Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M. Parrish, A. G. Ryno, and C. D. Sherrill, J. Chem. Phys. 140, 094106 (2014) [doi: 10.1063/1.4867135 ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/37
https://github.com/psi4/psi4/issues/39:75,Deployability,upgrade,upgrade,75,This seems a little silly that we can't do this at present (after a recent upgrade).,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/39
https://github.com/psi4/psi4/issues/42:147,Deployability,update,update,147,WebMO can do nice coordinate scans but PSI4 can't parse the corresponding output. Matt said he could look at this and that JR might have put in an update to WebMO to make it easier for us to handle.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/42
https://github.com/psi4/psi4/issues/43:174,Testability,test,test,174,Lori says the parsing of manually specified (general) basis sets is a little quirky and could use improvement. We may have one user complaint on this topic we could use as a test case.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/43
https://github.com/psi4/psi4/issues/45:85,Availability,avail,available,85,We need to be able to fail over to a universal JK-set when a particular JK-set isn't available. There's a Karlsruhe QZ universal set we should adopt and enter into PSI4. Lori has some info on it.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/45
https://github.com/psi4/psi4/issues/46:248,Availability,avail,availability,248,"If the user wants to run DF-MP2 on a molecule containing an element like Li or He, we need to use the requested basis set for most of the atoms and then a more generic basis set for the tricky atom. It might be useful to let Python query basis set availability per atom --- apparently such queries are currently made C-side.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/46
https://github.com/psi4/psi4/issues/47:17,Integrability,rout,routine,17,Ryan thinks this routine seems to be giving wrong values for g-shells. Check.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/47
https://github.com/psi4/psi4/issues/49:16,Modifiability,portab,portable,16,Can we create a portable Mac binary for binary distribution?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/49
https://github.com/psi4/psi4/issues/50:397,Energy Efficiency,energy,energy,397,Issue causing pywrap-cbs1 to fail. Has existed for many months. Symptom:. ```; terminate called after throwing an instance of 'psi::PsiException'; what(): BasisSet::shell: requested shell is out-of-bounds.; ```. Can generate with:. ```; memory 250 mb. molecule {; O 0.0 0.0 0.0; H 1.0 0.0 0.0; H 0.0 1.0 0.0; O 3.0 3.0 3.0; H 4.0 3.0 3.0; H 3.0 4.0 3.0; }. set basis aug-cc-pvqz; set scf_type pk. energy('scf'); ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/50
https://github.com/psi4/psi4/issues/52:37,Integrability,message,message,37,Right now it crashes with no helpful message. @jturney can you take a look?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/52
https://github.com/psi4/psi4/issues/53:48,Modifiability,config,configure,48,"I cannot use the default options provided by ../configure.cmake to finish compiling unless --with-ldflags='-lm' is added. With the default options, it complains; gcc: : No such file or directory; during compiling of libint_compiler. My platform is gcc-4.4, cmake-2.8.2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/53
https://github.com/psi4/psi4/issues/54:473,Testability,test,test,473,"From Daniel Schofield, 2/7/14: ""I have been attempting to run SAPT calculations in PSI4, but am having little success due to my inability to converge the df-hf step for one of my monomers (H2). I think this is due to a combination of using density fitting and the size of the ghosted basis set relative to this monomer i.e. if I run in a monomer centered basis set the calculation converges and if I run direct SCF (outside of SAPT) the calculation converges."". I have the test input/output files. Apparently the DF-HF is going non-variational on the dimer computation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/54
https://github.com/psi4/psi4/issues/55:69,Availability,error,error,69,"Dear all,. I just made a clone of the psi4public. However, I got the error message ""Cannot find source file sapt_dft.cc"" when trying to compile psi4 (in a directory ""psi4public/build"") by either ""../configure.cmake"" or ""cmake .."". Is it a bug in psi4? Thank you. Cheers; Gao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/55
https://github.com/psi4/psi4/issues/55:75,Integrability,message,message,75,"Dear all,. I just made a clone of the psi4public. However, I got the error message ""Cannot find source file sapt_dft.cc"" when trying to compile psi4 (in a directory ""psi4public/build"") by either ""../configure.cmake"" or ""cmake .."". Is it a bug in psi4? Thank you. Cheers; Gao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/55
https://github.com/psi4/psi4/issues/55:199,Modifiability,config,configure,199,"Dear all,. I just made a clone of the psi4public. However, I got the error message ""Cannot find source file sapt_dft.cc"" when trying to compile psi4 (in a directory ""psi4public/build"") by either ""../configure.cmake"" or ""cmake .."". Is it a bug in psi4? Thank you. Cheers; Gao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/55
https://github.com/psi4/psi4/issues/56:256,Availability,error,error,256,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:297,Availability,echo,echo,297,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1093,Availability,Error,Error,1093,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1142,Availability,error,error,1142,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1200,Availability,Error,Error,1200,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1314,Availability,error,error,1314,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1386,Availability,error,errors,1386,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:27,Deployability,install,install,27,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1436,Deployability,install,install,1436,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:125,Modifiability,config,configure,125,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:237,Testability,test,tests,237,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:303,Testability,Test,Testing,303,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:329,Testability,Test,Testing,329,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:438,Testability,test,tests,438,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/56:1267,Testability,test,tests,1267,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/56
https://github.com/psi4/psi4/issues/57:85,Energy Efficiency,energy,energy,85,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/57
https://github.com/psi4/psi4/issues/57:1220,Energy Efficiency,energy,energy,1220,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/57
https://github.com/psi4/psi4/issues/57:1410,Integrability,depend,depend,1410,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/57
https://github.com/psi4/psi4/issues/57:1074,Performance,load,load,1074,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/57
https://github.com/psi4/psi4/issues/57:1205,Performance,perform,performance,1205,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/57
https://github.com/psi4/psi4/issues/57:1666,Testability,test,test,1666,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/57
https://github.com/psi4/psi4/issues/58:33,Energy Efficiency,energy,energy,33,"I was trying to run a Gaussian-2 energy calculation for hydrogen disulfide, which appears in the original G2 test set: http://scitation.aip.org/content/aip/journal/jcp/94/11/10.1063/1.460205. The job terminated after calculating the MP4(SDTQ) total energy, with message:. RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for S in /opt/science/psi/psi4/share/psi/basis/6-311g_2df_p_.gbs. When I examine the 6-311g_2df_p_.gbs file, I see that it only has entries for H, He, Li, Be, B, C, N, O, F, Ne, K, Ca. According to the comment at the top of the file it's supposed to have been merged from 6-311G*\* and 6-311G on the EMSL Basis Set Exchange. I double checked on the BSE and these basis sets also have entries for Na, Mg, Al, Si, P, S, Cl, Ar, Ga, Ge, As, Se, Br, Kr, I, as expected.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/58
https://github.com/psi4/psi4/issues/58:249,Energy Efficiency,energy,energy,249,"I was trying to run a Gaussian-2 energy calculation for hydrogen disulfide, which appears in the original G2 test set: http://scitation.aip.org/content/aip/journal/jcp/94/11/10.1063/1.460205. The job terminated after calculating the MP4(SDTQ) total energy, with message:. RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for S in /opt/science/psi/psi4/share/psi/basis/6-311g_2df_p_.gbs. When I examine the 6-311g_2df_p_.gbs file, I see that it only has entries for H, He, Li, Be, B, C, N, O, F, Ne, K, Ca. According to the comment at the top of the file it's supposed to have been merged from 6-311G*\* and 6-311G on the EMSL Basis Set Exchange. I double checked on the BSE and these basis sets also have entries for Na, Mg, Al, Si, P, S, Cl, Ar, Ga, Ge, As, Se, Br, Kr, I, as expected.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/58
https://github.com/psi4/psi4/issues/58:262,Integrability,message,message,262,"I was trying to run a Gaussian-2 energy calculation for hydrogen disulfide, which appears in the original G2 test set: http://scitation.aip.org/content/aip/journal/jcp/94/11/10.1063/1.460205. The job terminated after calculating the MP4(SDTQ) total energy, with message:. RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for S in /opt/science/psi/psi4/share/psi/basis/6-311g_2df_p_.gbs. When I examine the 6-311g_2df_p_.gbs file, I see that it only has entries for H, He, Li, Be, B, C, N, O, F, Ne, K, Ca. According to the comment at the top of the file it's supposed to have been merged from 6-311G*\* and 6-311G on the EMSL Basis Set Exchange. I double checked on the BSE and these basis sets also have entries for Na, Mg, Al, Si, P, S, Cl, Ar, Ga, Ge, As, Se, Br, Kr, I, as expected.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/58
https://github.com/psi4/psi4/issues/58:286,Safety,sanity check,sanity check,286,"I was trying to run a Gaussian-2 energy calculation for hydrogen disulfide, which appears in the original G2 test set: http://scitation.aip.org/content/aip/journal/jcp/94/11/10.1063/1.460205. The job terminated after calculating the MP4(SDTQ) total energy, with message:. RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for S in /opt/science/psi/psi4/share/psi/basis/6-311g_2df_p_.gbs. When I examine the 6-311g_2df_p_.gbs file, I see that it only has entries for H, He, Li, Be, B, C, N, O, F, Ne, K, Ca. According to the comment at the top of the file it's supposed to have been merged from 6-311G*\* and 6-311G on the EMSL Basis Set Exchange. I double checked on the BSE and these basis sets also have entries for Na, Mg, Al, Si, P, S, Cl, Ar, Ga, Ge, As, Se, Br, Kr, I, as expected.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/58
https://github.com/psi4/psi4/issues/58:109,Testability,test,test,109,"I was trying to run a Gaussian-2 energy calculation for hydrogen disulfide, which appears in the original G2 test set: http://scitation.aip.org/content/aip/journal/jcp/94/11/10.1063/1.460205. The job terminated after calculating the MP4(SDTQ) total energy, with message:. RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for S in /opt/science/psi/psi4/share/psi/basis/6-311g_2df_p_.gbs. When I examine the 6-311g_2df_p_.gbs file, I see that it only has entries for H, He, Li, Be, B, C, N, O, F, Ne, K, Ca. According to the comment at the top of the file it's supposed to have been merged from 6-311G*\* and 6-311G on the EMSL Basis Set Exchange. I double checked on the BSE and these basis sets also have entries for Na, Mg, Al, Si, P, S, Cl, Ar, Ga, Ge, As, Se, Br, Kr, I, as expected.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/58
https://github.com/psi4/psi4/issues/59:36,Energy Efficiency,energy,energy,36,"If a user wants to make a potential energy curve or surface, it is very easy to generate nonsense when using cartesian coordinates. Using nocom and no_reorient fixes this, so maybe the driver should be setting these options if it detects such a case. ``` python; molecule beh2 {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; }; molecule beh2_nocom {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; nocom; no_reorient; }; activate(beh2); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2.z = z; e = energy('scf'); print z,e; set guess read; print ''. activate(beh2_nocom); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2_nocom.z = z; e = energy('scf'); print z,e; set guess read; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/59
https://github.com/psi4/psi4/issues/59:519,Energy Efficiency,energy,energy,519,"If a user wants to make a potential energy curve or surface, it is very easy to generate nonsense when using cartesian coordinates. Using nocom and no_reorient fixes this, so maybe the driver should be setting these options if it detects such a case. ``` python; molecule beh2 {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; }; molecule beh2_nocom {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; nocom; no_reorient; }; activate(beh2); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2.z = z; e = energy('scf'); print z,e; set guess read; print ''. activate(beh2_nocom); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2_nocom.z = z; e = energy('scf'); print z,e; set guess read; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/59
https://github.com/psi4/psi4/issues/59:683,Energy Efficiency,energy,energy,683,"If a user wants to make a potential energy curve or surface, it is very easy to generate nonsense when using cartesian coordinates. Using nocom and no_reorient fixes this, so maybe the driver should be setting these options if it detects such a case. ``` python; molecule beh2 {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; }; molecule beh2_nocom {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; nocom; no_reorient; }; activate(beh2); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2.z = z; e = energy('scf'); print z,e; set guess read; print ''. activate(beh2_nocom); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2_nocom.z = z; e = energy('scf'); print z,e; set guess read; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/59
https://github.com/psi4/psi4/issues/59:230,Safety,detect,detects,230,"If a user wants to make a potential energy curve or surface, it is very easy to generate nonsense when using cartesian coordinates. Using nocom and no_reorient fixes this, so maybe the driver should be setting these options if it detects such a case. ``` python; molecule beh2 {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; }; molecule beh2_nocom {; Be 0.0 0.0 z; H 0.0 1.0 0.0; H 0.0 -1.0 0.0; nocom; no_reorient; }; activate(beh2); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2.z = z; e = energy('scf'); print z,e; set guess read; print ''. activate(beh2_nocom); set basis sto-3g; set guess sad; for i in range (1,41):; z = i*0.1; beh2_nocom.z = z; e = energy('scf'); print z,e; set guess read; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/59
https://github.com/psi4/psi4/issues/60:282,Availability,down,downloaded,282,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/60
https://github.com/psi4/psi4/issues/60:75,Integrability,contract,contraction,75,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/60
https://github.com/psi4/psi4/issues/60:416,Integrability,contract,contraction,416,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/60
https://github.com/psi4/psi4/issues/60:549,Integrability,contract,contraction,549,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/60
https://github.com/psi4/psi4/issues/60:193,Testability,test,test,193,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/60
https://github.com/psi4/psi4/issues/61:1253,Availability,error,error,1253,"yne using basis cc-pvdz. memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; ------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:1588,Availability,Error,Error,1588," H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 4249; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:1632,Availability,error,error,1632,"0; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 4249; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground sta",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:1098,Energy Efficiency,energy,energy,1098," from ground state to these excited states. Input File; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states; # for Graphyne using basis cc-pvdz. memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:1416,Energy Efficiency,energy,energy,1416," -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 4249; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Mem",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:1436,Energy Efficiency,energy,energy,1436," -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 4249; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Mem",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:3465,Energy Efficiency,energy,energy,3465," of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states; # for Graphyne using basis cc-pvdz. memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8; ## thisenergy = energy('fci'). Memory set to 5.000 GiB by Python script. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:39:34 2014. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 1 Threads, 5000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: c1; Full point group: D2h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -2.013000000000 0.000000000000 0.000000000000; C -2.711000000000 1.209000000000 0.000000000000; C -4.107000000000 1.209000000000 0.000000000000; C -4.805000000000 0.000000000000 0.000000000000; C -4.107000000000 -1.209000000000 0.000000000000; C -2.711000000000 -1.209000000000 0.000000000000; H -2.169000000000 2.147000000000 0.000000000000; H -4.649000000000 2.147000000000 0.000000000000; H -5.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:3924,Energy Efficiency,charge,charge,3924," H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8; ## thisenergy = energy('fci'). Memory set to 5.000 GiB by Python script. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:39:34 2014. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 1 Threads, 5000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: c1; Full point group: D2h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -2.013000000000 0.000000000000 0.000000000000; C -2.711000000000 1.209000000000 0.000000000000; C -4.107000000000 1.209000000000 0.000000000000; C -4.805000000000 0.000000000000 0.000000000000; C -4.107000000000 -1.209000000000 0.000000000000; C -2.711000000000 -1.209000000000 0.000000000000; H -2.169000000000 2.147000000000 0.000000000000; H -4.649000000000 2.147000000000 0.000000000000; H -5.888000000000 0.000000000000 0.000000000000; H -4.649000000000 -2.147000000000 0.000000000000; H -2.169000000000 -2.147000000000 0.000000000000; C -0.611000000000 0.000000000000 0.000000000000; C 0.611000000000 0.000000000000 0.000000000000; C 2.013000000000 0.000000000000 0.000000000000; C 4.805000000000 0.000000000000 0.000000000000; C 4.107000000000 1.209000000000 0.000000000000; C 2.711000000000 1.209000000000 0.000000000000; C 2.711000000000 -1.209000000000 0.000000000000; C 4.1070",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:5280,Energy Efficiency,Charge,Charge,5280,"000 0.000000000000; H -2.169000000000 2.147000000000 0.000000000000; H -4.649000000000 2.147000000000 0.000000000000; H -5.888000000000 0.000000000000 0.000000000000; H -4.649000000000 -2.147000000000 0.000000000000; H -2.169000000000 -2.147000000000 0.000000000000; C -0.611000000000 0.000000000000 0.000000000000; C 0.611000000000 0.000000000000 0.000000000000; C 2.013000000000 0.000000000000 0.000000000000; C 4.805000000000 0.000000000000 0.000000000000; C 4.107000000000 1.209000000000 0.000000000000; C 2.711000000000 1.209000000000 0.000000000000; C 2.711000000000 -1.209000000000 0.000000000000; C 4.107000000000 -1.209000000000 0.000000000000; H 4.649000000000 2.147000000000 0.000000000000; H 2.169000000000 2.147000000000 0.000000000000; H 5.888000000000 0.000000000000 0.000000000000; H 2.169000000000 -2.147000000000 0.000000000000; H 4.649000000000 -2.147000000000 0.000000000000; ```. Running in c1 symmetry. Nuclear repulsion = 697.113178296437809. Charge = 0; Multiplicity = 1; Electrons = 94; Nalpha = 47; Nbeta = 47. ==> Algorithm <==. SCF Algorithm Type is OUT_OF_CORE.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:5490,Energy Efficiency,Energy,Energy,5490,"-2.147000000000 0.000000000000; H -2.169000000000 -2.147000000000 0.000000000000; C -0.611000000000 0.000000000000 0.000000000000; C 0.611000000000 0.000000000000 0.000000000000; C 2.013000000000 0.000000000000 0.000000000000; C 4.805000000000 0.000000000000 0.000000000000; C 4.107000000000 1.209000000000 0.000000000000; C 2.711000000000 1.209000000000 0.000000000000; C 2.711000000000 -1.209000000000 0.000000000000; C 4.107000000000 -1.209000000000 0.000000000000; H 4.649000000000 2.147000000000 0.000000000000; H 2.169000000000 2.147000000000 0.000000000000; H 5.888000000000 0.000000000000 0.000000000000; H 2.169000000000 -2.147000000000 0.000000000000; H 4.649000000000 -2.147000000000 0.000000000000; ```. Running in c1 symmetry. Nuclear repulsion = 697.113178296437809. Charge = 0; Multiplicity = 1; Electrons = 94; Nalpha = 47; Nbeta = 47. ==> Algorithm <==. SCF Algorithm Type is OUT_OF_CORE.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:6987,Energy Efficiency,Energy,Energy,6987,"ey. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 3576; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set: CC-PVDZ-JKFIT; Number of shells: 426; Number of basis function: 1210; Number of Cartesian functions: 1384; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 5.4113217503E-05.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -408.79982050385229 -4.08800e+02 3.62257e-02 ; @DF-RHF iter 2: -355.09647973844881 5.37033e+01 4.41837e-02 DIIS; @DF-RHF iter 3: -503.82195227805050 -1.48725e+02 2.30091e-02 DIIS; @DF-RHF iter 4: -521.88187925493912 -1.80599e+01 1.74498e-02 DIIS; @DF-RHF iter 5: -531.29208626043282 -9.41021e+00 8.08186e-03 DIIS; @DF-RHF iter 6: -532.44139862133784 -1.14931e+00 8.76099e-03 DIIS; @DF-RHF iter 7: -535.74682106965861 -3.30542e+00 2.34149e-03 DIIS; @DF-RHF iter 8: -535.91483788818550 -1.68017e-01 1.17738e-03 DIIS; @DF-RHF iter 9: -535.96873745368225 -5.38996e-02 3.40988e-04 DIIS; @DF-RHF iter 10: -535.97324997051101 -4.51252e-03 1.04954e-04 DIIS; @DF-RHF iter 11: -535.97364951295322 -3.99542e-04 1.98119e-05 DIIS; @DF-RHF iter 12: -535.97366972710233 -2.02141e-05 5.56774e-06 DIIS; @DF-RHF iter 13: -535.97367232462670 -2.59752e-06 2.92530e-06 DIIS; @DF-RHF iter 14: -535.97367292863373 -6.04007e-07 1.33844e-06 DIIS; @DF-RHF iter 15: -535.97367316705004 -2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13648,Energy Efficiency,Energy,Energy,13648,"; 183A 1.950596 184A 1.955082 185A 1.962510 ; 186A 1.987883 187A 1.992233 188A 2.021730 ; 189A 2.047832 190A 2.054449 191A 2.063391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13677,Energy Efficiency,Energy,Energy,13677,"1.955082 185A 1.962510 ; 186A 1.987883 187A 1.992233 188A 2.021730 ; 189A 2.047832 190A 2.054449 191A 2.063391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13747,Energy Efficiency,Energy,Energy,13747,"30 ; 189A 2.047832 190A 2.054449 191A 2.063391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13791,Energy Efficiency,Energy,Energy,13791,"3391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; tot",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13837,Energy Efficiency,Energy,Energy,13837,"059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* ts",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13893,Energy Efficiency,Energy,Energy,13893," 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at T",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13943,Energy Efficiency,Energy,Energy,13943,"153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:48:21 2014. ```; ***********************",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:13978,Energy Efficiency,Energy,Energy,13978,"193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986820. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:48:21 2014. ```; **************************************************; * TRANSQT2: Pro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:15632,Energy Efficiency,energy,energy,15632,"06.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:48:21 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 232. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986820. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:15673,Energy Efficiency,energy,energy,15673,"06.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:48:21 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 232. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986820. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:5961,Integrability,Wrap,Wrapper,5961,"; H 4.649000000000 2.147000000000 0.000000000000; H 2.169000000000 2.147000000000 0.000000000000; H 5.888000000000 0.000000000000 0.000000000000; H 2.169000000000 -2.147000000000 0.000000000000; H 4.649000000000 -2.147000000000 0.000000000000; ```. Running in c1 symmetry. Nuclear repulsion = 697.113178296437809. Charge = 0; Multiplicity = 1; Electrons = 94; Nalpha = 47; Nbeta = 47. ==> Algorithm <==. SCF Algorithm Type is OUT_OF_CORE.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 3576; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set: CC-PVDZ-JKFIT; Number of shells: 426; Number of basis function: 1210; Number of Cartesian functions: 1384; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 5.4113217503E-05.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterati",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:8552,Integrability,Wrap,Wrapper,8552," iter 9: -535.96873745368225 -5.38996e-02 3.40988e-04 DIIS; @DF-RHF iter 10: -535.97324997051101 -4.51252e-03 1.04954e-04 DIIS; @DF-RHF iter 11: -535.97364951295322 -3.99542e-04 1.98119e-05 DIIS; @DF-RHF iter 12: -535.97366972710233 -2.02141e-05 5.56774e-06 DIIS; @DF-RHF iter 13: -535.97367232462670 -2.59752e-06 2.92530e-06 DIIS; @DF-RHF iter 14: -535.97367292863373 -6.04007e-07 1.33844e-06 DIIS; @DF-RHF iter 15: -535.97367316705004 -2.38416e-07 5.52742e-07 DIIS; @DF-RHF iter 16: -535.97367321567344 -4.86234e-08 2.27016e-07 DIIS; @DF-RHF iter 17: -535.97367322279683 -7.12339e-09 4.03379e-08 DIIS; @DF-RHF iter 18: -535.97367322291711 -1.20281e-10 1.51493e-08 DIIS; @DF-RHF iter 19: -535.97367322293508 -1.79625e-11 3.82698e-09 DIIS; @DF-RHF iter 20: -535.97367322293599 -9.09495e-13 1.05449e-09 DIIS; @DF-RHF iter 21: -535.97367322293462 1.36424e-12 2.43431e-10 DIIS; @DF-RHF iter 22: -535.97367322293553 -9.09495e-13 9.68772e-11 DIIS. DF guess converged. ==> Integral Setup <==. MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Integral cutoff 0.00e+00; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. Computing two-electron integrals...done; Computed 238922952 non-zero two-electron integrals.; Stored in file 33.; ```. ==> DiskJK: Disk-Based J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 3576; Schwarz Cutoff: 1E-12; ```. @RHF iter 23: -535.97469002803746 -1.01681e-03 4.55914e-06 DIIS; @RHF iter 24: -535.97469062826895 -6.00231e-07 9.20453e-07 DIIS; @RHF iter 25: -535.97469065540940 -2.71405e-08 3.52409e-07 DIIS; @RHF iter 26: -535.97469065965606 -4.24666e-09 6.17974e-08 DIIS; @RHF iter 27: -535.97469065985069 -1.94632e-10 2.04842e-08 DIIS; @RHF iter 28: -535.9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:6548,Performance,Cache,Cache,6548,"0e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 3576; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set: CC-PVDZ-JKFIT; Number of shells: 426; Number of basis function: 1210; Number of Cartesian functions: 1384; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 5.4113217503E-05.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -408.79982050385229 -4.08800e+02 3.62257e-02 ; @DF-RHF iter 2: -355.09647973844881 5.37033e+01 4.41837e-02 DIIS; @DF-RHF iter 3: -503.82195227805050 -1.48725e+02 2.30091e-02 DIIS; @DF-RHF iter 4: -521.88187925493912 -1.80599e+01 1.74498e-02 DIIS; @DF-RHF iter 5: -531.29208626043282 -9.41021e+00 8.08186e-03 DIIS; @DF-RHF iter 6: -532.44139862133784 -1.14931e+00 8.76099e-03 DIIS; @DF-RHF iter 7: -535.74682106965861 -3.30542e+00 2.34149e-03 DIIS; @DF-RHF iter 8: -535.91483788",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:15334,Performance,Cache,Cache,15334,"06.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:48:21 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 232. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986820. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/61:15351,Performance,Cache,Cache,15351,"06.2189353611356637; Two-Electron Energy = 873.1310664048263561; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598714986; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 9 10:48:21 2014; Module time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes; Total time:; user time = 515.17 seconds = 8.59 minutes; system time = 10.04 seconds = 0.17 minutes; total time = 527 seconds = 8.78 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 9 10:48:21 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 232. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986820. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/61
https://github.com/psi4/psi4/issues/62:237,Availability,error,error,237,"Dear Sir, ; I am trying to find out higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states. My Job automatically dies after some time (two and half our). I am not getting any error. . output file; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. ```; J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 11169; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states; # for Graphyne using basis cc-pvdz. psi4_io.set_default_path('./'). memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; freeze_core true; scf_type out_of_core; dipmom true",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:15533,Deployability,UPDATE,UPDATE,15533,f-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:29:13 2014. ---. ```; D E T C I . C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. PARAMETERS: ; EX LEVEL = 2 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; NUM PRINT = 20; MAXITER = 12 FREEZE CORE = yes; NUM ROOTS = 10 ICORE = 1; PRINT = 1 FCI = no; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00e-08 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 130; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 1; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = yes TRANS DENSITY= yes. FILES = 50 51 52 53. EX ALLOW = 1 1 ; STATE AVERAGE = 1(1.00) ; STATE AVERAGE = 1(1.00) . ORBITALS:; NMO = 246 NUM ALP = 47; ORBS IN CI = 232 NUM ALP EXPL = 33; FROZEN CORE = 14 NUM BET = 47; RESTR CORE = 0 NUM BET EXPL = 33; IOPEN = no; RAS1 LVL = 32 A RAS3 MAX = 2; RAS1 MIN = 92 B RAS3 MAX = 2; A RAS1 LVL = 32 RAS4 LVL = 232; A RAS1 MIN = 45 A RAS4 MAX = 0; A RAS1 MAX = 47 B RAS4 MAX = 0; B RAS1 LVL = 32 RAS4 MAX = 0; B RAS1 MIN = 45 A RAS34 MAX = 2; B RAS1 MAX = 47 B RAS34 MAX = 2; RAS3 LVL = 33 RAS34 MAX = 2; RAS3 ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:2089,Energy Efficiency,energy,energy,2089,"et to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states; # for Graphyne using basis cc-pvdz. psi4_io.set_default_path('./'). memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; freeze_core true; scf_type out_of_core; dipmom true; num_roots 10; }. set scf d_convergence 10; set detci e_convergence 8; ## thisenergy = energy('detci'). Memory set to 5.000 GiB by Python script. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:06:57 2014. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 1 Threads, 5000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: c1; Full point group: D2h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -2.013000000000 0.000000000000 0.000000000000; C -2.711000000000 1.209000000000 0.000000000000; C -4.107000000000 1.209000000000 0.000000000000; C -4.805000000000 0.000000000000 0.000000000000; C -4.107000000000 -1.209000000000 0.000000000000; C -2.711000000000 -1.209000000000 0.000000000000; H -2.169000000000 2.147000000000 0.000000000000; H -4.649000000000 2.147000000000 0.000000000000; H -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:2551,Energy Efficiency,charge,charge,2551,"1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; freeze_core true; scf_type out_of_core; dipmom true; num_roots 10; }. set scf d_convergence 10; set detci e_convergence 8; ## thisenergy = energy('detci'). Memory set to 5.000 GiB by Python script. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:06:57 2014. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 1 Threads, 5000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: c1; Full point group: D2h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -2.013000000000 0.000000000000 0.000000000000; C -2.711000000000 1.209000000000 0.000000000000; C -4.107000000000 1.209000000000 0.000000000000; C -4.805000000000 0.000000000000 0.000000000000; C -4.107000000000 -1.209000000000 0.000000000000; C -2.711000000000 -1.209000000000 0.000000000000; H -2.169000000000 2.147000000000 0.000000000000; H -4.649000000000 2.147000000000 0.000000000000; H -5.888000000000 0.000000000000 0.000000000000; H -4.649000000000 -2.147000000000 0.000000000000; H -2.169000000000 -2.147000000000 0.000000000000; C -0.611000000000 0.000000000000 0.000000000000; C 0.611000000000 0.000000000000 0.000000000000; C 2.013000000000 0.000000000000 0.000000000000; C 4.805000000000 0.000000000000 0.000000000000; C 4.107000000000 1.209000000000 0.000000000000; C 2.711000000000 1.209000000000 0.000000000000; C 2.711000000000 -1.209000000000 0.000000000000; C 4.1070",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:3907,Energy Efficiency,Charge,Charge,3907,"000 0.000000000000; H -2.169000000000 2.147000000000 0.000000000000; H -4.649000000000 2.147000000000 0.000000000000; H -5.888000000000 0.000000000000 0.000000000000; H -4.649000000000 -2.147000000000 0.000000000000; H -2.169000000000 -2.147000000000 0.000000000000; C -0.611000000000 0.000000000000 0.000000000000; C 0.611000000000 0.000000000000 0.000000000000; C 2.013000000000 0.000000000000 0.000000000000; C 4.805000000000 0.000000000000 0.000000000000; C 4.107000000000 1.209000000000 0.000000000000; C 2.711000000000 1.209000000000 0.000000000000; C 2.711000000000 -1.209000000000 0.000000000000; C 4.107000000000 -1.209000000000 0.000000000000; H 4.649000000000 2.147000000000 0.000000000000; H 2.169000000000 2.147000000000 0.000000000000; H 5.888000000000 0.000000000000 0.000000000000; H 2.169000000000 -2.147000000000 0.000000000000; H 4.649000000000 -2.147000000000 0.000000000000; ```. Running in c1 symmetry. Nuclear repulsion = 697.113178296437809. Charge = 0; Multiplicity = 1; Electrons = 94; Nalpha = 47; Nbeta = 47. ==> Algorithm <==. SCF Algorithm Type is OUT_OF_CORE.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:4117,Energy Efficiency,Energy,Energy,4117,"-2.147000000000 0.000000000000; H -2.169000000000 -2.147000000000 0.000000000000; C -0.611000000000 0.000000000000 0.000000000000; C 0.611000000000 0.000000000000 0.000000000000; C 2.013000000000 0.000000000000 0.000000000000; C 4.805000000000 0.000000000000 0.000000000000; C 4.107000000000 1.209000000000 0.000000000000; C 2.711000000000 1.209000000000 0.000000000000; C 2.711000000000 -1.209000000000 0.000000000000; C 4.107000000000 -1.209000000000 0.000000000000; H 4.649000000000 2.147000000000 0.000000000000; H 2.169000000000 2.147000000000 0.000000000000; H 5.888000000000 0.000000000000 0.000000000000; H 2.169000000000 -2.147000000000 0.000000000000; H 4.649000000000 -2.147000000000 0.000000000000; ```. Running in c1 symmetry. Nuclear repulsion = 697.113178296437809. Charge = 0; Multiplicity = 1; Electrons = 94; Nalpha = 47; Nbeta = 47. ==> Algorithm <==. SCF Algorithm Type is OUT_OF_CORE.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:5614,Energy Efficiency,Energy,Energy,5614,"ey. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 3576; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set: CC-PVDZ-JKFIT; Number of shells: 426; Number of basis function: 1210; Number of Cartesian functions: 1384; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 5.4113217503E-05.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -408.79982050244575 -4.08800e+02 3.62257e-02 ; @DF-RHF iter 2: -355.09647973838037 5.37033e+01 4.41837e-02 DIIS; @DF-RHF iter 3: -503.82195227745933 -1.48725e+02 2.30091e-02 DIIS; @DF-RHF iter 4: -521.88187925370471 -1.80599e+01 1.74498e-02 DIIS; @DF-RHF iter 5: -531.29208625948809 -9.41021e+00 8.08186e-03 DIIS; @DF-RHF iter 6: -532.44139866705314 -1.14931e+00 8.76099e-03 DIIS; @DF-RHF iter 7: -535.74682110801427 -3.30542e+00 2.34149e-03 DIIS; @DF-RHF iter 8: -535.91483791718110 -1.68017e-01 1.17738e-03 DIIS; @DF-RHF iter 9: -535.96873759197706 -5.38997e-02 3.40983e-04 DIIS; @DF-RHF iter 10: -535.97325006729534 -4.51248e-03 1.04940e-04 DIIS; @DF-RHF iter 11: -535.97364955471517 -3.99487e-04 1.97794e-05 DIIS; @DF-RHF iter 12: -535.97366979229014 -2.02376e-05 5.39642e-06 DIIS; @DF-RHF iter 13: -535.97367245741657 -2.66513e-06 2.45749e-06 DIIS; @DF-RHF iter 14: -535.97367296799007 -5.10573e-07 1.28273e-06 DIIS; @DF-RHF iter 15: -535.97367316735676 -1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12276,Energy Efficiency,Energy,Energy,12276,"; 183A 1.950596 184A 1.955082 185A 1.962510 ; 186A 1.987883 187A 1.992233 188A 2.021730 ; 189A 2.047832 190A 2.054449 191A 2.063391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12305,Energy Efficiency,Energy,Energy,12305,"1.955082 185A 1.962510 ; 186A 1.987883 187A 1.992233 188A 2.021730 ; 189A 2.047832 190A 2.054449 191A 2.063391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minute",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12375,Energy Efficiency,Energy,Energy,12375,"30 ; 189A 2.047832 190A 2.054449 191A 2.063391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; syste",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12419,Energy Efficiency,Energy,Energy,12419,"3391 ; 192A 2.073995 193A 2.089810 194A 2.098059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; to",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12465,Energy Efficiency,Energy,Energy,12465,"059 ; 195A 2.119505 196A 2.136885 197A 2.139951 ; 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12521,Energy Efficiency,Energy,Energy,12521," 198A 2.143625 199A 2.144516 200A 2.149966 ; 201A 2.153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12571,Energy Efficiency,Energy,Energy,12571,"153416 202A 2.160845 203A 2.177753 ; 204A 2.193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; *********************",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:12606,Energy Efficiency,Energy,Energy,12606,"193917 205A 2.249401 206A 2.259315 ; 207A 2.260884 208A 2.264073 209A 2.270343 ; 210A 2.290240 211A 2.296245 212A 2.304338 ; 213A 2.316737 214A 2.379290 215A 2.453589 ; 216A 2.461743 217A 2.495632 218A 2.498678 ; 219A 2.519294 220A 2.562708 221A 2.608244 ; 222A 2.726412 223A 2.739216 224A 2.753717 ; 225A 2.766537 226A 2.769494 227A 2.781755 ; 228A 2.786035 229A 2.802889 230A 2.877816 ; 231A 2.934217 232A 2.946283 233A 2.971176 ; 234A 2.978125 235A 3.021450 236A 3.025068 ; 237A 3.055308 238A 3.105407 239A 3.192416 ; 240A 3.230170 241A 3.237091 242A 3.270263 ; 243A 3.501427 244A 3.509120 245A 3.988816 ; 246A 4.002956 . Final Occupation by Irrep:; A ; DOCC [ 47 ]; ```. Energy converged. @RHF Final Energy: -535.97469065986911. => Energetics <=. ```; Nuclear Repulsion Energy = 697.1131782964378090; One-Electron Energy = -2106.2189353611738625; Two-Electron Energy = 873.1310664048628496; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; Total Energy = -535.9746906598732039; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density density matrix; Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: -0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; **************************************************; * TRANSQT2: P",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:14260,Energy Efficiency,energy,energy,14260,"tal time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = SCF; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 246. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986911. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:29:13 2014. ---. ```; D E T C I . C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. PARAMETERS: ; EX LEVEL = 2 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:14301,Energy Efficiency,energy,energy,14301,"nutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = SCF; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 246. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986911. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:29:13 2014. ---. ```; D E T C I . C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. PARAMETERS: ; EX LEVEL = 2 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; NUM PRINT = 20; MAXITER",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:14440,Energy Efficiency,energy,energy,14440,"ime = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = SCF; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 246. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986911. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:29:13 2014. ---. ```; D E T C I . C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. PARAMETERS: ; EX LEVEL = 2 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; NUM PRINT = 20; MAXITER = 12 FREEZE CORE = yes; NUM ROOTS = 10 ICORE = 1; PRINT = 1 FCI = no; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:4588,Integrability,Wrap,Wrapper,4588,"; H 4.649000000000 2.147000000000 0.000000000000; H 2.169000000000 2.147000000000 0.000000000000; H 5.888000000000 0.000000000000 0.000000000000; H 2.169000000000 -2.147000000000 0.000000000000; H 4.649000000000 -2.147000000000 0.000000000000; ```. Running in c1 symmetry. Nuclear repulsion = 697.113178296437809. Charge = 0; Multiplicity = 1; Electrons = 94; Nalpha = 47; Nbeta = 47. ==> Algorithm <==. SCF Algorithm Type is OUT_OF_CORE.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 3576; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set: CC-PVDZ-JKFIT; Number of shells: 426; Number of basis function: 1210; Number of Cartesian functions: 1384; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 5.4113217503E-05.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterati",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:7179,Integrability,Wrap,Wrapper,7179," iter 9: -535.96873759197706 -5.38997e-02 3.40983e-04 DIIS; @DF-RHF iter 10: -535.97325006729534 -4.51248e-03 1.04940e-04 DIIS; @DF-RHF iter 11: -535.97364955471517 -3.99487e-04 1.97794e-05 DIIS; @DF-RHF iter 12: -535.97366979229014 -2.02376e-05 5.39642e-06 DIIS; @DF-RHF iter 13: -535.97367245741657 -2.66513e-06 2.45749e-06 DIIS; @DF-RHF iter 14: -535.97367296799007 -5.10573e-07 1.28273e-06 DIIS; @DF-RHF iter 15: -535.97367316735676 -1.99367e-07 5.79818e-07 DIIS; @DF-RHF iter 16: -535.97367321444040 -4.70836e-08 2.30170e-07 DIIS; @DF-RHF iter 17: -535.97367322170135 -7.26095e-09 4.11055e-08 DIIS; @DF-RHF iter 18: -535.97367322182868 -1.27329e-10 1.54464e-08 DIIS; @DF-RHF iter 19: -535.97367322184778 -1.90994e-11 3.80847e-09 DIIS; @DF-RHF iter 20: -535.97367322185005 -2.27374e-12 1.03188e-09 DIIS; @DF-RHF iter 21: -535.97367322185050 -4.54747e-13 2.30705e-10 DIIS; @DF-RHF iter 22: -535.97367322184755 2.95586e-12 9.09269e-11 DIIS. DF guess converged. ==> Integral Setup <==. MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Integral cutoff 0.00e+00; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. Computing two-electron integrals...done; Computed 238922952 non-zero two-electron integrals.; Stored in file 33.; ```. ==> DiskJK: Disk-Based J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 3576; Schwarz Cutoff: 1E-12; ```. @RHF iter 23: -535.97469002803700 -1.01681e-03 4.55914e-06 DIIS; @RHF iter 24: -535.97469062826895 -6.00232e-07 9.20453e-07 DIIS; @RHF iter 25: -535.97469065540758 -2.71386e-08 3.52409e-07 DIIS; @RHF iter 26: -535.97469065965811 -4.25052e-09 6.17975e-08 DIIS; @RHF iter 27: -535.97469065984956 -1.91449e-10 2.04843e-08 DIIS; @RHF iter 28: -535.9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:15264,Modifiability,COUPLING,COUPLING,15264,"pt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986911. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:29:13 2014. ---. ```; D E T C I . C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. PARAMETERS: ; EX LEVEL = 2 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; NUM PRINT = 20; MAXITER = 12 FREEZE CORE = yes; NUM ROOTS = 10 ICORE = 1; PRINT = 1 FCI = no; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00e-08 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 130; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 1; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = yes TRANS DENSITY= yes. FILES = 50 51 52 53. EX ALLOW = 1 1 ; STATE AVERAGE = 1(1.00) ; STATE AVERAGE = 1(1.00) . ORBITALS:; NMO = 246 NUM ALP = 47; ORBS IN CI = 232 NUM ALP EXPL = 33; FROZEN CORE = 14 NUM BET = 47; RESTR CORE = 0 NUM BET EXPL = 33; IOPEN = no; RAS1 LVL = 32 A RAS3 MAX = 2; RAS1 MIN = 92 B RAS3 MAX = 2; A RAS1 LVL",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:5175,Performance,Cache,Cache,5175,"0e-08; Density threshold = 1.00e-10; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: CC-PVDZ; Number of shells: 114; Number of basis function: 246; Number of Cartesian functions: 260; Spherical Harmonics?: true; Max angular momentum: 2. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; A 246 246 0 0 0 0; ```. ---. ```; Total 246 246 47 47 47 0; ```. ---. Starting with a DF guess... OEINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 24; Number of AO shells: 114; Number of SO shells: 114; Number of primitives: 358; Number of atomic orbitals: 260; Number of basis functions: 246. ```; Number of irreps: 1; Number of functions per irrep: [ 246 ]. Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35.; ```. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 3576; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set: CC-PVDZ-JKFIT; Number of shells: 426; Number of basis function: 1210; Number of Cartesian functions: 1384; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 5.4113217503E-05.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -408.79982050244575 -4.08800e+02 3.62257e-02 ; @DF-RHF iter 2: -355.09647973838037 5.37033e+01 4.41837e-02 DIIS; @DF-RHF iter 3: -503.82195227745933 -1.48725e+02 2.30091e-02 DIIS; @DF-RHF iter 4: -521.88187925370471 -1.80599e+01 1.74498e-02 DIIS; @DF-RHF iter 5: -531.29208625948809 -9.41021e+00 8.08186e-03 DIIS; @DF-RHF iter 6: -532.44139866705314 -1.14931e+00 8.76099e-03 DIIS; @DF-RHF iter 7: -535.74682110801427 -3.30542e+00 2.34149e-03 DIIS; @DF-RHF iter 8: -535.91483791",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:13962,Performance,Cache,Cache,13962,"l: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = SCF; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 246. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986911. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/62:13979,Performance,Cache,Cache,13979,"l: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:16:51 2014; Module time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes; Total time:; user time = 522.41 seconds = 8.71 minutes; system time = 15.59 seconds = 0.26 minutes; total time = 594 seconds = 9.90 minutes. **\* tstart() called on shukla-pc.localdomain; **\* at Thu Oct 16 11:16:51 2014. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = SCF; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 5000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 1; Number of SOs = 246; Number of MOs = 246; Number of active MOs = 246. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 246 14 33 0 199 0. Nuclear Rep. energy (chkpt) = 697.11317829643781; SCF energy (chkpt) = -535.97469065986911. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 2; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on shukla-pc.localdomain at Thu Oct 16 11:29:13 2014; Module time:; user time = 259.08 seconds = 4.32 minutes; system time = 51.47 seconds = 0.86 minutes; total time = 742 seconds = 12.37 minutes; Total time:; user time = 781.49 seconds = 13.02 minutes; system time = 67.06 seconds = 1.12 minutes; total time = 1336 seconds = 22.27 minutes. **\* tstart() called on shukla-pc.localdomain; **\",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/62
https://github.com/psi4/psi4/issues/63:599,Energy Efficiency,Energy,Energy,599,"There are many ways to converge RHF, and sometimes you can get stuck in a local minmum, that's true. However, the following case is quite striking. My input:. ---. molecule N2 {; N 0.000000000000 0.000000000000 0.000000000000; N 0.000000000000 0.000000000000 2.060000000000; units au; }. plugin_load(""./mointegrals.so""). set basis sto-3g; set mointegrals print 1; set reference rhf. scf(). plugin(""mointegrals.so""). ---. I use the MO integrals for a subsequent FCI calculation (in a self-written program). When I start from the RHF determinant given by Psi4:. DOCC [ 2, 0, 1, 0, 0, 2, 1, 1 ]; Total Energy = -106.7540443603229363. the FCI energy converges to the wrong answer. When I look at the energies from all possible determinants with Sz=0; irrep Ag; and N=14 electrons in the MO single-particle basis from Psi4, there is a determinant (in that MO basis!) with an energy which is lower: E = -107.488903265175 . The FCI energy then does converge to the right answer when this determinant is given as input for Davidson iterations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/63
https://github.com/psi4/psi4/issues/63:639,Energy Efficiency,energy,energy,639,"There are many ways to converge RHF, and sometimes you can get stuck in a local minmum, that's true. However, the following case is quite striking. My input:. ---. molecule N2 {; N 0.000000000000 0.000000000000 0.000000000000; N 0.000000000000 0.000000000000 2.060000000000; units au; }. plugin_load(""./mointegrals.so""). set basis sto-3g; set mointegrals print 1; set reference rhf. scf(). plugin(""mointegrals.so""). ---. I use the MO integrals for a subsequent FCI calculation (in a self-written program). When I start from the RHF determinant given by Psi4:. DOCC [ 2, 0, 1, 0, 0, 2, 1, 1 ]; Total Energy = -106.7540443603229363. the FCI energy converges to the wrong answer. When I look at the energies from all possible determinants with Sz=0; irrep Ag; and N=14 electrons in the MO single-particle basis from Psi4, there is a determinant (in that MO basis!) with an energy which is lower: E = -107.488903265175 . The FCI energy then does converge to the right answer when this determinant is given as input for Davidson iterations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/63
https://github.com/psi4/psi4/issues/63:870,Energy Efficiency,energy,energy,870,"There are many ways to converge RHF, and sometimes you can get stuck in a local minmum, that's true. However, the following case is quite striking. My input:. ---. molecule N2 {; N 0.000000000000 0.000000000000 0.000000000000; N 0.000000000000 0.000000000000 2.060000000000; units au; }. plugin_load(""./mointegrals.so""). set basis sto-3g; set mointegrals print 1; set reference rhf. scf(). plugin(""mointegrals.so""). ---. I use the MO integrals for a subsequent FCI calculation (in a self-written program). When I start from the RHF determinant given by Psi4:. DOCC [ 2, 0, 1, 0, 0, 2, 1, 1 ]; Total Energy = -106.7540443603229363. the FCI energy converges to the wrong answer. When I look at the energies from all possible determinants with Sz=0; irrep Ag; and N=14 electrons in the MO single-particle basis from Psi4, there is a determinant (in that MO basis!) with an energy which is lower: E = -107.488903265175 . The FCI energy then does converge to the right answer when this determinant is given as input for Davidson iterations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/63
https://github.com/psi4/psi4/issues/63:925,Energy Efficiency,energy,energy,925,"There are many ways to converge RHF, and sometimes you can get stuck in a local minmum, that's true. However, the following case is quite striking. My input:. ---. molecule N2 {; N 0.000000000000 0.000000000000 0.000000000000; N 0.000000000000 0.000000000000 2.060000000000; units au; }. plugin_load(""./mointegrals.so""). set basis sto-3g; set mointegrals print 1; set reference rhf. scf(). plugin(""mointegrals.so""). ---. I use the MO integrals for a subsequent FCI calculation (in a self-written program). When I start from the RHF determinant given by Psi4:. DOCC [ 2, 0, 1, 0, 0, 2, 1, 1 ]; Total Energy = -106.7540443603229363. the FCI energy converges to the wrong answer. When I look at the energies from all possible determinants with Sz=0; irrep Ag; and N=14 electrons in the MO single-particle basis from Psi4, there is a determinant (in that MO basis!) with an energy which is lower: E = -107.488903265175 . The FCI energy then does converge to the right answer when this determinant is given as input for Davidson iterations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/63
https://github.com/psi4/psi4/issues/63:390,Modifiability,plugin,plugin,390,"There are many ways to converge RHF, and sometimes you can get stuck in a local minmum, that's true. However, the following case is quite striking. My input:. ---. molecule N2 {; N 0.000000000000 0.000000000000 0.000000000000; N 0.000000000000 0.000000000000 2.060000000000; units au; }. plugin_load(""./mointegrals.so""). set basis sto-3g; set mointegrals print 1; set reference rhf. scf(). plugin(""mointegrals.so""). ---. I use the MO integrals for a subsequent FCI calculation (in a self-written program). When I start from the RHF determinant given by Psi4:. DOCC [ 2, 0, 1, 0, 0, 2, 1, 1 ]; Total Energy = -106.7540443603229363. the FCI energy converges to the wrong answer. When I look at the energies from all possible determinants with Sz=0; irrep Ag; and N=14 electrons in the MO single-particle basis from Psi4, there is a determinant (in that MO basis!) with an energy which is lower: E = -107.488903265175 . The FCI energy then does converge to the right answer when this determinant is given as input for Davidson iterations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/63
https://github.com/psi4/psi4/issues/64:182,Availability,fault,fault,182,"Seems that every time we compare values in input (compare_values() function in test cases) and the comparison fails, we get a segfault. Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/proces",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/64
https://github.com/psi4/psi4/issues/64:334,Deployability,install,install,334,"Seems that every time we compare values in input (compare_values() function in test cases) and the comparison fails, we get a segfault. Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/proces",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/64
https://github.com/psi4/psi4/issues/64:1185,Deployability,release,release,1185,"ignal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/process.h:40; ```; #7 0x00007ffff2f92e59 in __run_exit_handlers () from /lib64/libc.so.6; #8 0x00007ffff2f92ea5 in exit () from /lib64/libc.so.6; #9 0x000000000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/64
https://github.com/psi4/psi4/issues/64:79,Testability,test,test,79,"Seems that every time we compare values in input (compare_values() function in test cases) and the comparison fails, we get a segfault. Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/proces",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/64
https://github.com/psi4/psi4/issues/65:27,Modifiability,plugin,plugin,27,"Hi,. I'm using DiskJK in a plugin: https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgci.cc#L292 . Does it reuse the existing disk AO integrals or does it recompute them? In case of the latter: How do I avoid this? Is there a way to fetch the JK from the wavefunction object or the environment?. Thank you for your time and answer!; Best,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/65
https://github.com/psi4/psi4/issues/65:228,Safety,avoid,avoid,228,"Hi,. I'm using DiskJK in a plugin: https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgci.cc#L292 . Does it reuse the existing disk AO integrals or does it recompute them? In case of the latter: How do I avoid this? Is there a way to fetch the JK from the wavefunction object or the environment?. Thank you for your time and answer!; Best,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/65
https://github.com/psi4/psi4/issues/66:663,Deployability,update,updated,663,"Hi,. The input file for the problem described below:. ```; molecule C6H6 {; 0 1; C 0.0 1.855 0.0; C 0.0 -1.855 0.0; C 1.6064771240201337 0.9275 0.0; C 1.6064771240201337 -0.9275 0.0; C -1.6064771240201337 0.9275 0.0; C -1.6064771240201337 -0.9275 0.0; H 0.0 3.289 0.0; H 0.0 -3.289 0.0; H 2.848357553047019 1.6445 0.0; H 2.848357553047019 -1.6445 0.0; H -2.848357553047019 1.6445 0.0; H -2.848357553047019 -1.6445 0.0; units au; }. set basis cc-pVDZ; set reference rhf; set e_convergence 1e-12; set d_convergence 1e-12; set ints_tolerance 0.0. optimize('b3lyp'); ```. When you run the geometry optimization in the /tmp folder, the geometry of the SCF doesn't get updated:. First SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. At the end of optking:. ```; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.0000000000 0.9816237969 0.0000000000; C 0.0000000000 -0.9816237969 0.0000000000; C 0.8501111451 0.4908118984 0.0000000000; C 0.8501111451 -0.4908118984 0.0000000000; C -0.8501111451 0.4908118984 0.0000000000; C -0.8501111451 -0.4908118984 0.0000000000; H -0.0000000000 1.7404639720 0.0000000000; H 0.0000000000 -1.7404639720 -0.0000000000; H 1.5072860141 0.8702319860 0.0000000000; H 1.5072860141 -0.8702319860 0.0000000000; H -1.5072860141 0.8702",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/66:710,Energy Efficiency,charge,charge,710,"Hi,. The input file for the problem described below:. ```; molecule C6H6 {; 0 1; C 0.0 1.855 0.0; C 0.0 -1.855 0.0; C 1.6064771240201337 0.9275 0.0; C 1.6064771240201337 -0.9275 0.0; C -1.6064771240201337 0.9275 0.0; C -1.6064771240201337 -0.9275 0.0; H 0.0 3.289 0.0; H 0.0 -3.289 0.0; H 2.848357553047019 1.6445 0.0; H 2.848357553047019 -1.6445 0.0; H -2.848357553047019 1.6445 0.0; H -2.848357553047019 -1.6445 0.0; units au; }. set basis cc-pVDZ; set reference rhf; set e_convergence 1e-12; set d_convergence 1e-12; set ints_tolerance 0.0. optimize('b3lyp'); ```. When you run the geometry optimization in the /tmp folder, the geometry of the SCF doesn't get updated:. First SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. At the end of optking:. ```; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.0000000000 0.9816237969 0.0000000000; C 0.0000000000 -0.9816237969 0.0000000000; C 0.8501111451 0.4908118984 0.0000000000; C 0.8501111451 -0.4908118984 0.0000000000; C -0.8501111451 0.4908118984 0.0000000000; C -0.8501111451 -0.4908118984 0.0000000000; H -0.0000000000 1.7404639720 0.0000000000; H 0.0000000000 -1.7404639720 -0.0000000000; H 1.5072860141 0.8702319860 0.0000000000; H 1.5072860141 -0.8702319860 0.0000000000; H -1.5072860141 0.8702",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/66:2110,Energy Efficiency,charge,charge,2110,"0000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. At the end of optking:. ```; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.0000000000 0.9816237969 0.0000000000; C 0.0000000000 -0.9816237969 0.0000000000; C 0.8501111451 0.4908118984 0.0000000000; C 0.8501111451 -0.4908118984 0.0000000000; C -0.8501111451 0.4908118984 0.0000000000; C -0.8501111451 -0.4908118984 0.0000000000; H -0.0000000000 1.7404639720 0.0000000000; H 0.0000000000 -1.7404639720 -0.0000000000; H 1.5072860141 0.8702319860 0.0000000000; H 1.5072860141 -0.8702319860 0.0000000000; H -1.5072860141 0.8702319860 0.0000000000; H -1.5072860141 -0.8702319860 0.0000000000; ```. The new SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. In other folders (than /tmp) it works fine. Maybe change the naming scheme?. Best,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/66:544,Performance,optimiz,optimize,544,"Hi,. The input file for the problem described below:. ```; molecule C6H6 {; 0 1; C 0.0 1.855 0.0; C 0.0 -1.855 0.0; C 1.6064771240201337 0.9275 0.0; C 1.6064771240201337 -0.9275 0.0; C -1.6064771240201337 0.9275 0.0; C -1.6064771240201337 -0.9275 0.0; H 0.0 3.289 0.0; H 0.0 -3.289 0.0; H 2.848357553047019 1.6445 0.0; H 2.848357553047019 -1.6445 0.0; H -2.848357553047019 1.6445 0.0; H -2.848357553047019 -1.6445 0.0; units au; }. set basis cc-pVDZ; set reference rhf; set e_convergence 1e-12; set d_convergence 1e-12; set ints_tolerance 0.0. optimize('b3lyp'); ```. When you run the geometry optimization in the /tmp folder, the geometry of the SCF doesn't get updated:. First SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. At the end of optking:. ```; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.0000000000 0.9816237969 0.0000000000; C 0.0000000000 -0.9816237969 0.0000000000; C 0.8501111451 0.4908118984 0.0000000000; C 0.8501111451 -0.4908118984 0.0000000000; C -0.8501111451 0.4908118984 0.0000000000; C -0.8501111451 -0.4908118984 0.0000000000; H -0.0000000000 1.7404639720 0.0000000000; H 0.0000000000 -1.7404639720 -0.0000000000; H 1.5072860141 0.8702319860 0.0000000000; H 1.5072860141 -0.8702319860 0.0000000000; H -1.5072860141 0.8702",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/66:594,Performance,optimiz,optimization,594,"Hi,. The input file for the problem described below:. ```; molecule C6H6 {; 0 1; C 0.0 1.855 0.0; C 0.0 -1.855 0.0; C 1.6064771240201337 0.9275 0.0; C 1.6064771240201337 -0.9275 0.0; C -1.6064771240201337 0.9275 0.0; C -1.6064771240201337 -0.9275 0.0; H 0.0 3.289 0.0; H 0.0 -3.289 0.0; H 2.848357553047019 1.6445 0.0; H 2.848357553047019 -1.6445 0.0; H -2.848357553047019 1.6445 0.0; H -2.848357553047019 -1.6445 0.0; units au; }. set basis cc-pVDZ; set reference rhf; set e_convergence 1e-12; set d_convergence 1e-12; set ints_tolerance 0.0. optimize('b3lyp'); ```. When you run the geometry optimization in the /tmp folder, the geometry of the SCF doesn't get updated:. First SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. At the end of optking:. ```; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.0000000000 0.9816237969 0.0000000000; C 0.0000000000 -0.9816237969 0.0000000000; C 0.8501111451 0.4908118984 0.0000000000; C 0.8501111451 -0.4908118984 0.0000000000; C -0.8501111451 0.4908118984 0.0000000000; C -0.8501111451 -0.4908118984 0.0000000000; H -0.0000000000 1.7404639720 0.0000000000; H 0.0000000000 -1.7404639720 -0.0000000000; H 1.5072860141 0.8702319860 0.0000000000; H 1.5072860141 -0.8702319860 0.0000000000; H -1.5072860141 0.8702",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/66:1454,Performance,optimiz,optimization,1454,"e rhf; set e_convergence 1e-12; set d_convergence 1e-12; set ints_tolerance 0.0. optimize('b3lyp'); ```. When you run the geometry optimization in the /tmp folder, the geometry of the SCF doesn't get updated:. First SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.000000000000; C -1.606477124020 -0.927500000000 0.000000000000; H -0.000000000000 3.289000000000 0.000000000000; H 0.000000000000 -3.289000000000 0.000000000000; H 2.848357553047 1.644500000000 0.000000000000; H 2.848357553047 -1.644500000000 0.000000000000; H -2.848357553047 1.644500000000 0.000000000000; H -2.848357553047 -1.644500000000 0.000000000000; ```. At the end of optking:. ```; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); C -0.0000000000 0.9816237969 0.0000000000; C 0.0000000000 -0.9816237969 0.0000000000; C 0.8501111451 0.4908118984 0.0000000000; C 0.8501111451 -0.4908118984 0.0000000000; C -0.8501111451 0.4908118984 0.0000000000; C -0.8501111451 -0.4908118984 0.0000000000; H -0.0000000000 1.7404639720 0.0000000000; H 0.0000000000 -1.7404639720 -0.0000000000; H 1.5072860141 0.8702319860 0.0000000000; H 1.5072860141 -0.8702319860 0.0000000000; H -1.5072860141 0.8702319860 0.0000000000; H -1.5072860141 -0.8702319860 0.0000000000; ```. The new SCF:. ```; Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z ; ------------ ----------------- ----------------- -----------------; C -0.000000000000 1.855000000000 0.000000000000; C 0.000000000000 -1.855000000000 0.000000000000; C 1.606477124020 0.927500000000 0.000000000000; C 1.606477124020 -0.927500000000 0.000000000000; C -1.606477124020 0.927500000000 0.0000000000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/66
https://github.com/psi4/psi4/issues/67:612,Energy Efficiency,energy,energy,612,"It is clear to me that, after a full-CI calculation, is possible to print out the two-particle density matrix (2PDM) in MO basis, BUT it is not clear to me if psi4 also allows to print out the 2PDM in AO basis. Could someone help me to solve this problem, please? I really need the 2PDM in AO basis!. Thanks in advance!. PS: this is the input file I am struggling with:. memory 256 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. plugin_load(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so""). set basis 6-31G; set print 5; set OPDM true; set OPDM_PRINT true; set TPDM true; set TPDM_PRINT true; energy('fci'). plugin(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/67
https://github.com/psi4/psi4/issues/67:476,Modifiability,plugin,plugins,476,"It is clear to me that, after a full-CI calculation, is possible to print out the two-particle density matrix (2PDM) in MO basis, BUT it is not clear to me if psi4 also allows to print out the 2PDM in AO basis. Could someone help me to solve this problem, please? I really need the 2PDM in AO basis!. Thanks in advance!. PS: this is the input file I am struggling with:. memory 256 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. plugin_load(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so""). set basis 6-31G; set print 5; set OPDM true; set OPDM_PRINT true; set TPDM true; set TPDM_PRINT true; energy('fci'). plugin(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/67
https://github.com/psi4/psi4/issues/67:627,Modifiability,plugin,plugin,627,"It is clear to me that, after a full-CI calculation, is possible to print out the two-particle density matrix (2PDM) in MO basis, BUT it is not clear to me if psi4 also allows to print out the 2PDM in AO basis. Could someone help me to solve this problem, please? I really need the 2PDM in AO basis!. Thanks in advance!. PS: this is the input file I am struggling with:. memory 256 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. plugin_load(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so""). set basis 6-31G; set print 5; set OPDM true; set OPDM_PRINT true; set TPDM true; set TPDM_PRINT true; energy('fci'). plugin(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/67
https://github.com/psi4/psi4/issues/67:662,Modifiability,plugin,plugins,662,"It is clear to me that, after a full-CI calculation, is possible to print out the two-particle density matrix (2PDM) in MO basis, BUT it is not clear to me if psi4 also allows to print out the 2PDM in AO basis. Could someone help me to solve this problem, please? I really need the 2PDM in AO basis!. Thanks in advance!. PS: this is the input file I am struggling with:. memory 256 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. plugin_load(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so""). set basis 6-31G; set print 5; set OPDM true; set OPDM_PRINT true; set TPDM true; set TPDM_PRINT true; energy('fci'). plugin(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/67
https://github.com/psi4/psi4/issues/67:6,Usability,clear,clear,6,"It is clear to me that, after a full-CI calculation, is possible to print out the two-particle density matrix (2PDM) in MO basis, BUT it is not clear to me if psi4 also allows to print out the 2PDM in AO basis. Could someone help me to solve this problem, please? I really need the 2PDM in AO basis!. Thanks in advance!. PS: this is the input file I am struggling with:. memory 256 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. plugin_load(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so""). set basis 6-31G; set print 5; set OPDM true; set OPDM_PRINT true; set TPDM true; set TPDM_PRINT true; energy('fci'). plugin(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/67
https://github.com/psi4/psi4/issues/67:144,Usability,clear,clear,144,"It is clear to me that, after a full-CI calculation, is possible to print out the two-particle density matrix (2PDM) in MO basis, BUT it is not clear to me if psi4 also allows to print out the 2PDM in AO basis. Could someone help me to solve this problem, please? I really need the 2PDM in AO basis!. Thanks in advance!. PS: this is the input file I am struggling with:. memory 256 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. plugin_load(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so""). set basis 6-31G; set print 5; set OPDM true; set OPDM_PRINT true; set TPDM true; set TPDM_PRINT true; energy('fci'). plugin(""/auto/store/ale/PSI/objdir/plugins/backtrans/backtrans.so"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/67
https://github.com/psi4/psi4/issues/68:37,Modifiability,plugin,plugin,37,"I've build the default `sointegrals` plugin and used it on the following input file:. ```; molecule CO; {; C; O 1 1.14; units au; }. set {; basis sto-3g; }. plugin_load(""./sointegrals.so""). set sointegrals {; print 10; }. plugin(""sointegrals.so""); ```. This is the output: https://gist.github.com/wpoely86/15abc32a634c0cc4a73f. I think something went wrong. `CO` has `c2v` symmetry here. If I look at the TEI, I'm missing `(2 0 | 0 0)`. Both orbital 0 and 2 are part of the `A1` irrep and so on basis of symmetry, I don't expect this integral to be zero. If I run exactly the same molecule with the `mointegrals` plugin (and symmetric orthogonalisation, so `nmo`==`nso`.), then it does give me the `(2 0 | 0 0)` integral.; The `(0 0 | 0 0)`, `(1 0 | 0 0)`, `(3 0 | 0 0)`, `(4 0 | 0 0)` and `(5 0 | 0 0)` integrals are all present.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/68
https://github.com/psi4/psi4/issues/68:222,Modifiability,plugin,plugin,222,"I've build the default `sointegrals` plugin and used it on the following input file:. ```; molecule CO; {; C; O 1 1.14; units au; }. set {; basis sto-3g; }. plugin_load(""./sointegrals.so""). set sointegrals {; print 10; }. plugin(""sointegrals.so""); ```. This is the output: https://gist.github.com/wpoely86/15abc32a634c0cc4a73f. I think something went wrong. `CO` has `c2v` symmetry here. If I look at the TEI, I'm missing `(2 0 | 0 0)`. Both orbital 0 and 2 are part of the `A1` irrep and so on basis of symmetry, I don't expect this integral to be zero. If I run exactly the same molecule with the `mointegrals` plugin (and symmetric orthogonalisation, so `nmo`==`nso`.), then it does give me the `(2 0 | 0 0)` integral.; The `(0 0 | 0 0)`, `(1 0 | 0 0)`, `(3 0 | 0 0)`, `(4 0 | 0 0)` and `(5 0 | 0 0)` integrals are all present.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/68
https://github.com/psi4/psi4/issues/68:613,Modifiability,plugin,plugin,613,"I've build the default `sointegrals` plugin and used it on the following input file:. ```; molecule CO; {; C; O 1 1.14; units au; }. set {; basis sto-3g; }. plugin_load(""./sointegrals.so""). set sointegrals {; print 10; }. plugin(""sointegrals.so""); ```. This is the output: https://gist.github.com/wpoely86/15abc32a634c0cc4a73f. I think something went wrong. `CO` has `c2v` symmetry here. If I look at the TEI, I'm missing `(2 0 | 0 0)`. Both orbital 0 and 2 are part of the `A1` irrep and so on basis of symmetry, I don't expect this integral to be zero. If I run exactly the same molecule with the `mointegrals` plugin (and symmetric orthogonalisation, so `nmo`==`nso`.), then it does give me the `(2 0 | 0 0)` integral.; The `(0 0 | 0 0)`, `(1 0 | 0 0)`, `(3 0 | 0 0)`, `(4 0 | 0 0)` and `(5 0 | 0 0)` integrals are all present.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/68
https://github.com/psi4/psi4/issues/69:686,Energy Efficiency,energy,energy,686,"I've used the following input:. ``` python; molecule CO; {; C; O 1 R; units au; }. set {; basis sto-3g; guess read; }. Rrange= [ 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. , 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3. , 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4. , 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5. , 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6. , 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7. , 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8. , 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9. , 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10. ]. table=Table(rows=[""R""], cols=[""E(SCF)"", ""E(FCI)""]). for R in Rrange:; CO.R = R. energy('fci'); escf = get_variable('SCF TOTAL ENERGY'); efci = get_variable('CI TOTAL ENERGY'). table[R] = [escf, efci]. print table; ```. The results looks like:; ![Results plot](http://i.imgur.com/iupslMD.png). Full CI shouldn't fail in this case? This was done with f7e55f09f7",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/69
https://github.com/psi4/psi4/issues/69:732,Energy Efficiency,ENERGY,ENERGY,732,"I've used the following input:. ``` python; molecule CO; {; C; O 1 R; units au; }. set {; basis sto-3g; guess read; }. Rrange= [ 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. , 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3. , 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4. , 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5. , 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6. , 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7. , 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8. , 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9. , 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10. ]. table=Table(rows=[""R""], cols=[""E(SCF)"", ""E(FCI)""]). for R in Rrange:; CO.R = R. energy('fci'); escf = get_variable('SCF TOTAL ENERGY'); efci = get_variable('CI TOTAL ENERGY'). table[R] = [escf, efci]. print table; ```. The results looks like:; ![Results plot](http://i.imgur.com/iupslMD.png). Full CI shouldn't fail in this case? This was done with f7e55f09f7",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/69
https://github.com/psi4/psi4/issues/69:772,Energy Efficiency,ENERGY,ENERGY,772,"I've used the following input:. ``` python; molecule CO; {; C; O 1 R; units au; }. set {; basis sto-3g; guess read; }. Rrange= [ 0.6, 0.7, 0.8, 0.9, 1. , 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2. , 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3. , 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4. , 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5. , 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6. , 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7. , 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8. , 8.1, 8.2, 8.3, 8.4, 8.5, 8.6, 8.7, 8.8, 8.9, 9. , 9.1, 9.2, 9.3, 9.4, 9.5, 9.6, 9.7, 9.8, 9.9, 10. ]. table=Table(rows=[""R""], cols=[""E(SCF)"", ""E(FCI)""]). for R in Rrange:; CO.R = R. energy('fci'); escf = get_variable('SCF TOTAL ENERGY'); efci = get_variable('CI TOTAL ENERGY'). table[R] = [escf, efci]. print table; ```. The results looks like:; ![Results plot](http://i.imgur.com/iupslMD.png). Full CI shouldn't fail in this case? This was done with f7e55f09f7",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/69
https://github.com/psi4/psi4/issues/74:31,Modifiability,plugin,plugin,31,"I was trying the `sointegrals` plugin with 14c78eabdca but I got a exception:. ```; RuntimeError: CoordEntry::basisset: Basisset not set for H and type of BASIS; ```. GDB show this as the traceback:. ```; #0 __cxa_throw () at ../../../../libstdc++-v3/libsupc++/eh_throw.cc:62; #1 0x0000000001967124 in psi::CoordEntry::basisset (this=0x3fcde30, type=...) at src/lib/libmints/coordentry.cc:125; #2 0x0000000001883551 in psi::BasisSet::construct (parser=..., mol=..., type=...) at src/lib/libmints/basisset.cc:718; #3 0x00002aaab8f93f66 in sointegrals () from ./sointegrals.so; ```. Has something in the API changed that needs changing in the plugin?; Replacing the line. ``` c++; shared_ptr<BasisSet> aoBasis = BasisSet::construct(parser, molecule, ""BASIS"");; ```. with. ``` c++; shared_ptr<BasisSet> aoBasis= BasisSet::pyconstruct_orbital(molecule, ""BASIS"", options.get_str(""BASIS""));; ```. seems to help. Is this the correct way of handling this?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/74
https://github.com/psi4/psi4/issues/74:641,Modifiability,plugin,plugin,641,"I was trying the `sointegrals` plugin with 14c78eabdca but I got a exception:. ```; RuntimeError: CoordEntry::basisset: Basisset not set for H and type of BASIS; ```. GDB show this as the traceback:. ```; #0 __cxa_throw () at ../../../../libstdc++-v3/libsupc++/eh_throw.cc:62; #1 0x0000000001967124 in psi::CoordEntry::basisset (this=0x3fcde30, type=...) at src/lib/libmints/coordentry.cc:125; #2 0x0000000001883551 in psi::BasisSet::construct (parser=..., mol=..., type=...) at src/lib/libmints/basisset.cc:718; #3 0x00002aaab8f93f66 in sointegrals () from ./sointegrals.so; ```. Has something in the API changed that needs changing in the plugin?; Replacing the line. ``` c++; shared_ptr<BasisSet> aoBasis = BasisSet::construct(parser, molecule, ""BASIS"");; ```. with. ``` c++; shared_ptr<BasisSet> aoBasis= BasisSet::pyconstruct_orbital(molecule, ""BASIS"", options.get_str(""BASIS""));; ```. seems to help. Is this the correct way of handling this?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/74
https://github.com/psi4/psi4/issues/76:245,Energy Efficiency,energy,energy,245,"http://sirius.chem.vt.edu/psi4manual/latest/basissets_byelement.html#apdx-basiselement. my molecule complex have 'I' atom, ; the complex was optimized by g09 at MP2/AUG-CC-PVDZ,and the 'I' (AUG-CC-PVDZ-PP),. NOW I want to decompose the interact energy by the psi4 software,but it didn't have basis set support the 'I' element. can you give me some suggestions?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/76
https://github.com/psi4/psi4/issues/76:141,Performance,optimiz,optimized,141,"http://sirius.chem.vt.edu/psi4manual/latest/basissets_byelement.html#apdx-basiselement. my molecule complex have 'I' atom, ; the complex was optimized by g09 at MP2/AUG-CC-PVDZ,and the 'I' (AUG-CC-PVDZ-PP),. NOW I want to decompose the interact energy by the psi4 software,but it didn't have basis set support the 'I' element. can you give me some suggestions?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/76
https://github.com/psi4/psi4/issues/77:131,Modifiability,plugin,plugin,131,"Dear all,. Previously - when outfile was a ""FILE *"" - I redirected my output stream to psi4's stream as follows:. ```; ** stuff in plugin **. std::ofstream psi4outfile;; std::streambuf * cout_buffer;; if ( outfile_name != ""stdout"" ){; fclose(myoutfile);; myoutfile = NULL;; psi4outfile.open( outfile_name.c_str() , ios::app ); // append; cout_buffer = cout.rdbuf( psi4outfile.rdbuf() );; }. ** stuff in my code **. if ( outfile_name != ""stdout"" ){; cout.rdbuf(cout_buffer);; psi4outfile.close();; myoutfile = fopen(outfile_name.c_str(), ""a"");; if (myoutfile == NULL){; throw PSIEXCEPTION(""PSI4: Unable to reopen output file."");; }; }. ** stuff in plugin **; ```. The original plugins can be found here:; https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgci.cc; https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgscf.cc. Which way would you prefer to redirect C++'s cout to the psi4 outfile now?. Thank you!; Best,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/77
https://github.com/psi4/psi4/issues/77:647,Modifiability,plugin,plugin,647,"Dear all,. Previously - when outfile was a ""FILE *"" - I redirected my output stream to psi4's stream as follows:. ```; ** stuff in plugin **. std::ofstream psi4outfile;; std::streambuf * cout_buffer;; if ( outfile_name != ""stdout"" ){; fclose(myoutfile);; myoutfile = NULL;; psi4outfile.open( outfile_name.c_str() , ios::app ); // append; cout_buffer = cout.rdbuf( psi4outfile.rdbuf() );; }. ** stuff in my code **. if ( outfile_name != ""stdout"" ){; cout.rdbuf(cout_buffer);; psi4outfile.close();; myoutfile = fopen(outfile_name.c_str(), ""a"");; if (myoutfile == NULL){; throw PSIEXCEPTION(""PSI4: Unable to reopen output file."");; }; }. ** stuff in plugin **; ```. The original plugins can be found here:; https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgci.cc; https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgscf.cc. Which way would you prefer to redirect C++'s cout to the psi4 outfile now?. Thank you!; Best,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/77
https://github.com/psi4/psi4/issues/77:676,Modifiability,plugin,plugins,676,"Dear all,. Previously - when outfile was a ""FILE *"" - I redirected my output stream to psi4's stream as follows:. ```; ** stuff in plugin **. std::ofstream psi4outfile;; std::streambuf * cout_buffer;; if ( outfile_name != ""stdout"" ){; fclose(myoutfile);; myoutfile = NULL;; psi4outfile.open( outfile_name.c_str() , ios::app ); // append; cout_buffer = cout.rdbuf( psi4outfile.rdbuf() );; }. ** stuff in my code **. if ( outfile_name != ""stdout"" ){; cout.rdbuf(cout_buffer);; psi4outfile.close();; myoutfile = fopen(outfile_name.c_str(), ""a"");; if (myoutfile == NULL){; throw PSIEXCEPTION(""PSI4: Unable to reopen output file."");; }; }. ** stuff in plugin **; ```. The original plugins can be found here:; https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgci.cc; https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrgscf.cc. Which way would you prefer to redirect C++'s cout to the psi4 outfile now?. Thank you!; Best,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/77
https://github.com/psi4/psi4/issues/78:56,Modifiability,plugin,plugins,56,"Dear all,. I have built the latest version of psi4 with plugins:. ```; BLA_VENDOR=Intel10_64lp CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_DUMMY_PLUGIN=ON; ```. and can create new plugins and compile them. However, the old examples, typically in the folder. ```; /path/to/source/psi4/objects/plugins/; ```. are not generated anymore. I don't know if this was intentional?. Best regards,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/78
https://github.com/psi4/psi4/issues/78:190,Modifiability,plugin,plugins,190,"Dear all,. I have built the latest version of psi4 with plugins:. ```; BLA_VENDOR=Intel10_64lp CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_DUMMY_PLUGIN=ON; ```. and can create new plugins and compile them. However, the old examples, typically in the folder. ```; /path/to/source/psi4/objects/plugins/; ```. are not generated anymore. I don't know if this was intentional?. Best regards,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/78
https://github.com/psi4/psi4/issues/78:302,Modifiability,plugin,plugins,302,"Dear all,. I have built the latest version of psi4 with plugins:. ```; BLA_VENDOR=Intel10_64lp CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_DUMMY_PLUGIN=ON; ```. and can create new plugins and compile them. However, the old examples, typically in the folder. ```; /path/to/source/psi4/objects/plugins/; ```. are not generated anymore. I don't know if this was intentional?. Best regards,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/78
https://github.com/psi4/psi4/issues/79:31,Availability,error,error,31,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/79:314,Deployability,install,installed,314,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/79:841,Energy Efficiency,charge,charge,841,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/79:1513,Energy Efficiency,energy,energy,1513,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/79:37,Integrability,message,messages,37,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/79:355,Integrability,message,message,355,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/79:822,Testability,test,test,822,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/79
https://github.com/psi4/psi4/issues/82:76,Availability,error,error,76,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/82:100,Availability,error,error,100,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/82:189,Availability,Error,Error,189,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/82:326,Availability,echo,echo,326,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/82:335,Availability,error,error,335,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/82:171,Usability,simpl,simply,171,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/82
https://github.com/psi4/psi4/issues/83:693,Availability,Error,Error,693,"I've got trouble calculation H2:. ``` python; import numpy as np; memory 50 Gb. molecule H2 {; 0 1; H; H 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; NUM_ROOTS 5; basis cc-pvdz; }. rlist = np.arange(1.00, 10.1, 0.1). for r in rlist:; H2.R = r; energy('fci'); ```. It calculates the first point and then I get:. ``` python; PSIO_ERROR: unit = 53, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""share/psi/python/proc.py"", line 1969, in run_detci; psi4.detci(); RuntimeError: PSIO Error; ```. This is done with 14c78eab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/83
https://github.com/psi4/psi4/issues/83:266,Energy Efficiency,energy,energy,266,"I've got trouble calculation H2:. ``` python; import numpy as np; memory 50 Gb. molecule H2 {; 0 1; H; H 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; NUM_ROOTS 5; basis cc-pvdz; }. rlist = np.arange(1.00, 10.1, 0.1). for r in rlist:; H2.R = r; energy('fci'); ```. It calculates the first point and then I get:. ``` python; PSIO_ERROR: unit = 53, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""share/psi/python/proc.py"", line 1969, in run_detci; psi4.detci(); RuntimeError: PSIO Error; ```. This is done with 14c78eab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/83
https://github.com/psi4/psi4/issues/83:540,Energy Efficiency,energy,energy,540,"I've got trouble calculation H2:. ``` python; import numpy as np; memory 50 Gb. molecule H2 {; 0 1; H; H 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; NUM_ROOTS 5; basis cc-pvdz; }. rlist = np.arange(1.00, 10.1, 0.1). for r in rlist:; H2.R = r; energy('fci'); ```. It calculates the first point and then I get:. ``` python; PSIO_ERROR: unit = 53, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""share/psi/python/proc.py"", line 1969, in run_detci; psi4.detci(); RuntimeError: PSIO Error; ```. This is done with 14c78eab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/83
https://github.com/psi4/psi4/issues/83:560,Energy Efficiency,energy,energy,560,"I've got trouble calculation H2:. ``` python; import numpy as np; memory 50 Gb. molecule H2 {; 0 1; H; H 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; NUM_ROOTS 5; basis cc-pvdz; }. rlist = np.arange(1.00, 10.1, 0.1). for r in rlist:; H2.R = r; energy('fci'); ```. It calculates the first point and then I get:. ``` python; PSIO_ERROR: unit = 53, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""share/psi/python/proc.py"", line 1969, in run_detci; psi4.detci(); RuntimeError: PSIO Error; ```. This is done with 14c78eab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/83
https://github.com/psi4/psi4/issues/84:146,Energy Efficiency,energy,energy,146,"Hi,. Against a build of HEAD, using the following input:. ```; set basis $BASIS_SET$. molecule MOL {; 0 1; C 0.0 0.00000 0.00000; symmetry c1; }. energy('scf'); oeprop(""GRID_ESP"", ""GRID_FIELD""); ```. When $BASIS_SET$ is set to ""6-31G*"", PSI4 runs to completion, correctly outputting grid_esp.dat and grid_field.dat files. However, when set to ""cc-pvdz"", PSI4 fails in oeprop(), with the errror:. ```; Traceback (most recent call last):; File ""<string>"", line 22, in <module>; File ""/usr/local/psi4/share/psi//python/p4util/util.py"", line 46, in oeprop; oe.compute(); RuntimeError: Matrix::vector_dot: Dimensions do not match!. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/84
https://github.com/psi4/psi4/pull/86:212,Availability,error,error,212,The following input file breaks `inputparser.py`. ```; $ cat input.dat; # ccansmi: O=C(C#C)C=O. molecule h2 {; H; H 1 0.9; }. set basis 6-31G**; energy('scf'); ```. The exception is. ```; $ psi4 input.dat; Input error: Unmatched (; ```. The error is specific to the fact that the comment appears on the first line of the file.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/86
https://github.com/psi4/psi4/pull/86:241,Availability,error,error,241,The following input file breaks `inputparser.py`. ```; $ cat input.dat; # ccansmi: O=C(C#C)C=O. molecule h2 {; H; H 1 0.9; }. set basis 6-31G**; energy('scf'); ```. The exception is. ```; $ psi4 input.dat; Input error: Unmatched (; ```. The error is specific to the fact that the comment appears on the first line of the file.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/86
https://github.com/psi4/psi4/pull/86:145,Energy Efficiency,energy,energy,145,The following input file breaks `inputparser.py`. ```; $ cat input.dat; # ccansmi: O=C(C#C)C=O. molecule h2 {; H; H 1 0.9; }. set basis 6-31G**; energy('scf'); ```. The exception is. ```; $ psi4 input.dat; Input error: Unmatched (; ```. The error is specific to the fact that the comment appears on the first line of the file.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/86
https://github.com/psi4/psi4/pull/87:138,Availability,error,errors,138,"The following type of `set` block breaks inputparser in the `quotify` function:. ```; set {; myplugin 'a/c'; myplugin 'a\b'; }; ```. with errors like. ```; Traceback (most recent call last):; File ""<string>"", line 14, in <module>; TypeError: unsupported operand type(s) for /: 'str' and 'str'; ```. and . ```; File ""<string>"", line 15; psi4.set_global_option(""MYPLUGIN"", ""'a""\""b'""); ^; SyntaxError: unexpected character after line continuation character; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/87
https://github.com/psi4/psi4/issues/88:264,Availability,fault,fault,264,"`psi4 --version` gives:. ```; (gdb) r; Starting program: /home/ward/tmp/psi4release/build2/bin/psi4 --version; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"". Program received signal SIGSEGV, Segmentation fault.; std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; 51 if (__os.tie() && __os.good()); Missing separate debuginfos, use: debuginfo-install python-libs-2.7.8-9.fc21.x86_64; (gdb) bt; #0 std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; #1 0x000000390e699869 in std::__ostream_insert<char, std::char_traits<char> > (__out=..., __s=__s@entry=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __n=76); at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream_insert.h:82; #2 0x0000000001e6bd18 in operator<< <std::char_traits<char> > (__s=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __out=...) at /usr/include/c++/4.9.2/ostream:535; #3 Write2Buffer<char*> (Input=<synthetic pointer>, this=0x0) at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.h:157; #4 psi::PsiOutStream::Printf (this=0x0, format=format@entry=0x204e9c0 "" "", '-' <repeats 71 times>, ""\n"") at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.cc:82; #5 0x00000000008a79bf in psi::print_version () at /home/ward/tmp/psi4release/build2/src/bin/psi4/version.cc:38; #6 0x00000000008e2d57 in psi::psi_start (argc=argc@entry=2, argv=argv@entry=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi_start.cc:187; #7 0x0000000000780f3c in main (argc=2, argv=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi4.cc:100; ```. Done on Fedora 21 with gcc-4.9.2 using 93a5e8d84afd652e6226. `psi4 --help` works fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/88
https://github.com/psi4/psi4/issues/88:535,Deployability,install,install,535,"`psi4 --version` gives:. ```; (gdb) r; Starting program: /home/ward/tmp/psi4release/build2/bin/psi4 --version; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"". Program received signal SIGSEGV, Segmentation fault.; std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; 51 if (__os.tie() && __os.good()); Missing separate debuginfos, use: debuginfo-install python-libs-2.7.8-9.fc21.x86_64; (gdb) bt; #0 std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; #1 0x000000390e699869 in std::__ostream_insert<char, std::char_traits<char> > (__out=..., __s=__s@entry=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __n=76); at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream_insert.h:82; #2 0x0000000001e6bd18 in operator<< <std::char_traits<char> > (__s=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __out=...) at /usr/include/c++/4.9.2/ostream:535; #3 Write2Buffer<char*> (Input=<synthetic pointer>, this=0x0) at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.h:157; #4 psi::PsiOutStream::Printf (this=0x0, format=format@entry=0x204e9c0 "" "", '-' <repeats 71 times>, ""\n"") at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.cc:82; #5 0x00000000008a79bf in psi::print_version () at /home/ward/tmp/psi4release/build2/src/bin/psi4/version.cc:38; #6 0x00000000008e2d57 in psi::psi_start (argc=argc@entry=2, argv=argv@entry=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi_start.cc:187; #7 0x0000000000780f3c in main (argc=2, argv=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi4.cc:100; ```. Done on Fedora 21 with gcc-4.9.2 using 93a5e8d84afd652e6226. `psi4 --help` works fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/88
https://github.com/psi4/psi4/issues/89:337,Availability,error,errors,337,"``` bash; $ time psi4 --help. real 0m5.980s; user 0m1.279s; sys 0m4.693s; ```. This is done with b8a2f55b719d3. Why is psi4 so extremely slow to start? I have it both with g++/4.9.2 and icpc/2015.0.090 on multiple computers. As it is the sys time that is very high, I've used strace which tells me:. ```; % time seconds usecs/call calls errors syscall; ------ ----------- ----------- --------- --------- ----------------; 99.99 3.413450 1 5057853 times; 0.01 0.000177 4 43 mmap; 0.00 0.000082 2 37 brk; 0.00 0.000079 79 1 execve; 0.00 0.000071 4 16 close; 0.00 0.000032 2 18 fstat; 0.00 0.000018 1 30 mprotect; 0.00 0.000016 1 15 open; 0.00 0.000015 15 1 1 access; 0.00 0.000000 0 14 read; 0.00 0.000000 0 1 munmap; 0.00 0.000000 0 2 rt_sigaction; 0.00 0.000000 0 1 rt_sigprocmask; 0.00 0.000000 0 2 getdents; 0.00 0.000000 0 1 getrlimit; 0.00 0.000000 0 1 arch_prctl; 0.00 0.000000 0 2 futex; 0.00 0.000000 0 1 sched_getaffinity; 0.00 0.000000 0 1 set_tid_address; 0.00 0.000000 0 1 openat; 0.00 0.000000 0 1 set_robust_list; ------ ----------- ----------- --------- --------- ----------------; 100.00 3.413940 5058042 1 total; ```. Too much time sampling?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/89
https://github.com/psi4/psi4/issues/89:657,Security,access,access,657,"``` bash; $ time psi4 --help. real 0m5.980s; user 0m1.279s; sys 0m4.693s; ```. This is done with b8a2f55b719d3. Why is psi4 so extremely slow to start? I have it both with g++/4.9.2 and icpc/2015.0.090 on multiple computers. As it is the sys time that is very high, I've used strace which tells me:. ```; % time seconds usecs/call calls errors syscall; ------ ----------- ----------- --------- --------- ----------------; 99.99 3.413450 1 5057853 times; 0.01 0.000177 4 43 mmap; 0.00 0.000082 2 37 brk; 0.00 0.000079 79 1 execve; 0.00 0.000071 4 16 close; 0.00 0.000032 2 18 fstat; 0.00 0.000018 1 30 mprotect; 0.00 0.000016 1 15 open; 0.00 0.000015 15 1 1 access; 0.00 0.000000 0 14 read; 0.00 0.000000 0 1 munmap; 0.00 0.000000 0 2 rt_sigaction; 0.00 0.000000 0 1 rt_sigprocmask; 0.00 0.000000 0 2 getdents; 0.00 0.000000 0 1 getrlimit; 0.00 0.000000 0 1 arch_prctl; 0.00 0.000000 0 2 futex; 0.00 0.000000 0 1 sched_getaffinity; 0.00 0.000000 0 1 set_tid_address; 0.00 0.000000 0 1 openat; 0.00 0.000000 0 1 set_robust_list; ------ ----------- ----------- --------- --------- ----------------; 100.00 3.413940 5058042 1 total; ```. Too much time sampling?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/89
https://github.com/psi4/psi4/issues/90:1213,Availability,Error,Error,1213,"home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1452,Availability,Error,Error,1452,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1680,Availability,Error,Error,1680,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1921,Availability,Error,Error,1921,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:2055,Availability,Error,Error,2055,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:2109,Deployability,install,install,2109,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:2151,Deployability,install,installed,2151,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:2230,Deployability,install,installing,2230,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:244,Modifiability,plugin,plugin,244,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:288,Modifiability,plugin,plugins,288,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:332,Modifiability,plugin,plugin-makefile,332,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:372,Modifiability,plugin,plugin,372,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:416,Modifiability,plugin,plugins,416,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:495,Modifiability,plugin,plugins,495,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:549,Modifiability,plugin,plugins,549,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:578,Modifiability,plugin,plugin,578,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:608,Modifiability,plugin,plugin,608,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:675,Modifiability,plugin,plugin,675,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:726,Modifiability,variab,variable,726,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:805,Modifiability,plugin,plugin,805,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:840,Modifiability,plugin,plugin,840,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:883,Modifiability,plugin,plugin,883,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:934,Modifiability,variab,variable,934,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1001,Modifiability,plugin,plugins,1001,"Using 521f06adb441ac1e2f1732eb1cd090190b409c49:. ```; make[2]: Entering directory '/home/ward/tmp/psi4release/build'; /usr/bin/cmake -E cmake_progress_report /home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1089,Modifiability,plugin,plugins,1089,"home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1162,Modifiability,plugin,plugins,1162,"home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1222,Modifiability,plugin,plugins,1222,"home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1295,Modifiability,plugin,plugins,1295,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1416,Modifiability,plugin,plugins,1416,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1570,Modifiability,plugin,plugins,1570,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1636,Modifiability,plugin,plugins,1636,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1781,Modifiability,plugin,plugins,1781,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/issues/90:1862,Modifiability,plugin,plugins,1862,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/90
https://github.com/psi4/psi4/pull/91:26,Availability,avail,available,26,The PSIDATADIR is not yet available when building these. Fix for #90,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/91
https://github.com/psi4/psi4/issues/92:234,Energy Efficiency,energy,energy,234,"Input file:. ``` python; import molutil. molecule h2o {; 0 1; O; H 1 r; H 1 r 2 104.479848; units angstrom; }. molecule beh2 {; 0 1; Be 0 0 0 ; H 0 0 r; H 0 0 -r; units angstrom; }. set basis sto-3g. beh2.r=1; molutil.activate(beh2); energy('fci'). h2o.r=1; molutil.activate(h2o); energy('fci'); ```. will calculate the FCI energy of the BeH<sub>2</sub> molecule, then do the RHF of H<sub>2</sub>O but at start of the detci module it will give:. ``` python; Traceback (most recent call last):; File ""<string>"", line 40, in <module>; File ""/home/ward/opt/share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ward/opt/share/psi/python/proc.py"", line 1975, in run_detci; psi4.detci(); RuntimeError: (matrix_element): nalp/nbet != init_nalp/nbet; ```. Seems like something should be reinitialized after activating a new molecule. Done with 521f06adb441ac1e2f1732eb1cd090190b409c49.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/92
https://github.com/psi4/psi4/issues/92:281,Energy Efficiency,energy,energy,281,"Input file:. ``` python; import molutil. molecule h2o {; 0 1; O; H 1 r; H 1 r 2 104.479848; units angstrom; }. molecule beh2 {; 0 1; Be 0 0 0 ; H 0 0 r; H 0 0 -r; units angstrom; }. set basis sto-3g. beh2.r=1; molutil.activate(beh2); energy('fci'). h2o.r=1; molutil.activate(h2o); energy('fci'); ```. will calculate the FCI energy of the BeH<sub>2</sub> molecule, then do the RHF of H<sub>2</sub>O but at start of the detci module it will give:. ``` python; Traceback (most recent call last):; File ""<string>"", line 40, in <module>; File ""/home/ward/opt/share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ward/opt/share/psi/python/proc.py"", line 1975, in run_detci; psi4.detci(); RuntimeError: (matrix_element): nalp/nbet != init_nalp/nbet; ```. Seems like something should be reinitialized after activating a new molecule. Done with 521f06adb441ac1e2f1732eb1cd090190b409c49.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/92
https://github.com/psi4/psi4/issues/92:324,Energy Efficiency,energy,energy,324,"Input file:. ``` python; import molutil. molecule h2o {; 0 1; O; H 1 r; H 1 r 2 104.479848; units angstrom; }. molecule beh2 {; 0 1; Be 0 0 0 ; H 0 0 r; H 0 0 -r; units angstrom; }. set basis sto-3g. beh2.r=1; molutil.activate(beh2); energy('fci'). h2o.r=1; molutil.activate(h2o); energy('fci'); ```. will calculate the FCI energy of the BeH<sub>2</sub> molecule, then do the RHF of H<sub>2</sub>O but at start of the detci module it will give:. ``` python; Traceback (most recent call last):; File ""<string>"", line 40, in <module>; File ""/home/ward/opt/share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ward/opt/share/psi/python/proc.py"", line 1975, in run_detci; psi4.detci(); RuntimeError: (matrix_element): nalp/nbet != init_nalp/nbet; ```. Seems like something should be reinitialized after activating a new molecule. Done with 521f06adb441ac1e2f1732eb1cd090190b409c49.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/92
https://github.com/psi4/psi4/issues/92:596,Energy Efficiency,energy,energy,596,"Input file:. ``` python; import molutil. molecule h2o {; 0 1; O; H 1 r; H 1 r 2 104.479848; units angstrom; }. molecule beh2 {; 0 1; Be 0 0 0 ; H 0 0 r; H 0 0 -r; units angstrom; }. set basis sto-3g. beh2.r=1; molutil.activate(beh2); energy('fci'). h2o.r=1; molutil.activate(h2o); energy('fci'); ```. will calculate the FCI energy of the BeH<sub>2</sub> molecule, then do the RHF of H<sub>2</sub>O but at start of the detci module it will give:. ``` python; Traceback (most recent call last):; File ""<string>"", line 40, in <module>; File ""/home/ward/opt/share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ward/opt/share/psi/python/proc.py"", line 1975, in run_detci; psi4.detci(); RuntimeError: (matrix_element): nalp/nbet != init_nalp/nbet; ```. Seems like something should be reinitialized after activating a new molecule. Done with 521f06adb441ac1e2f1732eb1cd090190b409c49.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/92
https://github.com/psi4/psi4/issues/92:616,Energy Efficiency,energy,energy,616,"Input file:. ``` python; import molutil. molecule h2o {; 0 1; O; H 1 r; H 1 r 2 104.479848; units angstrom; }. molecule beh2 {; 0 1; Be 0 0 0 ; H 0 0 r; H 0 0 -r; units angstrom; }. set basis sto-3g. beh2.r=1; molutil.activate(beh2); energy('fci'). h2o.r=1; molutil.activate(h2o); energy('fci'); ```. will calculate the FCI energy of the BeH<sub>2</sub> molecule, then do the RHF of H<sub>2</sub>O but at start of the detci module it will give:. ``` python; Traceback (most recent call last):; File ""<string>"", line 40, in <module>; File ""/home/ward/opt/share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ward/opt/share/psi/python/proc.py"", line 1975, in run_detci; psi4.detci(); RuntimeError: (matrix_element): nalp/nbet != init_nalp/nbet; ```. Seems like something should be reinitialized after activating a new molecule. Done with 521f06adb441ac1e2f1732eb1cd090190b409c49.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/92
https://github.com/psi4/psi4/issues/94:1067,Availability,error,error,1067,"Dear Pis4 developers. I've got in issue when link psi4 binary:. ```; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tempnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; builtin_converters.cpp:(.text+0x1286): undefined reference to `PyUnicodeUCS4_AsWideChar'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; builtin_converters.cpp:(.text+0x455): undefined reference to `PyUnicodeUCS4_FromEncodedObject'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Ошибка 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; make: *** [all] Ошибка 2; ```. I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x. Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; http://packages.ubuntu.com/trusty/libboost-all-dev. My python interpreter support UCS-4. python -c ""import sys; print(sys.maxunicode)""; returns 1114111. python3 -c ""import sys; print(sys.maxunicode)""; returns 1114111. Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; in particular, I only need to generate MOLDEN file from SCF calculations. With respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/94
https://github.com/psi4/psi4/issues/94:1339,Availability,avail,available,1339,"Dear Pis4 developers. I've got in issue when link psi4 binary:. ```; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tempnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; builtin_converters.cpp:(.text+0x1286): undefined reference to `PyUnicodeUCS4_AsWideChar'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; builtin_converters.cpp:(.text+0x455): undefined reference to `PyUnicodeUCS4_FromEncodedObject'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Ошибка 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; make: *** [all] Ошибка 2; ```. I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x. Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; http://packages.ubuntu.com/trusty/libboost-all-dev. My python interpreter support UCS-4. python -c ""import sys; print(sys.maxunicode)""; returns 1114111. python3 -c ""import sys; print(sys.maxunicode)""; returns 1114111. Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; in particular, I only need to generate MOLDEN file from SCF calculations. With respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/94
https://github.com/psi4/psi4/issues/94:1267,Deployability,install,installed,1267,"Dear Pis4 developers. I've got in issue when link psi4 binary:. ```; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tempnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; builtin_converters.cpp:(.text+0x1286): undefined reference to `PyUnicodeUCS4_AsWideChar'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; builtin_converters.cpp:(.text+0x455): undefined reference to `PyUnicodeUCS4_FromEncodedObject'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Ошибка 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; make: *** [all] Ошибка 2; ```. I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x. Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; http://packages.ubuntu.com/trusty/libboost-all-dev. My python interpreter support UCS-4. python -c ""import sys; print(sys.maxunicode)""; returns 1114111. python3 -c ""import sys; print(sys.maxunicode)""; returns 1114111. Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; in particular, I only need to generate MOLDEN file from SCF calculations. With respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/94
https://github.com/psi4/psi4/issues/94:1729,Safety,avoid,avoid,1729,"Dear Pis4 developers. I've got in issue when link psi4 binary:. ```; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tempnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; builtin_converters.cpp:(.text+0x1286): undefined reference to `PyUnicodeUCS4_AsWideChar'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; builtin_converters.cpp:(.text+0x455): undefined reference to `PyUnicodeUCS4_FromEncodedObject'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Ошибка 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; make: *** [all] Ошибка 2; ```. I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x. Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; http://packages.ubuntu.com/trusty/libboost-all-dev. My python interpreter support UCS-4. python -c ""import sys; print(sys.maxunicode)""; returns 1114111. python3 -c ""import sys; print(sys.maxunicode)""; returns 1114111. Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; in particular, I only need to generate MOLDEN file from SCF calculations. With respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/94
https://github.com/psi4/psi4/issues/96:172,Availability,error,error,172,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/96:198,Availability,error,error,198,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/96:26,Modifiability,plugin,plugin,26,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/96:93,Modifiability,plugin,plugin,93,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/96:238,Modifiability,plugin,plugins,238,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/96:462,Modifiability,plugin,plugins,462,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/issues/96:1368,Modifiability,plugin,plugin,1368,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/96
https://github.com/psi4/psi4/pull/97:225,Deployability,patch,patch,225,"On some systems, the default temp location should not be `/tmp`; but it is set by either `$TMPDIR`, `$TEMP` or `$TMP` (commenly done on HPC; systems, where the temp location may be somthing special, a ssd for example).; This patch first checks those 3 environment variables; and uses its value when set. It falls back to `/tmp` when; nothing is set. `std::getenv` needs C++11 to be thread safe.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/97
https://github.com/psi4/psi4/pull/97:264,Modifiability,variab,variables,264,"On some systems, the default temp location should not be `/tmp`; but it is set by either `$TMPDIR`, `$TEMP` or `$TMP` (commenly done on HPC; systems, where the temp location may be somthing special, a ssd for example).; This patch first checks those 3 environment variables; and uses its value when set. It falls back to `/tmp` when; nothing is set. `std::getenv` needs C++11 to be thread safe.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/97
https://github.com/psi4/psi4/pull/97:389,Safety,safe,safe,389,"On some systems, the default temp location should not be `/tmp`; but it is set by either `$TMPDIR`, `$TEMP` or `$TMP` (commenly done on HPC; systems, where the temp location may be somthing special, a ssd for example).; This patch first checks those 3 environment variables; and uses its value when set. It falls back to `/tmp` when; nothing is set. `std::getenv` needs C++11 to be thread safe.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/97
https://github.com/psi4/psi4/issues/102:9,Usability,clear,clear,9,"It's not clear to me if it's possible to start from a previous calculated rhf result to do for example ccsd(t). Can this be done? If I keep the scratch dir, and use the `-r` parameters with `guess read`, it will start from the rhf solution of the previous run, but it will still do the rhf calculation and integral transformations. I would like it to directly start with the ccsd(t) calculation, and not redo the rhf calculation. Is this currently possible?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/102
https://github.com/psi4/psi4/issues/103:22,Performance,optimiz,optimize,22,"The driver recognizes optimize('scf') has UHF analytic gradients, but not optimize('uhf'). Make sure the driver can catch other ways of specifying the same computation, like optimize('uhf') or optimize('hf') (or else warn the user about the preferred way to specify things).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/103
https://github.com/psi4/psi4/issues/103:74,Performance,optimiz,optimize,74,"The driver recognizes optimize('scf') has UHF analytic gradients, but not optimize('uhf'). Make sure the driver can catch other ways of specifying the same computation, like optimize('uhf') or optimize('hf') (or else warn the user about the preferred way to specify things).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/103
https://github.com/psi4/psi4/issues/103:174,Performance,optimiz,optimize,174,"The driver recognizes optimize('scf') has UHF analytic gradients, but not optimize('uhf'). Make sure the driver can catch other ways of specifying the same computation, like optimize('uhf') or optimize('hf') (or else warn the user about the preferred way to specify things).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/103
https://github.com/psi4/psi4/issues/103:193,Performance,optimiz,optimize,193,"The driver recognizes optimize('scf') has UHF analytic gradients, but not optimize('uhf'). Make sure the driver can catch other ways of specifying the same computation, like optimize('uhf') or optimize('hf') (or else warn the user about the preferred way to specify things).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/103
https://github.com/psi4/psi4/issues/106:96,Availability,avail,available,96,"Footnote [2] of the capabilities table in the manual is a little unclear about what methods are available:. RHF and UHF reference are available, however the latter one should be; requsted from DFOCC module. DF-MP2 is recommended as a faster; alternative. Update and revise manual. Check with Ugur about ROHF. Make appropriate defaults.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/106
https://github.com/psi4/psi4/issues/106:134,Availability,avail,available,134,"Footnote [2] of the capabilities table in the manual is a little unclear about what methods are available:. RHF and UHF reference are available, however the latter one should be; requsted from DFOCC module. DF-MP2 is recommended as a faster; alternative. Update and revise manual. Check with Ugur about ROHF. Make appropriate defaults.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/106
https://github.com/psi4/psi4/issues/106:255,Deployability,Update,Update,255,"Footnote [2] of the capabilities table in the manual is a little unclear about what methods are available:. RHF and UHF reference are available, however the latter one should be; requsted from DFOCC module. DF-MP2 is recommended as a faster; alternative. Update and revise manual. Check with Ugur about ROHF. Make appropriate defaults.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/106
https://github.com/psi4/psi4/issues/107:38,Energy Efficiency,energy,energy,38,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/107:106,Energy Efficiency,energy,energy,106,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/107:438,Integrability,rout,route,438,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/107:661,Integrability,rout,route,661,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/107:94,Testability,test,test,94,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/107:741,Testability,test,test,741,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/107:845,Testability,stub,stubs,845,"for df-mp2, these are the cases:; uhf energy: good, this is is Rob's code (we're pretty sure; test); rohf energy: we think this may be in Rob's code, but not verified vs other codes ; uhf grad: we think this may be in Rob's code, but not verified vs other codes ; rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2 w/o subsequent opt. ticket task: verify the above with the code and with the authors. if needed, re-route in driver (see mp2_type as example in `proc.py`. If anything looks to hard or want to defer, create a new ticket for it, and do all you can to close out this one. After discussion below, consolidated tasks:; - [x] re-route uhf grad through Ugur's code; - [x] make rohf grad fail gracefully; - [x] test all four cases; - [x] for uhf, make sure findif of Rob == Ugur; - [ ] comment `dfmp2/corr_grad.cc` stubs according to below",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/107
https://github.com/psi4/psi4/issues/108:46,Testability,test,test,46,"Does every major feature have a corresponding test case? For every reference on that capabilities table (http://psicode.org/psi4manual/master/introduction.html#capabilities)?. To approach this ticket, you can either:; - Go through the process above and notate here missing test case combinations.; - Or, find missing test case combinations in the course of other work; - Or, take a block of missing test case combinations, make another ticket of them, remove them from this list, and actually make the test cases and close the new ticket.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/108
https://github.com/psi4/psi4/issues/108:273,Testability,test,test,273,"Does every major feature have a corresponding test case? For every reference on that capabilities table (http://psicode.org/psi4manual/master/introduction.html#capabilities)?. To approach this ticket, you can either:; - Go through the process above and notate here missing test case combinations.; - Or, find missing test case combinations in the course of other work; - Or, take a block of missing test case combinations, make another ticket of them, remove them from this list, and actually make the test cases and close the new ticket.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/108
https://github.com/psi4/psi4/issues/108:317,Testability,test,test,317,"Does every major feature have a corresponding test case? For every reference on that capabilities table (http://psicode.org/psi4manual/master/introduction.html#capabilities)?. To approach this ticket, you can either:; - Go through the process above and notate here missing test case combinations.; - Or, find missing test case combinations in the course of other work; - Or, take a block of missing test case combinations, make another ticket of them, remove them from this list, and actually make the test cases and close the new ticket.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/108
https://github.com/psi4/psi4/issues/108:399,Testability,test,test,399,"Does every major feature have a corresponding test case? For every reference on that capabilities table (http://psicode.org/psi4manual/master/introduction.html#capabilities)?. To approach this ticket, you can either:; - Go through the process above and notate here missing test case combinations.; - Or, find missing test case combinations in the course of other work; - Or, take a block of missing test case combinations, make another ticket of them, remove them from this list, and actually make the test cases and close the new ticket.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/108
https://github.com/psi4/psi4/issues/108:502,Testability,test,test,502,"Does every major feature have a corresponding test case? For every reference on that capabilities table (http://psicode.org/psi4manual/master/introduction.html#capabilities)?. To approach this ticket, you can either:; - Go through the process above and notate here missing test case combinations.; - Or, find missing test case combinations in the course of other work; - Or, take a block of missing test case combinations, make another ticket of them, remove them from this list, and actually make the test cases and close the new ticket.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/108
https://github.com/psi4/psi4/issues/109:1110,Availability,echo,echo,1110," separate sections so that we're not suggesting psi4rc is the best way to set your scratch (pretty much, PSI_SCRATCH envvar is). Use `make sphinxmini` if you need to test the docs build.; - [x] In docs, show example csh/bash in the PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the qu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/109:1969,Availability,echo,echo,1969,"he PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the questions in the https://github.com/psi4/psi4/wiki/0_FAQ.; - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/109:1715,Deployability,install,install,1715,"he PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the questions in the https://github.com/psi4/psi4/wiki/0_FAQ.; - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/109:114,Modifiability,Config,Configure,114,"- [x] At the end of the detailed build directions in https://github.com/psi4/psi4/wiki/3_Building, add a step `7. Configure Runtime` directing user to set scratch and otherwise configure environment (e.g., add to path).; - [x] In docs/sphinxman/source/external.rst, break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch (pretty much, PSI_SCRATCH envvar is). Use `make sphinxmini` if you need to test the docs build.; - [x] In docs, show example csh/bash in the PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/109:177,Modifiability,config,configure,177,"- [x] At the end of the detailed build directions in https://github.com/psi4/psi4/wiki/3_Building, add a step `7. Configure Runtime` directing user to set scratch and otherwise configure environment (e.g., add to path).; - [x] In docs/sphinxman/source/external.rst, break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch (pretty much, PSI_SCRATCH envvar is). Use `make sphinxmini` if you need to test the docs build.; - [x] In docs, show example csh/bash in the PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/109:2195,Performance,queue,queue,2195,"he PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the questions in the https://github.com/psi4/psi4/wiki/0_FAQ.; - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/109:484,Testability,test,test,484,"- [x] At the end of the detailed build directions in https://github.com/psi4/psi4/wiki/3_Building, add a step `7. Configure Runtime` directing user to set scratch and otherwise configure environment (e.g., add to path).; - [x] In docs/sphinxman/source/external.rst, break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch (pretty much, PSI_SCRATCH envvar is). Use `make sphinxmini` if you need to test the docs build.; - [x] In docs, show example csh/bash in the PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/109
https://github.com/psi4/psi4/issues/110:305,Deployability,install,install,305,"Once upon a time, Psi4 was made python3 compatible. I haven't heard of it being tested since. Make it so once more. potentially helpful tools:; - `conda create -n pyconv python=3.4` if you need a python3 environment; - http://python-modernize.readthedocs.org/en/latest/ looks like a helpful project. `pip install modernize` then run on each file. Driver is a sad mix of `print vari` and `print(vari)`. Feel free to import latter from future and standardize. But leave qcdb alone. It has its own ticket and repository.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/110
https://github.com/psi4/psi4/issues/110:80,Testability,test,tested,80,"Once upon a time, Psi4 was made python3 compatible. I haven't heard of it being tested since. Make it so once more. potentially helpful tools:; - `conda create -n pyconv python=3.4` if you need a python3 environment; - http://python-modernize.readthedocs.org/en/latest/ looks like a helpful project. `pip install modernize` then run on each file. Driver is a sad mix of `print vari` and `print(vari)`. Feel free to import latter from future and standardize. But leave qcdb alone. It has its own ticket and repository.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/110
https://github.com/psi4/psi4/issues/111:216,Integrability,depend,dependencies,216,"After https://github.com/psi4/psi4/issues/86 and https://github.com/psi4/psi4public/issues/110 settled, ; - [ ] create conda package with python 3.4. Should be as simple as changing the `conda-recipe/psi4/meta.yaml` dependencies.; - [ ] add to Psinet's duties by modifying/copying stuff in nightly folder so package built nightly and results sent to testboard",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/111
https://github.com/psi4/psi4/issues/111:350,Testability,test,testboard,350,"After https://github.com/psi4/psi4/issues/86 and https://github.com/psi4/psi4public/issues/110 settled, ; - [ ] create conda package with python 3.4. Should be as simple as changing the `conda-recipe/psi4/meta.yaml` dependencies.; - [ ] add to Psinet's duties by modifying/copying stuff in nightly folder so package built nightly and results sent to testboard",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/111
https://github.com/psi4/psi4/issues/111:163,Usability,simpl,simple,163,"After https://github.com/psi4/psi4/issues/86 and https://github.com/psi4/psi4public/issues/110 settled, ; - [ ] create conda package with python 3.4. Should be as simple as changing the `conda-recipe/psi4/meta.yaml` dependencies.; - [ ] add to Psinet's duties by modifying/copying stuff in nightly folder so package built nightly and results sent to testboard",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/111
https://github.com/psi4/psi4/issues/112:600,Availability,down,down,600,"- [x] need to redirect docs latest and master on sirius to on psicode. Many ways how here: https://css-tricks.com/redirect-web-page/ . Perhaps Apache best? I know that's installed. Want to redirect rather than shutdown so that google and co. don't reset the popularity ratings.; - [x] need to tarball the trac website and stuff it somewhere. Not everything was transferred to the wiki, but most everything _useful_ migrated. Should sirius be decommissioned someday,; - [x] tarball up all the old (beta2 onwards) docs builds, establish them on godaddy or something, and relink on psicode.; - [x] shut down trac page",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/112
https://github.com/psi4/psi4/issues/112:170,Deployability,install,installed,170,"- [x] need to redirect docs latest and master on sirius to on psicode. Many ways how here: https://css-tricks.com/redirect-web-page/ . Perhaps Apache best? I know that's installed. Want to redirect rather than shutdown so that google and co. don't reset the popularity ratings.; - [x] need to tarball the trac website and stuff it somewhere. Not everything was transferred to the wiki, but most everything _useful_ migrated. Should sirius be decommissioned someday,; - [x] tarball up all the old (beta2 onwards) docs builds, establish them on godaddy or something, and relink on psicode.; - [x] shut down trac page",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/112
https://github.com/psi4/psi4/issues/113:114,Safety,avoid,avoid,114,"When running a `cp()` calculation, file 97 is left behind. It needs to be preserved at some points in the calc to avoid recomputation, but it shouldn't persist beyond the run.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/113
https://github.com/psi4/psi4/issues/114:901,Deployability,toggle,toggle,901,"A molecule like the one below with charged monoA and neutral monoB gets confused when monoB ghosted b/c charge (interpreted as ""overall charge"") applied to each of monomers, but no electrons in monoB to even up count. This has bitten at least four users and developers and been declared to be bug, not feature. This is not a beginner's ticket, as it involves the dreaded `Molecule::create_molecule_from_string` function, but it needs to be fixed. I'd recc. writing the test cases first. ```; molecule mol {; units Angstrom; no_com; no_reorient; -1 1; C 0.033732944853 -1.125511797114 1.580406987928; C 0.784732944853 -1.165511797114 0.291406987928; O 0.666732944853 -0.174511797114 -0.463593012072; O 1.521732944853 -2.153511797114 0.048406987928; H -1.041267055147 -1.075511797114 1.390406987928; H 0.317732944853 -0.230511797114 2.136406987928; H 0.264722944853 -2.016378797114 2.182900987928; -- # toggle this line to comment to fix; #0 1; Gh(C) -2.103267055147 2.116488202886 -0.821593012072; Gh(O) -0.712267055147 2.192488202886 -0.525593012072; Gh(H) -0.329267055147 1.293488202886 -0.603593012072; Gh(H) -2.471267055147 1.129488202886 -0.531593012072; Gh(H) -2.632087055147 2.887778202886 -0.242406012072; Gh(H) -2.239007055147 2.240855802886 -1.906078012072. }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/114
https://github.com/psi4/psi4/issues/114:35,Energy Efficiency,charge,charged,35,"A molecule like the one below with charged monoA and neutral monoB gets confused when monoB ghosted b/c charge (interpreted as ""overall charge"") applied to each of monomers, but no electrons in monoB to even up count. This has bitten at least four users and developers and been declared to be bug, not feature. This is not a beginner's ticket, as it involves the dreaded `Molecule::create_molecule_from_string` function, but it needs to be fixed. I'd recc. writing the test cases first. ```; molecule mol {; units Angstrom; no_com; no_reorient; -1 1; C 0.033732944853 -1.125511797114 1.580406987928; C 0.784732944853 -1.165511797114 0.291406987928; O 0.666732944853 -0.174511797114 -0.463593012072; O 1.521732944853 -2.153511797114 0.048406987928; H -1.041267055147 -1.075511797114 1.390406987928; H 0.317732944853 -0.230511797114 2.136406987928; H 0.264722944853 -2.016378797114 2.182900987928; -- # toggle this line to comment to fix; #0 1; Gh(C) -2.103267055147 2.116488202886 -0.821593012072; Gh(O) -0.712267055147 2.192488202886 -0.525593012072; Gh(H) -0.329267055147 1.293488202886 -0.603593012072; Gh(H) -2.471267055147 1.129488202886 -0.531593012072; Gh(H) -2.632087055147 2.887778202886 -0.242406012072; Gh(H) -2.239007055147 2.240855802886 -1.906078012072. }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/114
https://github.com/psi4/psi4/issues/114:104,Energy Efficiency,charge,charge,104,"A molecule like the one below with charged monoA and neutral monoB gets confused when monoB ghosted b/c charge (interpreted as ""overall charge"") applied to each of monomers, but no electrons in monoB to even up count. This has bitten at least four users and developers and been declared to be bug, not feature. This is not a beginner's ticket, as it involves the dreaded `Molecule::create_molecule_from_string` function, but it needs to be fixed. I'd recc. writing the test cases first. ```; molecule mol {; units Angstrom; no_com; no_reorient; -1 1; C 0.033732944853 -1.125511797114 1.580406987928; C 0.784732944853 -1.165511797114 0.291406987928; O 0.666732944853 -0.174511797114 -0.463593012072; O 1.521732944853 -2.153511797114 0.048406987928; H -1.041267055147 -1.075511797114 1.390406987928; H 0.317732944853 -0.230511797114 2.136406987928; H 0.264722944853 -2.016378797114 2.182900987928; -- # toggle this line to comment to fix; #0 1; Gh(C) -2.103267055147 2.116488202886 -0.821593012072; Gh(O) -0.712267055147 2.192488202886 -0.525593012072; Gh(H) -0.329267055147 1.293488202886 -0.603593012072; Gh(H) -2.471267055147 1.129488202886 -0.531593012072; Gh(H) -2.632087055147 2.887778202886 -0.242406012072; Gh(H) -2.239007055147 2.240855802886 -1.906078012072. }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/114
https://github.com/psi4/psi4/issues/114:136,Energy Efficiency,charge,charge,136,"A molecule like the one below with charged monoA and neutral monoB gets confused when monoB ghosted b/c charge (interpreted as ""overall charge"") applied to each of monomers, but no electrons in monoB to even up count. This has bitten at least four users and developers and been declared to be bug, not feature. This is not a beginner's ticket, as it involves the dreaded `Molecule::create_molecule_from_string` function, but it needs to be fixed. I'd recc. writing the test cases first. ```; molecule mol {; units Angstrom; no_com; no_reorient; -1 1; C 0.033732944853 -1.125511797114 1.580406987928; C 0.784732944853 -1.165511797114 0.291406987928; O 0.666732944853 -0.174511797114 -0.463593012072; O 1.521732944853 -2.153511797114 0.048406987928; H -1.041267055147 -1.075511797114 1.390406987928; H 0.317732944853 -0.230511797114 2.136406987928; H 0.264722944853 -2.016378797114 2.182900987928; -- # toggle this line to comment to fix; #0 1; Gh(C) -2.103267055147 2.116488202886 -0.821593012072; Gh(O) -0.712267055147 2.192488202886 -0.525593012072; Gh(H) -0.329267055147 1.293488202886 -0.603593012072; Gh(H) -2.471267055147 1.129488202886 -0.531593012072; Gh(H) -2.632087055147 2.887778202886 -0.242406012072; Gh(H) -2.239007055147 2.240855802886 -1.906078012072. }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/114
https://github.com/psi4/psi4/issues/114:469,Testability,test,test,469,"A molecule like the one below with charged monoA and neutral monoB gets confused when monoB ghosted b/c charge (interpreted as ""overall charge"") applied to each of monomers, but no electrons in monoB to even up count. This has bitten at least four users and developers and been declared to be bug, not feature. This is not a beginner's ticket, as it involves the dreaded `Molecule::create_molecule_from_string` function, but it needs to be fixed. I'd recc. writing the test cases first. ```; molecule mol {; units Angstrom; no_com; no_reorient; -1 1; C 0.033732944853 -1.125511797114 1.580406987928; C 0.784732944853 -1.165511797114 0.291406987928; O 0.666732944853 -0.174511797114 -0.463593012072; O 1.521732944853 -2.153511797114 0.048406987928; H -1.041267055147 -1.075511797114 1.390406987928; H 0.317732944853 -0.230511797114 2.136406987928; H 0.264722944853 -2.016378797114 2.182900987928; -- # toggle this line to comment to fix; #0 1; Gh(C) -2.103267055147 2.116488202886 -0.821593012072; Gh(O) -0.712267055147 2.192488202886 -0.525593012072; Gh(H) -0.329267055147 1.293488202886 -0.603593012072; Gh(H) -2.471267055147 1.129488202886 -0.531593012072; Gh(H) -2.632087055147 2.887778202886 -0.242406012072; Gh(H) -2.239007055147 2.240855802886 -1.906078012072. }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/114
https://github.com/psi4/psi4/issues/115:470,Availability,repair,repair,470,"Thanks to @andysim, we're very close to efp-scf energies in working order. Last remaining order of business is efp-scf with spherical basis sets. Once again, Andy fixed this, but now it's breaking later in the code. The tests/libefp/qmefp-moldomains part 5 should fail at compare_values (b/c the value is for puream false) but it should complete sucessfully instead of segfaulting as it does at present. Needs a gdb analysis to find where in the scf it's breaking, then repair from there. At one point, q-chem didn't do puream true basis sets with efp at all. If that limitation is no longer in place, would be great to get a comparison value from q-chem and add that test case.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/115
https://github.com/psi4/psi4/issues/115:220,Testability,test,tests,220,"Thanks to @andysim, we're very close to efp-scf energies in working order. Last remaining order of business is efp-scf with spherical basis sets. Once again, Andy fixed this, but now it's breaking later in the code. The tests/libefp/qmefp-moldomains part 5 should fail at compare_values (b/c the value is for puream false) but it should complete sucessfully instead of segfaulting as it does at present. Needs a gdb analysis to find where in the scf it's breaking, then repair from there. At one point, q-chem didn't do puream true basis sets with efp at all. If that limitation is no longer in place, would be great to get a comparison value from q-chem and add that test case.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/115
https://github.com/psi4/psi4/issues/115:668,Testability,test,test,668,"Thanks to @andysim, we're very close to efp-scf energies in working order. Last remaining order of business is efp-scf with spherical basis sets. Once again, Andy fixed this, but now it's breaking later in the code. The tests/libefp/qmefp-moldomains part 5 should fail at compare_values (b/c the value is for puream false) but it should complete sucessfully instead of segfaulting as it does at present. Needs a gdb analysis to find where in the scf it's breaking, then repair from there. At one point, q-chem didn't do puream true basis sets with efp at all. If that limitation is no longer in place, would be great to get a comparison value from q-chem and add that test case.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/115
https://github.com/psi4/psi4/issues/116:98,Testability,test,test,98,"Francesco recently checked in Rob's cube file generation code. Make sure there is a corresponding test case (maybe it's more of a sample, since not sure how to test that ... can at least make sure it runs, anyway). Also make sure there is documentation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/116
https://github.com/psi4/psi4/issues/116:160,Testability,test,test,160,"Francesco recently checked in Rob's cube file generation code. Make sure there is a corresponding test case (maybe it's more of a sample, since not sure how to test that ... can at least make sure it runs, anyway). Also make sure there is documentation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/116
https://github.com/psi4/psi4/issues/117:497,Energy Efficiency,adapt,adapt,497,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/117:598,Energy Efficiency,energy,energy,598,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/117:764,Energy Efficiency,adapt,adapt,764,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/117:46,Integrability,wrap,wrap,46,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/117:497,Modifiability,adapt,adapt,497,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/117:764,Modifiability,adapt,adapt,764,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/117:456,Testability,test,test,456,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/117
https://github.com/psi4/psi4/issues/118:984,Energy Efficiency,energy,energy,984,"Follows from discussion in https://github.com/psi4/psi4public/issues/103 and a bit in https://github.com/psi4/psi4private/issues/101. We'd like reference `rhf`, `rohf`, etc. to behave exactly as they do at present, that is cry foul if inappropriate for active molecule or unavailable for the method at hand. But we'd like a new value `auto` for `reference` keyword that is the default and switches between rhf and uhf>rohf as appropriate, depending solely on the molecule. . Exactly how to this this is up for discussion. It's most appropriately done at activate-molecule-time, but don't have the machinery to track and undo that setting in the activalte molecule code. Maybe a generic function that's called in each run_\* in proc.py with inputs of the most restrictive reference setting among the called modules (e.g., rhf/rohf for run_detci that traverses scf _and_ detci modules). Then the generic function sets the reference to something legit (e.g., `rhf`) for the scope of the energy/grad/etc call. And the optstash object in each of the proc.py routines can be used to undo the driver-level reference setting and return to the user or default setting.; - [ ] implement above. break this into smaller bullets as needed.; - [ ] also, warn in output that reference changing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/118:439,Integrability,depend,depending,439,"Follows from discussion in https://github.com/psi4/psi4public/issues/103 and a bit in https://github.com/psi4/psi4private/issues/101. We'd like reference `rhf`, `rohf`, etc. to behave exactly as they do at present, that is cry foul if inappropriate for active molecule or unavailable for the method at hand. But we'd like a new value `auto` for `reference` keyword that is the default and switches between rhf and uhf>rohf as appropriate, depending solely on the molecule. . Exactly how to this this is up for discussion. It's most appropriately done at activate-molecule-time, but don't have the machinery to track and undo that setting in the activalte molecule code. Maybe a generic function that's called in each run_\* in proc.py with inputs of the most restrictive reference setting among the called modules (e.g., rhf/rohf for run_detci that traverses scf _and_ detci modules). Then the generic function sets the reference to something legit (e.g., `rhf`) for the scope of the energy/grad/etc call. And the optstash object in each of the proc.py routines can be used to undo the driver-level reference setting and return to the user or default setting.; - [ ] implement above. break this into smaller bullets as needed.; - [ ] also, warn in output that reference changing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/118:1053,Integrability,rout,routines,1053,"Follows from discussion in https://github.com/psi4/psi4public/issues/103 and a bit in https://github.com/psi4/psi4private/issues/101. We'd like reference `rhf`, `rohf`, etc. to behave exactly as they do at present, that is cry foul if inappropriate for active molecule or unavailable for the method at hand. But we'd like a new value `auto` for `reference` keyword that is the default and switches between rhf and uhf>rohf as appropriate, depending solely on the molecule. . Exactly how to this this is up for discussion. It's most appropriately done at activate-molecule-time, but don't have the machinery to track and undo that setting in the activalte molecule code. Maybe a generic function that's called in each run_\* in proc.py with inputs of the most restrictive reference setting among the called modules (e.g., rhf/rohf for run_detci that traverses scf _and_ detci modules). Then the generic function sets the reference to something legit (e.g., `rhf`) for the scope of the energy/grad/etc call. And the optstash object in each of the proc.py routines can be used to undo the driver-level reference setting and return to the user or default setting.; - [ ] implement above. break this into smaller bullets as needed.; - [ ] also, warn in output that reference changing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/118:620,Usability,undo,undo,620,"Follows from discussion in https://github.com/psi4/psi4public/issues/103 and a bit in https://github.com/psi4/psi4private/issues/101. We'd like reference `rhf`, `rohf`, etc. to behave exactly as they do at present, that is cry foul if inappropriate for active molecule or unavailable for the method at hand. But we'd like a new value `auto` for `reference` keyword that is the default and switches between rhf and uhf>rohf as appropriate, depending solely on the molecule. . Exactly how to this this is up for discussion. It's most appropriately done at activate-molecule-time, but don't have the machinery to track and undo that setting in the activalte molecule code. Maybe a generic function that's called in each run_\* in proc.py with inputs of the most restrictive reference setting among the called modules (e.g., rhf/rohf for run_detci that traverses scf _and_ detci modules). Then the generic function sets the reference to something legit (e.g., `rhf`) for the scope of the energy/grad/etc call. And the optstash object in each of the proc.py routines can be used to undo the driver-level reference setting and return to the user or default setting.; - [ ] implement above. break this into smaller bullets as needed.; - [ ] also, warn in output that reference changing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/118:1077,Usability,undo,undo,1077,"Follows from discussion in https://github.com/psi4/psi4public/issues/103 and a bit in https://github.com/psi4/psi4private/issues/101. We'd like reference `rhf`, `rohf`, etc. to behave exactly as they do at present, that is cry foul if inappropriate for active molecule or unavailable for the method at hand. But we'd like a new value `auto` for `reference` keyword that is the default and switches between rhf and uhf>rohf as appropriate, depending solely on the molecule. . Exactly how to this this is up for discussion. It's most appropriately done at activate-molecule-time, but don't have the machinery to track and undo that setting in the activalte molecule code. Maybe a generic function that's called in each run_\* in proc.py with inputs of the most restrictive reference setting among the called modules (e.g., rhf/rohf for run_detci that traverses scf _and_ detci modules). Then the generic function sets the reference to something legit (e.g., `rhf`) for the scope of the energy/grad/etc call. And the optstash object in each of the proc.py routines can be used to undo the driver-level reference setting and return to the user or default setting.; - [ ] implement above. break this into smaller bullets as needed.; - [ ] also, warn in output that reference changing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/118
https://github.com/psi4/psi4/issues/129:164,Safety,safe,safer,164,"This has been broken for years. Test if it's still just the two points in the long array of things checked. If it's still that, perhaps consult @robparrish whether safer to drop the appearance of the frac code being present or just comment out the broken numbers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/129
https://github.com/psi4/psi4/issues/129:32,Testability,Test,Test,32,"This has been broken for years. Test if it's still just the two points in the long array of things checked. If it's still that, perhaps consult @robparrish whether safer to drop the appearance of the frac code being present or just comment out the broken numbers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/129
https://github.com/psi4/psi4/issues/138:193,Energy Efficiency,Energy,Energy,193,## This test case dumps a core file and crashes on a RHEL7 machine. ```; No. Vib. Freq. (cm^-1) Vib. Temp. (K); 1 1689.930 2431.429; 2 3820.654 5497.063; 3 3926.512 5649.369. Component Thermal Energy Cv S; kcal/mol cal/(mol K) cal/(mol K); Electronic 0.000 0.000 0.000; Translational 0.889 2.981 34.608; Rotational 0.889 2.981 10.521; Vibrational 13.492 0.038 0.005; Total 15.270 6.000 45.135. cm^(-1) au kcal/mol; Zero-point energy 4718.5485 0.02149929 13.4910. Energies in Hartree/particle: Correction Total; Energy (0 K) 0.02149929 -76.21997075; Internal energy 0.02433406 -76.21713598; Enthalpy 0.02527824 -76.21619180; Gibbs Free Energy 0.00383333 -76.23763671; ```. The computed vector. # #; Irrep: 1; 1: 1689.9300844; 2: 3820.6544533; 3: 3926.5124944. The reference vector. # #; Irrep: 1; 1: 1689.9409000; 2: 3820.4305000; 3: 3926.3098000,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/138:426,Energy Efficiency,energy,energy,426,## This test case dumps a core file and crashes on a RHEL7 machine. ```; No. Vib. Freq. (cm^-1) Vib. Temp. (K); 1 1689.930 2431.429; 2 3820.654 5497.063; 3 3926.512 5649.369. Component Thermal Energy Cv S; kcal/mol cal/(mol K) cal/(mol K); Electronic 0.000 0.000 0.000; Translational 0.889 2.981 34.608; Rotational 0.889 2.981 10.521; Vibrational 13.492 0.038 0.005; Total 15.270 6.000 45.135. cm^(-1) au kcal/mol; Zero-point energy 4718.5485 0.02149929 13.4910. Energies in Hartree/particle: Correction Total; Energy (0 K) 0.02149929 -76.21997075; Internal energy 0.02433406 -76.21713598; Enthalpy 0.02527824 -76.21619180; Gibbs Free Energy 0.00383333 -76.23763671; ```. The computed vector. # #; Irrep: 1; 1: 1689.9300844; 2: 3820.6544533; 3: 3926.5124944. The reference vector. # #; Irrep: 1; 1: 1689.9409000; 2: 3820.4305000; 3: 3926.3098000,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/138:511,Energy Efficiency,Energy,Energy,511,## This test case dumps a core file and crashes on a RHEL7 machine. ```; No. Vib. Freq. (cm^-1) Vib. Temp. (K); 1 1689.930 2431.429; 2 3820.654 5497.063; 3 3926.512 5649.369. Component Thermal Energy Cv S; kcal/mol cal/(mol K) cal/(mol K); Electronic 0.000 0.000 0.000; Translational 0.889 2.981 34.608; Rotational 0.889 2.981 10.521; Vibrational 13.492 0.038 0.005; Total 15.270 6.000 45.135. cm^(-1) au kcal/mol; Zero-point energy 4718.5485 0.02149929 13.4910. Energies in Hartree/particle: Correction Total; Energy (0 K) 0.02149929 -76.21997075; Internal energy 0.02433406 -76.21713598; Enthalpy 0.02527824 -76.21619180; Gibbs Free Energy 0.00383333 -76.23763671; ```. The computed vector. # #; Irrep: 1; 1: 1689.9300844; 2: 3820.6544533; 3: 3926.5124944. The reference vector. # #; Irrep: 1; 1: 1689.9409000; 2: 3820.4305000; 3: 3926.3098000,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/138:558,Energy Efficiency,energy,energy,558,## This test case dumps a core file and crashes on a RHEL7 machine. ```; No. Vib. Freq. (cm^-1) Vib. Temp. (K); 1 1689.930 2431.429; 2 3820.654 5497.063; 3 3926.512 5649.369. Component Thermal Energy Cv S; kcal/mol cal/(mol K) cal/(mol K); Electronic 0.000 0.000 0.000; Translational 0.889 2.981 34.608; Rotational 0.889 2.981 10.521; Vibrational 13.492 0.038 0.005; Total 15.270 6.000 45.135. cm^(-1) au kcal/mol; Zero-point energy 4718.5485 0.02149929 13.4910. Energies in Hartree/particle: Correction Total; Energy (0 K) 0.02149929 -76.21997075; Internal energy 0.02433406 -76.21713598; Enthalpy 0.02527824 -76.21619180; Gibbs Free Energy 0.00383333 -76.23763671; ```. The computed vector. # #; Irrep: 1; 1: 1689.9300844; 2: 3820.6544533; 3: 3926.5124944. The reference vector. # #; Irrep: 1; 1: 1689.9409000; 2: 3820.4305000; 3: 3926.3098000,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/138:635,Energy Efficiency,Energy,Energy,635,## This test case dumps a core file and crashes on a RHEL7 machine. ```; No. Vib. Freq. (cm^-1) Vib. Temp. (K); 1 1689.930 2431.429; 2 3820.654 5497.063; 3 3926.512 5649.369. Component Thermal Energy Cv S; kcal/mol cal/(mol K) cal/(mol K); Electronic 0.000 0.000 0.000; Translational 0.889 2.981 34.608; Rotational 0.889 2.981 10.521; Vibrational 13.492 0.038 0.005; Total 15.270 6.000 45.135. cm^(-1) au kcal/mol; Zero-point energy 4718.5485 0.02149929 13.4910. Energies in Hartree/particle: Correction Total; Energy (0 K) 0.02149929 -76.21997075; Internal energy 0.02433406 -76.21713598; Enthalpy 0.02527824 -76.21619180; Gibbs Free Energy 0.00383333 -76.23763671; ```. The computed vector. # #; Irrep: 1; 1: 1689.9300844; 2: 3820.6544533; 3: 3926.5124944. The reference vector. # #; Irrep: 1; 1: 1689.9409000; 2: 3820.4305000; 3: 3926.3098000,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/issues/138:8,Testability,test,test,8,## This test case dumps a core file and crashes on a RHEL7 machine. ```; No. Vib. Freq. (cm^-1) Vib. Temp. (K); 1 1689.930 2431.429; 2 3820.654 5497.063; 3 3926.512 5649.369. Component Thermal Energy Cv S; kcal/mol cal/(mol K) cal/(mol K); Electronic 0.000 0.000 0.000; Translational 0.889 2.981 34.608; Rotational 0.889 2.981 10.521; Vibrational 13.492 0.038 0.005; Total 15.270 6.000 45.135. cm^(-1) au kcal/mol; Zero-point energy 4718.5485 0.02149929 13.4910. Energies in Hartree/particle: Correction Total; Energy (0 K) 0.02149929 -76.21997075; Internal energy 0.02433406 -76.21713598; Enthalpy 0.02527824 -76.21619180; Gibbs Free Energy 0.00383333 -76.23763671; ```. The computed vector. # #; Irrep: 1; 1: 1689.9300844; 2: 3820.6544533; 3: 3926.5124944. The reference vector. # #; Irrep: 1; 1: 1689.9409000; 2: 3820.4305000; 3: 3926.3098000,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/138
https://github.com/psi4/psi4/pull/141:11,Testability,test,test,11,simple x2c test added,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/141
https://github.com/psi4/psi4/pull/141:0,Usability,simpl,simple,0,simple x2c test added,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/141
https://github.com/psi4/psi4/issues/142:0,Modifiability,Extend,Extend,0,Extend Francesco's documentation on writing cube files to explain how to actually plot orbitals using VMD or similar software. Consider adding Evangelista group VMD script to Psi4 source. Assigned to Wallace.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/142
https://github.com/psi4/psi4/issues/144:27,Availability,avail,available,27,"When a fitting basis isn't available, defaults to `def2-qzvpp-jkfit`. This sounds great, and is, until you notice a scf/cc-pv6z calc is using a quad-zeta auxiliary basis. Remedy this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/144
https://github.com/psi4/psi4/issues/148:9,Testability,test,tests,9,I've run tests on both Linux and Mac systems to confirm this behavior.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/148
https://github.com/psi4/psi4/issues/149:886,Energy Efficiency,energy,energy,886,- [x] [1st dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst); - [x] [2nd dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst). @ssh2 the two above work if you use `set r_convergence 6` but the default is 10. should this be loosened?; - [ ] [1st cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [2nd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [3rd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [8th cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [x] [3rd dft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dft.rst); - [x] [dkh input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dkh.rst); - [x] [1st energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [ ] [2nd energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [x] [2nd libefp input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/libefp.rst),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/149
https://github.com/psi4/psi4/issues/149:962,Energy Efficiency,energy,energy,962,- [x] [1st dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst); - [x] [2nd dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst). @ssh2 the two above work if you use `set r_convergence 6` but the default is 10. should this be loosened?; - [ ] [1st cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [2nd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [3rd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [8th cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [x] [3rd dft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dft.rst); - [x] [dkh input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dkh.rst); - [x] [1st energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [ ] [2nd energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [x] [2nd libefp input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/libefp.rst),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/149
https://github.com/psi4/psi4/issues/149:986,Energy Efficiency,energy,energy,986,- [x] [1st dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst); - [x] [2nd dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst). @ssh2 the two above work if you use `set r_convergence 6` but the default is 10. should this be loosened?; - [ ] [1st cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [2nd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [3rd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [8th cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [x] [3rd dft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dft.rst); - [x] [dkh input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dkh.rst); - [x] [1st energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [ ] [2nd energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [x] [2nd libefp input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/libefp.rst),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/149
https://github.com/psi4/psi4/issues/149:1062,Energy Efficiency,energy,energy,1062,- [x] [1st dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst); - [x] [2nd dcft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dcft.rst). @ssh2 the two above work if you use `set r_convergence 6` but the default is 10. should this be loosened?; - [ ] [1st cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [2nd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [3rd cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [ ] [8th cfour input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/cfour.rst); - [x] [3rd dft input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dft.rst); - [x] [dkh input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dkh.rst); - [x] [1st energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [ ] [2nd energy input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/energy.rst); - [x] [2nd libefp input](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/libefp.rst),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/149
https://github.com/psi4/psi4/issues/150:76,Deployability,install,installation,76,"Lingering issues for finalizing CheMPS2:; - [ ] Make sure can detect Debian installation of CheMPS2 in ""list of files"" https://packages.debian.org/sid/libchemps2-dev ; - [ ] make up new conda package; - [ ] add conda package to metapackage; - [ ] add chemps2.rst to interfaces in docs; - [ ] add chemps2 to binary; - [ ] review keywords; - [ ] add acceptance for Intel redistributable for `chemps2.so`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/150
https://github.com/psi4/psi4/issues/150:266,Integrability,interface,interfaces,266,"Lingering issues for finalizing CheMPS2:; - [ ] Make sure can detect Debian installation of CheMPS2 in ""list of files"" https://packages.debian.org/sid/libchemps2-dev ; - [ ] make up new conda package; - [ ] add conda package to metapackage; - [ ] add chemps2.rst to interfaces in docs; - [ ] add chemps2 to binary; - [ ] review keywords; - [ ] add acceptance for Intel redistributable for `chemps2.so`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/150
https://github.com/psi4/psi4/issues/150:62,Safety,detect,detect,62,"Lingering issues for finalizing CheMPS2:; - [ ] Make sure can detect Debian installation of CheMPS2 in ""list of files"" https://packages.debian.org/sid/libchemps2-dev ; - [ ] make up new conda package; - [ ] add conda package to metapackage; - [ ] add chemps2.rst to interfaces in docs; - [ ] add chemps2 to binary; - [ ] review keywords; - [ ] add acceptance for Intel redistributable for `chemps2.so`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/150
https://github.com/psi4/psi4/pull/152:107,Integrability,wrap,wrapper,107,"Modifies the exception translator to communicate the file() and line() information to the python exception wrapper class. When debugging a plugin (my use case), this makes it much easier to figure out the source of an exception that's thrown from C++ as `throw PSIEXCEPTION('message')`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/152
https://github.com/psi4/psi4/pull/152:275,Integrability,message,message,275,"Modifies the exception translator to communicate the file() and line() information to the python exception wrapper class. When debugging a plugin (my use case), this makes it much easier to figure out the source of an exception that's thrown from C++ as `throw PSIEXCEPTION('message')`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/152
https://github.com/psi4/psi4/pull/152:139,Modifiability,plugin,plugin,139,"Modifies the exception translator to communicate the file() and line() information to the python exception wrapper class. When debugging a plugin (my use case), this makes it much easier to figure out the source of an exception that's thrown from C++ as `throw PSIEXCEPTION('message')`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/152
https://github.com/psi4/psi4/issues/153:5090,Deployability,install,installed,5090,"3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin to the center of masses; units angstrom; 0 1 ; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174; N -0.699812 1.158389 -0.000832; N -2.008322 1.432822 0.001677; N 2.267238 1.156444 -0.001011; N 3.565803 1.436891 0.001896; N 2.266013 -1.155613 -0.000583; N 3.563003 -1.435099 0.001415; B -1.131831 -2.605160 -0.011643; B -1.129410 2.608511 -0.010295; B 2.669048 -2.603366 -0.007508; B 2.671738 2.604971 -0.007555; }. set {; basis 6-31G*; # Do use pure angular momentum basis functions?; # PUREAM false. # SCF_TYPE DIRECT # An out-of-core, presorted algorithm using exact ERIs. # MOLDEN_WRITE true. }. optimize('scf', dertype='energy'). psi4 is installed through miniconda:. [root@titan3 2]# find /app/ -name psi4 -type f; /app/miniconda/pkgs/psi4-0.2.54-py27_gf997694/bin/psi4; /app/miniconda/bin/psi4; [root@titan3 2]# /app/miniconda/bin/psi4 --version; 0.2.54",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:5072,Energy Efficiency,energy,energy,5072,"3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin to the center of masses; units angstrom; 0 1 ; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174; N -0.699812 1.158389 -0.000832; N -2.008322 1.432822 0.001677; N 2.267238 1.156444 -0.001011; N 3.565803 1.436891 0.001896; N 2.266013 -1.155613 -0.000583; N 3.563003 -1.435099 0.001415; B -1.131831 -2.605160 -0.011643; B -1.129410 2.608511 -0.010295; B 2.669048 -2.603366 -0.007508; B 2.671738 2.604971 -0.007555; }. set {; basis 6-31G*; # Do use pure angular momentum basis functions?; # PUREAM false. # SCF_TYPE DIRECT # An out-of-core, presorted algorithm using exact ERIs. # MOLDEN_WRITE true. }. optimize('scf', dertype='energy'). psi4 is installed through miniconda:. [root@titan3 2]# find /app/ -name psi4 -type f; /app/miniconda/pkgs/psi4-0.2.54-py27_gf997694/bin/psi4; /app/miniconda/bin/psi4; [root@titan3 2]# /app/miniconda/bin/psi4 --version; 0.2.54",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:29,Performance,optimiz,optimization,29,"I had a crash for a geometry optimization, this is the stack track:. Reading symbols from /app/miniconda/bin/psi4...(no debugging symbols found)...done.; [New LWP 7474]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `psi4'.; Program terminated with signal SIGABRT, Aborted.; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55. 55 return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);; (gdb) where; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55; #1 0x00006a91c31f353a in __GI_abort () at abort.c:89; #2 0x00000000014c2e4f in opt::optking(psi::Options&) (); #3 0x0000000000a4c2fc in py_psi_optking() (); #4 0x0000000000a8993e in boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (); #5 0x000000000554b96e in boost::python::objects::function::call(_object_, _object_) const (); #6 0x000000000554b6a5 in boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::fun",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2125,Performance,optimiz,optimized,2125,"s/unix/sysv/linux/raise.c:55. 55 return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);; (gdb) where; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55; #1 0x00006a91c31f353a in __GI_abort () at abort.c:89; #2 0x00000000014c2e4f in opt::optking(psi::Options&) (); #3 0x0000000000a4c2fc in py_psi_optking() (); #4 0x0000000000a8993e in boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (); #5 0x000000000554b96e in boost::python::objects::function::call(_object_, _object_) const (); #6 0x000000000554b6a5 in boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 Py",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2145,Performance,optimiz,optimized,2145,"s/unix/sysv/linux/raise.c:55. 55 return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);; (gdb) where; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55; #1 0x00006a91c31f353a in __GI_abort () at abort.c:89; #2 0x00000000014c2e4f in opt::optking(psi::Options&) (); #3 0x0000000000a4c2fc in py_psi_optking() (); #4 0x0000000000a8993e in boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (); #5 0x000000000554b96e in boost::python::objects::function::call(_object_, _object_) const (); #6 0x000000000554b6a5 in boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 Py",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2228,Performance,optimiz,optimized,2228,"ail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2248,Performance,optimiz,optimized,2248,"ail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2355,Performance,optimiz,optimized,2355,"boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimiz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2447,Performance,optimiz,optimized,2447,"nction_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2474,Performance,optimiz,optimized,2474,"nction_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2587,Performance,optimiz,optimized,2587,"ost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2611,Performance,optimiz,optimized,2611,"ost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2633,Performance,optimiz,optimized,2633,"ost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2791,Performance,optimiz,optimized,2791,":function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2816,Performance,optimiz,optimized,2816,":function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:2928,Performance,optimiz,optimized,2928,"00005556d54 in boost::python::handle_exception_impl(boost::function0<void>) (); #10 0x000000000554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3020,Performance,optimiz,optimized,3020,"00554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3047,Performance,optimiz,optimized,3047,"00554d0fe in function_call (); #11 0x00006a91c37de333 in PyObject_Call (func=0x9231260, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2529; #12 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3160,Performance,optimiz,optimized,3160," 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3184,Performance,optimiz,optimized,3184," 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3206,Performance,optimiz,optimized,3206," 0x00006a91c388d4b2 in do_call (nk=<optimized out>, na=<optimized out>, pp_stack=0x712c327ea368, func=0x9231260) at Python/ceval.c:4253; #13 call_function (oparg=<optimized out>, pp_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3360,Performance,optimiz,optimized,3360,"_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3385,Performance,optimiz,optimized,3385,"_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3409,Performance,optimiz,optimized,3409,"_stack=0x712c327ea368) at Python/ceval.c:4058; #14 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #15 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3507,Performance,optimiz,optimized,3507,"al_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin to the center of masses; units angstrom; 0 1 ; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3611,Performance,optimiz,optimized,3611,"al_EvalCodeEx (co=0x6a91b94db9b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x92f85c8, kwcount=1, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #16 0x00006a91c388e3fa in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x712c327ea568, func=0x6a91b8cca488) at Python/ceval.c:4131; #17 call_function (oparg=<optimized out>, pp_stack=0x712c327ea568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin to the center of masses; units angstrom; 0 1 ; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:3981,Performance,optimiz,optimized,3981,"568) at Python/ceval.c:4056; #18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:2681; #19 0x00006a91c388fdbe in PyEval_EvalCodeEx (co=0x6a91c45356b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=0, kws=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at Python/ceval.c:3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin to the center of masses; units angstrom; 0 1 ; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174; N -0.699812 1.158389 -0.000832; N -2.008322 1.432822 0.001677; N 2.267238 1.156444 -0.001011; N 3.565803 1.436891 0.001896; N 2.266013 -1.155613 -0.000583; N 3.563003 -1.435099 0.001415; B -1.131831 -2.605160 -0.011643; B -1.129410 2.608511 -0.010295; B 2.669048 -2.603366 -0.007508; B 2.671738 2.604971 -0.007555; }. set {; basis 6-31G*; # Do use pure angular momentum basis functions?; # PUREAM false. # SCF_TYPE DIREC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:5047,Performance,optimiz,optimize,5047,"3267; #20 0x00006a91c388fed2 in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at Python/ceval.c:669; #21 0x00006a91c38ae38c in run_mod (arena=0x93cee40, flags=<optimized out>, locals=0x6a91c4610d70, globals=0x6a91c4610d70, filename=0x6a91c38de42d ""<string>"", mod=<optimized out>) at Python/pythonrun.c:1371; #22 PyRun_StringFlags (. ```; str=0x92f8a04 ""from psi4 import *\nfrom p4const import *\nfrom p4util import *\nfrom molutil import *\nfrom aliases import *\npsi4_io = psi4.IOManager.shared_object()\npsi4.efp_init()\npsi4_io.set_default_path(\""/app/scienc""..., ; start=257, globals=0x6a91c4610d70, locals=0x6a91c4610d70, flags=<optimized out>) at Python/pythonrun.c:1334; ```; #23 0x000000000555a8aa in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); #24 0x0000000000a67f25 in psi::Python::run(_IO_FILE*) (); #25 0x00000000009937e0 in main (). (gdb) . the input file:. memory 2500 mb. molecule struct {; symmetry c1; no_reorient #; no_com # whether to move the origin to the center of masses; units angstrom; 0 1 ; C 0.008240 0.001327 0.000310; C 1.553694 0.001373 0.000036; N -0.700795 -1.157242 -0.001319; N -2.008585 -1.428031 0.002174; N -0.699812 1.158389 -0.000832; N -2.008322 1.432822 0.001677; N 2.267238 1.156444 -0.001011; N 3.565803 1.436891 0.001896; N 2.266013 -1.155613 -0.000583; N 3.563003 -1.435099 0.001415; B -1.131831 -2.605160 -0.011643; B -1.129410 2.608511 -0.010295; B 2.669048 -2.603366 -0.007508; B 2.671738 2.604971 -0.007555; }. set {; basis 6-31G*; # Do use pure angular momentum basis functions?; # PUREAM false. # SCF_TYPE DIRECT # An out-of-core, presorted algorithm using exact ERIs. # MOLDEN_WRITE true. }. optimize('scf', dertype='energy'). psi4 is installed through miniconda:. [root@titan3 2]# find /app/ -name psi4 -type f; /app/miniconda/pkgs/psi4-0.2.54-py27_gf997694/bin/psi4; /app/miniconda/bin/psi4; [root@titan3 2]# /app/miniconda/bin/psi4 --version; 0.2.54",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:349,Safety,Abort,Aborted,349,"I had a crash for a geometry optimization, this is the stack track:. Reading symbols from /app/miniconda/bin/psi4...(no debugging symbols found)...done.; [New LWP 7474]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `psi4'.; Program terminated with signal SIGABRT, Aborted.; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55. 55 return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);; (gdb) where; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55; #1 0x00006a91c31f353a in __GI_abort () at abort.c:89; #2 0x00000000014c2e4f in opt::optking(psi::Options&) (); #3 0x0000000000a4c2fc in py_psi_optking() (); #4 0x0000000000a8993e in boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (); #5 0x000000000554b96e in boost::python::objects::function::call(_object_, _object_) const (); #6 0x000000000554b6a5 in boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::fun",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/153:664,Safety,abort,abort,664,"I had a crash for a geometry optimization, this is the stack track:. Reading symbols from /app/miniconda/bin/psi4...(no debugging symbols found)...done.; [New LWP 7474]; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; Core was generated by `psi4'.; Program terminated with signal SIGABRT, Aborted.; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55. 55 return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);; (gdb) where; #0 0x00006a91c31f18d7 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55; #1 0x00006a91c31f353a in __GI_abort () at abort.c:89; #2 0x00000000014c2e4f in opt::optking(psi::Options&) (); #3 0x0000000000a4c2fc in py_psi_optking() (); #4 0x0000000000a8993e in boost::python::objects::caller_py_function_impl<boost::python::detail::caller<int (*)(), boost::python::default_call_policies, boost::mpl::vector1<int> > >::operator()(_object_, _object_) (); #5 0x000000000554b96e in boost::python::objects::function::call(_object_, _object_) const (); #6 0x000000000554b6a5 in boost::detail::function::void_function_ref_invoker0<boost::python::objects::(anonymous namespace)::bind_return, void>::invoke(boost::detail::function::function_buffer&) (); #7 0x000000000555699d in boost::python::detail::exception_handler::operator()(boost::function0<void> const&) const (); #8 0x0000000000a6d6f5 in boost::detail::function::function_obj_invoker2<boost::_bi::bind_t<bool, boost::python::detail::translate_exception<psi::PsiException, void (*)(psi::PsiException const&)>, boost::_bi::list3boost::arg<1, boost::arg<2>, boost::_bi::value<void (*)(psi::PsiException const&)> > >, bool, boost::python::detail::exception_handler const&, boost::function0<void> const&>::invoke(boost::detail::function::function_buffer&, boost::python::detail::exception_handler const&, boost::function0<void> const&) (); #9 0x0000000005556d54 in boost::python::handle_exception_impl(boost::fun",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/153
https://github.com/psi4/psi4/issues/154:15,Deployability,install,installed,15,"A month ago, I installed PSI4 from miniconda. Everything was fine and PSI4 finished a lot of calculations. Recently I have updated PSI4 with the command ""conda update psi4"" and PSI4 cannot run anymore because of library omission. Using command ""conda inspect linkages psi4"", I obtained this output:; ""not found:; libgsl.so.0 (not found); libgslcblas.so.0 (not found); libhdf5.so.10 (not found); libhdf5_hl.so.10 (not found)"". What should I do to sovle this problem? It will take me much time if I compile PSI4 and it's dependencies from the beginning.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/154
https://github.com/psi4/psi4/issues/154:123,Deployability,update,updated,123,"A month ago, I installed PSI4 from miniconda. Everything was fine and PSI4 finished a lot of calculations. Recently I have updated PSI4 with the command ""conda update psi4"" and PSI4 cannot run anymore because of library omission. Using command ""conda inspect linkages psi4"", I obtained this output:; ""not found:; libgsl.so.0 (not found); libgslcblas.so.0 (not found); libhdf5.so.10 (not found); libhdf5_hl.so.10 (not found)"". What should I do to sovle this problem? It will take me much time if I compile PSI4 and it's dependencies from the beginning.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/154
https://github.com/psi4/psi4/issues/154:160,Deployability,update,update,160,"A month ago, I installed PSI4 from miniconda. Everything was fine and PSI4 finished a lot of calculations. Recently I have updated PSI4 with the command ""conda update psi4"" and PSI4 cannot run anymore because of library omission. Using command ""conda inspect linkages psi4"", I obtained this output:; ""not found:; libgsl.so.0 (not found); libgslcblas.so.0 (not found); libhdf5.so.10 (not found); libhdf5_hl.so.10 (not found)"". What should I do to sovle this problem? It will take me much time if I compile PSI4 and it's dependencies from the beginning.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/154
https://github.com/psi4/psi4/issues/154:519,Integrability,depend,dependencies,519,"A month ago, I installed PSI4 from miniconda. Everything was fine and PSI4 finished a lot of calculations. Recently I have updated PSI4 with the command ""conda update psi4"" and PSI4 cannot run anymore because of library omission. Using command ""conda inspect linkages psi4"", I obtained this output:; ""not found:; libgsl.so.0 (not found); libgslcblas.so.0 (not found); libhdf5.so.10 (not found); libhdf5_hl.so.10 (not found)"". What should I do to sovle this problem? It will take me much time if I compile PSI4 and it's dependencies from the beginning.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/154
https://github.com/psi4/psi4/issues/155:129,Testability,test,test,129,Second-order SCF is now partially implemented (b8315f8b4e0645f7fd15f24ae099ca6968d91809). If anyone has some brutal RHF/UHF/ROHF test cases please send them over or try them out. The current TODO list:; - [x] RHF capability; - [x] UHF capability; - [x] ROHF capability; - [x] The JK algorithm must support non-symmetric density matrices (e.g. not the PK algorithm); - [x] A few brutal tests cases for longtest; - [x] Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/155
https://github.com/psi4/psi4/issues/155:385,Testability,test,tests,385,Second-order SCF is now partially implemented (b8315f8b4e0645f7fd15f24ae099ca6968d91809). If anyone has some brutal RHF/UHF/ROHF test cases please send them over or try them out. The current TODO list:; - [x] RHF capability; - [x] UHF capability; - [x] ROHF capability; - [x] The JK algorithm must support non-symmetric density matrices (e.g. not the PK algorithm); - [x] A few brutal tests cases for longtest; - [x] Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/155
https://github.com/psi4/psi4/issues/156:292,Energy Efficiency,energy,energy,292,"Hi,. With Git: Rev {master} 81f120d the following input file:. ```; molecule chromium_dimer{; 0 1; symmetry d2h; Cr 0.0000 0.0000 0.0000; Cr 0.0000 0.0000 1.6788; }. set {; basis cc-pvdz. guess sad; scf_type pk; reference rhf; INTS_TOLERANCE 0.0; D_CONVERGENCE 1e-12; E_CONVERGENCE 1e-12; }. energy('scf'); ```. hangs for more than 1 hour on. ```; SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.; ```. pyscf and molpro take only seconds (the total number of orbitals is 86). Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/156
https://github.com/psi4/psi4/issues/157:214,Availability,fault,fault,214,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:305,Availability,avail,available,305,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:1899,Energy Efficiency,energy,energy,1899,"66514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfmp2 by Psi4 Developer, a plugin to:; *; * PSI4: an ab initio quantum chemistry software package; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU General Public License as published by; * the Free Software Foundation; either version 2 of the License, or; * (at your option) any later version.; *; * This program is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; * GNU General Public License for more details.; *; * You should have received a copy of the GNU General Public License along; * with this program; if not, write to the Free Software Foundation, Inc.,; * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; *; *@END LICENSE; */. #include <libplugin/plugin.h>; #include <psi4-dec.h>; #include <libpa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:108,Modifiability,plugin,plugin,108,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:298,Modifiability,plugin,plugin,298,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:1943,Modifiability,plugin,plugin,1943," 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfmp2 by Psi4 Developer, a plugin to:; *; * PSI4: an ab initio quantum chemistry software package; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU General Public License as published by; * the Free Software Foundation; either version 2 of the License, or; * (at your option) any later version.; *; * This program is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; * GNU General Public License for more details.; *; * You should have received a copy of the GNU General Public License along; * with this program; if not, write to the Free Software Foundation, Inc.,; * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; *; *@END LICENSE; */. #include <libplugin/plugin.h>; #include <psi4-dec.h>; #include <libparallel/parallel.h>; #include <liboptions/libop",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:2025,Modifiability,plugin,plugin,2025,"000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfmp2 by Psi4 Developer, a plugin to:; *; * PSI4: an ab initio quantum chemistry software package; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU General Public License as published by; * the Free Software Foundation; either version 2 of the License, or; * (at your option) any later version.; *; * This program is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; * GNU General Public License for more details.; *; * You should have received a copy of the GNU General Public License along; * with this program; if not, write to the Free Software Foundation, Inc.,; * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; *; *@END LICENSE; */. #include <libplugin/plugin.h>; #include <psi4-dec.h>; #include <libparallel/parallel.h>; #include <liboptions/liboptions.h>; #include <libmints/wavefunction.h>; #include <libmints/basisset.h>; #include <libmints/matrix.h>; #include <libmints/vector.h>; #include <libpsio/psio.hpp>; #include <libthce/lreri.h>; #include <",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:2858,Modifiability,plugin,plugin,2858,"sis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfmp2 by Psi4 Developer, a plugin to:; *; * PSI4: an ab initio quantum chemistry software package; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU General Public License as published by; * the Free Software Foundation; either version 2 of the License, or; * (at your option) any later version.; *; * This program is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; * GNU General Public License for more details.; *; * You should have received a copy of the GNU General Public License along; * with this program; if not, write to the Free Software Foundation, Inc.,; * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; *; *@END LICENSE; */. #include <libplugin/plugin.h>; #include <psi4-dec.h>; #include <libparallel/parallel.h>; #include <liboptions/liboptions.h>; #include <libmints/wavefunction.h>; #include <libmints/basisset.h>; #include <libmints/matrix.h>; #include <libmints/vector.h>; #include <libpsio/psio.hpp>; #include <libthce/lreri.h>; #include <libthce/thcew.h>; #include <libthce/thce.h>. INIT_PLUGIN. using namespace boost;. namespace psi{ namespace dfmp2 {. extern ""C""; int read_options(std::string name, Options& options); {; if (name == ""DFMP2""|| options.read_globals()) {; /*- The amount of information printed to the output file -*/; options.add_int(""PRINT"", 1);; }. return true;; }. extern ""C""; PsiReturnType dfmp2(Options& options); {; int print = options.get_int(""PRINT"");; boost::shared_ptr<Wavefunction> wfn = Process::environment.wavefunction();; boost::shared_ptr<BasisSet> primary = wfn->basisset();. boost::shared_ptr<BasisSet> auxiliary = BasisSet::pyconstruct_orbital(primary->molecule(), ""DF_BASIS_MP2"", options.get_str",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/157:318,Testability,test,test,318,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/157
https://github.com/psi4/psi4/issues/158:29,Performance,optimiz,optimization,29,"Attempting to run a geometry optimization on molecule at the B3LYP-D/cc-pVTZ level results in the job crashing whenever native symmetry is left on, but the job runs whenever a symmetry of C1 is specified. Further digging resulted in finding out that the job is failing because of a core dump. . Successful input file:. memory 16000 mb. molecule mol {; units Angstrom; symmetry c1 ; N 2.8186748 -1.9320605 0; C 3.9682155 -1.1155139 0; N 3.7348961 0.253345 0; C 2.4718715 0.8928656 0; C 1.3801963 -0.021916 0; C 1.6020129 -1.3565857 0; O 5.0789142 -1.6090969 0; C -1.4704537 -1.662531 1.2276603; C -0.6314352 -1.2778143 0; C -1.4704537 -1.662531 -1.2276603; N -2.7456834 -1.1146331 -1.1876558; N -2.7456834 -1.1146331 1.1876558; C -3.4215193 -0.8181518 0; C -0.4410954 0.996968 -1.2925792; N -0.5390482 2.3631797 -1.1910976; C -0.5061096 3.0855781 0; N -0.5390482 2.3631797 1.1910976; C -0.4410954 0.996968 1.2925792; O -1.0786533 -2.3831691 -2.1082181; O -4.5550423 -0.3852824 0; O -0.5151061 0.4216645 -2.3608946; O -0.5151061 0.4216645 2.3608946; O -0.5222264 4.2956077 0; C -0.1082324 0.2374533 0; O -1.0786533 -2.3831691 2.1082181; O 2.3952343 2.1158161 0; O 0.5199028 -2.1266114 0; C 4.896284 1.1381514 0; H 5.7890291 0.519171 0; H 4.8706699 1.7767416 0.8844252; H 4.8706699 1.7767416 -0.8844252; C 2.9639859 -3.3851463 0; H 4.0304645 -3.5950568 0; H 2.4931226 -3.8054526 -0.8904149; H 2.4931226 -3.8054526 0.8904149; C -3.5099766 -1.1109136 -2.4322518; H -2.8479461 -0.7898524 -3.2353438; H -4.3402724 -0.4197278 -2.3122369; H -3.8914406 -2.1102241 -2.6557968; C -0.593268 3.1660794 2.4125448; H 0.3134452 3.7675492 2.490953; H -0.6696566 2.4797628 3.2512268; H -1.4561479 3.8307515 2.3767475; C -0.593268 3.1660794 -2.4125448; H 0.3134452 3.7675492 -2.490953; H -1.4561479 3.8307515 -2.3767475; H -0.6696566 2.4797628 -3.2512268; C -3.5099766 -1.1109136 2.4322518; H -2.8479461 -0.7898524 3.2353438; H -3.8914406 -2.1102241 2.6557968; H -4.3402724 -0.4197278 2.3122369; O 0.5199028 -2.1266114 0;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/158
https://github.com/psi4/psi4/issues/158:2854,Performance,optimiz,optimize,2854,54 0.996968 1.2925792; O -1.0786533 -2.3831691 -2.1082181; O -4.5550423 -0.3852824 0; O -0.5151061 0.4216645 -2.3608946; O -0.5151061 0.4216645 2.3608946; O -0.5222264 4.2956077 0; C -0.1082324 0.2374533 0; O -1.0786533 -2.3831691 2.1082181; O 2.3952343 2.1158161 0; O 0.5199028 -2.1266114 0; C 4.896284 1.1381514 0; H 5.7890291 0.519171 0; H 4.8706699 1.7767416 0.8844252; H 4.8706699 1.7767416 -0.8844252; C 2.9639859 -3.3851463 0; H 4.0304645 -3.5950568 0; H 2.4931226 -3.8054526 -0.8904149; H 2.4931226 -3.8054526 0.8904149; C -3.5099766 -1.1109136 -2.4322518; H -2.8479461 -0.7898524 -3.2353438; H -4.3402724 -0.4197278 -2.3122369; H -3.8914406 -2.1102241 -2.6557968; C -0.593268 3.1660794 2.4125448; H 0.3134452 3.7675492 2.490953; H -0.6696566 2.4797628 3.2512268; H -1.4561479 3.8307515 2.3767475; C -0.593268 3.1660794 -2.4125448; H 0.3134452 3.7675492 -2.490953; H -1.4561479 3.8307515 -2.3767475; H -0.6696566 2.4797628 -3.2512268; C -3.5099766 -1.1109136 2.4322518; H -2.8479461 -0.7898524 3.2353438; H -3.8914406 -2.1102241 2.6557968; H -4.3402724 -0.4197278 2.3122369; O 0.5199028 -2.1266114 0; C 4.896284 1.1381514 0; H 5.7890291 0.519171 0; H 4.8706699 1.7767416 0.8844252; H 4.8706699 1.7767416 -0.8844252; C 2.9639859 -3.3851463 0; H 4.0304645 -3.5950568 0; H 2.4931226 -3.8054526 -0.8904149; H 2.4931226 -3.8054526 0.8904149; C -3.5099766 -1.1109136 -2.4322518; H -2.8479461 -0.7898524 -3.2353438; H -4.3402724 -0.4197278 -2.3122369; H -3.8914406 -2.1102241 -2.6557968; C -0.593268 3.1660794 2.4125448; H 0.3134452 3.7675492 2.490953; H -0.6696566 2.4797628 3.2512268; H -1.4561479 3.8307515 2.3767475; C -0.593268 3.1660794 -2.4125448; H 0.3134452 3.7675492 -2.490953; H -1.4561479 3.8307515 -2.3767475; H -0.6696566 2.4797628 -3.2512268; C -3.5099766 -1.1109136 2.4322518; H -2.8479461 -0.7898524 3.2353438; H -3.8914406 -2.1102241 2.6557968; H -4.3402724 -0.4197278 2.3122369; }. mol.update_geometry(); mol.print_out(). set basis cc-pvtz. optimize('b3lyp-d3'). print_variables(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/158
https://github.com/psi4/psi4/pull/159:78,Modifiability,variab,variable,78,"With the current code, when `make update_version` is run with py3, the fields variable is something like `[""b'f9256f7\\n'""]`, with the extra escaped newline.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/159
https://github.com/psi4/psi4/pull/160:6,Availability,down,down,6,I got down to 11 test failures w/ py3.4.3.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/160
https://github.com/psi4/psi4/pull/160:22,Availability,failure,failures,22,I got down to 11 test failures w/ py3.4.3.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/160
https://github.com/psi4/psi4/pull/160:17,Testability,test,test,17,I got down to 11 test failures w/ py3.4.3.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/160
https://github.com/psi4/psi4/issues/161:54,Deployability,install,install,54,"I'm having trouble getting everything copied into the install location. I generally configure with `mkdir build; cd build; ccmake ..;`, and then customize the CMAKE_INSTALL_PREFIX and other options from the curses gui. I think maybe `CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT` doesn't get updated here: https://github.com/psi4/psi4public/blob/master/CMakeLists.txt#L103-L114. What's the purpose of that section explicitly changing the install prefix?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/161
https://github.com/psi4/psi4/issues/161:291,Deployability,update,updated,291,"I'm having trouble getting everything copied into the install location. I generally configure with `mkdir build; cd build; ccmake ..;`, and then customize the CMAKE_INSTALL_PREFIX and other options from the curses gui. I think maybe `CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT` doesn't get updated here: https://github.com/psi4/psi4public/blob/master/CMakeLists.txt#L103-L114. What's the purpose of that section explicitly changing the install prefix?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/161
https://github.com/psi4/psi4/issues/161:437,Deployability,install,install,437,"I'm having trouble getting everything copied into the install location. I generally configure with `mkdir build; cd build; ccmake ..;`, and then customize the CMAKE_INSTALL_PREFIX and other options from the curses gui. I think maybe `CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT` doesn't get updated here: https://github.com/psi4/psi4public/blob/master/CMakeLists.txt#L103-L114. What's the purpose of that section explicitly changing the install prefix?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/161
https://github.com/psi4/psi4/issues/161:84,Modifiability,config,configure,84,"I'm having trouble getting everything copied into the install location. I generally configure with `mkdir build; cd build; ccmake ..;`, and then customize the CMAKE_INSTALL_PREFIX and other options from the curses gui. I think maybe `CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT` doesn't get updated here: https://github.com/psi4/psi4public/blob/master/CMakeLists.txt#L103-L114. What's the purpose of that section explicitly changing the install prefix?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/161
https://github.com/psi4/psi4/issues/162:363,Deployability,install,installed,363,"Apologies if this is off the development timeline or out of left field. The psi4 plugin system is excellent, and it's one of the really cool unique features of the package. One way to make it even better would be if it didn't require having access to the source to compile a plugin. Currently, all the static archives stay inside the object directory and are not installed to `prefix`, which means that when the plugins need to link against psi4, they link against the archives in the object directory, and the psi4 binary embeds the location of the source and build directory to use when generating an example plugin makefile. It would be nice to copy the archives to `$PREFIX/lib` instead.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/162:81,Modifiability,plugin,plugin,81,"Apologies if this is off the development timeline or out of left field. The psi4 plugin system is excellent, and it's one of the really cool unique features of the package. One way to make it even better would be if it didn't require having access to the source to compile a plugin. Currently, all the static archives stay inside the object directory and are not installed to `prefix`, which means that when the plugins need to link against psi4, they link against the archives in the object directory, and the psi4 binary embeds the location of the source and build directory to use when generating an example plugin makefile. It would be nice to copy the archives to `$PREFIX/lib` instead.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/162:275,Modifiability,plugin,plugin,275,"Apologies if this is off the development timeline or out of left field. The psi4 plugin system is excellent, and it's one of the really cool unique features of the package. One way to make it even better would be if it didn't require having access to the source to compile a plugin. Currently, all the static archives stay inside the object directory and are not installed to `prefix`, which means that when the plugins need to link against psi4, they link against the archives in the object directory, and the psi4 binary embeds the location of the source and build directory to use when generating an example plugin makefile. It would be nice to copy the archives to `$PREFIX/lib` instead.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/162:412,Modifiability,plugin,plugins,412,"Apologies if this is off the development timeline or out of left field. The psi4 plugin system is excellent, and it's one of the really cool unique features of the package. One way to make it even better would be if it didn't require having access to the source to compile a plugin. Currently, all the static archives stay inside the object directory and are not installed to `prefix`, which means that when the plugins need to link against psi4, they link against the archives in the object directory, and the psi4 binary embeds the location of the source and build directory to use when generating an example plugin makefile. It would be nice to copy the archives to `$PREFIX/lib` instead.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/162:611,Modifiability,plugin,plugin,611,"Apologies if this is off the development timeline or out of left field. The psi4 plugin system is excellent, and it's one of the really cool unique features of the package. One way to make it even better would be if it didn't require having access to the source to compile a plugin. Currently, all the static archives stay inside the object directory and are not installed to `prefix`, which means that when the plugins need to link against psi4, they link against the archives in the object directory, and the psi4 binary embeds the location of the source and build directory to use when generating an example plugin makefile. It would be nice to copy the archives to `$PREFIX/lib` instead.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/162:241,Security,access,access,241,"Apologies if this is off the development timeline or out of left field. The psi4 plugin system is excellent, and it's one of the really cool unique features of the package. One way to make it even better would be if it didn't require having access to the source to compile a plugin. Currently, all the static archives stay inside the object directory and are not installed to `prefix`, which means that when the plugins need to link against psi4, they link against the archives in the object directory, and the psi4 binary embeds the location of the source and build directory to use when generating an example plugin makefile. It would be nice to copy the archives to `$PREFIX/lib` instead.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/162
https://github.com/psi4/psi4/issues/163:730,Modifiability,Config,ConfigPython,730,"With current master on Ubuntu 15.04. ```; $ ./setup obj2 --python=/usr/bin/python3; [... snip ...]. $ grep PYTHON build/CMakeCache.txt ; Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/lib/x86_64-linux-gnu/libboost_python.a; Boost_PYTHON_LIBRARY_RELEASE:FILEPATH=/usr/lib/x86_64-linux-gnu/libboost_python.a; PYTHON_INCLUDE_DIR:PATH=/usr/include/python3.4m; PYTHON_INTERPRETER:UNINITIALIZED=/usr/bin/python3; PYTHON_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libpython2.7.so; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; [... snip ...]; ```. Note that the include path points to the python3 headers, but the library path points incorrectly libpython2.7.so. The idea of https://github.com/psi4/psi4public/blob/master/cmake/ConfigPython.cmake#L37-L39 should be to select matching headers/library.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/163
https://github.com/psi4/psi4/pull/164:12,Testability,Test,Tested,12,"Fixes #163. Tested on OSX, Ubuntu 15.04, and CentOS 6 with system python(s), homebrew, and anaconda (py2 and py3).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/164
https://github.com/psi4/psi4/issues/168:5,Testability,test,test,5,This test is failing for me. Anybody else have trouble with it? Lists the displacements and then seems to do nothing. David,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/168
https://github.com/psi4/psi4/issues/169:850,Energy Efficiency,energy,energy,850,"The following input file fails with the following message:. ```; Traceback (most recent call last):; File ""/Users/francesco/Source/psi4/lib/python/inputparser.py"", line 732, in process_input; temp = re.sub('^from __future__ import .*$', future_replace, temp, flags=re.MULTILINE); TypeError: sub() got an unexpected keyword argument 'flags'; ```. I was wondering: is it possible that recent changes to python affect the ability to read user-defined basis sets from input files?. ```; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. basis {; cartesian; H 0; S 3 1.00; 3.42525091 0.15432897; 0.62391373 0.53532814; 0.16885540 0.44463454; ****; O 0; S 3 1.00; 130.7093200 0.15432897; 23.8088610 0.53532814; 6.4436083 0.44463454; SP 3 1.00; 5.0331513 -0.09996723 0.15591627; 1.1695961 0.39951283 0.60768372; 0.3803890 0.70011547 0.39195739; ****; }. energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/169
https://github.com/psi4/psi4/issues/169:50,Integrability,message,message,50,"The following input file fails with the following message:. ```; Traceback (most recent call last):; File ""/Users/francesco/Source/psi4/lib/python/inputparser.py"", line 732, in process_input; temp = re.sub('^from __future__ import .*$', future_replace, temp, flags=re.MULTILINE); TypeError: sub() got an unexpected keyword argument 'flags'; ```. I was wondering: is it possible that recent changes to python affect the ability to read user-defined basis sets from input files?. ```; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. basis {; cartesian; H 0; S 3 1.00; 3.42525091 0.15432897; 0.62391373 0.53532814; 0.16885540 0.44463454; ****; O 0; S 3 1.00; 130.7093200 0.15432897; 23.8088610 0.53532814; 6.4436083 0.44463454; SP 3 1.00; 5.0331513 -0.09996723 0.15591627; 1.1695961 0.39951283 0.60768372; 0.3803890 0.70011547 0.39195739; ****; }. energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/169
https://github.com/psi4/psi4/pull/170:37,Testability,test,test,37,"Fix for #169. I didn't run the whole test suite, but I did run `cc1`, `opt3` with python2.6.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/170
https://github.com/psi4/psi4/issues/171:270,Deployability,install,install,270,"I am interfacing LibERD with GAMESS and would like to use the Psi4 interface as a reference. Psi4 does not call LibERD, even when compiled with it. This issue has been confirmed via email by @ryanmrichard. I first invoke:; setup --erd on --fc gfortran --type debug; and install normally, verifying that DENABLE_LIBERD is set for CMake. Then I tried debugging and setting a breakpoint at the ERD entry point, erd__gener_eri_batch. I tried a variety of sample input files, and that function is never reached. Next, I went to the ERD wrapper code at ./psi4public/src/lib/libmints/erd_eri.cc and enabled the DEBUG preprocessor macro which adds print statements for ERD parameters. The print statements are not printed, even if I remove the IF statements. Third, I figured LibInt might be called instead of ERD, so I recompiled with --max-am-eri 0 in an attempt to disable LibInt. There was no change in the behavior of the code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/171
https://github.com/psi4/psi4/issues/171:67,Integrability,interface,interface,67,"I am interfacing LibERD with GAMESS and would like to use the Psi4 interface as a reference. Psi4 does not call LibERD, even when compiled with it. This issue has been confirmed via email by @ryanmrichard. I first invoke:; setup --erd on --fc gfortran --type debug; and install normally, verifying that DENABLE_LIBERD is set for CMake. Then I tried debugging and setting a breakpoint at the ERD entry point, erd__gener_eri_batch. I tried a variety of sample input files, and that function is never reached. Next, I went to the ERD wrapper code at ./psi4public/src/lib/libmints/erd_eri.cc and enabled the DEBUG preprocessor macro which adds print statements for ERD parameters. The print statements are not printed, even if I remove the IF statements. Third, I figured LibInt might be called instead of ERD, so I recompiled with --max-am-eri 0 in an attempt to disable LibInt. There was no change in the behavior of the code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/171
https://github.com/psi4/psi4/issues/171:531,Integrability,wrap,wrapper,531,"I am interfacing LibERD with GAMESS and would like to use the Psi4 interface as a reference. Psi4 does not call LibERD, even when compiled with it. This issue has been confirmed via email by @ryanmrichard. I first invoke:; setup --erd on --fc gfortran --type debug; and install normally, verifying that DENABLE_LIBERD is set for CMake. Then I tried debugging and setting a breakpoint at the ERD entry point, erd__gener_eri_batch. I tried a variety of sample input files, and that function is never reached. Next, I went to the ERD wrapper code at ./psi4public/src/lib/libmints/erd_eri.cc and enabled the DEBUG preprocessor macro which adds print statements for ERD parameters. The print statements are not printed, even if I remove the IF statements. Third, I figured LibInt might be called instead of ERD, so I recompiled with --max-am-eri 0 in an attempt to disable LibInt. There was no change in the behavior of the code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/171
https://github.com/psi4/psi4/issues/173:149,Energy Efficiency,energy,energy,149,"Psi4 0.3.62 Driver Git: Rev {master} 1b48d22; compiled with ""setup --fc gfortran --erd on"". HF calculation for H2O exists after 2 SCF iterations; no energy change.; output states ""Two-Electron Energy = 0.0000000000000000"" . I specified ""INTEGRAL_PACKAGE ERD"" in the input.; It is the case for DF and direct SCF. PK gives a non-converging, oscillating SCF. Did not try the other options. ""INTEGRAL_PACKAGE libint"" works normally. Let me know if I should report more data. cheers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/173
https://github.com/psi4/psi4/issues/173:193,Energy Efficiency,Energy,Energy,193,"Psi4 0.3.62 Driver Git: Rev {master} 1b48d22; compiled with ""setup --fc gfortran --erd on"". HF calculation for H2O exists after 2 SCF iterations; no energy change.; output states ""Two-Electron Energy = 0.0000000000000000"" . I specified ""INTEGRAL_PACKAGE ERD"" in the input.; It is the case for DF and direct SCF. PK gives a non-converging, oscillating SCF. Did not try the other options. ""INTEGRAL_PACKAGE libint"" works normally. Let me know if I should report more data. cheers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/173
https://github.com/psi4/psi4/pull/174:58,Modifiability,plugin,plugin,58,"cc #162. this does seem to be sufficient for compiling my plugin, but I could be missing something.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/174
https://github.com/psi4/psi4/issues/175:177,Energy Efficiency,energy,energy,177,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:203,Energy Efficiency,energy,energy,203,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:266,Energy Efficiency,energy,energy,266,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:391,Energy Efficiency,energy,energy,391,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:458,Energy Efficiency,energy,energy,458,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:507,Energy Efficiency,energy,energy,507,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:665,Energy Efficiency,energy,energy,665,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/175:698,Usability,Clear,Clearly,698,"The input file:. ```; memory 1 Gb. molecule NO; {; 1 1; N; O 1 R; units au; }. set {; guess read. diag_method rsp. VECS_WRITE true; NUM_VECS_WRITE 1. basis sto-3g; }. NO.R = 2. energy('scf'). NO.R = 50. energy('fci'). set {; diag_method sem; GUESS_VECTOR IMPORT; }. energy('fci'); ```. I first calculated the RHF solution at 2 Bohr and use it as seed for the solution at 50 Bohr. The first `energy('fci')` uses exact diagonalization and produces the correct energy `-127.1625943265614`. The second call to `energy('fci')` uses Davidson with as start guess the CI vector from the previous calculation. This should immediately convergence yet it finds a ground state energy of `-1527.1801524600446`. Clearly very far below the actual lowest eigenvalue. Something goes terrible wrong here. . Any ideas?. It also would be nice if the docs would mention that building the OPDM, etc doesn't work if you use `diag_method rsp`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/175
https://github.com/psi4/psi4/issues/176:134,Deployability,patch,patch,134,"Hi,. src/bin/psi4/python.cc seems to be inconsistent with src/bin/psi4/version.cc and the header generated by gitversion.py. Here's a patch to solve the issue. --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/bin/psi4/python.cc.gitversion 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/bin/psi4/python.cc 2015-09-06 12:57:40.213173096 -0700; @@ -742,12 +742,20 @@ double py_psi_thermo(). char const *py_psi_version(); {; +#ifdef PSI_VERSION ; return PSI_VERSION;; +#else; - return """";; +#endif; }; ; char const *py_psi_git_version(); {; +#ifdef GIT_VERSION ; return GIT_VERSION;; +#else; - return """";; +#endif; }; ; void py_psi_clean()",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/176
https://github.com/psi4/psi4/issues/177:43,Availability,error,error,43,"Release 0.3 fails to build with gcc 5.1.1, error is. /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc: In member function 'virtual std::vectorpsi::ShellInfo psi::Gaussian94BasisSetParser::parse(const string&, const std::vectorstd::basic_string<char >&)':; /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc:176:104: error: narrowing conversion of '-1' from 'int' to 'char' inside { } [-Wnarrowing]; char shell_to_am[] = {-1,-1,-1, 2,-1, 3, 4, 5, 6,-1, 7, 8, 9,10,11, 1,12,13, 0,14,15,16,17,18,19,20};; ^",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/177
https://github.com/psi4/psi4/issues/177:436,Availability,error,error,436,"Release 0.3 fails to build with gcc 5.1.1, error is. /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc: In member function 'virtual std::vectorpsi::ShellInfo psi::Gaussian94BasisSetParser::parse(const string&, const std::vectorstd::basic_string<char >&)':; /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc:176:104: error: narrowing conversion of '-1' from 'int' to 'char' inside { } [-Wnarrowing]; char shell_to_am[] = {-1,-1,-1, 2,-1, 3, 4, 5, 6,-1, 7, 8, 9,10,11, 1,12,13, 0,14,15,16,17,18,19,20};; ^",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/177
https://github.com/psi4/psi4/issues/177:0,Deployability,Release,Release,0,"Release 0.3 fails to build with gcc 5.1.1, error is. /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc: In member function 'virtual std::vectorpsi::ShellInfo psi::Gaussian94BasisSetParser::parse(const string&, const std::vectorstd::basic_string<char >&)':; /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc:176:104: error: narrowing conversion of '-1' from 'int' to 'char' inside { } [-Wnarrowing]; char shell_to_am[] = {-1,-1,-1, 2,-1, 3, 4, 5, 6,-1, 7, 8, 9,10,11, 1,12,13, 0,14,15,16,17,18,19,20};; ^",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/177
https://github.com/psi4/psi4/issues/178:75,Deployability,patch,patch,75,"libpsiutil and libparallel2 may be compiled as dynamic libraries. Attached patch solves the issue. diff -up psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt.staticlib psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt; --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt.staticlib 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt 2015-09-08 13:11:35.454250886 -0700; @@ -14,7 +14,7 @@ add_subdirectory(CommEnvGuts); add_subdirectory(Schedulers); add_subdirectory(TaskJobGuts); add_subdirectory(Util); -add_library(parallel2 ${LPSRC} ${CEGSRC} ${SSRC} ${TJGSRC} ${UTILSRC}); +add_library(parallel2 STATIC ${LPSRC} ${CEGSRC} ${SSRC} ${TJGSRC} ${UTILSRC}); set_property(GLOBAL APPEND PROPERTY LIBLIST parallel2); if(BUILD_CUSTOM_BOOST); add_dependencies(parallel2 custom_boost); diff -up psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt.staticlib psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt; --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt.staticlib 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt 2015-09-08 13:11:06.531702529 -0700; @@ -16,7 +16,7 @@ set(SRC ProgressBar.h; Implementations/ProgressBar.cc; Implementations/Exception2.cc; ); -add_library(PsiUtil ${SRC}); +add_library(PsiUtil STATIC ${SRC}); add_dependencies(PsiUtil parallel2); include_directories(libparallel2); set_property(GLOBAL APPEND PROPERTY LIBLIST PsiUtil)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/178
https://github.com/psi4/psi4/issues/178:629,Energy Efficiency,Schedul,Schedulers,629,"libpsiutil and libparallel2 may be compiled as dynamic libraries. Attached patch solves the issue. diff -up psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt.staticlib psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt; --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt.staticlib 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libparallel2/CMakeLists.txt 2015-09-08 13:11:35.454250886 -0700; @@ -14,7 +14,7 @@ add_subdirectory(CommEnvGuts); add_subdirectory(Schedulers); add_subdirectory(TaskJobGuts); add_subdirectory(Util); -add_library(parallel2 ${LPSRC} ${CEGSRC} ${SSRC} ${TJGSRC} ${UTILSRC}); +add_library(parallel2 STATIC ${LPSRC} ${CEGSRC} ${SSRC} ${TJGSRC} ${UTILSRC}); set_property(GLOBAL APPEND PROPERTY LIBLIST parallel2); if(BUILD_CUSTOM_BOOST); add_dependencies(parallel2 custom_boost); diff -up psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt.staticlib psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt; --- psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt.staticlib 2015-08-05 10:37:14.000000000 -0700; +++ psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libPsiUtil/CMakeLists.txt 2015-09-08 13:11:06.531702529 -0700; @@ -16,7 +16,7 @@ set(SRC ProgressBar.h; Implementations/ProgressBar.cc; Implementations/Exception2.cc; ); -add_library(PsiUtil ${SRC}); +add_library(PsiUtil STATIC ${SRC}); add_dependencies(PsiUtil parallel2); include_directories(libparallel2); set_property(GLOBAL APPEND PROPERTY LIBLIST PsiUtil)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/178
https://github.com/psi4/psi4/issues/179:272,Performance,perform,performing,272,"If you use the new optking feature that allows freezing of individual Cartesian coordinates _without_ also setting `no_reorient` and `no_com`, the molecule reportedly turns into a ""high-speed car wreck"". It is requested that the driver turn those molecule options on when performing such optimizations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/179
https://github.com/psi4/psi4/issues/179:288,Performance,optimiz,optimizations,288,"If you use the new optking feature that allows freezing of individual Cartesian coordinates _without_ also setting `no_reorient` and `no_com`, the molecule reportedly turns into a ""high-speed car wreck"". It is requested that the driver turn those molecule options on when performing such optimizations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/179
https://github.com/psi4/psi4/issues/180:38,Integrability,rout,routines,38,"Hi,. from what I gather in the libint routines, the maximum angular momentum supported by psi4 seems to be G functions (l=4). Do you have any plans to get rid of this limitation?. cc-pV6Z has up to I functions (l=6), and ideally one would like to run forces (and semi-numerical Hessians), which means that the program should support integrals over l=7 functions.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/180
https://github.com/psi4/psi4/issues/182:41,Usability,simpl,simple,41,"Dear all, . Can someone please provide a simple input file for a state averaged mcscf calculation for excited states : nroots= 3 ?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/182
https://github.com/psi4/psi4/issues/183:26,Availability,error,error,26,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/183:767,Availability,Error,Error,767,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/183:842,Availability,Error,Error,842,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/183:868,Availability,Error,Error,868,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/183:305,Integrability,depend,dependencies,305,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/183:606,Integrability,depend,dependencies,606,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/183:992,Modifiability,plugin,plugins,992,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/183
https://github.com/psi4/psi4/issues/184:252,Energy Efficiency,charge,charges,252,"The PSI4 (0.3.183, 5427c0a) gradient routine does not seem to be giving the correct values when an external field is defined using the QMMM module. I attached two test calculations:; 1) A water dimer with 1 water QM and the second represented as point charges. ```; memory 1 gb; set reference rks; set basis 6-31++G**; set guess sad; set scf_type df. molecule QMregion {; 0 1; O -0.778803000000 0.000000000000 1.132683000000; H -0.666682000000 0.764099000000 1.706291000000; H -0.666682000000 -0.764099000000 1.706290000000; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:922,Energy Efficiency,charge,charge,922,"The PSI4 (0.3.183, 5427c0a) gradient routine does not seem to be giving the correct values when an external field is defined using the QMMM module. I attached two test calculations:; 1) A water dimer with 1 water QM and the second represented as point charges. ```; memory 1 gb; set reference rks; set basis 6-31++G**; set guess sad; set scf_type df. molecule QMregion {; 0 1; O -0.778803000000 0.000000000000 1.132683000000; H -0.666682000000 0.764099000000 1.706291000000; H -0.666682000000 -0.764099000000 1.706290000000; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1351,Energy Efficiency,charge,charges,1351,"0.778803000000 0.000000000000 1.132683000000; H -0.666682000000 0.764099000000 1.706291000000; H -0.666682000000 -0.764099000000 1.706290000000; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1557,Energy Efficiency,charge,charges,1557,"; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces wi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1724,Energy Efficiency,charge,charge,1724,"tern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.0014",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1736,Energy Efficiency,charge,charge,1736,"extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1871,Energy Efficiency,charge,charge,1871,"on_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1966,Energy Efficiency,Charge,Charges,1966,"reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charg",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1981,Energy Efficiency,charge,charges,1981,"reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charg",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2034,Energy Efficiency,charge,charges,2034,"_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Ga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2216,Energy Efficiency,charge,charges,2216,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2373,Energy Efficiency,charge,charges,2373,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2553,Energy Efficiency,charge,charges,2553,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2763,Energy Efficiency,Charge,Charge,2763,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2818,Energy Efficiency,charge,charges,2818,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2900,Energy Efficiency,charge,charges,2900,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:2970,Energy Efficiency,charge,charges,2970,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:3049,Energy Efficiency,charge,charges,3049,".8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.001458305. --------------------------------------------------------------------; He+Charge (q = -1.0, r = 1.0 Ang.). PSI4 gradient without charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces without charges:; 1 2 0.000000000 0.000000000 0.000000000. PSI4 gradient with charges:; 1 0.000000000000 0.000000000000 0.000000000000. Gaussian forces with charges:; 1 2 0.000000000 0.000000000 0.038125930; ```. Please let me know if you need more information or if I have a mistake in my input scripts.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:37,Integrability,rout,routine,37,"The PSI4 (0.3.183, 5427c0a) gradient routine does not seem to be giving the correct values when an external field is defined using the QMMM module. I attached two test calculations:; 1) A water dimer with 1 water QM and the second represented as point charges. ```; memory 1 gb; set reference rks; set basis 6-31++G**; set guess sad; set scf_type df. molecule QMregion {; 0 1; O -0.778803000000 0.000000000000 1.132683000000; H -0.666682000000 0.764099000000 1.706291000000; H -0.666682000000 -0.764099000000 1.706290000000; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:163,Testability,test,test,163,"The PSI4 (0.3.183, 5427c0a) gradient routine does not seem to be giving the correct values when an external field is defined using the QMMM module. I attached two test calculations:; 1) A water dimer with 1 water QM and the second represented as point charges. ```; memory 1 gb; set reference rks; set basis 6-31++G**; set guess sad; set scf_type df. molecule QMregion {; 0 1; O -0.778803000000 0.000000000000 1.132683000000; H -0.666682000000 0.764099000000 1.706291000000; H -0.666682000000 -0.764099000000 1.706290000000; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1301,Testability,test,test,1301,"0.778803000000 0.000000000000 1.132683000000; H -0.666682000000 0.764099000000 1.706291000000; H -0.666682000000 -0.764099000000 1.706290000000; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/184:1640,Testability,test,test,1640,"tern.addCharge(0.417,0.544757019107,0.0,-3.799961446760); Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. 2) A helium atom with a point charge (q=-1) 1 Angstrom away. ```; memory 1 gb; set reference rks; set basis 6-31G*; set guess sad; set scf_type df. molecule QMregion {; 0 1; He 0.0 0.0 0.0; symmetry c1; no_reorient; no_com; }. gradient(""PBE0""). Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1,0.0,0.0,1.8897261245650618); psi4.set_global_option_python('EXTERN',Chrgfield.extern). gradient(""PBE0""); ```. For test 1, the gradient from the water and the water+charges are different, but they do not agree with the forces returned by an equivalent calculation with Gaussian. The isolated water molecule has gradients that agree with the Gaussian forces, but once the charges are added the Gaussian and PSI4 calculations return different results. For test 2, the PSI4 gradient is zero for the for the helium with and without the point charge. The charge has no effect on the results. When I repeated the calculation with Gaussian, there was a finite force on the helium atom when a charge was included. Here are the gradient results I pulled from the output files:. ```; Water+Charges (TIP3P charges: O->-0.834, H->0.417). PSI4 gradient without charges:; 1 -0.000345685156 -0.000000503248 -0.001768512746; 2 0.000171019827 0.000099064969 0.000874930893; 3 0.000170945942 -0.000098562011 0.000874553581. Gaussian forces without charges:; 1 8 0.000342119 0.000000502 0.001755656; 2 1 -0.000171096 -0.000103970 -0.000878017; 3 1 -0.000171022 0.000103468 -0.000877640. PSI4 gradient with charges:; 1 0.001872262723 -0.000000506498 -0.002344911788; 2 -0.000937982580 -0.003306842432 0.001163140925; 3 -0.000938055973 0.003307348640 0.001162761678. Gaussian forces with charges:; 1 8 0.002079660 0.000000498 -0.002984605; 2 1 0.000413259 0.000612887 -0.001458686; 3 1 0.000413331 -0.000613388 -0.0014",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/184
https://github.com/psi4/psi4/issues/185:69,Performance,optimiz,optimized,69,"Hi PSI4 developers.; I want to do OMP2 (OMP3/OCEPA) run and dump out optimized orbitals into molden file like ""molden_write true"" does.; Is it possible at the moment?. Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/185
https://github.com/psi4/psi4/issues/186:871,Energy Efficiency,energy,energy,871,"Hi, PSI4 users.; I run OMP2/OMP3/OCEPA for cubane molecule (Molecular point group: d2h, Full point group: Oh).; And found that OMP2 didn't use symmetry in SCF run, but OMP3/OCEPA does.; Using symmetry significantly accelerates calculation. . My input:. > # ; > ; > memory 1000 mb; > molecule cubane {; > 0 1; > H 1.4194 -1.4194 1.4194; > C 0.7855 -0.7855 0.7855; > H 1.4194 -1.4194 -1.4194; > C 0.7855 -0.7855 -0.7855; > H 1.4194 1.4194 1.4194; > C 0.7855 0.7855 0.7855; > H 1.4194 1.4194 -1.4194; > C 0.7855 0.7855 -0.7855; > H -1.4194 1.4194 -1.4194; > C -0.7855 0.7855 -0.7855; > H -1.4194 1.4194 1.4194; > C -0.7855 0.7855 0.7855; > H -1.4194 -1.4194 1.4194; > C -0.7855 -0.7855 0.7855; > H -1.4194 -1.4194 -1.4194; > C -0.7855 -0.7855 -0.7855; > }; > ; > set {; > basis cc-pVDZ; > scf_type pk; > E_CONVERGENCE 10; > D_CONVERGENCE 10; > molden_write true; > }; > ; > energy('omp2'). Git: Rev {master} 521f06adb441ac1e2f1732eb1cd090190b409c49. Vladimir",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/186
https://github.com/psi4/psi4/issues/188:72,Availability,error,error,72,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/188:128,Availability,error,error,128,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/188:345,Availability,Error,Error,345,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/188:411,Availability,Error,Error,411,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/188:436,Availability,Error,Error,436,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/188:716,Availability,error,error,716,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/188:207,Safety,abort,aborted,207,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/188
https://github.com/psi4/psi4/issues/189:205,Availability,error,errors,205,"All was well on psi4/psi4 circa 7913b38 early morning 15 Nov, but after pub/priv sync, by early morning 16 Nov, fresh recursive clones (`git clone --recursive https://github.com/psi4/psi4.git`) are giving errors; like below. @robertodr, could you check that the current submodule reference is what it ought it be? Thanks. ```; Cloning into 'psi4'...; ...; Resolving deltas: 100% (80379/80379), done.; Submodule 'interfaces/pcmsolver' (https://github.com/PCMSolver/pcmsolver.git) registered for path 'interfaces/pcmsolver'; Cloning into 'interfaces/pcmsolver'...; ...; Resolving deltas: 100% (13625/13625), done.; fatal: reference is not a tree: 9bc8e049f14260a4c1b4b2bda898a16850907b1c; Unable to checkout '9bc8e049f14260a4c1b4b2bda898a16850907b1c' in submodule path 'interfaces/pcmsolver'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/189
https://github.com/psi4/psi4/issues/189:412,Integrability,interface,interfaces,412,"All was well on psi4/psi4 circa 7913b38 early morning 15 Nov, but after pub/priv sync, by early morning 16 Nov, fresh recursive clones (`git clone --recursive https://github.com/psi4/psi4.git`) are giving errors; like below. @robertodr, could you check that the current submodule reference is what it ought it be? Thanks. ```; Cloning into 'psi4'...; ...; Resolving deltas: 100% (80379/80379), done.; Submodule 'interfaces/pcmsolver' (https://github.com/PCMSolver/pcmsolver.git) registered for path 'interfaces/pcmsolver'; Cloning into 'interfaces/pcmsolver'...; ...; Resolving deltas: 100% (13625/13625), done.; fatal: reference is not a tree: 9bc8e049f14260a4c1b4b2bda898a16850907b1c; Unable to checkout '9bc8e049f14260a4c1b4b2bda898a16850907b1c' in submodule path 'interfaces/pcmsolver'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/189
https://github.com/psi4/psi4/issues/189:500,Integrability,interface,interfaces,500,"All was well on psi4/psi4 circa 7913b38 early morning 15 Nov, but after pub/priv sync, by early morning 16 Nov, fresh recursive clones (`git clone --recursive https://github.com/psi4/psi4.git`) are giving errors; like below. @robertodr, could you check that the current submodule reference is what it ought it be? Thanks. ```; Cloning into 'psi4'...; ...; Resolving deltas: 100% (80379/80379), done.; Submodule 'interfaces/pcmsolver' (https://github.com/PCMSolver/pcmsolver.git) registered for path 'interfaces/pcmsolver'; Cloning into 'interfaces/pcmsolver'...; ...; Resolving deltas: 100% (13625/13625), done.; fatal: reference is not a tree: 9bc8e049f14260a4c1b4b2bda898a16850907b1c; Unable to checkout '9bc8e049f14260a4c1b4b2bda898a16850907b1c' in submodule path 'interfaces/pcmsolver'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/189
https://github.com/psi4/psi4/issues/189:537,Integrability,interface,interfaces,537,"All was well on psi4/psi4 circa 7913b38 early morning 15 Nov, but after pub/priv sync, by early morning 16 Nov, fresh recursive clones (`git clone --recursive https://github.com/psi4/psi4.git`) are giving errors; like below. @robertodr, could you check that the current submodule reference is what it ought it be? Thanks. ```; Cloning into 'psi4'...; ...; Resolving deltas: 100% (80379/80379), done.; Submodule 'interfaces/pcmsolver' (https://github.com/PCMSolver/pcmsolver.git) registered for path 'interfaces/pcmsolver'; Cloning into 'interfaces/pcmsolver'...; ...; Resolving deltas: 100% (13625/13625), done.; fatal: reference is not a tree: 9bc8e049f14260a4c1b4b2bda898a16850907b1c; Unable to checkout '9bc8e049f14260a4c1b4b2bda898a16850907b1c' in submodule path 'interfaces/pcmsolver'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/189
https://github.com/psi4/psi4/issues/189:768,Integrability,interface,interfaces,768,"All was well on psi4/psi4 circa 7913b38 early morning 15 Nov, but after pub/priv sync, by early morning 16 Nov, fresh recursive clones (`git clone --recursive https://github.com/psi4/psi4.git`) are giving errors; like below. @robertodr, could you check that the current submodule reference is what it ought it be? Thanks. ```; Cloning into 'psi4'...; ...; Resolving deltas: 100% (80379/80379), done.; Submodule 'interfaces/pcmsolver' (https://github.com/PCMSolver/pcmsolver.git) registered for path 'interfaces/pcmsolver'; Cloning into 'interfaces/pcmsolver'...; ...; Resolving deltas: 100% (13625/13625), done.; fatal: reference is not a tree: 9bc8e049f14260a4c1b4b2bda898a16850907b1c; Unable to checkout '9bc8e049f14260a4c1b4b2bda898a16850907b1c' in submodule path 'interfaces/pcmsolver'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/189
https://github.com/psi4/psi4/issues/190:14,Testability,test,test,14,"Several dfocc test cases have failed since the summer when we cleared out most of them. Namely, dfomp2p5-grad1, dfomp3-grad2, dfomp2p5-2, and dfomp3-2. Seems to happend on multiple machines: https://testboard.org/cdash/testSummary.php?project=3&name=dfomp2p5-2&date=2015-11-17. @bozkaya, could you take a look? Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/190
https://github.com/psi4/psi4/issues/190:199,Testability,test,testboard,199,"Several dfocc test cases have failed since the summer when we cleared out most of them. Namely, dfomp2p5-grad1, dfomp3-grad2, dfomp2p5-2, and dfomp3-2. Seems to happend on multiple machines: https://testboard.org/cdash/testSummary.php?project=3&name=dfomp2p5-2&date=2015-11-17. @bozkaya, could you take a look? Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/190
https://github.com/psi4/psi4/issues/190:219,Testability,test,testSummary,219,"Several dfocc test cases have failed since the summer when we cleared out most of them. Namely, dfomp2p5-grad1, dfomp3-grad2, dfomp2p5-2, and dfomp3-2. Seems to happend on multiple machines: https://testboard.org/cdash/testSummary.php?project=3&name=dfomp2p5-2&date=2015-11-17. @bozkaya, could you take a look? Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/190
https://github.com/psi4/psi4/issues/190:62,Usability,clear,cleared,62,"Several dfocc test cases have failed since the summer when we cleared out most of them. Namely, dfomp2p5-grad1, dfomp3-grad2, dfomp2p5-2, and dfomp3-2. Seems to happend on multiple machines: https://testboard.org/cdash/testSummary.php?project=3&name=dfomp2p5-2&date=2015-11-17. @bozkaya, could you take a look? Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/190
https://github.com/psi4/psi4/pull/191:1167,Availability,echo,echo,1167,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:10,Deployability,update,updates,10,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:1088,Deployability,update,updated,1088,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:78,Energy Efficiency,Energy,Energy,78,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:591,Energy Efficiency,Energy,Energy,591,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:542,Integrability,wrap,wrapped,542,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:36,Testability,test,testing,36,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/191:1133,Testability,test,test,1133,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/191
https://github.com/psi4/psi4/pull/192:290,Availability,failure,failure,290,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:352,Availability,error,error,352,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:26,Testability,test,test,26,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:203,Testability,test,tests,203,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:242,Testability,test,testresults,242,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:254,Testability,log,log,254,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:280,Testability,test,test,280,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:420,Testability,test,test,420,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/pull/192:587,Testability,test,test,587,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/192
https://github.com/psi4/psi4/issues/194:39,Performance,perform,performs,39,"Dear all, . Does any one know why psi4 performs a 2 electron integral calculation just before dmrg calculation starts, although one has activated density fitting keyword ?. Bests; Luca",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/194
https://github.com/psi4/psi4/issues/195:77,Availability,down,down,77,"If two atoms get within 0.5 Bohr of each other, psi4 crashes. I tracked this down to the overlap matrix having NAN in rows/columns involving AOs centered on the overlapping atom. This seems to be a problem in the part of the code that computes atom mappings, because when I change the tol in petitelist.h:62 to:; `int **compute_atom_map(const Molecule* mol, double tol = 0.1);`; (and the line above), the problem goes away. It seems the AO shells are not created for the overlapping atom, even though parts of the code expect them. Setting c1 symmetry does not help. Here's a small input deck that recreates the problem:. ```; #! H Ghost test. molecule h { ; -1 1; H 0.00000000 0.00000000 0.0; Gh(He) 0.0000000000 0.0000000000 0.2; }. set {; SCF_TYPE DIRECT; DF_SCF_GUESS FALSE; print 4; }. basis {; assign sto-3g; }; energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/195
https://github.com/psi4/psi4/issues/195:818,Energy Efficiency,energy,energy,818,"If two atoms get within 0.5 Bohr of each other, psi4 crashes. I tracked this down to the overlap matrix having NAN in rows/columns involving AOs centered on the overlapping atom. This seems to be a problem in the part of the code that computes atom mappings, because when I change the tol in petitelist.h:62 to:; `int **compute_atom_map(const Molecule* mol, double tol = 0.1);`; (and the line above), the problem goes away. It seems the AO shells are not created for the overlapping atom, even though parts of the code expect them. Setting c1 symmetry does not help. Here's a small input deck that recreates the problem:. ```; #! H Ghost test. molecule h { ; -1 1; H 0.00000000 0.00000000 0.0; Gh(He) 0.0000000000 0.0000000000 0.2; }. set {; SCF_TYPE DIRECT; DF_SCF_GUESS FALSE; print 4; }. basis {; assign sto-3g; }; energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/195
https://github.com/psi4/psi4/issues/195:638,Testability,test,test,638,"If two atoms get within 0.5 Bohr of each other, psi4 crashes. I tracked this down to the overlap matrix having NAN in rows/columns involving AOs centered on the overlapping atom. This seems to be a problem in the part of the code that computes atom mappings, because when I change the tol in petitelist.h:62 to:; `int **compute_atom_map(const Molecule* mol, double tol = 0.1);`; (and the line above), the problem goes away. It seems the AO shells are not created for the overlapping atom, even though parts of the code expect them. Setting c1 symmetry does not help. Here's a small input deck that recreates the problem:. ```; #! H Ghost test. molecule h { ; -1 1; H 0.00000000 0.00000000 0.0; Gh(He) 0.0000000000 0.0000000000 0.2; }. set {; SCF_TYPE DIRECT; DF_SCF_GUESS FALSE; print 4; }. basis {; assign sto-3g; }; energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/195
https://github.com/psi4/psi4/issues/196:287,Availability,error,error,287,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:320,Availability,error,error,320,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:389,Availability,error,error,389,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:458,Availability,error,error,458,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:78,Modifiability,config,config,78,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:305,Modifiability,config,config,305,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:527,Modifiability,config,config,527,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/issues/196:796,Modifiability,config,config,796,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/196
https://github.com/psi4/psi4/pull/197:2,Deployability,update,updated,2,"I updated thermo.cc so that only 1 warning message is printed when the frequencies are checked for low and imaginary values. I also added a newline after the low frequency mode warning. Previous output (3 imaginary modes, total of 12 low frequency modes):. ```; WARNING: At least one vibrational frequency is imaginary!; WARNING: At least one vibrational frequency is imaginary!; WARNING: At least one vibrational frequency is imaginary!; ```. and. ```; Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes.; ```. New output (3 imaginary modes, total of 12 low frequency modes):. ```; WARNING: At least one vibrational frequency is imaginary!; ```. and. ```; Warning: used thermodynamic relations are not appropriate for low frequency modes.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/197
https://github.com/psi4/psi4/pull/197:43,Integrability,message,message,43,"I updated thermo.cc so that only 1 warning message is printed when the frequencies are checked for low and imaginary values. I also added a newline after the low frequency mode warning. Previous output (3 imaginary modes, total of 12 low frequency modes):. ```; WARNING: At least one vibrational frequency is imaginary!; WARNING: At least one vibrational frequency is imaginary!; WARNING: At least one vibrational frequency is imaginary!; ```. and. ```; Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes. Warning: used thermodynamic relations are not appropriate for low frequency modes.; ```. New output (3 imaginary modes, total of 12 low frequency modes):. ```; WARNING: At least one vibrational frequency is imaginary!; ```. and. ```; Warning: used thermodynamic relations are not appropriate for low frequency modes.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/197
https://github.com/psi4/psi4/issues/198:1626,Energy Efficiency,energy,energy,1626,"Dear developers,. I am interested in wave functions and electron densities of molecules solvated by PCM. However, the current implementation of PCM in PSI4 (Psi4 0.3.131 Driver, Git: Rev {master} 7a8bad0 dirty) provides inconsistent electronic properties (e.g. dipole moment) for restricted and unrestricted HF/DFT methods. Obviously, both approaches should converge to the same values for the closed shell systems, but in both cases, the final wave functions and density matrices are perhaps wrong. Dipole moments calculated by electric field perturbation method differ from dipoles calculated from SCF density matrices. It can be illustrated by running the attached input.; [input.txt](https://github.com/psi4/psi4public/files/72199/input.txt). I am not expert in PCM methods or in the QM codes, but I suspect this piece of code in hf.cc:. ```; 540 #ifdef HAVE_PCMSOLVER; 541 if(pcm_enabled_) {; 542 // Prepare the density; 543 SharedMatrix D_pcm;; 544 if(same_a_b_orbs()) {; 545 D_pcm = Da_;; 546 D_pcm->scale(2.0); // PSI4's density doesn't include the occupation; 547 }; 548 else {; 549 D_pcm = Da_;; 550 D_pcm->add(Db_);; 551 }; 552 ; 553 // Add the PCM potential to the Fock matrix; 554 SharedMatrix V_pcm;; 555 V_pcm = hf_pcm_->compute_V();; 556 if(same_a_b_orbs()) Fa_->add(V_pcm);; 557 else {; 558 Fa_->add(V_pcm);; 559 Fb_->add(V_pcm);; 560 }; 561 }; 562 #endif; ```. If these lines are disabled, the dipole moments calculated from density matrices agree with those from finite electric field perturbation calculations. Moreover, convergence for restricted and unrestricted HF/DFT is restored, but the polarization energy and total energy reported by psi4 is not affected. Perhaps some double-counting of PCM contributions takes place in the code. I would be very grateful if this part of the code is reviewed by developers. Regards,. Jiri Vymetal",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/198
https://github.com/psi4/psi4/issues/198:1643,Energy Efficiency,energy,energy,1643,"Dear developers,. I am interested in wave functions and electron densities of molecules solvated by PCM. However, the current implementation of PCM in PSI4 (Psi4 0.3.131 Driver, Git: Rev {master} 7a8bad0 dirty) provides inconsistent electronic properties (e.g. dipole moment) for restricted and unrestricted HF/DFT methods. Obviously, both approaches should converge to the same values for the closed shell systems, but in both cases, the final wave functions and density matrices are perhaps wrong. Dipole moments calculated by electric field perturbation method differ from dipoles calculated from SCF density matrices. It can be illustrated by running the attached input.; [input.txt](https://github.com/psi4/psi4public/files/72199/input.txt). I am not expert in PCM methods or in the QM codes, but I suspect this piece of code in hf.cc:. ```; 540 #ifdef HAVE_PCMSOLVER; 541 if(pcm_enabled_) {; 542 // Prepare the density; 543 SharedMatrix D_pcm;; 544 if(same_a_b_orbs()) {; 545 D_pcm = Da_;; 546 D_pcm->scale(2.0); // PSI4's density doesn't include the occupation; 547 }; 548 else {; 549 D_pcm = Da_;; 550 D_pcm->add(Db_);; 551 }; 552 ; 553 // Add the PCM potential to the Fock matrix; 554 SharedMatrix V_pcm;; 555 V_pcm = hf_pcm_->compute_V();; 556 if(same_a_b_orbs()) Fa_->add(V_pcm);; 557 else {; 558 Fa_->add(V_pcm);; 559 Fb_->add(V_pcm);; 560 }; 561 }; 562 #endif; ```. If these lines are disabled, the dipole moments calculated from density matrices agree with those from finite electric field perturbation calculations. Moreover, convergence for restricted and unrestricted HF/DFT is restored, but the polarization energy and total energy reported by psi4 is not affected. Perhaps some double-counting of PCM contributions takes place in the code. I would be very grateful if this part of the code is reviewed by developers. Regards,. Jiri Vymetal",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/198
https://github.com/psi4/psi4/issues/199:20,Availability,error,error,20,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:157,Availability,down,download,157,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:321,Availability,Error,Error,321,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:589,Availability,Error,Error,589,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:660,Availability,Error,Error,660,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:685,Availability,Error,Error,685,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:198,Deployability,patch,patch,198,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:236,Deployability,update,update,236,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:60,Integrability,depend,dependencies,60,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:391,Integrability,interface,interfaces,391,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:541,Integrability,interface,interfaces,541,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:283,Modifiability,config,configure,283,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:578,Modifiability,config,configure,578,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:146,Performance,Perform,Performing,146,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/issues/199:272,Performance,Perform,Performing,272,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/199
https://github.com/psi4/psi4/pull/200:70,Availability,error,error,70,Documentation fails to build with perl 5.22 and reports the following error:. Can't use 'defined(%hash)' (Maybe you should just omit the defined()?); at /build/psi4-0.3/doc/sphinxman/document_options_c.pl line 150.; doc/sphinxman/CMakeFiles/sphinxman.dir/build.make:106: recipe for; target 'doc/sphinxman/source/autodoc_abbr_options_c.rst' failed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/200
https://github.com/psi4/psi4/pull/200:98,Security,hash,hash,98,Documentation fails to build with perl 5.22 and reports the following error:. Can't use 'defined(%hash)' (Maybe you should just omit the defined()?); at /build/psi4-0.3/doc/sphinxman/document_options_c.pl line 150.; doc/sphinxman/CMakeFiles/sphinxman.dir/build.make:106: recipe for; target 'doc/sphinxman/source/autodoc_abbr_options_c.rst' failed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/200
https://github.com/psi4/psi4/issues/201:704,Availability,Error,Error,704,"Dear all,. I am trying to compile psi4 on a supercomputer, which i don't have a root access to. It is based on Xeons and has the following software avaliable: . gcc/5.2.0, pgi/12.9. intel/13.1.0, intel/15.0.090. mkl/4.0.2.146, mkl/11.2.0. impi/4.0.3, impi/4.1.0-32bit, impi/4.1.0, impi/4.1.0-ofa, impi/5.0.1, impi/5.0.1-ofa. openmpi/1.5.5-gcc, openmpi/1.5.5-icc, openmpi/1.8.4-gcc, openmpi/1.8.4-icc, openmpi/1.6.5-gcc, openmpi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:10474,Availability,Error,Error,10474,"g_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Debug/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Development/cmTC_a8cfe. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=paralle",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16312,Availability,error,errors,16312,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:555,Deployability,release,release,555,"Dear all,. I am trying to compile psi4 on a supercomputer, which i don't have a root access to. It is based on Xeons and has the following software avaliable: . gcc/5.2.0, pgi/12.9. intel/13.1.0, intel/15.0.090. mkl/4.0.2.146, mkl/11.2.0. impi/4.0.3, impi/4.1.0-32bit, impi/4.1.0, impi/4.1.0-ofa, impi/5.0.1, impi/5.0.1-ofa. openmpi/1.5.5-gcc, openmpi/1.5.5-icc, openmpi/1.8.4-gcc, openmpi/1.8.4-icc, openmpi/1.6.5-gcc, openmpi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:1422,Deployability,release,release,1422,"pi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/read_options.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_libparallel.cc.o; [100%] Linking CXX executable ../../../bin/psi4; ld: cannot find -lboost_mpi-1_57; [100%] Built target psi4. And there is no binary in the --prefix I have chosen. The libboost_mpi-1_57.a is really absent in the /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:3302,Deployability,release,release,3302,"have chosen. The libboost_mpi-1_57.a is really absent in the /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4public-master/objdir/boost/lib. Nor it is listed in ""Required Compiled Boost Modules"" on the page https://github.com/psi4/psi4public/wiki/9_Boost. . The comand I used for .setup is as following:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake. The ""master"" verson also had a problem with the pcmsolver so I used an option ""--pcmsolver off"". . After successfull ./setup I went to the objdir and ran ""make"". Does anyone know, what can I do in this case? As far as I unserstand, I can only use mkl with intel compiler. Generally, I need psi4 to compute electronic density grids for fullCI and Coupled Cluster calculations of small molecules with huge basis sets. Thank you in advance.; Best regards,; Michael Medvedev. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:4302,Deployability,release,release,4302," ""--pcmsolver off"". . After successfull ./setup I went to the objdir and ran ""make"". Does anyone know, what can I do in this case? As far as I unserstand, I can only use mkl with intel compiler. Generally, I need psi4 to compute electronic density grids for fullCI and Coupled Cluster calculations of small molecules with huge basis sets. Thank you in advance.; Best regards,; Michael Medvedev. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=gnu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -open",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6980,Deployability,release,release,6980,"-- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:7272,Deployability,release,release,7272,"gy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:7517,Deployability,release,release,7517,"penMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - fo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:9394,Deployability,release,release,9394," mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:10394,Deployability,release,release,10394,"ran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Debug/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Development/cmTC_a8cfe. -- User set explicit MKL fl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:14160,Deployability,release,release,14160,"Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:14452,Deployability,release,release,14452,"_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:14697,Deployability,release,release,14697,"MP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - fo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:8855,Integrability,Interface,Interface,8855,"sr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:8889,Integrability,Interface,Interface,8889,"sr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16035,Integrability,Interface,Interface,16035,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16069,Integrability,Interface,Interface,16069,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:9108,Modifiability,Config,Configuring,9108,"sr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:9256,Modifiability,config,configure,9256,"rsion will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_A",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16288,Modifiability,Config,Configuring,16288,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6395,Performance,Perform,Performing,6395,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6425,Performance,Perform,Performing,6425,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6499,Performance,Perform,Performing,6499,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6540,Performance,Perform,Performing,6540,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6627,Performance,Perform,Performing,6627,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6668,Performance,Perform,Performing,6668,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6759,Performance,Perform,Performing,6759,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6800,Performance,Perform,Performing,6800,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13148,Performance,Perform,Performing,13148,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13184,Performance,Perform,Performing,13184,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13571,Performance,Perform,Performing,13571,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13601,Performance,Perform,Performing,13601,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13676,Performance,Perform,Performing,13676,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13717,Performance,Perform,Performing,13717,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13805,Performance,Perform,Performing,13805,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13846,Performance,Perform,Performing,13846,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13938,Performance,Perform,Performing,13938,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13979,Performance,Perform,Performing,13979,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:1224,Safety,avoid,avoid,1224,"/4.1.0, impi/4.1.0-ofa, impi/5.0.1, impi/5.0.1-ofa. openmpi/1.5.5-gcc, openmpi/1.5.5-icc, openmpi/1.8.4-gcc, openmpi/1.8.4-icc, openmpi/1.6.5-gcc, openmpi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/read_options.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_libparallel.cc.o; [100%] Linking CXX executable ../../../bin/psi4; ld: cannot find -lboost_mpi-1_57; [100%] Built target psi4. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:4487,Safety,detect,detection,4487,"F -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=gnu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -openmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -openmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:5419,Safety,Detect,Detecting,5419, -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=gnu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -openmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -openmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:5455,Safety,Detect,Detecting,5455, -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=gnu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -openmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -openmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:5663,Safety,Detect,Detecting,5663,nu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -openmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -openmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:5697,Safety,Detect,Detecting,5697,nu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -openmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -openmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:5982,Safety,Detect,Detecting,5982,arallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/i,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6022,Safety,Detect,Detecting,6022,arallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 13.1.0.20130121; -- The C compiler identification is Intel 13.1.0.20130121; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/i,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:8835,Safety,Detect,Detecting,8835,"sr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:8869,Safety,Detect,Detecting,8869,"sr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:11036,Safety,detect,detection,11036,to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Debug/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Development/cmTC_a8cfe. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /o,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:12299,Safety,Detect,Detecting,12299,trict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- dec,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:12335,Safety,Detect,Detecting,12335,trict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- dec,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:12543,Safety,Detect,Detecting,12543,Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:12577,Safety,Detect,Detecting,12577,Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:12862,Safety,Detect,Detecting,12862,S_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try Open,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:12902,Safety,Detect,Detecting,12902,S_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;HAVE_MPI;HAVE_DKH; -- The CXX compiler identification is Intel 15.0.0.20140723; -- The C compiler identification is Intel 15.0.0.20140723; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx; -- Check for working CXX compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicxx -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc; -- Check for working C compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try Open,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16015,Safety,Detect,Detecting,16015,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16049,Safety,Detect,Detecting,16049,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:85,Security,access,access,85,"Dear all,. I am trying to compile psi4 on a supercomputer, which i don't have a root access to. It is based on Xeons and has the following software avaliable: . gcc/5.2.0, pgi/12.9. intel/13.1.0, intel/15.0.090. mkl/4.0.2.146, mkl/11.2.0. impi/4.0.3, impi/4.1.0-32bit, impi/4.1.0, impi/4.1.0-ofa, impi/5.0.1, impi/5.0.1-ofa. openmpi/1.5.5-gcc, openmpi/1.5.5-icc, openmpi/1.8.4-gcc, openmpi/1.8.4-icc, openmpi/1.6.5-gcc, openmpi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6406,Testability,Test,Test,6406,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6436,Testability,Test,Test,6436,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6510,Testability,Test,Test,6510,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6551,Testability,Test,Test,6551,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6638,Testability,Test,Test,6638,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6679,Testability,Test,Test,6679,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6770,Testability,Test,Test,6770,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:6811,Testability,Test,Test,6811,l/impi/5.0.1.035/intel64/bin/mpicc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- The Fortran compiler identification is Intel 13.1.0.20130121; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Buggy compiler support for C++11. Using older standard.; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -openmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_Fortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/l,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13159,Testability,Test,Test,13159,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13195,Testability,Test,Test,13195,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13582,Testability,Test,Test,13582,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13612,Testability,Test,Test,13612,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13687,Testability,Test,Test,13687,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13728,Testability,Test,Test,13728,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13816,Testability,Test,Test,13816,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13857,Testability,Test,Test,13857,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13949,Testability,Test,Test,13949,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:13990,Testability,Test,Test,13990,cting C compiler ABI info - done; -- The Fortran compiler identification is Intel 15.0.0.20140723; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77; -- Check for working Fortran compiler: /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90; -- Checking whether /opt/intel/impi/5.0.1.035/intel64/bin/mpif77 supports Fortran 90 -- yes; -- Fortran ENABLED; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found MPI_C: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- Found MPI_CXX: /opt/intel/impi/5.0.1.035/intel64/lib/libmpicxx.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16435,Testability,log,log,16435,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/201:16564,Testability,log,log,16564,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/201
https://github.com/psi4/psi4/issues/204:11593,Deployability,UPDATE,UPDATE,11593,.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 1.16 seconds = 0.02 minutes; system time = 0.06 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 11.55 seconds = 0.19 minutes; system time = 0.35 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 10 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 10 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; MAXITER = 12 NUM PRINT = 20; NUM ROOTS = 1 ICORE = 0; PRINT = 1 FCI = yes; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A R,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:252,Energy Efficiency,energy,energy,252,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:510,Energy Efficiency,Energy,Energy,510,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:555,Energy Efficiency,Energy,Energy,555,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:603,Energy Efficiency,energy,energy,603,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:638,Energy Efficiency,energy,energy,638,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:676,Energy Efficiency,energy,energy,676,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:712,Energy Efficiency,energy,energy,712,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:751,Energy Efficiency,energy,energy,751,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:785,Energy Efficiency,energy,energy,785,"Dear all,. I am trying to make FCI/aug-cc-pVTZ calculation on a fluoride-anion. The input file is:. memory 48000 mb; molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }; set globals {; basis aug-cc-pVTZ; icore 0; }; thisenergy = energy('fci'). I am running it on a node with 12 cores and 48 GiB of RAM and gets the following:. ..........; There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396. If the length is in bytes, then it seems, that I need ~30 GiB, while I have 48. What is the reason, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:2013,Energy Efficiency,Energy,Energy,2013,"on, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); h2o = geometry(""""""; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; """""",""h2o""); psi4.IO.set_default_namespace(""h2o""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:2179,Energy Efficiency,energy,energy,2179,"------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); h2o = geometry(""""""; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; """""",""h2o""); psi4.IO.set_default_namespace(""h2o""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:2757,Energy Efficiency,energy,energy,2757,"ow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); h2o = geometry(""""""; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; """""",""h2o""); psi4.IO.set_default_namespace(""h2o""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = -1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; F 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = -1; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional oc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:3184,Energy Efficiency,charge,charge,3184,"ergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); h2o = geometry(""""""; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; """""",""h2o""); psi4.IO.set_default_namespace(""h2o""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = -1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; F 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = -1; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:3583,Energy Efficiency,Charge,Charge,3583,"o""); psi4.IO.set_default_namespace(""h2o""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = -1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; F 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = -1; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 5 5 5 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:3783,Energy Efficiency,Energy,Energy,3783," GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett; RHF Reference; 12 Threads, 48000 MiB Core; ---------------------------------------------------------; ```. ==> Geometry <==. ```; Molecular point group: d2h; Geometry (in Bohr), charge = -1, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; F 0.000000000000 0.000000000000 0.000000000000; ```. Running in d2h symmetry. Rotational constants: A = ***********\* B = ***********\* C = ***********\* [cm^-1]; Rotational constants: A = ***********\* B = ***********\* C = ***********\* [MHz]; Nuclear repulsion = 0.000000000000000. Charge = -1; Multiplicity = 1; Electrons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 5 5 5 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (MB): 34332; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set:; Number of shells: 30; Number of ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:5077,Energy Efficiency,Energy,Energy,5077,". ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 5 5 5 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (MB): 34332; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set:; Number of shells: 30; Number of basis function: 104; Number of Cartesian functions: 131; Spherical Harmonics?: true; Max angular momentum: 4. Minimum eigenvalue in the overlap matrix is 2.8456599490E-02.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -84.75156121243363 -8.47516e+01 4.62678e-01; @DF-RHF iter 2: -84.57553975935072 1.76021e-01 1.57599e-01 DIIS; @DF-RHF iter 3: -95.37276589956019 -1.07972e+01 2.29222e-01 DIIS; @DF-RHF iter 4: -98.17150610513394 -2.79874e+00 1.13514e-01 DIIS; @DF-RHF iter 5: -99.36228201796470 -1.19078e+00 2.49350e-02 DIIS; @DF-RHF iter 6: -99.44980963420196 -8.75276e-02 2.84013e-03 DIIS; @DF-RHF iter 7: -99.45076800401445 -9.58370e-04 5.43402e-04 DIIS; @DF-RHF iter 8: -99.45080520800713 -3.72040e-05 3.28500e-05 DIIS; @DF-RHF iter 9: -99.45080550249595 -2.94489e-07 2.15118e-05 DIIS; @DF-RHF iter 10: -99.45080555220893 -4.97130e-08 5.15361e-07 DIIS; @DF-RHF iter 11: -99.45080555224379 -3.48592e-11 5.53172e-08 DIIS; @DF-RHF iter 12: -99.45080555224428 -4.83169e-13 8.21984e-09 DIIS. DF guess converged. ==> Integral Setup <==. MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 1; Number of AO shells: 14; Number of SO shells: 14; N",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:7792,Energy Efficiency,Energy,Energy,7792,"S; @RHF iter 15: -99.45080702229581 -2.23110e-12 2.66726e-07 DIIS; @RHF iter 16: -99.45080702230226 -6.45173e-12 5.58591e-09 DIIS. ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -25.833682 2Ag -1.076019 1B3u -0.180947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:7821,Energy Efficiency,Energy,Energy,7821,"45080702229581 -2.23110e-12 2.66726e-07 DIIS; @RHF iter 16: -99.45080702230226 -6.45173e-12 5.58591e-09 DIIS. ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -25.833682 2Ag -1.076019 1B3u -0.180947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module tim",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:7890,Energy Efficiency,Energy,Energy,7890,"9.45080702230226 -6.45173e-12 5.58591e-09 DIIS. ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -25.833682 2Ag -1.076019 1B3u -0.180947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:7932,Energy Efficiency,Energy,Energy,7932,"9 DIIS. ==> Post-Iterations <==. ```; Orbital Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -25.833682 2Ag -1.076019 1B3u -0.180947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:7977,Energy Efficiency,Energy,Energy,7977,"l Energies (a.u.); -----------------------. Doubly Occupied:. 1Ag -25.833682 2Ag -1.076019 1B3u -0.180947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:8032,Energy Efficiency,Energy,Energy,8032,"y Occupied:. 1Ag -25.833682 2Ag -1.076019 1B3u -0.180947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:8082,Energy Efficiency,Energy,Energy,8082,"0947; 1B2u -0.180947 1B1u -0.180947. Virtual:. 2B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 second",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:8128,Energy Efficiency,Energy,Energy,8128,"B2u 0.442532 2B3u 0.442532 2B1u 0.442532; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:8161,Energy Efficiency,Energy,Energy,8161,"2; 3Ag 0.485648 4Ag 1.228480 1B3g 1.228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:8196,Energy Efficiency,Energy,Energy,8196,".228480; 5Ag 1.228480 1B2g 1.228480 1B1g 1.228480; 3B3u 1.526002 3B2u 1.526002 3B1u 1.526002; 6Ag 2.051155 7Ag 3.283338 2B2g 3.283338; 2B3g 3.283338 2B1g 3.283338 8Ag 3.283338; 4B2u 3.331721 4B3u 3.331721 1Au 3.331721; 4B1u 3.331721 5B3u 3.331721 5B2u 3.331721; 5B1u 3.331721 6B2u 5.672254 6B1u 5.672254; 6B3u 5.672254 7B1u 9.267994 7B2u 9.267994; 7B3u 9.267994 8B1u 9.267994 8B3u 9.267994; 2Au 9.267994 8B2u 9.267994 9Ag 9.745165; 3B2g 9.745165 3B1g 9.745165 3B3g 9.745165; 10Ag 9.745165 11Ag 10.965644. Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; ```. Energy converged. @RHF Final Energy: -99.45080702230226. => Energetics <=. ```; Nuclear Repulsion Energy = 0.0000000000000000; One-Electron Energy = -143.9965313656634294; Two-Electron Energy = 44.5457243433611438; DFT Exchange-Correlation Energy = 0.0000000000000000; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -99.4508070223022855. Alert: EFP and PCM quantities not currently incorporated into SCF psivars.; ```. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Electronic Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000. Dipole Moment: (a.u.); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Dipole Moment: (Debye); X: 0.0000 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ```; *****************************",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:10270,Energy Efficiency,energy,energy,10270," to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 1 0 7 0; B2u 8 0 1 0 7 0; B3u 8 0 1 0 7 0. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -99.45080702230226. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 1.16 seconds = 0.02 minutes; system time = 0.06 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 11.55 seconds = 0.19 minutes; system time = 0.35 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 10 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 10 H0 BLOCKSIZE =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:10309,Energy Efficiency,energy,energy,10309,"niel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 1 0 7 0; B2u 8 0 1 0 7 0; B3u 8 0 1 0 7 0. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -99.45080702230226. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 1.16 seconds = 0.02 minutes; system time = 0.06 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 11.55 seconds = 0.19 minutes; system time = 0.35 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 10 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 10 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:10447,Energy Efficiency,energy,energy,10447," Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 1 0 7 0; B2u 8 0 1 0 7 0; B3u 8 0 1 0 7 0. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -99.45080702230226. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 1.16 seconds = 0.02 minutes; system time = 0.06 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 11.55 seconds = 0.19 minutes; system time = 0.35 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 10 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 10 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; MAXITER = 12 NUM PRINT = 20; NUM ROOTS = 1 ICORE = 0; PRINT = 1 FC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13070,Energy Efficiency,Energy,Energy,13070,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13115,Energy Efficiency,Energy,Energy,13115,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13163,Energy Efficiency,energy,energy,13163,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13198,Energy Efficiency,energy,energy,13198,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13236,Energy Efficiency,energy,energy,13236,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13272,Energy Efficiency,energy,energy,13272,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13311,Energy Efficiency,energy,energy,13311,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:13345,Energy Efficiency,energy,energy,13345,ONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; IOPEN = no; RAS1 LVL = 4 A RAS3 MAX = 5; RAS1 MIN = 0 B RAS3 MAX = 5; A RAS1 LVL = 4 RAS4 LVL = 46; A RAS1 MIN = 0 A RAS4 MAX = 0; A RAS1 MAX = 5 B RAS4 MAX = 0; B RAS1 LVL = 4 RAS4 MAX = 0; B RAS1 MIN = 0 A RAS34 MAX = 5; B RAS1 MAX = 5 B RAS34 MAX = 5; RAS3 LVL = 5 RAS34 MAX = 10; RAS3 MAX = 10. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTRICTED DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTRICTED UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. ---. There are 1370754 alpha strings; There are 1370754 beta strings; CI space contains 8 blocks. CI space requires 234872686232 determinants. Check SCF Energy from 1- and 2-electron integrals. SCF Energy (ref): -99.4508070223; Nuclear repulsion energy: 0.0000000000; One-electron energy: -143.9965314821; Two-electron energy: 44.5457244598; Dropped core energy: 0.0000000000; Total electronic energy: -99.4508070223; Total SCF energy: -99.4508070223. CI vector/subblock length = 29726587396; init_array: trouble allocating memory; size = 29726587396,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:5950,Integrability,Wrap,Wrapper,5950,"490E-02.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -84.75156121243363 -8.47516e+01 4.62678e-01; @DF-RHF iter 2: -84.57553975935072 1.76021e-01 1.57599e-01 DIIS; @DF-RHF iter 3: -95.37276589956019 -1.07972e+01 2.29222e-01 DIIS; @DF-RHF iter 4: -98.17150610513394 -2.79874e+00 1.13514e-01 DIIS; @DF-RHF iter 5: -99.36228201796470 -1.19078e+00 2.49350e-02 DIIS; @DF-RHF iter 6: -99.44980963420196 -8.75276e-02 2.84013e-03 DIIS; @DF-RHF iter 7: -99.45076800401445 -9.58370e-04 5.43402e-04 DIIS; @DF-RHF iter 8: -99.45080520800713 -3.72040e-05 3.28500e-05 DIIS; @DF-RHF iter 9: -99.45080550249595 -2.94489e-07 2.15118e-05 DIIS; @DF-RHF iter 10: -99.45080555220893 -4.97130e-08 5.15361e-07 DIIS; @DF-RHF iter 11: -99.45080555224379 -3.48592e-11 5.53172e-08 DIIS; @DF-RHF iter 12: -99.45080555224428 -4.83169e-13 8.21984e-09 DIIS. DF guess converged. ==> Integral Setup <==. MINTS: Wrapper to libmints.; by Justin Turney. Calculation information:; Number of atoms: 1; Number of AO shells: 14; Number of SO shells: 14; Number of primitives: 30; Number of atomic orbitals: 55; Number of basis functions: 46. ```; Number of irreps: 8; Integral cutoff 0.00e+00; Number of functions per irrep: [ 11 3 3 3 2 8 8 8 ]; ```. OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ```; Computing two-electron integrals...done; Computed 68684 non-zero two-electron integrals.; Stored in file 33. Batch 1 pq = [ 0, 195] index = [ 0,19110]; ```. ==> DiskJK: Disk-Based J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 34332; Schwarz Cutoff: 1E-12; ```. @RHF iter 13: -99.45080702212313 -1.46988e-06 2.13235e-06 DIIS; @RHF iter 14: -99.45080702229357 -1.70445e-10 3.50041e-07 DIIS; @RHF iter 15: -99.45080702229581 -2.23110e-12 2.66726e-07 DIIS; @RHF iter 16: -99.45080702230226 -6.45173e-12 5.58591e-09 DIIS. ==> Post-Iterations <==. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:11343,Modifiability,COUPLING,COUPLING,11343,"2230226. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 1.16 seconds = 0.02 minutes; system time = 0.06 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 11.55 seconds = 0.19 minutes; system time = 0.35 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ---. ```; D E T C I. C. David Sherrill; Matt L. Leininger; 18 June 1999; ```. ---. Note: Calculation requested is a full CI.; Resetting EX_LEVEL to 10 and turning on all excitations. DETCI PARAMETERS:; EX LEVEL = 10 H0 BLOCKSIZE = 400; VAL EX LEVEL = 0 H0 GUESS SIZE= 400; H0COUPLINGSIZE= 0 H0 COUPLING = no; MAXITER = 12 NUM PRINT = 20; NUM ROOTS = 1 ICORE = 0; PRINT = 1 FCI = yes; R CONV = 1.00e-04 MIXED = yes; E CONV = 1.00e-06 MIXED4 = yes; OEI FILE = 35 R4S = no; REPL OTF = no; TEI FILE = 72 DIAG METHOD = SEM; PRECONDITIONER= DAVIDSON UPDATE = DAVIDSON; S = 0.0000 Ms0 = yes; MAX NUM VECS = 13; RESTART = no; GUESS VECTOR = H0BLOCK OPENTYPE = NONE; REF SYM = auto; COLLAPSE SIZE = 1 HD AVG = EVANGELISTI; LSE = no LSE ITER = 0; HD OTF = yes NO DFILE = no; MPN = no MPN SCHMIDT = no; ZAPTN = no MPN WIGNER = no; PERT Z = 1.0000 FOLLOW ROOT = 0; NUM THREADS = 12; VECS WRITE = no NUM VECS WRITE = 0; FILTER GUESS = no SF RESTRICT = no; OPDM = no TRANS DENSITY= no. FILES = 50 51 52 53. EX ALLOW = 1 1 1 1 1 1 1 1 1 1; STATE AVERAGE = 1(1.00); STATE AVERAGE = 1(1.00). ORBITALS:; NMO = 46; FROZEN CORE = 0 RESTR CORE = 0; FROZEN VIRT = 0 RESTR VIRT = 0; DROPPED CORE = 0 DROPPED VIRT = 0; EXPLICIT CORE= 0 ORBS IN CI = 46; NUM ALP = 5 NUM BET = 5; NUM ALP EXPL = 5 NUM BET EXPL = 5; ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:4655,Performance,Cache,Cache,4655,"trons = 10; Nalpha = 5; Nbeta = 5. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE.; Energy threshold = 1.00e-08; Density threshold = 1.00e-08; Integral threshold = 0.00e+00. ==> Primary Basis <==. Basis Set: AUG-CC-PVTZ; Number of shells: 14; Number of basis function: 46; Number of Cartesian functions: 55; Spherical Harmonics?: true; Max angular momentum: 3. ==> Pre-Iterations <==. ---. ```; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; ```. ---. ```; Ag 11 11 0 0 0 0; B1g 3 3 0 0 0 0; B2g 3 3 0 0 0 0; B3g 3 3 0 0 0 0; Au 2 2 0 0 0 0; B1u 8 8 0 0 0 0; B2u 8 8 0 0 0 0; B3u 8 8 0 0 0 0; ```. ---. ```; Total 46 46 5 5 5 0; ```. ---. Starting with a DF guess... OEINTS: Overlap, kinetic, potential, dipole, and quadrupole integrals; stored in file 35. ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. ```; J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 12; Integrals threads: 12; Memory (MB): 34332; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12; ```. => Auxiliary Basis Set <=. Basis Set:; Number of shells: 30; Number of basis function: 104; Number of Cartesian functions: 131; Spherical Harmonics?: true; Max angular momentum: 4. Minimum eigenvalue in the overlap matrix is 2.8456599490E-02.; Using Symmetric Orthogonalization.; SCF Guess: Core (One-Electron) Hamiltonian. ==> Iterations <==. ```; Total Energy Delta E RMS |[F,P]|; ```. @DF-RHF iter 1: -84.75156121243363 -8.47516e+01 4.62678e-01; @DF-RHF iter 2: -84.57553975935072 1.76021e-01 1.57599e-01 DIIS; @DF-RHF iter 3: -95.37276589956019 -1.07972e+01 2.29222e-01 DIIS; @DF-RHF iter 4: -98.17150610513394 -2.79874e+00 1.13514e-01 DIIS; @DF-RHF iter 5: -99.36228201796470 -1.19078e+00 2.49350e-02 DIIS; @DF-RHF iter 6: -99.44980963420196 -8.75276e-02 2.84013e-03 DIIS; @DF-RHF iter 7: -99.45076800401445 -9.58370e-04 5.43402e-04 DIIS; @DF-RHF iter 8: -99.45080520800713 -3.72040e-05 3.28",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:9591,Performance,Cache,Cache,9591,"00 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 1 0 7 0; B2u 8 0 1 0 7 0; B3u 8 0 1 0 7 0. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -99.45080702230226. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:9608,Performance,Cache,Cache,9608,"00 Y: 0.0000 Z: 0.0000 Total: 0.0000. Saving occupied orbitals to File 180. **\* tstop() called on node5-027-06 at Fri Jan 8 13:56:55 2016; Module time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes; Total time:; user time = 10.33 seconds = 0.17 minutes; system time = 0.28 seconds = 0.00 minutes; total time = 2 seconds = 0.03 minutes. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:55 2016. ```; **************************************************; * TRANSQT2: Program to transform integrals from *; * the SO basis to the MO basis. *; * *; * Daniel, David, & Justin *; **************************************************. Input parameters:; -----------------; Wave function = DETCI; Backtransform = No; Print Level = 1; Print TEIs = No; Reference wfn = RHF; Derivative = None; Delete TEI File = Yes; Memory (Mbytes) = 48000.0; Cache Level = 2; Cache Type = LRU; Chkpt Parameters:; --------------------; Number of irreps = 8; Number of SOs = 46; Number of MOs = 46; Number of active MOs = 46. Label # SOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; Ag 11 0 2 0 9 0; B1g 3 0 0 0 3 0; B2g 3 0 0 0 3 0; B3g 3 0 0 0 3 0; Au 2 0 0 0 2 0; B1u 8 0 1 0 7 0; B2u 8 0 1 0 7 0; B3u 8 0 1 0 7 0. DOCC = 2 0 0 0 0 1 1 1; SOCC = 0 0 0 0 0 0 0 0. FROZEN DOCC = 0 0 0 0 0 0 0 0; RESTR DOCC = 0 0 0 0 0 0 0 0; RAS 1 = 2 0 0 0 0 1 1 1; RAS 2 = 0 0 0 0 0 0 0 0; RAS 3 = 9 3 3 3 2 7 7 7; RAS 4 = 0 0 0 0 0 0 0 0; RESTR UOCC = 0 0 0 0 0 0 0 0; FROZEN UOCC = 0 0 0 0 0 0 0 0. Nuclear Rep. energy (chkpt) = 0.00000000000000; SCF energy (chkpt) = -99.45080702230226. Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (pq,rs) nbuckets = 1; Frozen-core energy = 0.000000000000000; Starting first half-transformation.; Sorting half-transformed integrals.; Starting second half-transformation.; Two-electron integral transformation complete.; ```. **\* tstop() called on node5-027",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/204:2004,Testability,Test,Test,2004,"on, why the job fails? What can I do to make it work?. Thank you in advance. Best regards,; Michael Medvedev. ---. The full output:; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. ```; Git: Rev {(no tag)}. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Fri Jan 8 13:56:46 2016. Process ID: 11885; PSI4DATADIR: ./lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! 6-31G H2O Test FCI Energy Point. memory 48000 mb. molecule h2o {; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; }. set globals {; basis aug-cc-pVTZ; icore 0; }. thisenergy = energy('fci'). ---. Input file to run:; from psi4 import *; from p4const import *; from p4util import *; from molutil import *; from aliases import *; psi4_io = psi4.IOManager.shared_object(); psi4.efp_init(); psi4_io.set_default_path(""/tmp""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""). psi4.set_memory(48000000000). psi4.efp_init(); h2o = geometry(""""""; -1 1; F .0000000000 .0000000000 -.000000000; units bohr; """""",""h2o""); psi4.IO.set_default_namespace(""h2o""); psi4.set_global_option(""BASIS"", ""aug-cc-pVTZ""); psi4.set_global_option(""ICORE"", 0); thisenergy = energy('fci'). Memory set to 48.000 GiB by Python script. **\* tstart() called on node5-027-06; **\* at Fri Jan 8 13:56:53 2016. ```; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, and Andy Simmonett;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/204
https://github.com/psi4/psi4/issues/205:68,Availability,error,error,68,"Commit e6916b7b14ee873e1218de36bab6fb60e99abf3d gives a compilation error. The PsiAPI directory is missing:. ```; CMake Error at CMakeLists.txt:286 (add_subdirectory):; add_subdirectory given source ""PsiAPI"" which is not an existing directory.; ```. This should be an easy fix.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/205
https://github.com/psi4/psi4/issues/205:120,Availability,Error,Error,120,"Commit e6916b7b14ee873e1218de36bab6fb60e99abf3d gives a compilation error. The PsiAPI directory is missing:. ```; CMake Error at CMakeLists.txt:286 (add_subdirectory):; add_subdirectory given source ""PsiAPI"" which is not an existing directory.; ```. This should be an easy fix.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/205
https://github.com/psi4/psi4/issues/206:37,Availability,error,errors,37,"I am getting a series of compilation errors:. ```; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:1: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:120,Availability,error,error,120,"I am getting a series of compilation errors:. ```; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:1: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:537,Availability,error,error,537,"I am getting a series of compilation errors:. ```; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:1: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:897,Availability,error,error,897,"I am getting a series of compilation errors:. ```; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:1: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:1229,Availability,error,error,1229,"i::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:1389,Availability,error,error,1389,"o/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/Li",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:1599,Availability,error,error,1599,"/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:1731,Availability,error,error,1731,"onst std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Sourc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:1876,Availability,error,error,1876," MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:2212,Availability,error,error,2212,"rc/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFra",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:2650,Availability,error,error,2650,"or: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:3159,Availability,error,error,3159,"undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: erro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:3314,Availability,error,error,3314,"nst std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:3493,Availability,error,error,3493,"g::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:3677,Availability,error,error,3677,"::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/Lib",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:3861,Availability,error,error,3861,"version from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undecl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:4045,Availability,error,error,4045,"gs_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:4222,Availability,error,error,4222,"unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors genera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:4442,Availability,error,error,4442," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:4870,Availability,error,error,4870," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:5227,Availability,error,error,5227," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:5243,Availability,error,errors,5243," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:5309,Availability,error,errors,5309," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:5398,Availability,Error,Error,5398," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:5462,Availability,Error,Error,5462," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/206:5487,Availability,Error,Error,5487," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/206
https://github.com/psi4/psi4/issues/207:4879,Availability,error,error,4879,"(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""double const& Section::get<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getDbl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""int const& Section::get<int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getInt(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""Section::getSect(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Input::reader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in libpcm.a(Input.cpp.o); ""_crc32"", referenced from:; void cnpy::npz_save<unsigned int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); void cnpy::npz_save<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/207
https://github.com/psi4/psi4/issues/207:4977,Availability,Error,Error,4977,"(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""double const& Section::get<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getDbl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""int const& Section::get<int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getInt(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""Section::getSect(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Input::reader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in libpcm.a(Input.cpp.o); ""_crc32"", referenced from:; void cnpy::npz_save<unsigned int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); void cnpy::npz_save<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/207
https://github.com/psi4/psi4/issues/207:5038,Availability,Error,Error,5038,"(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""double const& Section::get<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getDbl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""int const& Section::get<int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getInt(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""Section::getSect(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Input::reader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in libpcm.a(Input.cpp.o); ""_crc32"", referenced from:; void cnpy::npz_save<unsigned int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); void cnpy::npz_save<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/207
https://github.com/psi4/psi4/issues/209:62,Energy Efficiency,energy,energy,62,"The following job converges to a nonsensical CCSD correlation energy (about -4 hartrees) on our i7-5930 nodes. Even on iteration 2, the problem is manifesting:. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -2.3661052959 -2.3661052959 0.8065388359 14; 1 1 1 -3.3098744652 -0.9437691693 1.5557928713 155; ```. ```; molecule{; C 2.072533 0.400337 0.000000 ; C 2.351068 -0.237230 -1.205081 ; C 2.351068 -0.237230 1.205081 ; C 2.908137 -1.512363 -1.205081 ; C 2.908137 -1.512363 1.205081 ; C 3.186672 -2.149930 0.000000 ; H 1.640169 1.390021 0.000000 ; H 2.134886 0.257612 -2.140393 ; H 2.134886 0.257612 2.140393 ; H 3.124320 -2.007205 -2.140393 ; H 3.124320 -2.007205 2.140393 ; H 3.619036 -3.139614 0.000000 ; C -1.382969 1.594698 0.000000 ; C -0.970087 2.154700 -1.205081 ; C -0.970087 2.154700 1.205081 ; C -0.144324 3.274703 -1.205081 ; C -0.144324 3.274703 1.205081 ; C 0.268558 3.834704 0.000000 ; H -2.023878 0.725418 0.000000 ; H -1.290542 1.720059 -2.140393 ; H -1.290542 1.720059 2.140393 ; H 0.176131 3.709343 -2.140393 ; H 0.176131 3.709343 2.140393 ; H 0.909467 4.703984 0.000000 ; C -0.689564 -1.995035 0.000000 ; C -1.380981 -1.917470 -1.205081 ; C -1.380981 -1.917470 1.205081 ; C -2.763814 -1.762339 -1.205081 ; C -2.763814 -1.762339 1.205081 ; C -3.455230 -1.684774 0.000000 ; H 0.383709 -2.115439 0.000000 ; H -0.844344 -1.977672 -2.140393 ; H -0.844344 -1.977672 2.140393 ; H -3.300450 -1.702138 -2.140393 ; H -3.300450 -1.702138 2.140393 ; H -4.528503 -1.564371 0.000000 ; }; memory 60 Gb; set{; basis cc-pvdz; freeze_core true; scf_type df; guess SAD; }. energy('FNO-DF-CCSD(T)'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/209
https://github.com/psi4/psi4/issues/209:176,Energy Efficiency,Energy,Energy,176,"The following job converges to a nonsensical CCSD correlation energy (about -4 hartrees) on our i7-5930 nodes. Even on iteration 2, the problem is manifesting:. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -2.3661052959 -2.3661052959 0.8065388359 14; 1 1 1 -3.3098744652 -0.9437691693 1.5557928713 155; ```. ```; molecule{; C 2.072533 0.400337 0.000000 ; C 2.351068 -0.237230 -1.205081 ; C 2.351068 -0.237230 1.205081 ; C 2.908137 -1.512363 -1.205081 ; C 2.908137 -1.512363 1.205081 ; C 3.186672 -2.149930 0.000000 ; H 1.640169 1.390021 0.000000 ; H 2.134886 0.257612 -2.140393 ; H 2.134886 0.257612 2.140393 ; H 3.124320 -2.007205 -2.140393 ; H 3.124320 -2.007205 2.140393 ; H 3.619036 -3.139614 0.000000 ; C -1.382969 1.594698 0.000000 ; C -0.970087 2.154700 -1.205081 ; C -0.970087 2.154700 1.205081 ; C -0.144324 3.274703 -1.205081 ; C -0.144324 3.274703 1.205081 ; C 0.268558 3.834704 0.000000 ; H -2.023878 0.725418 0.000000 ; H -1.290542 1.720059 -2.140393 ; H -1.290542 1.720059 2.140393 ; H 0.176131 3.709343 -2.140393 ; H 0.176131 3.709343 2.140393 ; H 0.909467 4.703984 0.000000 ; C -0.689564 -1.995035 0.000000 ; C -1.380981 -1.917470 -1.205081 ; C -1.380981 -1.917470 1.205081 ; C -2.763814 -1.762339 -1.205081 ; C -2.763814 -1.762339 1.205081 ; C -3.455230 -1.684774 0.000000 ; H 0.383709 -2.115439 0.000000 ; H -0.844344 -1.977672 -2.140393 ; H -0.844344 -1.977672 2.140393 ; H -3.300450 -1.702138 -2.140393 ; H -3.300450 -1.702138 2.140393 ; H -4.528503 -1.564371 0.000000 ; }; memory 60 Gb; set{; basis cc-pvdz; freeze_core true; scf_type df; guess SAD; }. energy('FNO-DF-CCSD(T)'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/209
https://github.com/psi4/psi4/issues/209:185,Energy Efficiency,Energy,Energy,185,"The following job converges to a nonsensical CCSD correlation energy (about -4 hartrees) on our i7-5930 nodes. Even on iteration 2, the problem is manifesting:. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -2.3661052959 -2.3661052959 0.8065388359 14; 1 1 1 -3.3098744652 -0.9437691693 1.5557928713 155; ```. ```; molecule{; C 2.072533 0.400337 0.000000 ; C 2.351068 -0.237230 -1.205081 ; C 2.351068 -0.237230 1.205081 ; C 2.908137 -1.512363 -1.205081 ; C 2.908137 -1.512363 1.205081 ; C 3.186672 -2.149930 0.000000 ; H 1.640169 1.390021 0.000000 ; H 2.134886 0.257612 -2.140393 ; H 2.134886 0.257612 2.140393 ; H 3.124320 -2.007205 -2.140393 ; H 3.124320 -2.007205 2.140393 ; H 3.619036 -3.139614 0.000000 ; C -1.382969 1.594698 0.000000 ; C -0.970087 2.154700 -1.205081 ; C -0.970087 2.154700 1.205081 ; C -0.144324 3.274703 -1.205081 ; C -0.144324 3.274703 1.205081 ; C 0.268558 3.834704 0.000000 ; H -2.023878 0.725418 0.000000 ; H -1.290542 1.720059 -2.140393 ; H -1.290542 1.720059 2.140393 ; H 0.176131 3.709343 -2.140393 ; H 0.176131 3.709343 2.140393 ; H 0.909467 4.703984 0.000000 ; C -0.689564 -1.995035 0.000000 ; C -1.380981 -1.917470 -1.205081 ; C -1.380981 -1.917470 1.205081 ; C -2.763814 -1.762339 -1.205081 ; C -2.763814 -1.762339 1.205081 ; C -3.455230 -1.684774 0.000000 ; H 0.383709 -2.115439 0.000000 ; H -0.844344 -1.977672 -2.140393 ; H -0.844344 -1.977672 2.140393 ; H -3.300450 -1.702138 -2.140393 ; H -3.300450 -1.702138 2.140393 ; H -4.528503 -1.564371 0.000000 ; }; memory 60 Gb; set{; basis cc-pvdz; freeze_core true; scf_type df; guess SAD; }. energy('FNO-DF-CCSD(T)'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/209
https://github.com/psi4/psi4/issues/209:1580,Energy Efficiency,energy,energy,1580,"The following job converges to a nonsensical CCSD correlation energy (about -4 hartrees) on our i7-5930 nodes. Even on iteration 2, the problem is manifesting:. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 -2.3661052959 -2.3661052959 0.8065388359 14; 1 1 1 -3.3098744652 -0.9437691693 1.5557928713 155; ```. ```; molecule{; C 2.072533 0.400337 0.000000 ; C 2.351068 -0.237230 -1.205081 ; C 2.351068 -0.237230 1.205081 ; C 2.908137 -1.512363 -1.205081 ; C 2.908137 -1.512363 1.205081 ; C 3.186672 -2.149930 0.000000 ; H 1.640169 1.390021 0.000000 ; H 2.134886 0.257612 -2.140393 ; H 2.134886 0.257612 2.140393 ; H 3.124320 -2.007205 -2.140393 ; H 3.124320 -2.007205 2.140393 ; H 3.619036 -3.139614 0.000000 ; C -1.382969 1.594698 0.000000 ; C -0.970087 2.154700 -1.205081 ; C -0.970087 2.154700 1.205081 ; C -0.144324 3.274703 -1.205081 ; C -0.144324 3.274703 1.205081 ; C 0.268558 3.834704 0.000000 ; H -2.023878 0.725418 0.000000 ; H -1.290542 1.720059 -2.140393 ; H -1.290542 1.720059 2.140393 ; H 0.176131 3.709343 -2.140393 ; H 0.176131 3.709343 2.140393 ; H 0.909467 4.703984 0.000000 ; C -0.689564 -1.995035 0.000000 ; C -1.380981 -1.917470 -1.205081 ; C -1.380981 -1.917470 1.205081 ; C -2.763814 -1.762339 -1.205081 ; C -2.763814 -1.762339 1.205081 ; C -3.455230 -1.684774 0.000000 ; H 0.383709 -2.115439 0.000000 ; H -0.844344 -1.977672 -2.140393 ; H -0.844344 -1.977672 2.140393 ; H -3.300450 -1.702138 -2.140393 ; H -3.300450 -1.702138 2.140393 ; H -4.528503 -1.564371 0.000000 ; }; memory 60 Gb; set{; basis cc-pvdz; freeze_core true; scf_type df; guess SAD; }. energy('FNO-DF-CCSD(T)'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/209
https://github.com/psi4/psi4/issues/210:32,Energy Efficiency,Energy,Energy,32,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:79,Energy Efficiency,energy,energy,79,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:114,Energy Efficiency,energy,energy,114,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:150,Energy Efficiency,energy,energy,150,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:185,Energy Efficiency,energy,energy,185,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:224,Energy Efficiency,energy,energy,224,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:257,Energy Efficiency,energy,energy,257,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:296,Energy Efficiency,Energy,Energy,296,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:320,Energy Efficiency,Energy,Energy,320,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/210:531,Energy Efficiency,energy,energy,531,"Running version 0.3, I see. SCF Energy (ref): -1.4267662531; Nuclear repulsion energy: 1.1382844453; One-electron energy: -2.8081568717; Two-electron energy: 0.5202338704; Dropped core energy: 0.0000000000; Total electronic energy: -2.2879230012; Total SCF energy: -1.1496385559. **\* Calculated Energy Differs from SCF Energy in CHKPT ! ***. input.dat as follows. molecule {; 0 2; H 0.000000 0.889899 0.000000; H 0.889899 0.000000 0.000000; H 0.000000 -0.889899 0.000000; }. set basis STO-3G; set reference rohf; set NUM_ROOTS 3; energy('fci')",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/210
https://github.com/psi4/psi4/issues/211:156,Energy Efficiency,energy,energy,156,"Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+ gives very different energies.; The following input with the core guess gives a total energy of -75.5488580481183476. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess core ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. while this input with the SAD guess gives a total energy of -75.6330881795159655. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess sad ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. Of course, the initial guess has always a huge impact on the calculation, but is the reported difference reasonable for a system as small as H2O+?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/211
https://github.com/psi4/psi4/issues/211:525,Energy Efficiency,energy,energy,525,"Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+ gives very different energies.; The following input with the core guess gives a total energy of -75.5488580481183476. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess core ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. while this input with the SAD guess gives a total energy of -75.6330881795159655. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess sad ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. Of course, the initial guess has always a huge impact on the calculation, but is the reported difference reasonable for a system as small as H2O+?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/211
https://github.com/psi4/psi4/issues/211:595,Energy Efficiency,energy,energy,595,"Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+ gives very different energies.; The following input with the core guess gives a total energy of -75.5488580481183476. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess core ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. while this input with the SAD guess gives a total energy of -75.6330881795159655. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess sad ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. Of course, the initial guess has always a huge impact on the calculation, but is the reported difference reasonable for a system as small as H2O+?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/211
https://github.com/psi4/psi4/issues/211:963,Energy Efficiency,energy,energy,963,"Choosing a SAD or a core guess for an UHF/cc-pVDZ calculation on H2O+ gives very different energies.; The following input with the core guess gives a total energy of -75.5488580481183476. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess core ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. while this input with the SAD guess gives a total energy of -75.6330881795159655. ```; memory 250 mb; molecule h2o {; symmetry c1; 1 2; O 0.0000000000 0.0000000000 -0.2249058930; H 1.4523499293 0.0000000000 0.8996235720; H -1.4523499293 0.0000000000 0.8996235720; units bohr; no_reorient; no_com; }. set {; basis cc-pVDZ; scf_type direct ; guess sad ; reference uhf; e_convergence 7; d_convergence 7; }. energy_scf1 = energy('scf'); ```. Of course, the initial guess has always a huge impact on the calculation, but is the reported difference reasonable for a system as small as H2O+?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/211
https://github.com/psi4/psi4/issues/213:508,Usability,guid,guidelines,508,"Everyone feel free to add to this list.; - [x] make sure `(dirty)` isn't in the outfile header along with the git info. It's not supposed to be there when the source clone is clean. this just needs a perfectly clean samples set from the docsbuild.; - [x] make sure Additional authors gets additionally populated.; - change any copyright 2015 to 2016, particularly in copyright. I did psicode.org (moved to #349 ); - [x] check that license boilerplate is present in all files (py-side and c-side). here's the guidelines from gpl, http://www.gnu.org/licenses/gpl-howto.en.html; - [x] new set of output.ref",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/213
https://github.com/psi4/psi4/issues/214:174,Deployability,install,install,174,"The `--new-plugin` and `--new-plugin-makefile` generators are a really awesome idea. Unfortunately, they don't quite work properly with the latest conda binaries from `conda install -c psi4 psi4`, because the `Makefile` is generated with absolute paths to the build machine. For example, I get something like this setting the compiler and include directories in the generated makefile. I assume this works great on your cluster, but no to much on mine:. ```; # Flags that were used to compile Psi4.; CXX = /theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -O3 -no-prec-div -DNDEBUG; LDFLAGS = -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel -L/theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/usr/lib64 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libpthread.so.0 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libc.so.6; INCLUDES = -I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/home/rmcgibbo/miniconda/envs/2.7/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include; OBJDIR = /scratch/cdsgroup/conda-builds/work/build; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/214
https://github.com/psi4/psi4/issues/214:1489,Integrability,interface,interfaces,1489,"The `--new-plugin` and `--new-plugin-makefile` generators are a really awesome idea. Unfortunately, they don't quite work properly with the latest conda binaries from `conda install -c psi4 psi4`, because the `Makefile` is generated with absolute paths to the build machine. For example, I get something like this setting the compiler and include directories in the generated makefile. I assume this works great on your cluster, but no to much on mine:. ```; # Flags that were used to compile Psi4.; CXX = /theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -O3 -no-prec-div -DNDEBUG; LDFLAGS = -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel -L/theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/usr/lib64 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libpthread.so.0 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libc.so.6; INCLUDES = -I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/home/rmcgibbo/miniconda/envs/2.7/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include; OBJDIR = /scratch/cdsgroup/conda-builds/work/build; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/214
https://github.com/psi4/psi4/issues/214:11,Modifiability,plugin,plugin,11,"The `--new-plugin` and `--new-plugin-makefile` generators are a really awesome idea. Unfortunately, they don't quite work properly with the latest conda binaries from `conda install -c psi4 psi4`, because the `Makefile` is generated with absolute paths to the build machine. For example, I get something like this setting the compiler and include directories in the generated makefile. I assume this works great on your cluster, but no to much on mine:. ```; # Flags that were used to compile Psi4.; CXX = /theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -O3 -no-prec-div -DNDEBUG; LDFLAGS = -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel -L/theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/usr/lib64 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libpthread.so.0 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libc.so.6; INCLUDES = -I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/home/rmcgibbo/miniconda/envs/2.7/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include; OBJDIR = /scratch/cdsgroup/conda-builds/work/build; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/214
https://github.com/psi4/psi4/issues/214:30,Modifiability,plugin,plugin-makefile,30,"The `--new-plugin` and `--new-plugin-makefile` generators are a really awesome idea. Unfortunately, they don't quite work properly with the latest conda binaries from `conda install -c psi4 psi4`, because the `Makefile` is generated with absolute paths to the build machine. For example, I get something like this setting the compiler and include directories in the generated makefile. I assume this works great on your cluster, but no to much on mine:. ```; # Flags that were used to compile Psi4.; CXX = /theoryfs2/common/software/intel2015/composer_xe_2015.3.187/bin/intel64/icpc; CXXDEFS = -DHAVE_DKH -DHAVE_MM_MALLOC_H -DHAVE_MKL_LAPACK -DHAVE_MKL_BLAS -DHAS_CXX11_VARIADIC_TEMPLATES -DHAS_CXX11_STATIC_ASSERT -DHAS_CXX11_SIZEOF_MEMBER -DHAS_CXX11_RVALUE_REFERENCES -DHAS_CXX11_NULLPTR -DHAS_CXX11_LONG_LONG -DHAS_CXX11_LAMBDA -DHAS_CXX11_INITIALIZER_LIST -DHAS_CXX11_DECLTYPE -DHAS_CXX11_CSTDINT_H -DHAS_CXX11_CONSTEXPR -DHAS_CXX11_AUTO_RET_TYPE -DHAS_CXX11_AUTO -DHAS_CXX11_FUNC -DHAS_CXX11 -DSYS_LINUX -DUSE_FCMANGLE_H; CXXFLAGS = -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -O3 -no-prec-div -DNDEBUG; LDFLAGS = -static-libstdc++ -static-libgcc -static-intel -wd10237 -static-intel -L/theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/usr/lib64 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libpthread.so.0 /theoryfs2/ds/cdsgroup/psi4-compile/nightly/glibc2.12/lib64/libc.so.6; INCLUDES = -I/scratch/cdsgroup/conda-builds/work/build/interfaces/include -I/scratch/cdsgroup/conda-builds/work/build/src/lib -I/scratch/cdsgroup/conda-builds/work/src/lib -I/scratch/cdsgroup/conda-builds/work/include -I/scratch/cdsgroup/conda-builds/work/build/include -I/scratch/cdsgroup/conda-builds/work/build/boost/include -I/home/rmcgibbo/miniconda/envs/2.7/include/python2.7 -I/usr/include -I/usr/include -I/usr/include -I/usr/include; OBJDIR = /scratch/cdsgroup/conda-builds/work/build; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/214
https://github.com/psi4/psi4/issues/215:117,Deployability,install,install-time,117,"See conversation at https://github.com/psi4/psi4public/issues/214 . We need to copy the main psi4/include headers at install-time. Also, consider if all headers (incl. the `src/lib-bin/*/*.h` that _are_ currently getting installed) should properly be behind a `include/psi4` or `include/psi` namespace.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/215
https://github.com/psi4/psi4/issues/215:221,Deployability,install,installed,221,"See conversation at https://github.com/psi4/psi4public/issues/214 . We need to copy the main psi4/include headers at install-time. Also, consider if all headers (incl. the `src/lib-bin/*/*.h` that _are_ currently getting installed) should properly be behind a `include/psi4` or `include/psi` namespace.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/215
https://github.com/psi4/psi4/issues/216:1319,Availability,avail,available,1319,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:1308,Deployability,update,update,1308,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:114,Modifiability,plugin,plugin,114,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:243,Modifiability,plugin,plugin,243,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:369,Modifiability,plugin,plugin,369,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:554,Modifiability,variab,variable,554,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:667,Modifiability,variab,variable,667,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:731,Modifiability,plugin,plugins,731,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:871,Modifiability,plugin,plugins,871,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:964,Modifiability,plugin,plugins,964,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:1124,Modifiability,plugin,plugins,1124,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:1284,Modifiability,plugin,plugins,1284,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:1329,Modifiability,plugin,plugin,1329,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:1368,Modifiability,plugin,plugins,1368,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/issues/216:1417,Modifiability,plugin,plugins,1417,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/216
https://github.com/psi4/psi4/pull/217:107,Modifiability,Config,Config,107,We use the strategy devised by @loriab for external add ons. This commit provides the necessary Find\* and Config\* CMake script files. Other modifications take into account the new strategy.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/217
https://github.com/psi4/psi4/issues/219:109,Integrability,depend,dependencies,109,"It appears that -jN compilations – I typically build with -j4 – are failing because of incorrect blocking of dependencies. In at least one case, the build reaches libmints before libint is complete, resulting in a missing libint.h header file. When I compile serially, everything runs smoothly. However, it's not clear to me what has changed in the compilation infrastructure in the last day or so to cause this problem.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/219
https://github.com/psi4/psi4/issues/219:313,Usability,clear,clear,313,"It appears that -jN compilations – I typically build with -j4 – are failing because of incorrect blocking of dependencies. In at least one case, the build reaches libmints before libint is complete, resulting in a missing libint.h header file. When I compile serially, everything runs smoothly. However, it's not clear to me what has changed in the compilation infrastructure in the last day or so to cause this problem.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/219
https://github.com/psi4/psi4/issues/220:80,Availability,error,error,80,"@bwb314 : Your recent update (a5facd8) to libpsio/filemanager.cc causes a build error with icpc 15.3:. ```; /home/crawdad/src/psi4/src/lib/libpsio/filemanager.cc(82): error: more than one instance of overloaded function ""std::to_string"" matches the argument list:; function ""std::to_string(long long)""; function ""std::to_string(unsigned long long)""; function ""std::to_string(long double)""; argument types are: (int); std::string filenum = std::to_string(fileno);; ```. std::to_string is C++11 and **should** accept an `(int)` argument, so I'm wondering if this is an inconsistent implementation in the Intel 15+ compiler.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/220
https://github.com/psi4/psi4/issues/220:167,Availability,error,error,167,"@bwb314 : Your recent update (a5facd8) to libpsio/filemanager.cc causes a build error with icpc 15.3:. ```; /home/crawdad/src/psi4/src/lib/libpsio/filemanager.cc(82): error: more than one instance of overloaded function ""std::to_string"" matches the argument list:; function ""std::to_string(long long)""; function ""std::to_string(unsigned long long)""; function ""std::to_string(long double)""; argument types are: (int); std::string filenum = std::to_string(fileno);; ```. std::to_string is C++11 and **should** accept an `(int)` argument, so I'm wondering if this is an inconsistent implementation in the Intel 15+ compiler.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/220
https://github.com/psi4/psi4/issues/220:22,Deployability,update,update,22,"@bwb314 : Your recent update (a5facd8) to libpsio/filemanager.cc causes a build error with icpc 15.3:. ```; /home/crawdad/src/psi4/src/lib/libpsio/filemanager.cc(82): error: more than one instance of overloaded function ""std::to_string"" matches the argument list:; function ""std::to_string(long long)""; function ""std::to_string(unsigned long long)""; function ""std::to_string(long double)""; argument types are: (int); std::string filenum = std::to_string(fileno);; ```. std::to_string is C++11 and **should** accept an `(int)` argument, so I'm wondering if this is an inconsistent implementation in the Intel 15+ compiler.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/220
https://github.com/psi4/psi4/issues/221:0,Modifiability,Plugin,Plugins,0,"Plugins `aointegrals` and `mointegrals` work, but at least `backtrans` is broken, presumably by @lothian changes.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/221
https://github.com/psi4/psi4/pull/223:9,Deployability,continuous,continuous,9,Provides continuous build testing against new pushes to the repo and pull requests.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/223
https://github.com/psi4/psi4/pull/223:26,Testability,test,testing,26,Provides continuous build testing against new pushes to the repo and pull requests.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/223
https://github.com/psi4/psi4/issues/225:266,Deployability,TOGGLE,TOGGLE,266,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:315,Deployability,TOGGLE,TOGGLE,315,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:255,Energy Efficiency,energy,energy,255,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:71,Performance,Optimiz,Optimization,71,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:209,Performance,optimiz,optimize,209,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:449,Testability,TEST,TEST,449,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:485,Testability,TEST,TEST,485,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:521,Testability,TEST,TEST,521,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:557,Testability,TEST,TEST,557,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:609,Testability,TEST,TEST,609,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/225:706,Testability,TEST,TEST,706,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/225
https://github.com/psi4/psi4/issues/226:179,Performance,queue,queue,179,"I am running expensive SAPT calculations and psi4 dies due to time limit.; My calculations reached upto "" CHF Iterations converged "" and then killed due to the ; time limit of my queue system. It is possible to add restart option to sapt ?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/226
https://github.com/psi4/psi4/issues/227:15,Performance,perform,perform,15,"While PSI4 can perform PCM calculations, it does not have built in support for state of the art solvation models, like the SMD method by Cramer et al.; Paper:; http://pubs.acs.org/doi/abs/10.1021/jp810292n",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/227
https://github.com/psi4/psi4/issues/229:407,Deployability,install,installation,407,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:591,Deployability,install,install,591,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:639,Deployability,install,install,639,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:721,Deployability,install,install,721,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:754,Integrability,wrap,wrapper,754,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:80,Modifiability,plugin,plugins,80,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:182,Modifiability,config,configure,182,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:273,Modifiability,config,config,273,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:335,Modifiability,config,configure,335,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:362,Modifiability,plugin,plugin-related,362,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/229:451,Modifiability,plugin,plugin,451,"Hi,. Since 0.3.530 or so, all of the difficulties that I've had about compiling plugins have been worked out. I'm sure there are other possible schemes, but the one I have now is a `configure` shell script that writes a `Makefile` using some information from the new `psi4-config` ([link](https://github.com/rmcgibbo/resp2/blob/master/configure)). The remaining plugin-related question I have now is about ""installation"". If I want to distribute this plugin to other users (it's really just the `<plugin_name>.so` file, I don't have any obligatory Python code), and make it easy for them to install, I'd like to make something like `conda install -c rmcgibbo <my_plugin>` work. If this were a standard Python module, I'd install the package with a Pyton wrapper to `lib/python2.7/site-packages/`, since that'll definitely be on `sys.path` -- is that what I should do here too? Or is there an alternative more psi4-specific location in `share/psi4/` where they would ideally go?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/229
https://github.com/psi4/psi4/issues/230:2148,Energy Efficiency,energy,energy,2148,ransformation.; Two-electron integral transformation complete.; (OO|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; Frozen core energy = 0.00000000000000. Size of irrep 0 of <ab|cd> integrals: 0.017 (MW) / 0.135 (MB); Size of irrep 1 of <ab|cd> integrals: 0.005 (MW) / 0.041 (MB); Size of irrep 2 of <ab|cd> integrals: 0.006 (MW) / 0.049 (MB); Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Faile,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:67,Testability,test,test,67,"Something in the recent version of Psi4 is causing coupled cluster test cases to fail on our cluster. It also appears in the clang version of the Travis CI builds. I'm using Intel compiler on our cluster. Is there a new transqt/ccsort module, if so it appears to be failing in it:. From cc1 test output:. ```; Wfn Parameters:; --------------------; Wavefunction = CCSD; Number of irreps = 4; Number of MOs = 25; Number of active MOs = 25; AO-Basis = NONE; Semicanonical = false; Reference = RHF; Print Level = 1. IRREP # MOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A1 12 0 3 0 9 0; A2 2 0 0 0 2 0; B1 4 0 1 0 3 0; B2 7 0 1 0 6 0; Transforming integrals...; IWL integrals will be deleted.; (OO|OO)...; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 1; Transforming the one-electron integrals and constructing Fock matrices; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OO|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OO|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OV)...; Starting second half-transformation.; Two-electro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:291,Testability,test,test,291,"Something in the recent version of Psi4 is causing coupled cluster test cases to fail on our cluster. It also appears in the clang version of the Travis CI builds. I'm using Intel compiler on our cluster. Is there a new transqt/ccsort module, if so it appears to be failing in it:. From cc1 test output:. ```; Wfn Parameters:; --------------------; Wavefunction = CCSD; Number of irreps = 4; Number of MOs = 25; Number of active MOs = 25; AO-Basis = NONE; Semicanonical = false; Reference = RHF; Print Level = 1. IRREP # MOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A1 12 0 3 0 9 0; A2 2 0 0 0 2 0; B1 4 0 1 0 3 0; B2 7 0 1 0 6 0; Transforming integrals...; IWL integrals will be deleted.; (OO|OO)...; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 1; Transforming the one-electron integrals and constructing Fock matrices; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OO|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OO|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OV)...; Starting second half-transformation.; Two-electro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3064,Testability,test,tests,3064, Starting second half-transformation.; Two-electron integral transformation complete.; Frozen core energy = 0.00000000000000. Size of irrep 0 of <ab|cd> integrals: 0.017 (MW) / 0.135 (MB); Size of irrep 1 of <ab|cd> integrals: 0.005 (MW) / 0.041 (MB); Size of irrep 2 of <ab|cd> integrals: 0.006 (MW) / 0.049 (MB); Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Star,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3096,Testability,Test,Test,3096,o-electron integral transformation complete.; Frozen core energy = 0.00000000000000. Size of irrep 0 of <ab|cd> integrals: 0.017 (MW) / 0.135 (MB); Size of irrep 1 of <ab|cd> integrals: 0.005 (MW) / 0.041 (MB); Size of irrep 2 of <ab|cd> integrals: 0.006 (MW) / 0.049 (MB); Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ...........,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3180,Testability,Test,Test,3180,. Size of irrep 0 of <ab|cd> integrals: 0.017 (MW) / 0.135 (MB); Size of irrep 1 of <ab|cd> integrals: 0.005 (MW) / 0.041 (MB); Size of irrep 2 of <ab|cd> integrals: 0.006 (MW) / 0.049 (MB); Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3265,Testability,Test,Test,3265,ab|cd> integrals: 0.005 (MW) / 0.041 (MB); Size of irrep 2 of <ab|cd> integrals: 0.006 (MW) / 0.049 (MB); Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: ca,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3350,Testability,Test,Test,3350,6 (MW) / 0.049 (MB); Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3435,Testability,Test,Test,3435,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3521,Testability,Test,Test,3521,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3606,Testability,Test,Test,3606,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3691,Testability,Test,Test,3691,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3776,Testability,Test,Test,3776,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3862,Testability,Test,Test,3862,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3937,Testability,test,tests,3937,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:3983,Testability,Test,Test,3983,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:4066,Testability,Test,Test,4066,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:4158,Testability,Test,Test,4158,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:4248,Testability,Test,Test,4248,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/230:4335,Testability,Test,Test,4335,s: 0.014 (MW) / 0.115 (MB); Total: 0.043 (MW) / 0.341 (MB). Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); Total: 0.011 (MW) / 0.086 (MB). Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); Total: 0.003 (MW) / 0.022 (MB); ```. Output from running coupled cluster tests:. ```; Start 9: cc1; 1/79 Test #9: cc1 ..............................***Failed 1.95 sec; Start 10: cc10; 2/79 Test #10: cc10 .............................***Failed 1.59 sec; Start 11: cc11; 3/79 Test #11: cc11 .............................***Failed 1.82 sec; Start 12: cc12; 4/79 Test #12: cc12 .............................***Failed 1.56 sec; Start 13: cc13; 5/79 Test #13: cc13 .............................***Failed 1.64 sec; Start 14: cc13a; 6/79 Test #14: cc13a ............................***Failed 1.65 sec; Start 15: cc14; 7/79 Test #15: cc14 .............................***Failed 1.58 sec; Start 16: cc15; 8/79 Test #16: cc15 .............................***Failed 1.53 sec; Start 17: cc16; 9/79 Test #17: cc16 .............................***Failed 1.65 sec; Start 18: cc17; 10/79 Test #18: cc17 .............................***Failed 1.65 sec; ```. Other tests are passing:. ```; Start 1: adc1; 1/294 Test #1: adc1 ............................. Passed 18.67 sec; Start 2: adc2; 2/294 Test #2: adc2 ............................. Passed 36.82 sec; Start 3: casscf-fzc-sp; 3/294 Test #3: casscf-fzc-sp .................... Passed 2.24 sec; Start 4: casscf-sa-sp; 4/294 Test #4: casscf-sa-sp ..................... Passed 5.18 sec; Start 5: casscf-sp; 5/294 Test #5: casscf-sp ........................ Passed 2.28 sec; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/230
https://github.com/psi4/psi4/issues/231:18,Availability,error,error,18,"Input below gives error below. Should this happen, @psi-rking?. ```. molecule innocentlookingwater {; O 0.00000000 0.00000000 0.00000000; H 0.16863830 0.60275550 -0.70533100; H -0.76265500 0.37866910 0.40513500; O -0.18467200 2.33422480 0.31265570; H 0.48244850 1.84992580 0.77377280; H -0.08271400 3.22838610 0.58596930; }. set basis 6-31g. optimize('scf'); ```. ```; TORS::compute_val: unable to compute torsion value; Optimizer: Optimization failed!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/231
https://github.com/psi4/psi4/issues/231:342,Performance,optimiz,optimize,342,"Input below gives error below. Should this happen, @psi-rking?. ```. molecule innocentlookingwater {; O 0.00000000 0.00000000 0.00000000; H 0.16863830 0.60275550 -0.70533100; H -0.76265500 0.37866910 0.40513500; O -0.18467200 2.33422480 0.31265570; H 0.48244850 1.84992580 0.77377280; H -0.08271400 3.22838610 0.58596930; }. set basis 6-31g. optimize('scf'); ```. ```; TORS::compute_val: unable to compute torsion value; Optimizer: Optimization failed!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/231
https://github.com/psi4/psi4/issues/231:421,Performance,Optimiz,Optimizer,421,"Input below gives error below. Should this happen, @psi-rking?. ```. molecule innocentlookingwater {; O 0.00000000 0.00000000 0.00000000; H 0.16863830 0.60275550 -0.70533100; H -0.76265500 0.37866910 0.40513500; O -0.18467200 2.33422480 0.31265570; H 0.48244850 1.84992580 0.77377280; H -0.08271400 3.22838610 0.58596930; }. set basis 6-31g. optimize('scf'); ```. ```; TORS::compute_val: unable to compute torsion value; Optimizer: Optimization failed!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/231
https://github.com/psi4/psi4/issues/231:432,Performance,Optimiz,Optimization,432,"Input below gives error below. Should this happen, @psi-rking?. ```. molecule innocentlookingwater {; O 0.00000000 0.00000000 0.00000000; H 0.16863830 0.60275550 -0.70533100; H -0.76265500 0.37866910 0.40513500; O -0.18467200 2.33422480 0.31265570; H 0.48244850 1.84992580 0.77377280; H -0.08271400 3.22838610 0.58596930; }. set basis 6-31g. optimize('scf'); ```. ```; TORS::compute_val: unable to compute torsion value; Optimizer: Optimization failed!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/231
https://github.com/psi4/psi4/issues/232:223,Availability,down,down,223,"All the symmetry detection in the Molecule class is through `tol` arguments for individual methods. For the Molecule as a whole, this is controlled by `DEFAULT_SYM_TOL`, which is compiled in. This means one can't just dial down the symmetry tolerance for an entire optimization. For this ticket, make the `tol` parameter not a preprocessor option but a bit of member data. Make a set function for this. Export it to python.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/232
https://github.com/psi4/psi4/issues/232:241,Availability,toler,tolerance,241,"All the symmetry detection in the Molecule class is through `tol` arguments for individual methods. For the Molecule as a whole, this is controlled by `DEFAULT_SYM_TOL`, which is compiled in. This means one can't just dial down the symmetry tolerance for an entire optimization. For this ticket, make the `tol` parameter not a preprocessor option but a bit of member data. Make a set function for this. Export it to python.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/232
https://github.com/psi4/psi4/issues/232:265,Performance,optimiz,optimization,265,"All the symmetry detection in the Molecule class is through `tol` arguments for individual methods. For the Molecule as a whole, this is controlled by `DEFAULT_SYM_TOL`, which is compiled in. This means one can't just dial down the symmetry tolerance for an entire optimization. For this ticket, make the `tol` parameter not a preprocessor option but a bit of member data. Make a set function for this. Export it to python.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/232
https://github.com/psi4/psi4/issues/232:17,Safety,detect,detection,17,"All the symmetry detection in the Molecule class is through `tol` arguments for individual methods. For the Molecule as a whole, this is controlled by `DEFAULT_SYM_TOL`, which is compiled in. This means one can't just dial down the symmetry tolerance for an entire optimization. For this ticket, make the `tol` parameter not a preprocessor option but a bit of member data. Make a set function for this. Export it to python.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/232
https://github.com/psi4/psi4/pull/233:59,Availability,robust,robust,59,"Fix for issue #231 . When I made the linear bend code more robust recently, I tightened up enforcement of nonsense torsions. In #231, the crash appears to be bad luck mostly, as a dozen iterations into the back-transformation on geometry step 3, we just happen to hit a bogus bend. Turns out this only happened after the iterative procedure started diverging anyway, so I am adding just a test that gives up faster.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/233
https://github.com/psi4/psi4/pull/233:389,Testability,test,test,389,"Fix for issue #231 . When I made the linear bend code more robust recently, I tightened up enforcement of nonsense torsions. In #231, the crash appears to be bad luck mostly, as a dozen iterations into the back-transformation on geometry step 3, we just happen to hit a bogus bend. Turns out this only happened after the iterative procedure started diverging anyway, so I am adding just a test that gives up faster.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/233
https://github.com/psi4/psi4/issues/234:51,Availability,avail,available,51,"Hi Jet,. I try to use your diatomic code, which is available in psi4, with the following command:. phys_consts = anharmonicity(rvals, energies). I got the following error:. NameError: name 'anharmonicity' is not defined. What is the correct syntax?. @jturney @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/234
https://github.com/psi4/psi4/issues/234:165,Availability,error,error,165,"Hi Jet,. I try to use your diatomic code, which is available in psi4, with the following command:. phys_consts = anharmonicity(rvals, energies). I got the following error:. NameError: name 'anharmonicity' is not defined. What is the correct syntax?. @jturney @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/234
https://github.com/psi4/psi4/issues/235:1051,Availability,fault,fault,1051,"Take the following input script:. ```; molecule mol {; He 0 0 4; --; He 0 0 0; }. mol.update_geometry(); mol.print_out(). new_mol = mol.clone(); new_mol.print_out(); ```. and examine the output:. ```; Molecular point group: d2h; Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150. Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150; ```. The Molecule Point group does not get carried through, and some piece of data is missing so that `update_geometry` does not fix this either. In some circumstances this will cause a seg fault. Note that the clone function is somewhat awkward in molecule and causes both the copy and assignment constructors to be called. In the meantime we can use the following syntax:. ```; new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule()); ```. Note, if you are running this on psi4/public you will probably notice that the `new_mol` does not have atoms, this bug has been fixed inside the wavefunction_pass update.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/235
https://github.com/psi4/psi4/issues/235:1502,Deployability,update,update,1502,"Take the following input script:. ```; molecule mol {; He 0 0 4; --; He 0 0 0; }. mol.update_geometry(); mol.print_out(). new_mol = mol.clone(); new_mol.print_out(); ```. and examine the output:. ```; Molecular point group: d2h; Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150. Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150; ```. The Molecule Point group does not get carried through, and some piece of data is missing so that `update_geometry` does not fix this either. In some circumstances this will cause a seg fault. Note that the clone function is somewhat awkward in molecule and causes both the copy and assignment constructors to be called. In the meantime we can use the following syntax:. ```; new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule()); ```. Note, if you are running this on psi4/public you will probably notice that the `new_mol` does not have atoms, this bug has been fixed inside the wavefunction_pass update.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/235
https://github.com/psi4/psi4/issues/235:280,Energy Efficiency,charge,charge,280,"Take the following input script:. ```; molecule mol {; He 0 0 4; --; He 0 0 0; }. mol.update_geometry(); mol.print_out(). new_mol = mol.clone(); new_mol.print_out(); ```. and examine the output:. ```; Molecular point group: d2h; Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150. Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150; ```. The Molecule Point group does not get carried through, and some piece of data is missing so that `update_geometry` does not fix this either. In some circumstances this will cause a seg fault. Note that the clone function is somewhat awkward in molecule and causes both the copy and assignment constructors to be called. In the meantime we can use the following syntax:. ```; new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule()); ```. Note, if you are running this on psi4/public you will probably notice that the `new_mol` does not have atoms, this bug has been fixed inside the wavefunction_pass update.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/235
https://github.com/psi4/psi4/issues/235:596,Energy Efficiency,charge,charge,596,"Take the following input script:. ```; molecule mol {; He 0 0 4; --; He 0 0 0; }. mol.update_geometry(); mol.print_out(). new_mol = mol.clone(); new_mol.print_out(); ```. and examine the output:. ```; Molecular point group: d2h; Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150. Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150; ```. The Molecule Point group does not get carried through, and some piece of data is missing so that `update_geometry` does not fix this either. In some circumstances this will cause a seg fault. Note that the clone function is somewhat awkward in molecule and causes both the copy and assignment constructors to be called. In the meantime we can use the following syntax:. ```; new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule()); ```. Note, if you are running this on psi4/public you will probably notice that the `new_mol` does not have atoms, this bug has been fixed inside the wavefunction_pass update.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/235
https://github.com/psi4/psi4/pull/237:271,Deployability,release,release,271,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:345,Deployability,release,release,345,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:172,Energy Efficiency,reduce,reduce,172,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:60,Integrability,depend,depending,60,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:92,Performance,load,load,92,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:508,Performance,queue,queue,508,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:433,Testability,test,test,433,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/pull/237:974,Testability,test,test,974,"Travis CI currently takes 2-6 (average 3) hours to complete depending on the current travis load, which is a bit on the long side. To help with this I am proposing that we reduce the number of build types from 15 to the following:; - Latest clang/gcc with both debug and release flags (4 cases); - Oldest supported clang/gcc with both debug and release flags (4 cases). It should be noted that travis CI typically runs the first 3-6 test cases immediately upon submission and then runs the rest in a general queue. The real time killer is when the 15th CI case does not start to run for 2-5 hours after initial submission. With the proposed changes we will hopefully be running through travis consistently in about an hour. . This will deteriorate our CI coverage a bit; however, I think this keeps with the CI spirit and should catch the corner cases that we really worry about. I am looking a bit into something like Docker in addition to Travis so that we can run a full test suite on a local box at the touch of a button. PS: Fiddling around with commits to practice squashing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/237
https://github.com/psi4/psi4/issues/238:769,Deployability,upgrade,upgraded,769,"We have [discussed](http://forum.psicode.org/t/c-11-is-it-time/43/3) C++11 support in the past without really finding a resolution. A couple quick points about C++11 support:. Pros (from best to least):; - We already use some C++11 (nullptr, range for, inline class init, etc) ; - Clang/GCC/ICC have fully supported C++11 for a few years; - Initializer lists make quite a few things easier and are heavily featured in Ambit/Tiled Array; - With effort we can remove some of boost (`boost::shared_ptr` -> `std::shared_ptr`); - Some new std containers like `std::tuple` and `std::array`; - Defaulted constructors and destructors; - _Some_ people use veridic templates; - Remove some custom macros to be a bit more standard (`ULI` -> `uint32_t`). Cons:; - Not everyone has upgraded their ICC recently; - We might find `auto` everywhere. ---. The biggest issue I can see is the older ICC versions will no longer compile Psi4. To mitigate this, there are several options:; - Use Clang/GCC; - Use a pre-compiled Psi4 (we offer ICC/MKL versions); - If you are a Psi4 contributor you can obtain the Intel Studio suite (linux) for [free](https://software.intel.com/en-us/qualify-for-free-software/opensourcecontributor).; - If you are a student you can obtain the Intel Composer suite for [free](https://software.intel.com/en-us/qualify-for-free-software/student). ---. Feel free to add to the pro/con list as you see fit.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/238
https://github.com/psi4/psi4/issues/239:80,Energy Efficiency,ENERGY,ENERGY,80,"Implement scheme whereby c-side modules can define minimum ('METHOD CORRELATION ENERGY') or full sets (corl, ref, & total) of psivars, then manager comes through and ; - fills in any blanks; - checks that definitions met and consistent (tot – corl = ref); - ensures that overlapping modules are using consistent names. The quantum chemical facts I've already got in programmatic form in pandas in qcdb, so it's mostly the psi4 interfacing and reconciliation to do. This is already done, small scale, for SAPT. Also, would be nice to autodoc the equations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/239
https://github.com/psi4/psi4/issues/240:183,Availability,error,error,183,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:913,Availability,failure,failure,913,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:1046,Deployability,update,update-,1046,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:224,Energy Efficiency,charge,charges,224,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:674,Energy Efficiency,charge,charges,674,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:1287,Energy Efficiency,energy,energy,1287,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:1307,Energy Efficiency,energy,energy,1307,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:115,Testability,test,test,115,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/240:938,Testability,test,test,938,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/240
https://github.com/psi4/psi4/issues/241:47,Usability,clear,clear,47,"someday. making this it's own new issue so can clear out the efp ticket undergrowth, most of which is resolved.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/241
https://github.com/psi4/psi4/issues/243:251,Modifiability,config,configure,251,There seems to be a regression in Boost 1.60 that causes problems with Psi4 (and other projects).; It has been created as an issue in the boost python repo: https://github.com/boostorg/python/issues/56. Maybe the version could be checked in the CMake configure step. It can then either abort (if the user was trying to force the use of system boost) or use the boost distributed with Psi4. Adding this since #230 was closed (and it was unrelated anyway),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/243
https://github.com/psi4/psi4/issues/243:286,Safety,abort,abort,286,There seems to be a regression in Boost 1.60 that causes problems with Psi4 (and other projects).; It has been created as an issue in the boost python repo: https://github.com/boostorg/python/issues/56. Maybe the version could be checked in the CMake configure step. It can then either abort (if the user was trying to force the use of system boost) or use the boost distributed with Psi4. Adding this since #230 was closed (and it was unrelated anyway),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/243
https://github.com/psi4/psi4/issues/244:359,Energy Efficiency,energy,energy,359,"I'm finding non-deterministic energies for cd-mp2, depending on amount of extraneous stuff commented in the input file. For example, the below works as is, but gives a different answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Corr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1144,Energy Efficiency,energy,energy,1144," works as is, but gives a different answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ==================================================",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1240,Energy Efficiency,energy,energy,1240,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1309,Energy Efficiency,energy,energy,1309,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1446,Energy Efficiency,Energy,Energy,1446,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1486,Energy Efficiency,Energy,Energy,1486,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1526,Energy Efficiency,Energy,Energy,1526,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1740,Energy Efficiency,Energy,Energy,1740,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1796,Energy Efficiency,Energy,Energy,1796,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1847,Energy Efficiency,Energy,Energy,1847,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1900,Energy Efficiency,Energy,Energy,1900,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1954,Energy Efficiency,Energy,Energy,1954,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:2009,Energy Efficiency,Energy,Energy,2009,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:2056,Energy Efficiency,Energy,Energy,2056,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:51,Integrability,depend,depending,51,"I'm finding non-deterministic energies for cd-mp2, depending on amount of extraneous stuff commented in the input file. For example, the below works as is, but gives a different answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Corr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/244:1276,Testability,TEST,TEST,1276,"ifferent answer when the unused molecules are commented out (not only molecules, but irrelevant keywords can cause the problem, too). The problem shows up in the final output as correlation energy has wrong sign and not matching sum of aa, ab, bb contributions. At first I though it was because you're setting `EcorlL` but printing `Ecorl`, @bozkaya , but that turns out to be innocent. I've got a valgrind if that'll help. ```; molecule methane {; C 0.0000000 0.0000000 3.0826195; H 0.5868776 0.8381742 3.4463772; H -1.0193189 0.0891638 3.4463772; H 0.0000000 0.0000000 1.9966697; H 0.4324413 -0.9273380 3.4463772; }. molecule hf {; H; F 1 0.917; }. molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type df; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7. set reference uhf; set mp2_type cd; energy('mp2'); print_variables(). compare_values(-0.058409837177, get_variable('mp2 correlation energy'), 6, 'mp2 uhf cd: 1 occ*') #TEST. ```. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)... ; ======================================================================= ; Nuclear Repulsion Energy (a.u.) : 4.91953818754669; CD-HF Energy (a.u.) : -25.94513055914741; REF Energy (a.u.) : -25.94513055914741; Alpha-Alpha Contribution (a.u.) : -0.00171224403804; Alpha-Beta Contribution (a.u.) : -0.05664223456972; Beta-Beta Contribution (a.u.) : -0.00005535856885; Scaled_SS Correlation Energy (a.u.): -0.00058920086896; Scaled_OS Correlation Energy (a.u.): -0.06797068148366; CD-SCS-MP2 Total Energy (a.u.) : -26.01369044150004; CD-SOS-MP2 Total Energy (a.u.) : -26.01876546408805; CD-SCSN-MP2 Total Energy (a.u.) : -25.94824153973553; CD-MP2 Correlation Energy (a.u.) : 0.02352520344587; CD-MP2 Total Energy (a.u.) : -25.92160535570154; ======================================================================= ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/244
https://github.com/psi4/psi4/issues/245:684,Availability,avail,available,684,"What is needed to get around this constraint of the simple input snippet below not working b/c scf is DF, @bozkaya ? The conventional integrals have already been computed and are ready. Is there some other data transformation needed? As a last resort, I suppose we can go ahead and compute the non-DF scf instead when this call is made. But I think we need this input to work. Related (user-experience-wise) to https://github.com/psi4/psi4private/issues/48. ```; set mp2_type conv; gradient('mp2'); ```. ``` c++; // SCF TYPE; if (options_.get_str(""SCF_TYPE"") == ""DF"" || options_.get_str(""SCF_TYPE"") == ""CD"") {; if (dertype != ""NONE"") {; throw PSIEXCEPTION(""Analytic gradients are NOT available for SCF_TYPE=DF/CD !"");; }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/245
https://github.com/psi4/psi4/issues/245:52,Usability,simpl,simple,52,"What is needed to get around this constraint of the simple input snippet below not working b/c scf is DF, @bozkaya ? The conventional integrals have already been computed and are ready. Is there some other data transformation needed? As a last resort, I suppose we can go ahead and compute the non-DF scf instead when this call is made. But I think we need this input to work. Related (user-experience-wise) to https://github.com/psi4/psi4private/issues/48. ```; set mp2_type conv; gradient('mp2'); ```. ``` c++; // SCF TYPE; if (options_.get_str(""SCF_TYPE"") == ""DF"" || options_.get_str(""SCF_TYPE"") == ""CD"") {; if (dertype != ""NONE"") {; throw PSIEXCEPTION(""Analytic gradients are NOT available for SCF_TYPE=DF/CD !"");; }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/245
https://github.com/psi4/psi4/pull/246:3491,Availability,toler,tolerant,3491,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:3919,Availability,error,error,3919,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:62,Deployability,update,update,62,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:1937,Deployability,update,update,1937,"_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:480,Energy Efficiency,Energy,Energy,480,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:524,Energy Efficiency,energy,energy,524,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:866,Energy Efficiency,energy,energy,866,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:961,Energy Efficiency,energy,energy,961,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:1666,Energy Efficiency,energy,energy,1666,"ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been ha",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:3608,Integrability,wrap,wrapper,3608,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:3925,Integrability,message,message,3925,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:785,Modifiability,variab,variables,785,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:2245,Modifiability,plugin,plugins,2245," Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:2539,Modifiability,plugin,plugins,2539," Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:2606,Modifiability,plugin,plugin,2606,"I` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:3720,Modifiability,Plugin,Plugin,3720,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:1196,Performance,optimiz,optimize,1196,"This is the list of changes made for the wavefunction passing update. This is a very large change that modified virtually every file in Psi4, details of the why and what can be found [here](https://github.com/psi4/psi4public/wiki/Changes-to-Information-Passing-in-Psi4-%28Jan-2016%29). This is slightly long, but please read this fully as there is a decent chance that advanced users will have to make some tweaks to their existing input files. A quick rundown of the changes:; - Energy, gradient, etc now actually return a energy (a number), gradient (a matrix), etc. A good example of these changes is [this](https://github.com/psi4/psi4public/commit/a559003d1e4be8ac36107ba64751ee6db78c8f3b#diff-684250b9cfb2a0fa201f5dc123c90964L48) diff.; - All methods now take new kwargs (python variables):; - `return_wfn` - return the methods wavefunction: `scf_e, scf_wfn = energy('SCF', return_wfn=True)`; - `ref_wfn` - what wavefunction to use as reference: `mp2_e = energy('MP2', ref_wfn=scf_wfn)`; - `molecule` - give a molecule for the calculation to be run on (mostly an internal kwarg); - The global molecule is now only touched/modifed by the input file, the user parameter `activate` and by the optimize function.; - OEProp, cubewriter, and the molden writer all need to be explicitly passed a wavefunction python-side.; - These changes will allow for extremely complex workflows. Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::env",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:3579,Performance,optimiz,optimizations,3579,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:3623,Performance,Optimiz,Optimization,3623,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:2282,Usability,simpl,simple,2282," Check out [`proc.py/run_sapt`](https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/proc.py#L2611) for an interesting case of passing wavefunctions and molecules into primary `proc.py` functions.; - `DF` and `RI` modifiers to methods are no longer valid (e.g., `energy('RI-MP2')`). Please use the `mp2_type` option instead.; - Fixed numerous bugs/oddities and moved everything towards a more object oriented workflow. ---. A few notable issues that people may run into:; - The `psi4/lib` folder has been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/246:2922,Usability,clear,clear,2922," been moved to `psi4/share` please update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/246
https://github.com/psi4/psi4/pull/247:73,Testability,test,test,73,"- runs `ctest -L quick -j2` through python rather than bash; - finds the test output files that are in directories a layer deeper than expected, e.g. the pcmsolver that's failing on the wavefunction_pass PR; - writes `compare_values()` output to output.dat (why haven't we done this before?); - someone who understands how travis deals with run.log should examine this bit: `tciout = open('run.log', 'a')`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/247
https://github.com/psi4/psi4/pull/247:345,Testability,log,log,345,"- runs `ctest -L quick -j2` through python rather than bash; - finds the test output files that are in directories a layer deeper than expected, e.g. the pcmsolver that's failing on the wavefunction_pass PR; - writes `compare_values()` output to output.dat (why haven't we done this before?); - someone who understands how travis deals with run.log should examine this bit: `tciout = open('run.log', 'a')`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/247
https://github.com/psi4/psi4/pull/247:394,Testability,log,log,394,"- runs `ctest -L quick -j2` through python rather than bash; - finds the test output files that are in directories a layer deeper than expected, e.g. the pcmsolver that's failing on the wavefunction_pass PR; - writes `compare_values()` output to output.dat (why haven't we done this before?); - someone who understands how travis deals with run.log should examine this bit: `tciout = open('run.log', 'a')`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/247
https://github.com/psi4/psi4/pull/248:213,Deployability,Update,Updated,213,"Fixed a bug in the stability analysis: some rotation parameters for the orbitals were not correct, it should be easier to converge on a stable solution now. SAPT: changed the output according to Friday's meeting. Updated the tests for SAPT and the Sphinx manual as well.; @CDSherrill : you can have a look at the updated output.ref to make sure the output looks good to you.; @loriab : I did not modify the Psivars yet. Do you want to do it by passing a SCALE_FACTOR PsiVars to your code computing all the other variables, or do you prefer some other way?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/248
https://github.com/psi4/psi4/pull/248:313,Deployability,update,updated,313,"Fixed a bug in the stability analysis: some rotation parameters for the orbitals were not correct, it should be easier to converge on a stable solution now. SAPT: changed the output according to Friday's meeting. Updated the tests for SAPT and the Sphinx manual as well.; @CDSherrill : you can have a look at the updated output.ref to make sure the output looks good to you.; @loriab : I did not modify the Psivars yet. Do you want to do it by passing a SCALE_FACTOR PsiVars to your code computing all the other variables, or do you prefer some other way?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/248
https://github.com/psi4/psi4/pull/248:512,Modifiability,variab,variables,512,"Fixed a bug in the stability analysis: some rotation parameters for the orbitals were not correct, it should be easier to converge on a stable solution now. SAPT: changed the output according to Friday's meeting. Updated the tests for SAPT and the Sphinx manual as well.; @CDSherrill : you can have a look at the updated output.ref to make sure the output looks good to you.; @loriab : I did not modify the Psivars yet. Do you want to do it by passing a SCALE_FACTOR PsiVars to your code computing all the other variables, or do you prefer some other way?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/248
https://github.com/psi4/psi4/pull/248:225,Testability,test,tests,225,"Fixed a bug in the stability analysis: some rotation parameters for the orbitals were not correct, it should be easier to converge on a stable solution now. SAPT: changed the output according to Friday's meeting. Updated the tests for SAPT and the Sphinx manual as well.; @CDSherrill : you can have a look at the updated output.ref to make sure the output looks good to you.; @loriab : I did not modify the Psivars yet. Do you want to do it by passing a SCALE_FACTOR PsiVars to your code computing all the other variables, or do you prefer some other way?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/248
https://github.com/psi4/psi4/issues/249:889,Deployability,update,update,889,"- Look at the procedures dictionary https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L45 . These are the things you can stick into `energy(name)`, `gradient`, etc.; - Look at the docstring tables https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L264 in the energy, optimize, and frequency functions. Those tables aren't so neatly formatted because I'm picky. They're neatly formatted because Sphinx is picky.; - Look at the nice docs those docstrings turn into http://psicode.org/psi4manual/master/opt.html#table-grad-gen . Each line has links to the manual section where you can find more info on the theory.; - Note that there are now a lot fewer entries in the procedures dictionary than there are in the docstring table. The procedures dict is right, and the docstring table is out of date.; - Your mission is to update the docstring tables and the manual links in them to be consistent with the procedures dict and with the table at http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations; - If you're at GaTech, there's Sphinx at `/theoryfs2/ds/cdsgroup/miniconda/envs/p4buildenv/bin/sphinx-build`. Otherwise, find a sphinx-build >=1.1 and <1.4 .; - [ ] eliminate from the reST tables in driver.py any methods that aren't in the procedures dict. This will mostly be df- and cd- methods; - [ ] for methods in http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations table, add ""[details]"" refs to the approriate part of the table. ""mp2"" is already done, as an example.; - [ ] for all methods, check that the ""[manual]"" link is pointing to the best part of the docs. You can add a `.. _`sec:seclabel`:` anywhere you need in the rst docs to make a more-specific link.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/249
https://github.com/psi4/psi4/issues/249:168,Energy Efficiency,energy,energy,168,"- Look at the procedures dictionary https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L45 . These are the things you can stick into `energy(name)`, `gradient`, etc.; - Look at the docstring tables https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L264 in the energy, optimize, and frequency functions. Those tables aren't so neatly formatted because I'm picky. They're neatly formatted because Sphinx is picky.; - Look at the nice docs those docstrings turn into http://psicode.org/psi4manual/master/opt.html#table-grad-gen . Each line has links to the manual section where you can find more info on the theory.; - Note that there are now a lot fewer entries in the procedures dictionary than there are in the docstring table. The procedures dict is right, and the docstring table is out of date.; - Your mission is to update the docstring tables and the manual links in them to be consistent with the procedures dict and with the table at http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations; - If you're at GaTech, there's Sphinx at `/theoryfs2/ds/cdsgroup/miniconda/envs/p4buildenv/bin/sphinx-build`. Otherwise, find a sphinx-build >=1.1 and <1.4 .; - [ ] eliminate from the reST tables in driver.py any methods that aren't in the procedures dict. This will mostly be df- and cd- methods; - [ ] for methods in http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations table, add ""[details]"" refs to the approriate part of the table. ""mp2"" is already done, as an example.; - [ ] for all methods, check that the ""[manual]"" link is pointing to the best part of the docs. You can add a `.. _`sec:seclabel`:` anywhere you need in the rst docs to make a more-specific link.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/249
https://github.com/psi4/psi4/issues/249:329,Energy Efficiency,energy,energy,329,"- Look at the procedures dictionary https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L45 . These are the things you can stick into `energy(name)`, `gradient`, etc.; - Look at the docstring tables https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L264 in the energy, optimize, and frequency functions. Those tables aren't so neatly formatted because I'm picky. They're neatly formatted because Sphinx is picky.; - Look at the nice docs those docstrings turn into http://psicode.org/psi4manual/master/opt.html#table-grad-gen . Each line has links to the manual section where you can find more info on the theory.; - Note that there are now a lot fewer entries in the procedures dictionary than there are in the docstring table. The procedures dict is right, and the docstring table is out of date.; - Your mission is to update the docstring tables and the manual links in them to be consistent with the procedures dict and with the table at http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations; - If you're at GaTech, there's Sphinx at `/theoryfs2/ds/cdsgroup/miniconda/envs/p4buildenv/bin/sphinx-build`. Otherwise, find a sphinx-build >=1.1 and <1.4 .; - [ ] eliminate from the reST tables in driver.py any methods that aren't in the procedures dict. This will mostly be df- and cd- methods; - [ ] for methods in http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations table, add ""[details]"" refs to the approriate part of the table. ""mp2"" is already done, as an example.; - [ ] for all methods, check that the ""[manual]"" link is pointing to the best part of the docs. You can add a `.. _`sec:seclabel`:` anywhere you need in the rst docs to make a more-specific link.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/249
https://github.com/psi4/psi4/issues/249:337,Performance,optimiz,optimize,337,"- Look at the procedures dictionary https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L45 . These are the things you can stick into `energy(name)`, `gradient`, etc.; - Look at the docstring tables https://github.com/dgasmith/psi4public/blob/wavefunction_pass/share/python/driver.py#L264 in the energy, optimize, and frequency functions. Those tables aren't so neatly formatted because I'm picky. They're neatly formatted because Sphinx is picky.; - Look at the nice docs those docstrings turn into http://psicode.org/psi4manual/master/opt.html#table-grad-gen . Each line has links to the manual section where you can find more info on the theory.; - Note that there are now a lot fewer entries in the procedures dictionary than there are in the docstring table. The procedures dict is right, and the docstring table is out of date.; - Your mission is to update the docstring tables and the manual links in them to be consistent with the procedures dict and with the table at http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations; - If you're at GaTech, there's Sphinx at `/theoryfs2/ds/cdsgroup/miniconda/envs/p4buildenv/bin/sphinx-build`. Otherwise, find a sphinx-build >=1.1 and <1.4 .; - [ ] eliminate from the reST tables in driver.py any methods that aren't in the procedures dict. This will mostly be df- and cd- methods; - [ ] for methods in http://psicode.org/psi4manual/master/notes_c.html#alternate-implementations table, add ""[details]"" refs to the approriate part of the table. ""mp2"" is already done, as an example.; - [ ] for all methods, check that the ""[manual]"" link is pointing to the best part of the docs. You can add a `.. _`sec:seclabel`:` anywhere you need in the rst docs to make a more-specific link.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/249
https://github.com/psi4/psi4/issues/251:875,Availability,Error,Error,875,"Build the shared library with `make psi4so`, and it builds just fine but then segfaults when you try to set options. @bennybp, Boost/fpic notwithstanding, I know you've got a shared library of psi4 in working order. Could you send me or post the `src/bin/psi4/CMakeLists.txt` and any changes to the `MAKE_PYTHON_MODULE` sections? I didn't see that you had a fork of psi4 with changes. ``` python; Python 2.7.10 |Anaconda 2.1.0 (x86_64)| (default, May 28 2015, 17:04:42) ; [GCC 4.2.1 (Apple Inc. build 5577)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Anaconda is brought to you by Continuum Analytics.; Please check out: http://continuum.io/thanks and https://binstar.org; >>> import sys; >>> sys.path.insert(1, '/Users/loriab/linux/psihub/publicface/psi4/objdir/bin'); >>> import psi4; >>> psi4.set_global_option('BASIS', 'CC_PVDZ'). Error: option BASIS is not contained in the list of available options.; Assertion failed: (px != 0), function operator->, file /Users/loriab/linux/psihub/publicface/psi4/objdir/boost/include/boost/smart_ptr/shared_ptr.hpp, line 648.; Abort trap: 6; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/251
https://github.com/psi4/psi4/issues/251:927,Availability,avail,available,927,"Build the shared library with `make psi4so`, and it builds just fine but then segfaults when you try to set options. @bennybp, Boost/fpic notwithstanding, I know you've got a shared library of psi4 in working order. Could you send me or post the `src/bin/psi4/CMakeLists.txt` and any changes to the `MAKE_PYTHON_MODULE` sections? I didn't see that you had a fork of psi4 with changes. ``` python; Python 2.7.10 |Anaconda 2.1.0 (x86_64)| (default, May 28 2015, 17:04:42) ; [GCC 4.2.1 (Apple Inc. build 5577)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Anaconda is brought to you by Continuum Analytics.; Please check out: http://continuum.io/thanks and https://binstar.org; >>> import sys; >>> sys.path.insert(1, '/Users/loriab/linux/psihub/publicface/psi4/objdir/bin'); >>> import psi4; >>> psi4.set_global_option('BASIS', 'CC_PVDZ'). Error: option BASIS is not contained in the list of available options.; Assertion failed: (px != 0), function operator->, file /Users/loriab/linux/psihub/publicface/psi4/objdir/boost/include/boost/smart_ptr/shared_ptr.hpp, line 648.; Abort trap: 6; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/251
https://github.com/psi4/psi4/issues/251:1109,Safety,Abort,Abort,1109,"Build the shared library with `make psi4so`, and it builds just fine but then segfaults when you try to set options. @bennybp, Boost/fpic notwithstanding, I know you've got a shared library of psi4 in working order. Could you send me or post the `src/bin/psi4/CMakeLists.txt` and any changes to the `MAKE_PYTHON_MODULE` sections? I didn't see that you had a fork of psi4 with changes. ``` python; Python 2.7.10 |Anaconda 2.1.0 (x86_64)| (default, May 28 2015, 17:04:42) ; [GCC 4.2.1 (Apple Inc. build 5577)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Anaconda is brought to you by Continuum Analytics.; Please check out: http://continuum.io/thanks and https://binstar.org; >>> import sys; >>> sys.path.insert(1, '/Users/loriab/linux/psihub/publicface/psi4/objdir/bin'); >>> import psi4; >>> psi4.set_global_option('BASIS', 'CC_PVDZ'). Error: option BASIS is not contained in the list of available options.; Assertion failed: (px != 0), function operator->, file /Users/loriab/linux/psihub/publicface/psi4/objdir/boost/include/boost/smart_ptr/shared_ptr.hpp, line 648.; Abort trap: 6; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/251
https://github.com/psi4/psi4/issues/251:947,Testability,Assert,Assertion,947,"Build the shared library with `make psi4so`, and it builds just fine but then segfaults when you try to set options. @bennybp, Boost/fpic notwithstanding, I know you've got a shared library of psi4 in working order. Could you send me or post the `src/bin/psi4/CMakeLists.txt` and any changes to the `MAKE_PYTHON_MODULE` sections? I didn't see that you had a fork of psi4 with changes. ``` python; Python 2.7.10 |Anaconda 2.1.0 (x86_64)| (default, May 28 2015, 17:04:42) ; [GCC 4.2.1 (Apple Inc. build 5577)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Anaconda is brought to you by Continuum Analytics.; Please check out: http://continuum.io/thanks and https://binstar.org; >>> import sys; >>> sys.path.insert(1, '/Users/loriab/linux/psihub/publicface/psi4/objdir/bin'); >>> import psi4; >>> psi4.set_global_option('BASIS', 'CC_PVDZ'). Error: option BASIS is not contained in the list of available options.; Assertion failed: (px != 0), function operator->, file /Users/loriab/linux/psihub/publicface/psi4/objdir/boost/include/boost/smart_ptr/shared_ptr.hpp, line 648.; Abort trap: 6; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/251
https://github.com/psi4/psi4/issues/253:696,Deployability,install,install,696,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2074,Integrability,message,message,2074,"0094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:492,Modifiability,variab,variable,492,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:4451,Modifiability,variab,variable,4451,"2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests where run on a dual socket Xeon E5-2660v3 (20 cores in total without HT) with icc/icpc 2016.1.150 + MKL 11.3.1.150.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:4500,Performance,Perform,Performing,4500,"2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests where run on a dual socket Xeon E5-2660v3 (20 cores in total without HT) with icc/icpc 2016.1.150 + MKL 11.3.1.150.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:187,Safety,Timeout,Timeout,187,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:344,Security,firewall,firewall,344,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:49,Testability,test,tests,49,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:132,Testability,test,tests,132,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:159,Testability,test,tests,159,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:804,Testability,test,test,804,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:824,Testability,Test,Testing,824,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:848,Testability,Test,Test,848,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:1059,Testability,test,tests,1059,"the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:1192,Testability,test,tests,1192," 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:1282,Testability,test,testresults,1282,"4 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal plac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:1294,Testability,log,log,1294,"e `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile (",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:1498,Testability,test,tests,1498,"3: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Fe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:1677,Testability,test,tests,1677,"is. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2054,Testability,Test,TestComparisonError,2054,"0094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2091,Testability,Test,TestComparisonError,2091,"-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2386,Testability,Test,Test,2386,"l-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-201",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2470,Testability,Test,Test,2470,"ard/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/in",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2657,Testability,Test,Testing,2657,": Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2694,Testability,Test,Test,2694,": Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:2918,Testability,test,tests,2918,".0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/python/p4util/util.py"", line 98, in compare_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3051,Testability,test,tests,3051,"_values; raise TestComparisonError(message); p4xcpt.TestComparisonError: SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/sh",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3154,Testability,test,testresults,3154,"not match (-0.0407577) to 6 decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3166,Testability,log,log,3166," decimal places.; SAPT Elst: computed value (-0.0407606) does not match (-0.0407577) to 6 decimal places.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; fi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3369,Testability,test,tests,3369,"ut>; Test time = 132.94 sec; ----------------------------------------------------------; Test Failed.; ""sapt4"" end time: Feb 15 13:15 CET; ""sapt4"" time elapsed: 00:02:12; ----------------------------------------------------------. ```. For `pywrap-opt-sowreap`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3561,Testability,test,tests,3561,"`:. ```; 255/305 Testing: pywrap-opt-sowreap; 255/305 Test: pywrap-opt-sowreap; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3773,Testability,test,tests,3773,"2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end tim",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:3966,Testability,test,tests,3966,"m/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/pywrap-opt-sowreap/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `s",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:4146,Testability,test,tests,4146,"el-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests wher",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:4357,Testability,test,tests,4357,"2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests where run on a dual socket Xeon E5-2660v3 (20 cores in total without HT) with icc/icpc 2016.1.150 + MKL 11.3.1.150.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:4662,Testability,Test,Test,4662,"2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests where run on a dual socket Xeon E5-2660v3 (20 cores in total without HT) with icc/icpc 2016.1.150 + MKL 11.3.1.150.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:4744,Testability,Test,Test,4744,"2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests where run on a dual socket Xeon E5-2660v3 (20 cores in total without HT) with icc/icpc 2016.1.150 + MKL 11.3.1.150.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/issues/253:5114,Testability,test,tests,5114,"2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""true"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap; ""pywrap-opt-sowreap"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/pywrap-opt-sowreap/output.dat; Traceback (most recent call last):; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 127, in <module>; main(*sys.argv[1:]); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 106, in main; files_list,master_in,master_out= sowList(first_output); File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/reap.py"", line 31, in sowList; master_in=the_tag+""-master.in""; UnboundLocalError: local variable 'the_tag' referenced before assignment; Performing finite difference calculations; 5 displacements needed ...Exit Status: infile ( 0 ); autotest ( None ); sowreap ( 1 ); overall ( 1 ); <end of output>; Test time = 0.90 sec; ----------------------------------------------------------; Test Failed.; ""pywrap-opt-sowreap"" end time: Feb 15 13:13 CET; ""pywrap-opt-sowreap"" time elapsed: 00:00:00; ----------------------------------------------------------; ```. I've saved the output of `sapt4` and `opt10` to https://gist.github.com/wpoely86/60885c5adec8dcc8b63b. Furthermore, `opt2` is flaky. It doesn't always pass. Most of the time but not always.; These tests where run on a dual socket Xeon E5-2660v3 (20 cores in total without HT) with icc/icpc 2016.1.150 + MKL 11.3.1.150.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/253
https://github.com/psi4/psi4/pull/255:58,Deployability,Update,Updated,58,Changed opt10 TS-optimization test case to a 6-31G basis. Updated the associated test files. This runs in ~20 minutes on one core with only 1gb of memory. It's ready to go.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/255
https://github.com/psi4/psi4/pull/255:17,Performance,optimiz,optimization,17,Changed opt10 TS-optimization test case to a 6-31G basis. Updated the associated test files. This runs in ~20 minutes on one core with only 1gb of memory. It's ready to go.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/255
https://github.com/psi4/psi4/pull/255:30,Testability,test,test,30,Changed opt10 TS-optimization test case to a 6-31G basis. Updated the associated test files. This runs in ~20 minutes on one core with only 1gb of memory. It's ready to go.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/255
https://github.com/psi4/psi4/pull/255:81,Testability,test,test,81,Changed opt10 TS-optimization test case to a 6-31G basis. Updated the associated test files. This runs in ~20 minutes on one core with only 1gb of memory. It's ready to go.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/255
https://github.com/psi4/psi4/issues/256:88,Availability,fault,fault,88,version: Rev {master} 0d10de8. After entering the SOSCF psi4 exists with a segmentation fault. It prints the soscf header if soscf_print true. Occurs e.g. when I run soscf1 test case with PBE instead of HF. I don't know if SOSCF should work with DFT or not.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/256
https://github.com/psi4/psi4/issues/256:173,Testability,test,test,173,version: Rev {master} 0d10de8. After entering the SOSCF psi4 exists with a segmentation fault. It prints the soscf header if soscf_print true. Occurs e.g. when I run soscf1 test case with PBE instead of HF. I don't know if SOSCF should work with DFT or not.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/256
https://github.com/psi4/psi4/pull/258:165,Availability,error,error,165,Added virtual functions to UKS and RKS to override the soscf_update of UHF and RKS. The result is that calling soscf_update on these functions will now fail with an error message instead of a set fault. Also cleaned up the SOSCF logic a bit. This PR is ready to be merged if everything passes. Fixes #256.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/258
https://github.com/psi4/psi4/pull/258:196,Availability,fault,fault,196,Added virtual functions to UKS and RKS to override the soscf_update of UHF and RKS. The result is that calling soscf_update on these functions will now fail with an error message instead of a set fault. Also cleaned up the SOSCF logic a bit. This PR is ready to be merged if everything passes. Fixes #256.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/258
https://github.com/psi4/psi4/pull/258:171,Integrability,message,message,171,Added virtual functions to UKS and RKS to override the soscf_update of UHF and RKS. The result is that calling soscf_update on these functions will now fail with an error message instead of a set fault. Also cleaned up the SOSCF logic a bit. This PR is ready to be merged if everything passes. Fixes #256.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/258
https://github.com/psi4/psi4/pull/258:229,Testability,log,logic,229,Added virtual functions to UKS and RKS to override the soscf_update of UHF and RKS. The result is that calling soscf_update on these functions will now fail with an error message instead of a set fault. Also cleaned up the SOSCF logic a bit. This PR is ready to be merged if everything passes. Fixes #256.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/258
https://github.com/psi4/psi4/issues/259:935,Availability,toler,tolerant,935,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:1426,Availability,error,error,1426,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:96,Deployability,release,release,96,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:1078,Integrability,wrap,wrapper,1078,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:1432,Integrability,message,message,1432,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:1216,Modifiability,Plugin,Plugin,1216,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:1049,Performance,optimiz,optimizations,1049,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:1093,Performance,Optimiz,Optimization,1093,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:70,Usability,clear,cleared,70,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/259:162,Usability,clear,clear,162,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/259
https://github.com/psi4/psi4/issues/260:141,Availability,error,error,141,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:158,Availability,error,error,158,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1010,Availability,error,error,1010,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1081,Availability,error,errors,1081,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1257,Availability,Error,Errors,1257,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1302,Availability,Error,Error,1302,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:896,Energy Efficiency,energy,energy,896,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1332,Modifiability,config,configure,1332,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:73,Testability,test,test,73,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1185,Testability,test,tests,1185,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/260:1296,Testability,test,test,1296,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/260
https://github.com/psi4/psi4/issues/262:4136,Availability,avail,available,4136,"/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: intel-linux; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - not found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - not found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -g -O0 -debug -DDEBUG -Wall -Wuninitialized -Wno-unknown-pragmas; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -qopenmp -O0 -g -w3 -vec-report -Wall -Wuninitialized ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;-openmp;-Wl,--end-group; -- Definitions :",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:6211,Availability,error,error,6211,"UTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;FC_SYMBOL=2;ENABLE_CHEMPS2=1;HAVE_MM_MALLOC_H; -- Configuring done; -- Generating done; -- Build files have been written to: /home/seba/software/psi4-0.5/objects; ```. Point where it fails:. ```; [ 45%] Building CXX object src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(154): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::iterator_category iterator_category;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instan",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:8089,Availability,error,error,8089,"cts/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(155): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::value_type value_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:9953,Availability,error,error,9953,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(156): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::difference_type difference_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instanti",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:11827,Availability,error,error,11827,"bjects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(157): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::pointer pointer;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:13685,Availability,error,error,13685,"ects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(158): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::reference reference;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:15507,Availability,Error,Error,15507,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. compilation aborted for /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc (code 2); src/lib/libmints/CMakeFiles/mints.dir/build.make:583: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o' failed; make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o] Error 2; CMakeFiles/Makefile2:1861: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/all' failed; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. With the GNU compiler (g++ (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010) it works fine. I'm just warning because many HPCs prefer the intel compiler and you might want to provide support. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:15670,Availability,Error,Error,15670,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. compilation aborted for /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc (code 2); src/lib/libmints/CMakeFiles/mints.dir/build.make:583: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o' failed; make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o] Error 2; CMakeFiles/Makefile2:1861: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/all' failed; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. With the GNU compiler (g++ (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010) it works fine. I'm just warning because many HPCs prefer the intel compiler and you might want to provide support. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:15741,Availability,Error,Error,15741,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. compilation aborted for /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc (code 2); src/lib/libmints/CMakeFiles/mints.dir/build.make:583: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o' failed; make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o] Error 2; CMakeFiles/Makefile2:1861: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/all' failed; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. With the GNU compiler (g++ (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010) it works fine. I'm just warning because many HPCs prefer the intel compiler and you might want to provide support. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:76,Modifiability,Config,Config,76,"Hi all,. I've tried to build psi4-0.5 with the intel compiler but it fails. Config:. ```; CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is Intel 16.0.0.20150815; -- The C compiler identification is Intel 16.0.0.20150815; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_an",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:3593,Modifiability,config,config,3593,"compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;-openmp;-Wl,--end-group); INFO: build type was not defined, using type ""Debug"".; -- Found libutil: /usr/lib/x86_64-linux-gnu/libutil.so ; -- Found libm: /usr/lib/x86_64-linux-gnu/libm.so ; -- Found librt: /usr/lib/x86_64-linux-gnu/librt.so ; -- Found libdl: /usr/lib/x86_64-linux-gnu/libdl.so ; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: intel-linux; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - not found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - not found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -g -O0 -debug -DDEBUG -Wall -Wuninitialized -Wno-unknown-pragmas; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -qopenmp -O0 -g -w3 -vec-r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:3628,Modifiability,Plugin,Plugins,3628,"NFO: build type was not defined, using type ""Debug"".; -- Found libutil: /usr/lib/x86_64-linux-gnu/libutil.so ; -- Found libm: /usr/lib/x86_64-linux-gnu/libm.so ; -- Found librt: /usr/lib/x86_64-linux-gnu/librt.so ; -- Found libdl: /usr/lib/x86_64-linux-gnu/libdl.so ; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: intel-linux; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - not found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - not found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -g -O0 -debug -DDEBUG -Wall -Wuninitialized -Wno-unknown-pragmas; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -qopenmp -O0 -g -w3 -vec-report -Wall -Wuninitialized ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:5652,Modifiability,Config,Configuring,5652,"n-pragmas; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -qopenmp -O0 -g -w3 -vec-report -Wall -Wuninitialized ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;-openmp;-Wl,--end-group; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;FC_SYMBOL=2;ENABLE_CHEMPS2=1;HAVE_MM_MALLOC_H; -- Configuring done; -- Generating done; -- Build files have been written to: /home/seba/software/psi4-0.5/objects; ```. Point where it fails:. ```; [ 45%] Building CXX object src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(154): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::iterator_category iterator_category;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/softw",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:865,Performance,Perform,Performing,865,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:901,Performance,Perform,Performing,901,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1278,Performance,Perform,Performing,1278,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1308,Performance,Perform,Performing,1308,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1383,Performance,Perform,Performing,1383,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1424,Performance,Perform,Performing,1424,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1512,Performance,Perform,Performing,1512,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1553,Performance,Perform,Performing,1553,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:498,Safety,Detect,Detecting,498,"Hi all,. I've tried to build psi4-0.5 with the intel compiler but it fails. Config:. ```; CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is Intel 16.0.0.20150815; -- The C compiler identification is Intel 16.0.0.20150815; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_an",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:534,Safety,Detect,Detecting,534,"Hi all,. I've tried to build psi4-0.5 with the intel compiler but it fails. Config:. ```; CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is Intel 16.0.0.20150815; -- The C compiler identification is Intel 16.0.0.20150815; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_an",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:790,Safety,Detect,Detecting,790,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:824,Safety,Detect,Detecting,824,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:6621,Safety,detect,detected,6621,"- Configuring done; -- Generating done; -- Build files have been written to: /home/seba/software/psi4-0.5/objects; ```. Point where it fails:. ```; [ 45%] Building CXX object src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(154): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::iterator_category iterator_category;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:8485,Safety,detect,detected,8485,"ftware/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(155): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::value_type value_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:10359,Safety,detect,detected,10359,"4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(156): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::difference_type difference_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:12217,Safety,detect,detected,12217,"eba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(157): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::pointer pointer;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:14079,Safety,detect,detected,14079,"software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(158): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::reference reference;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:15226,Safety,abort,aborted,15226,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. compilation aborted for /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc (code 2); src/lib/libmints/CMakeFiles/mints.dir/build.make:583: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o' failed; make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o] Error 2; CMakeFiles/Makefile2:1861: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/all' failed; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. With the GNU compiler (g++ (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010) it works fine. I'm just warning because many HPCs prefer the intel compiler and you might want to provide support. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:876,Testability,Test,Test,876,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:912,Testability,Test,Test,912,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1289,Testability,Test,Test,1289,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1319,Testability,Test,Test,1319,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1394,Testability,Test,Test,1394,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1435,Testability,Test,Test,1435,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1523,Testability,Test,Test,1523,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/262:1564,Testability,Test,Test,1564,"ibraries_2016.0.109/linux/bin/intel64/icpc; -- Check for working CXX compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icpc -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc; -- Check for working C compiler: /opt/intel/compilers_and_libraries_2016.0.109/linux/bin/intel64/icc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Performing Test has_xHost; -- Performing Test has_xHost - Success; -- Try OpenMP C flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-grou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/262
https://github.com/psi4/psi4/issues/263:169,Deployability,release,released,169,"Hello,. You should be able to bump up the version of chemps2 used in psi4 to 1.6 without any other modifications. It contains many performance improvements. In 1.7 (not released yet) there will be API changes. So the dmrgscf/dmrgci routine will need to be adapted simultaneously with the version tag. And it will also contain DMRG-CASPT2!. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/263
https://github.com/psi4/psi4/issues/263:256,Energy Efficiency,adapt,adapted,256,"Hello,. You should be able to bump up the version of chemps2 used in psi4 to 1.6 without any other modifications. It contains many performance improvements. In 1.7 (not released yet) there will be API changes. So the dmrgscf/dmrgci routine will need to be adapted simultaneously with the version tag. And it will also contain DMRG-CASPT2!. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/263
https://github.com/psi4/psi4/issues/263:232,Integrability,rout,routine,232,"Hello,. You should be able to bump up the version of chemps2 used in psi4 to 1.6 without any other modifications. It contains many performance improvements. In 1.7 (not released yet) there will be API changes. So the dmrgscf/dmrgci routine will need to be adapted simultaneously with the version tag. And it will also contain DMRG-CASPT2!. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/263
https://github.com/psi4/psi4/issues/263:256,Modifiability,adapt,adapted,256,"Hello,. You should be able to bump up the version of chemps2 used in psi4 to 1.6 without any other modifications. It contains many performance improvements. In 1.7 (not released yet) there will be API changes. So the dmrgscf/dmrgci routine will need to be adapted simultaneously with the version tag. And it will also contain DMRG-CASPT2!. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/263
https://github.com/psi4/psi4/issues/263:131,Performance,perform,performance,131,"Hello,. You should be able to bump up the version of chemps2 used in psi4 to 1.6 without any other modifications. It contains many performance improvements. In 1.7 (not released yet) there will be API changes. So the dmrgscf/dmrgci routine will need to be adapted simultaneously with the version tag. And it will also contain DMRG-CASPT2!. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/263
https://github.com/psi4/psi4/issues/264:3727,Availability,avail,available,3727,"d PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: gcc; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O0 -g3 -DDEBUG -Wall -Wextra -Winit-self -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Wwrite-strings; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-fopenmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;-fopenmp;-Wl,--end-group; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:24070,Availability,error,error,24070,")'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:751: undefined reference to `CheMPS2::CASSCF::calcNOON(CheMPS2::DMRGSCFindices*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:767: undefined reference to `CheMPS2::CASSCF::rotate2DMand1DM(int, int, double*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:768: undefined reference to `CheMPS2::DMRGSCFunitary::rotateActiveSpaceVectors(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:776: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:793: undefined reference to `CheMPS2::CASSCF::buildFmat(CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:794: undefined reference to `CheMPS2::CASSCF::buildWtilde(CheMPS2::DMRGSCFwtilde*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:795: undefined reference to `CheMPS2::CASSCF::augmentedHessianNR(CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFwtilde const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFunitary const*, double*, double*, double*)'; collect2: error: ld returned 1 exit status; src/bin/psi4/CMakeFiles/psi4.dir/build.make:617: recipe for target 'bin/psi4' failed; make[2]: *** [bin/psi4] Error 1; CMakeFiles/Makefile2:4698: recipe for target 'src/bin/psi4/CMakeFiles/psi4.dir/all' failed; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:24214,Availability,Error,Error,24214,")'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:751: undefined reference to `CheMPS2::CASSCF::calcNOON(CheMPS2::DMRGSCFindices*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:767: undefined reference to `CheMPS2::CASSCF::rotate2DMand1DM(int, int, double*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:768: undefined reference to `CheMPS2::DMRGSCFunitary::rotateActiveSpaceVectors(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:776: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:793: undefined reference to `CheMPS2::CASSCF::buildFmat(CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:794: undefined reference to `CheMPS2::CASSCF::buildWtilde(CheMPS2::DMRGSCFwtilde*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:795: undefined reference to `CheMPS2::CASSCF::augmentedHessianNR(CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFwtilde const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFunitary const*, double*, double*, double*)'; collect2: error: ld returned 1 exit status; src/bin/psi4/CMakeFiles/psi4.dir/build.make:617: recipe for target 'bin/psi4' failed; make[2]: *** [bin/psi4] Error 1; CMakeFiles/Makefile2:4698: recipe for target 'src/bin/psi4/CMakeFiles/psi4.dir/all' failed; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:24367,Availability,Error,Error,24367,")'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:751: undefined reference to `CheMPS2::CASSCF::calcNOON(CheMPS2::DMRGSCFindices*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:767: undefined reference to `CheMPS2::CASSCF::rotate2DMand1DM(int, int, double*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:768: undefined reference to `CheMPS2::DMRGSCFunitary::rotateActiveSpaceVectors(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:776: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:793: undefined reference to `CheMPS2::CASSCF::buildFmat(CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:794: undefined reference to `CheMPS2::CASSCF::buildWtilde(CheMPS2::DMRGSCFwtilde*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:795: undefined reference to `CheMPS2::CASSCF::augmentedHessianNR(CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFwtilde const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFunitary const*, double*, double*, double*)'; collect2: error: ld returned 1 exit status; src/bin/psi4/CMakeFiles/psi4.dir/build.make:617: recipe for target 'bin/psi4' failed; make[2]: *** [bin/psi4] Error 1; CMakeFiles/Makefile2:4698: recipe for target 'src/bin/psi4/CMakeFiles/psi4.dir/all' failed; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:24438,Availability,Error,Error,24438,")'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:751: undefined reference to `CheMPS2::CASSCF::calcNOON(CheMPS2::DMRGSCFindices*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:767: undefined reference to `CheMPS2::CASSCF::rotate2DMand1DM(int, int, double*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:768: undefined reference to `CheMPS2::DMRGSCFunitary::rotateActiveSpaceVectors(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:776: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:793: undefined reference to `CheMPS2::CASSCF::buildFmat(CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:794: undefined reference to `CheMPS2::CASSCF::buildWtilde(CheMPS2::DMRGSCFwtilde*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:795: undefined reference to `CheMPS2::CASSCF::augmentedHessianNR(CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFwtilde const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFunitary const*, double*, double*, double*)'; collect2: error: ld returned 1 exit status; src/bin/psi4/CMakeFiles/psi4.dir/build.make:617: recipe for target 'bin/psi4' failed; make[2]: *** [bin/psi4] Error 1; CMakeFiles/Makefile2:4698: recipe for target 'src/bin/psi4/CMakeFiles/psi4.dir/all' failed; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:18762,Deployability,update,updateUnitary,18762,"c:605: undefined reference to `CheMPS2::EdmistonRuedenberg::EdmistonRuedenberg(CheMPS2::Hamiltonian*, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:611: undefined reference to `CheMPS2::DMRGSCFunitary::loadU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:623: undefined reference to `CheMPS2::DIIS::loadDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:637: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:646: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:657: undefined reference to `CheMPS2::DMRGSCFunitary::makeSureAllBlocksDetOne(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:659: undefined reference to `CheMPS2::DMRGSCFunitary::getLog(double*, double*, double*) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:660: undefined reference to `CheMPS2::DIIS::appendNew(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:661: undefined reference to `CheMPS2::DIIS::calculateParam(double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:662: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:19727,Deployability,update,updateUnitary,19727,"eMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:657: undefined reference to `CheMPS2::DMRGSCFunitary::makeSureAllBlocksDetOne(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:659: undefined reference to `CheMPS2::DMRGSCFunitary::getLog(double*, double*, double*) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:660: undefined reference to `CheMPS2::DIIS::appendNew(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:661: undefined reference to `CheMPS2::DIIS::calculateParam(double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:662: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:677: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:678: undefined reference to `CheMPS2::DIIS::saveDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:695: undefined reference to `CheMPS2::EdmistonRuedenberg::Optimize(double*, double*, bool, double, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:696: undefined reference to `CheMPS2::EdmistonRuedenberg::FiedlerExchange(int, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:697: undefined reference to `CheMPS2::EdmistonRuedenberg::getUnitary()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:697: undefined reference to `CheMPS2::CASSCF::fillLocalizedOrbitalRotat",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:3474,Modifiability,config,config,3474,"opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;-fopenmp;-Wl,--end-group); INFO: build type was not defined, using type ""Debug"".; -- Found libutil: /usr/lib/x86_64-linux-gnu/libutil.so ; -- Found libm: /usr/lib/x86_64-linux-gnu/libm.so ; -- Found librt: /usr/lib/x86_64-linux-gnu/librt.so ; -- Found libdl: /usr/lib/x86_64-linux-gnu/libdl.so ; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: gcc; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O0 -g3 -DDEBUG -Wall -Wextra -Winit-self -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Wwrite-strings; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_201",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:3509,Modifiability,Plugin,Plugins,3509,"roup); INFO: build type was not defined, using type ""Debug"".; -- Found libutil: /usr/lib/x86_64-linux-gnu/libutil.so ; -- Found libm: /usr/lib/x86_64-linux-gnu/libm.so ; -- Found librt: /usr/lib/x86_64-linux-gnu/librt.so ; -- Found libdl: /usr/lib/x86_64-linux-gnu/libdl.so ; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: gcc; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O0 -g3 -DDEBUG -Wall -Wextra -Winit-self -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Wwrite-strings; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:5360,Modifiability,Config,Configuring,5360,"_restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-fopenmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;-fopenmp;-Wl,--end-group; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;FC_SYMBOL=2;ENABLE_CHEMPS2=1;HAVE_MM_MALLOC_H; -- Configuring done; -- Generating done; -- Build files have been written to: /home/seba/software/psi4-0.5/objects; ```. But it fails when the binary is linked:. ```; Linking CXX executable ../../../bin/psi4; ../../../lib/libdmrg.a(dmrgscf.cc.o): In function `psi::dmrg::chemps2_groupnumber(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)':; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:43: undefined reference to `CheMPS2::Irreps::getGroupName[abi:cxx11](int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:51: undefined reference to `CheMPS2::Irreps::getGroupName[abi:cxx11](int)'; ../../../lib/libdmrg.a(dmrgscf.cc.o): In function `psi::dmrg::copyPSIMXtoCHEMPS2MX(boost::shared_ptr<psi::Matrix>, CheMPS2::DMRGSCFindices*, CheMPS2::DMRGSCFmatrix*)':; /home/seba/software",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:820,Performance,Perform,Performing,820," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:856,Performance,Perform,Performing,856," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1278,Performance,Perform,Performing,1278," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1319,Performance,Perform,Performing,1319," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1407,Performance,Perform,Performing,1407," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1448,Performance,Perform,Performing,1448," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:17990,Performance,load,loadU,17990,"RGSCFindices::getNVIRT(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:552: undefined reference to `CheMPS2::DMRGSCFindices::getOrigNVIRTstart(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:580: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:585: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:586: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:593: undefined reference to `CheMPS2::DMRGSCFindices::getNORB(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:605: undefined reference to `CheMPS2::EdmistonRuedenberg::EdmistonRuedenberg(CheMPS2::Hamiltonian*, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:611: undefined reference to `CheMPS2::DMRGSCFunitary::loadU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:623: undefined reference to `CheMPS2::DIIS::loadDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:637: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:646: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:18429,Performance,load,loadDIIS,18429,"e/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:586: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:593: undefined reference to `CheMPS2::DMRGSCFindices::getNORB(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:605: undefined reference to `CheMPS2::EdmistonRuedenberg::EdmistonRuedenberg(CheMPS2::Hamiltonian*, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:611: undefined reference to `CheMPS2::DMRGSCFunitary::loadU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:620: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:623: undefined reference to `CheMPS2::DIIS::loadDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:637: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:646: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DMRGSCFunitary::getNumVariablesX() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:655: undefined reference to `CheMPS2::DIIS::DIIS(int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:657: undefined reference to `CheMPS2::DMRGSCFunitary::makeSureAllBlocksDetOne(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:659: undefined reference to `CheMPS2::DMRGSCFunitary::getLog(double*, double*, double*) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:660: undefined reference to `CheMPS2::DIIS",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:20290,Performance,Optimiz,Optimize,20290,"e to `CheMPS2::DMRGSCFunitary::getLog(double*, double*, double*) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:660: undefined reference to `CheMPS2::DIIS::appendNew(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:661: undefined reference to `CheMPS2::DIIS::calculateParam(double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:662: undefined reference to `CheMPS2::DMRGSCFunitary::updateUnitary(double*, double*, double*, bool, bool)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:677: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:678: undefined reference to `CheMPS2::DIIS::saveDIIS(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:695: undefined reference to `CheMPS2::EdmistonRuedenberg::Optimize(double*, double*, bool, double, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:696: undefined reference to `CheMPS2::EdmistonRuedenberg::FiedlerExchange(int, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:697: undefined reference to `CheMPS2::EdmistonRuedenberg::getUnitary()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:697: undefined reference to `CheMPS2::CASSCF::fillLocalizedOrbitalRotations(CheMPS2::DMRGSCFunitary*, CheMPS2::DMRGSCFindices*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:698: undefined reference to `CheMPS2::DMRGSCFunitary::rotateActiveSpaceVectors(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:729: undefined reference to `CheMPS2::DMRG::DMRG(CheMPS2::Problem*, CheMPS2::ConvergenceScheme*, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:731: undefined reference to `CheMPS2::DMRG::n",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:413,Safety,Detect,Detecting,413," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:449,Safety,Detect,Detecting,449," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:492,Safety,Detect,Detecting,492," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:527,Safety,Detect,Detecting,527," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:672,Safety,Detect,Detecting,672," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:706,Safety,Detect,Detecting,706," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:747,Safety,Detect,Detecting,747," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:780,Safety,Detect,Detecting,780," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:831,Testability,Test,Test,831," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:867,Testability,Test,Test,867," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1289,Testability,Test,Test,1289," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1330,Testability,Test,Test,1330," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1418,Testability,Test,Test,1418," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:1459,Testability,Test,Test,1459," psi4-0.5 with g++ and chemps2. ```; seba@seb-desktop:~/software/psi4-0.5/objects$ CXX=g++ CC=gcc cmake .. -DENABLE_PLUGINS=ON -DENABLE_CHEMPS2=ON; -- The CXX compiler identification is GNU 5.2.1; -- The C compiler identification is GNU 5.2.1; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl; -- Found BLAS: MKL (-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:14498,Usability,clear,clear,14498,")'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:449: undefined reference to `CheMPS2::ConvergenceScheme::setInstruction(int, int, double, int, double)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:481: undefined reference to `CheMPS2::DMRGSCFindices::DMRGSCFindices(int, int, int*, int*, int*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:482: undefined reference to `CheMPS2::DMRGSCFunitary::DMRGSCFunitary(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:484: undefined reference to `CheMPS2::DMRGSCFintegrals::DMRGSCFintegrals(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:485: undefined reference to `CheMPS2::DMRGSCFindices::getDMRGcumulative(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:492: undefined reference to `CheMPS2::DMRGSCFwtilde::DMRGSCFwtilde(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:14762,Usability,clear,clear,14762,"ces::DMRGSCFindices(int, int, int*, int*, int*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:482: undefined reference to `CheMPS2::DMRGSCFunitary::DMRGSCFunitary(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:484: undefined reference to `CheMPS2::DMRGSCFintegrals::DMRGSCFintegrals(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:485: undefined reference to `CheMPS2::DMRGSCFindices::getDMRGcumulative(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:492: undefined reference to `CheMPS2::DMRGSCFwtilde::DMRGSCFwtilde(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:517: undefined reference to `CheMPS2::Hamiltonian::Hamiltonian(int, int, int const*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:523: undefined reference to `CheMPS2::Problem::Problem(CheMPS2::Hamiltonian const*, int, int, int)'; /home/seba/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:15026,Usability,clear,clear,15026,"ned reference to `CheMPS2::DMRGSCFintegrals::DMRGSCFintegrals(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:485: undefined reference to `CheMPS2::DMRGSCFindices::getDMRGcumulative(int) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:492: undefined reference to `CheMPS2::DMRGSCFwtilde::DMRGSCFwtilde(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:517: undefined reference to `CheMPS2::Hamiltonian::Hamiltonian(int, int, int const*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:523: undefined reference to `CheMPS2::Problem::Problem(CheMPS2::Hamiltonian const*, int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:524: undefined reference to `CheMPS2::Problem::checkConsistency() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:525: undefined reference to `CheMPS2::Problem::SetupReorderD2h()'; /home/seba/software/psi4-0.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/issues/264:15290,Usability,clear,clear,15290,"/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:488: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:489: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:490: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:491: undefined reference to `CheMPS2::DMRGSCFmatrix::clear()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:492: undefined reference to `CheMPS2::DMRGSCFwtilde::DMRGSCFwtilde(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:517: undefined reference to `CheMPS2::Hamiltonian::Hamiltonian(int, int, int const*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:523: undefined reference to `CheMPS2::Problem::Problem(CheMPS2::Hamiltonian const*, int, int, int)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:524: undefined reference to `CheMPS2::Problem::checkConsistency() const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:525: undefined reference to `CheMPS2::Problem::SetupReorderD2h()'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:537: undefined reference to `CheMPS2::DMRGSCFmatrix::DMRGSCFmatrix(CheMPS2::DMRGSCFindices*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:544: undefined reference to `CheMPS2::DMRGSCFindices::getNirreps() const'; /home/seba/softw",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/264
https://github.com/psi4/psi4/pull/265:105,Integrability,interface,interface,105,"Adds the ability to compile and link [Ambit](https://github.com/jturney/ambit) v0.1-alpha into Psi4. The interface is disabled by default but can be enabled with either `setup --ambit=on` or `cmake -DENABLE_AMBIT=ON`. Even though the interface is disabled by default both states have been tested in Travis: [disabled](https://travis-ci.org/jturney/psi4/builds/109861480) and [enabled](https://travis-ci.org/jturney/psi4/builds/109700703). A new plugin template has also been added, `psi4 --new-plugin mycode +ambit`, which shows how to use Ambit with added Psi4 functionality. This PR also includes fixing a typo in Wavefunction and renaming the macro NotImplementedException to NOT_IMPLEMENTED_EXCEPTION to avoid conflicts with Ambit. This PR is ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/pull/265:234,Integrability,interface,interface,234,"Adds the ability to compile and link [Ambit](https://github.com/jturney/ambit) v0.1-alpha into Psi4. The interface is disabled by default but can be enabled with either `setup --ambit=on` or `cmake -DENABLE_AMBIT=ON`. Even though the interface is disabled by default both states have been tested in Travis: [disabled](https://travis-ci.org/jturney/psi4/builds/109861480) and [enabled](https://travis-ci.org/jturney/psi4/builds/109700703). A new plugin template has also been added, `psi4 --new-plugin mycode +ambit`, which shows how to use Ambit with added Psi4 functionality. This PR also includes fixing a typo in Wavefunction and renaming the macro NotImplementedException to NOT_IMPLEMENTED_EXCEPTION to avoid conflicts with Ambit. This PR is ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/pull/265:445,Modifiability,plugin,plugin,445,"Adds the ability to compile and link [Ambit](https://github.com/jturney/ambit) v0.1-alpha into Psi4. The interface is disabled by default but can be enabled with either `setup --ambit=on` or `cmake -DENABLE_AMBIT=ON`. Even though the interface is disabled by default both states have been tested in Travis: [disabled](https://travis-ci.org/jturney/psi4/builds/109861480) and [enabled](https://travis-ci.org/jturney/psi4/builds/109700703). A new plugin template has also been added, `psi4 --new-plugin mycode +ambit`, which shows how to use Ambit with added Psi4 functionality. This PR also includes fixing a typo in Wavefunction and renaming the macro NotImplementedException to NOT_IMPLEMENTED_EXCEPTION to avoid conflicts with Ambit. This PR is ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/pull/265:494,Modifiability,plugin,plugin,494,"Adds the ability to compile and link [Ambit](https://github.com/jturney/ambit) v0.1-alpha into Psi4. The interface is disabled by default but can be enabled with either `setup --ambit=on` or `cmake -DENABLE_AMBIT=ON`. Even though the interface is disabled by default both states have been tested in Travis: [disabled](https://travis-ci.org/jturney/psi4/builds/109861480) and [enabled](https://travis-ci.org/jturney/psi4/builds/109700703). A new plugin template has also been added, `psi4 --new-plugin mycode +ambit`, which shows how to use Ambit with added Psi4 functionality. This PR also includes fixing a typo in Wavefunction and renaming the macro NotImplementedException to NOT_IMPLEMENTED_EXCEPTION to avoid conflicts with Ambit. This PR is ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/pull/265:708,Safety,avoid,avoid,708,"Adds the ability to compile and link [Ambit](https://github.com/jturney/ambit) v0.1-alpha into Psi4. The interface is disabled by default but can be enabled with either `setup --ambit=on` or `cmake -DENABLE_AMBIT=ON`. Even though the interface is disabled by default both states have been tested in Travis: [disabled](https://travis-ci.org/jturney/psi4/builds/109861480) and [enabled](https://travis-ci.org/jturney/psi4/builds/109700703). A new plugin template has also been added, `psi4 --new-plugin mycode +ambit`, which shows how to use Ambit with added Psi4 functionality. This PR also includes fixing a typo in Wavefunction and renaming the macro NotImplementedException to NOT_IMPLEMENTED_EXCEPTION to avoid conflicts with Ambit. This PR is ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/pull/265:289,Testability,test,tested,289,"Adds the ability to compile and link [Ambit](https://github.com/jturney/ambit) v0.1-alpha into Psi4. The interface is disabled by default but can be enabled with either `setup --ambit=on` or `cmake -DENABLE_AMBIT=ON`. Even though the interface is disabled by default both states have been tested in Travis: [disabled](https://travis-ci.org/jturney/psi4/builds/109861480) and [enabled](https://travis-ci.org/jturney/psi4/builds/109700703). A new plugin template has also been added, `psi4 --new-plugin mycode +ambit`, which shows how to use Ambit with added Psi4 functionality. This PR also includes fixing a typo in Wavefunction and renaming the macro NotImplementedException to NOT_IMPLEMENTED_EXCEPTION to avoid conflicts with Ambit. This PR is ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/265
https://github.com/psi4/psi4/issues/266:66,Availability,error,error,66,"Dear Developers, . I compiled successfully psi4-0.5 but obtain an error when running psi4 :. ```; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {detached?} 8e01b1f . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Thu Feb 18 17:21:00 2016. Process ID: 63254; PSI4DATADIR: /home/LUCA/psi-master/psi4public/lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! Sample UHF/6-31G*\* CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C ; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'). ---. Memory set to 250.000 MiB by Python script. An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(boost::shared_ptrpsi::Wavefunction, _object_, _object_): File ""<string>"", line 29, in <module>. File ""/home/LUCA/psi-master/psi4public/lib/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 932, in run_scf; scf_helper(name, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 1138, in scf_helper; e_scf = psi4.scf(precallback, postcallback). Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/266
https://github.com/psi4/psi4/issues/266:1145,Availability,error,error,1145,"Dear Developers, . I compiled successfully psi4-0.5 but obtain an error when running psi4 :. ```; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {detached?} 8e01b1f . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Thu Feb 18 17:21:00 2016. Process ID: 63254; PSI4DATADIR: /home/LUCA/psi-master/psi4public/lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! Sample UHF/6-31G*\* CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C ; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'). ---. Memory set to 250.000 MiB by Python script. An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(boost::shared_ptrpsi::Wavefunction, _object_, _object_): File ""<string>"", line 29, in <module>. File ""/home/LUCA/psi-master/psi4public/lib/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 932, in run_scf; scf_helper(name, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 1138, in scf_helper; e_scf = psi4.scf(precallback, postcallback). Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/266
https://github.com/psi4/psi4/issues/266:1077,Energy Efficiency,energy,energy,1077,"Dear Developers, . I compiled successfully psi4-0.5 but obtain an error when running psi4 :. ```; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {detached?} 8e01b1f . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Thu Feb 18 17:21:00 2016. Process ID: 63254; PSI4DATADIR: /home/LUCA/psi-master/psi4public/lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! Sample UHF/6-31G*\* CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C ; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'). ---. Memory set to 250.000 MiB by Python script. An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(boost::shared_ptrpsi::Wavefunction, _object_, _object_): File ""<string>"", line 29, in <module>. File ""/home/LUCA/psi-master/psi4public/lib/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 932, in run_scf; scf_helper(name, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 1138, in scf_helper; e_scf = psi4.scf(precallback, postcallback). Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/266
https://github.com/psi4/psi4/issues/266:1484,Energy Efficiency,energy,energy,1484,"Dear Developers, . I compiled successfully psi4-0.5 but obtain an error when running psi4 :. ```; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {detached?} 8e01b1f . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Thu Feb 18 17:21:00 2016. Process ID: 63254; PSI4DATADIR: /home/LUCA/psi-master/psi4public/lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! Sample UHF/6-31G*\* CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C ; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'). ---. Memory set to 250.000 MiB by Python script. An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(boost::shared_ptrpsi::Wavefunction, _object_, _object_): File ""<string>"", line 29, in <module>. File ""/home/LUCA/psi-master/psi4public/lib/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 932, in run_scf; scf_helper(name, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 1138, in scf_helper; e_scf = psi4.scf(precallback, postcallback). Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/266
https://github.com/psi4/psi4/issues/266:1504,Energy Efficiency,energy,energy,1504,"Dear Developers, . I compiled successfully psi4-0.5 but obtain an error when running psi4 :. ```; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {detached?} 8e01b1f . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Thu Feb 18 17:21:00 2016. Process ID: 63254; PSI4DATADIR: /home/LUCA/psi-master/psi4public/lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! Sample UHF/6-31G*\* CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C ; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'). ---. Memory set to 250.000 MiB by Python script. An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(boost::shared_ptrpsi::Wavefunction, _object_, _object_): File ""<string>"", line 29, in <module>. File ""/home/LUCA/psi-master/psi4public/lib/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 932, in run_scf; scf_helper(name, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 1138, in scf_helper; e_scf = psi4.scf(precallback, postcallback). Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/266
https://github.com/psi4/psi4/pull/270:146,Integrability,rout,routing,146,"this PR is ready to go; - fix uninitialized variables in dfocc affecting UHF calcs. @bozkaya should review; - fix bug where default `cepa(0)` was routing to qcisd instead of cepa; - fix bug where dfocc `cepa(0)` with `DF` was getting orbital-optimized; - added test case that compares mp2 calcs btwn occ/fnocc/detci/dfmp2. rohf conv still broken btwn detci and occ, but not addressed here",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/270
https://github.com/psi4/psi4/pull/270:44,Modifiability,variab,variables,44,"this PR is ready to go; - fix uninitialized variables in dfocc affecting UHF calcs. @bozkaya should review; - fix bug where default `cepa(0)` was routing to qcisd instead of cepa; - fix bug where dfocc `cepa(0)` with `DF` was getting orbital-optimized; - added test case that compares mp2 calcs btwn occ/fnocc/detci/dfmp2. rohf conv still broken btwn detci and occ, but not addressed here",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/270
https://github.com/psi4/psi4/pull/270:242,Performance,optimiz,optimized,242,"this PR is ready to go; - fix uninitialized variables in dfocc affecting UHF calcs. @bozkaya should review; - fix bug where default `cepa(0)` was routing to qcisd instead of cepa; - fix bug where dfocc `cepa(0)` with `DF` was getting orbital-optimized; - added test case that compares mp2 calcs btwn occ/fnocc/detci/dfmp2. rohf conv still broken btwn detci and occ, but not addressed here",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/270
https://github.com/psi4/psi4/pull/270:261,Testability,test,test,261,"this PR is ready to go; - fix uninitialized variables in dfocc affecting UHF calcs. @bozkaya should review; - fix bug where default `cepa(0)` was routing to qcisd instead of cepa; - fix bug where dfocc `cepa(0)` with `DF` was getting orbital-optimized; - added test case that compares mp2 calcs btwn occ/fnocc/detci/dfmp2. rohf conv still broken btwn detci and occ, but not addressed here",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/270
https://github.com/psi4/psi4/pull/272:103,Deployability,configurat,configuration,103,"## Description. Just removes the VERSION file, because the information is already contained in CMake's configuration files.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Gets rid of the superfluous VERSION file.; - [x] Allows me to see how the new template and contributing files work in practice.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/272
https://github.com/psi4/psi4/pull/272:103,Modifiability,config,configuration,103,"## Description. Just removes the VERSION file, because the information is already contained in CMake's configuration files.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Gets rid of the superfluous VERSION file.; - [x] Allows me to see how the new template and contributing files work in practice.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/272
https://github.com/psi4/psi4/issues/273:526,Availability,error,error,526,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:548,Availability,Error,Error,548,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:592,Availability,error,error,592,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:666,Availability,Error,Error,666,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:997,Availability,Error,Error,997,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:481,Energy Efficiency,energy,energy,481,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:825,Energy Efficiency,energy,energy,825,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:845,Energy Efficiency,energy,energy,845,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:647,Security,Validat,ValidationError,647,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/issues/273:980,Security,Validat,ValidationError,980,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/273
https://github.com/psi4/psi4/pull/275:75,Deployability,configurat,configuration,75,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/275:313,Deployability,configurat,configuration,313,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/275:352,Deployability,Update,Updates,352,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/275:75,Modifiability,config,configuration,75,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/275:313,Modifiability,config,configuration,313,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/275
https://github.com/psi4/psi4/pull/276:91,Integrability,rout,routine,91,## Description. If Matrix::gemm was called with matrices of different point group size the routine did not fail and returned erroneous results.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Checks the nirrep variable on each matrix of the gemm and throws if they are different.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/276
https://github.com/psi4/psi4/pull/276:252,Modifiability,variab,variable,252,## Description. If Matrix::gemm was called with matrices of different point group size the routine did not fail and returned erroneous results.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Checks the nirrep variable on each matrix of the gemm and throws if they are different.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/276
https://github.com/psi4/psi4/pull/277:59,Deployability,install,install,59,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/pull/277:85,Deployability,install,install,85,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/pull/277:209,Deployability,install,install,209,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/pull/277:227,Deployability,install,install,227,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/pull/277:269,Deployability,install,install,269,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/pull/277:340,Deployability,update,update,340,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/277
https://github.com/psi4/psi4/issues/279:239,Energy Efficiency,energy,energy,239,"DF used to default for OMP2/OMP3/OMP2.5/OCEPA(0). However, CONV is default for them now due to default mp2_type/mp_type/cepa_type options. I think it would be better to choose DF as default for OO methods since all DF-OO methods have both energy and gradients (RHF and UHF) and significantly faster than conventional ones. @loriab @CDSherrill",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/279
https://github.com/psi4/psi4/pull/280:202,Deployability,update,updated,202,"## Description. Fix for ROHF stability analysis.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes the old ROHF stability analysis code, to account for the updated ROHF ordering used in libtrans.; - [x] Provides a test (taken from Psi3) to verify the correctness of the ROHF stability code.; ## Notes. This code will surely be replaced by a Davidson-like solver sometime soon, but it may be useful for debugging such an implementation.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/280
https://github.com/psi4/psi4/pull/280:260,Testability,test,test,260,"## Description. Fix for ROHF stability analysis.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes the old ROHF stability analysis code, to account for the updated ROHF ordering used in libtrans.; - [x] Provides a test (taken from Psi3) to verify the correctness of the ROHF stability code.; ## Notes. This code will surely be replaced by a Davidson-like solver sometime soon, but it may be useful for debugging such an implementation.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/280
https://github.com/psi4/psi4/issues/281:635,Energy Efficiency,energy,energy,635,"Previously, the following input file would have ran a combination of DFJK and DiskJK calculations. Now it seems to run DiskJK calculations twice. ```; molecule acetone {; 0 1; H 0.000000 2.136732 -0.112445; H 0.000000 -2.136732 -0.112445; H -0.881334 1.333733 -1.443842; H 0.881334 -1.333733 -1.443842; H -0.881334 -1.333733 -1.443842; H 0.881334 1.333733 -1.443842; C 0.000000 0.000000 0.000000; C 0.000000 1.287253 -0.795902; C 0.000000 -1.287253 -0.795902; O 0.000000 0.000000 1.227600; units angstrom; }. set globals {; df_scf_guess true; scf_type PK; basis 3-21g; docc [8, 1, 2, 5]; guess GWH; reference RHF; e_convergence 12; }. energy('scf'); ```. ```; ==> Primary Basis <==. Basis Set: 3-21G; Number of shells: 32; Number of basis function: 48; Number of Cartesian functions: 48; Spherical Harmonics?: false; Max angular momentum: 1. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A1 21 21 8 8 8 0; A2 4 4 1 1 1 0; B1 8 8 2 2 2 0; B2 15 15 5 5 5 0; -------------------------------------------------------; Total 48 48 16 16 16 0; -------------------------------------------------------. ==> Integral Setup <==. Batch 1 pq = [ 0, 397] index = [ 0,79003]; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 715; Schwarz Cutoff: 1E-12. Minimum eigenvalue in the overlap matrix is 1.5083126009E-02.; Using Symmetric Orthogonalization.; SCF Guess: Generalized Wolfsberg-Helmholtz. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter 1: -187.27391666424671 -1.87274e+02 1.12539e-01; @RHF iter 2: -180.35110679174790 6.92281e+00 1.03058e-01 DIIS; @RHF iter 3: -189.00974758567247 -8.65864e+00 7.17009e-02 DIIS; @RHF iter 4: -190.36715264104453 -1.35741e+00 3.48777e-02 DIIS; @RHF iter 5: -190.83292951413978 -4.65777e-01 9.44992e-03 DIIS; @RHF iter 6: -190.87826214635624 -4.53326e-02 3.45136e-03 DIIS; @RHF i",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/281
https://github.com/psi4/psi4/issues/281:1589,Energy Efficiency,Energy,Energy,1589,"reference RHF; e_convergence 12; }. energy('scf'); ```. ```; ==> Primary Basis <==. Basis Set: 3-21G; Number of shells: 32; Number of basis function: 48; Number of Cartesian functions: 48; Spherical Harmonics?: false; Max angular momentum: 1. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A1 21 21 8 8 8 0; A2 4 4 1 1 1 0; B1 8 8 2 2 2 0; B2 15 15 5 5 5 0; -------------------------------------------------------; Total 48 48 16 16 16 0; -------------------------------------------------------. ==> Integral Setup <==. Batch 1 pq = [ 0, 397] index = [ 0,79003]; ==> DiskJK: Disk-Based J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; Memory (MB): 715; Schwarz Cutoff: 1E-12. Minimum eigenvalue in the overlap matrix is 1.5083126009E-02.; Using Symmetric Orthogonalization.; SCF Guess: Generalized Wolfsberg-Helmholtz. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RHF iter 1: -187.27391666424671 -1.87274e+02 1.12539e-01; @RHF iter 2: -180.35110679174790 6.92281e+00 1.03058e-01 DIIS; @RHF iter 3: -189.00974758567247 -8.65864e+00 7.17009e-02 DIIS; @RHF iter 4: -190.36715264104453 -1.35741e+00 3.48777e-02 DIIS; @RHF iter 5: -190.83292951413978 -4.65777e-01 9.44992e-03 DIIS; @RHF iter 6: -190.87826214635624 -4.53326e-02 3.45136e-03 DIIS; @RHF iter 7: -190.88536867922011 -7.10653e-03 1.16084e-03 DIIS; @RHF iter 8: -190.88604640793187 -6.77729e-04 4.28749e-04 DIIS; @RHF iter 9: -190.88629946742424 -2.53059e-04 1.44181e-04 DIIS; @RHF iter 10: -190.88631371439720 -1.42470e-05 1.90608e-05 DIIS; @RHF iter 11: -190.88631410792334 -3.93526e-07 2.23723e-06 DIIS; @RHF iter 12: -190.88631411317886 -5.25552e-09 2.76348e-07 DIIS; @RHF iter 13: -190.88631411323206 -5.32054e-11 5.21575e-08 DIIS; @RHF iter 14: -190.88631411323365 -1.59162e-12 7.78940e-09 DIIS; @RHF iter 15: -190.88631411323342 2.27374e-13 9.99506e-10 DIIS. DF guess converged. ==>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/281
https://github.com/psi4/psi4/issues/282:357,Availability,error,error,357,"One of our students has been working through the Psi4Education site and one of the labs requires the user to run MP4 on boron. If I'm reading the [managed method matrix](http://psicode.org/psi4manual/master/proc_py.html#table-managedmethods) correctly then the user should specify an ROHF reference and Psi4 will use DETCI. However we receive the following error:. Input file: [h2o_mp4.txt](https://github.com/psi4/psi4/files/148253/h2o_mp4.txt). ```; An error has occurred Py-side; Traceback:; <class 'p4xcpt.ManagedMethodError'>: select_mp4: Method 'mp4' with MP_TYPE 'CONV' and REFERENCE 'ROHF' not available: File ""<string>"", line 27, in <module>. File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/proc.py"", line 831, in select_mp4; raise ManagedMethodError(['select_mp4', name, 'MP_TYPE', mtd_type, reference, module]); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/282
https://github.com/psi4/psi4/issues/282:455,Availability,error,error,455,"One of our students has been working through the Psi4Education site and one of the labs requires the user to run MP4 on boron. If I'm reading the [managed method matrix](http://psicode.org/psi4manual/master/proc_py.html#table-managedmethods) correctly then the user should specify an ROHF reference and Psi4 will use DETCI. However we receive the following error:. Input file: [h2o_mp4.txt](https://github.com/psi4/psi4/files/148253/h2o_mp4.txt). ```; An error has occurred Py-side; Traceback:; <class 'p4xcpt.ManagedMethodError'>: select_mp4: Method 'mp4' with MP_TYPE 'CONV' and REFERENCE 'ROHF' not available: File ""<string>"", line 27, in <module>. File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/proc.py"", line 831, in select_mp4; raise ManagedMethodError(['select_mp4', name, 'MP_TYPE', mtd_type, reference, module]); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/282
https://github.com/psi4/psi4/issues/282:602,Availability,avail,available,602,"One of our students has been working through the Psi4Education site and one of the labs requires the user to run MP4 on boron. If I'm reading the [managed method matrix](http://psicode.org/psi4manual/master/proc_py.html#table-managedmethods) correctly then the user should specify an ROHF reference and Psi4 will use DETCI. However we receive the following error:. Input file: [h2o_mp4.txt](https://github.com/psi4/psi4/files/148253/h2o_mp4.txt). ```; An error has occurred Py-side; Traceback:; <class 'p4xcpt.ManagedMethodError'>: select_mp4: Method 'mp4' with MP_TYPE 'CONV' and REFERENCE 'ROHF' not available: File ""<string>"", line 27, in <module>. File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/proc.py"", line 831, in select_mp4; raise ManagedMethodError(['select_mp4', name, 'MP_TYPE', mtd_type, reference, module]); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/282
https://github.com/psi4/psi4/issues/282:738,Energy Efficiency,energy,energy,738,"One of our students has been working through the Psi4Education site and one of the labs requires the user to run MP4 on boron. If I'm reading the [managed method matrix](http://psicode.org/psi4manual/master/proc_py.html#table-managedmethods) correctly then the user should specify an ROHF reference and Psi4 will use DETCI. However we receive the following error:. Input file: [h2o_mp4.txt](https://github.com/psi4/psi4/files/148253/h2o_mp4.txt). ```; An error has occurred Py-side; Traceback:; <class 'p4xcpt.ManagedMethodError'>: select_mp4: Method 'mp4' with MP_TYPE 'CONV' and REFERENCE 'ROHF' not available: File ""<string>"", line 27, in <module>. File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/proc.py"", line 831, in select_mp4; raise ManagedMethodError(['select_mp4', name, 'MP_TYPE', mtd_type, reference, module]); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/282
https://github.com/psi4/psi4/issues/282:764,Energy Efficiency,energy,energy,764,"One of our students has been working through the Psi4Education site and one of the labs requires the user to run MP4 on boron. If I'm reading the [managed method matrix](http://psicode.org/psi4manual/master/proc_py.html#table-managedmethods) correctly then the user should specify an ROHF reference and Psi4 will use DETCI. However we receive the following error:. Input file: [h2o_mp4.txt](https://github.com/psi4/psi4/files/148253/h2o_mp4.txt). ```; An error has occurred Py-side; Traceback:; <class 'p4xcpt.ManagedMethodError'>: select_mp4: Method 'mp4' with MP_TYPE 'CONV' and REFERENCE 'ROHF' not available: File ""<string>"", line 27, in <module>. File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/proc.py"", line 831, in select_mp4; raise ManagedMethodError(['select_mp4', name, 'MP_TYPE', mtd_type, reference, module]); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/282
https://github.com/psi4/psi4/pull/283:96,Availability,toler,tolerance,96,"## Description. Reduces the minimum overlap between atoms to fix issue #195. Reductions to this tolerance in the future would likely have to be for ghost atoms only. A downside to this is linear depends will pop up much more often when two atoms are this close together, especially in highly symmetric molecules.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/283
https://github.com/psi4/psi4/pull/283:168,Availability,down,downside,168,"## Description. Reduces the minimum overlap between atoms to fix issue #195. Reductions to this tolerance in the future would likely have to be for ghost atoms only. A downside to this is linear depends will pop up much more often when two atoms are this close together, especially in highly symmetric molecules.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/283
https://github.com/psi4/psi4/pull/283:16,Energy Efficiency,Reduce,Reduces,16,"## Description. Reduces the minimum overlap between atoms to fix issue #195. Reductions to this tolerance in the future would likely have to be for ghost atoms only. A downside to this is linear depends will pop up much more often when two atoms are this close together, especially in highly symmetric molecules.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/283
https://github.com/psi4/psi4/pull/283:195,Integrability,depend,depends,195,"## Description. Reduces the minimum overlap between atoms to fix issue #195. Reductions to this tolerance in the future would likely have to be for ghost atoms only. A downside to this is linear depends will pop up much more often when two atoms are this close together, especially in highly symmetric molecules.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/283
https://github.com/psi4/psi4/pull/284:126,Deployability,update,updated,126,## Description. DF_SCF_GUESS was not completely suppressed for PK integrals. The code is now cleaned up and the documentation updated.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Clean up DF_SCF_GUESS so that it only acts on integral direct computations; - [x] Update the documentation; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/284
https://github.com/psi4/psi4/pull/284:307,Deployability,Update,Update,307,## Description. DF_SCF_GUESS was not completely suppressed for PK integrals. The code is now cleaned up and the documentation updated.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Clean up DF_SCF_GUESS so that it only acts on integral direct computations; - [x] Update the documentation; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/284
https://github.com/psi4/psi4/issues/285:501,Testability,test,test,501,"How did these evade me? Everything should be calling `BasisSet::pyconstruct`.; - [x] @fevangelista There's one in cubeprop (https://github.com/psi4/psi4/blob/master/src/lib/libcubeprop/csg.cc#L321). Does it need to endure? And is it related to the ""ESP task requires"" note in file:///Users/loriab/linux/psihub/publicface/psi4/objdir/doc/sphinxman/html/cubeprop.html .; - [x] hf.cc I don't think https://github.com/psi4/psi4/blob/master/src/lib/libscf_solver/hf.cc#L1529 ever gets called, but I should test. This one actually is still active, but I switched it over in 58db333; - [x] dftensor.cc Anyone know if this gets called regularly? at all? https://github.com/psi4/psi4/blob/master/src/lib/lib3index/dftensor.cc#L78",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/285
https://github.com/psi4/psi4/pull/286:912,Usability,simpl,simplify-wave-function-passing,912,"## Description. consolidate cube-writing code; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] consolidate three cube-centered pieces of code into one, libcubeprop. history of this in discussions below.; - [x] spruce up some docs, particularly when options text has been copied from read_options into the written docs, which then gets out of sync, and who knows which is right. want to replace these with `.. include:: autodir_options_c/globals__relativistic.rst`` that can't get out of sync; - [x] put in parameter, return, examples docstrings, versionadded (for wfn) for the lesser-used user-facing fns: oeprop, molden, cubeprop and get these into the Psithon Functions chapter of docs, rather than hidden away in the Programmers Manual --> Python Driver section. This is to satisfy the soft fail request for oeprop/molden/cubeprop (http://forum.psicode.org/t/ideas-to-simplify-wave-function-passing/161/10?u=loriab for discussion).; - [x] put off until later real standardization of handling oeprop, molden, cubeprop python fns and associated documentation; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/286
https://github.com/psi4/psi4/pull/287:37,Availability,error,error,37,## Description. There was a compiler error when GTFock was called in libscf_solver. I fixed this error and I also enabled GTFock to work with symmetry. ; ## Todos; - [x] PSI4 compilers with HAVE_JK_FACTORY flag enabled; - [x] GTFock works with symmetry. ; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/287
https://github.com/psi4/psi4/pull/287:97,Availability,error,error,97,## Description. There was a compiler error when GTFock was called in libscf_solver. I fixed this error and I also enabled GTFock to work with symmetry. ; ## Todos; - [x] PSI4 compilers with HAVE_JK_FACTORY flag enabled; - [x] GTFock works with symmetry. ; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/287
https://github.com/psi4/psi4/issues/289:27,Availability,error,error,27,"Trying `psi4 -t` gave this error:. ```; Git: Rev {master} b04cdf9 dirty; ...; Psi4 started on: Wed Feb 24 14:56:44 2016. Process ID: 2767; PSI4DATADIR: /home/eric/data/opt/apps/python/anaconda2/share/psi4; Memory level set to 256.000 MB; Traceback (most recent call last):; File ""/home/eric/data/opt/apps/python/anaconda2/share/psi4/python/interactive.py"", line 3, in <module>; import readline # optional, will allow Up/Down/History in the console; ImportError: libncursesw.so.5: cannot open shared object file: No such file or directory; ```. which was fixed by installing the latest ncurses package.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/289
https://github.com/psi4/psi4/issues/289:420,Availability,Down,Down,420,"Trying `psi4 -t` gave this error:. ```; Git: Rev {master} b04cdf9 dirty; ...; Psi4 started on: Wed Feb 24 14:56:44 2016. Process ID: 2767; PSI4DATADIR: /home/eric/data/opt/apps/python/anaconda2/share/psi4; Memory level set to 256.000 MB; Traceback (most recent call last):; File ""/home/eric/data/opt/apps/python/anaconda2/share/psi4/python/interactive.py"", line 3, in <module>; import readline # optional, will allow Up/Down/History in the console; ImportError: libncursesw.so.5: cannot open shared object file: No such file or directory; ```. which was fixed by installing the latest ncurses package.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/289
https://github.com/psi4/psi4/issues/289:563,Deployability,install,installing,563,"Trying `psi4 -t` gave this error:. ```; Git: Rev {master} b04cdf9 dirty; ...; Psi4 started on: Wed Feb 24 14:56:44 2016. Process ID: 2767; PSI4DATADIR: /home/eric/data/opt/apps/python/anaconda2/share/psi4; Memory level set to 256.000 MB; Traceback (most recent call last):; File ""/home/eric/data/opt/apps/python/anaconda2/share/psi4/python/interactive.py"", line 3, in <module>; import readline # optional, will allow Up/Down/History in the console; ImportError: libncursesw.so.5: cannot open shared object file: No such file or directory; ```. which was fixed by installing the latest ncurses package.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/289
https://github.com/psi4/psi4/issues/290:554,Energy Efficiency,Energy,Energy,554,"I've made changes and then had only the opt-irc-2 test case fail. Now I notice that others are having problems: https://testboard.org/cdash/testSummary.php?project=3&name=opt-irc-2&date=2016-02-27 . This is only a slight discrepancies at the end of a long IRC. In my case, at least, the number of IRC steps is the same. Do convergence keyword need tightening to preserve the reference progress of the IRC? Or does the compare_values check just need loosening to account for variance after many many optimization cycles? @avcopan, could you investigate?. Energy of last IRC point: computed value (-92.869134) does not match (-92.868907) to 5 decimal places.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/290
https://github.com/psi4/psi4/issues/290:499,Performance,optimiz,optimization,499,"I've made changes and then had only the opt-irc-2 test case fail. Now I notice that others are having problems: https://testboard.org/cdash/testSummary.php?project=3&name=opt-irc-2&date=2016-02-27 . This is only a slight discrepancies at the end of a long IRC. In my case, at least, the number of IRC steps is the same. Do convergence keyword need tightening to preserve the reference progress of the IRC? Or does the compare_values check just need loosening to account for variance after many many optimization cycles? @avcopan, could you investigate?. Energy of last IRC point: computed value (-92.869134) does not match (-92.868907) to 5 decimal places.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/290
https://github.com/psi4/psi4/issues/290:50,Testability,test,test,50,"I've made changes and then had only the opt-irc-2 test case fail. Now I notice that others are having problems: https://testboard.org/cdash/testSummary.php?project=3&name=opt-irc-2&date=2016-02-27 . This is only a slight discrepancies at the end of a long IRC. In my case, at least, the number of IRC steps is the same. Do convergence keyword need tightening to preserve the reference progress of the IRC? Or does the compare_values check just need loosening to account for variance after many many optimization cycles? @avcopan, could you investigate?. Energy of last IRC point: computed value (-92.869134) does not match (-92.868907) to 5 decimal places.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/290
https://github.com/psi4/psi4/issues/290:120,Testability,test,testboard,120,"I've made changes and then had only the opt-irc-2 test case fail. Now I notice that others are having problems: https://testboard.org/cdash/testSummary.php?project=3&name=opt-irc-2&date=2016-02-27 . This is only a slight discrepancies at the end of a long IRC. In my case, at least, the number of IRC steps is the same. Do convergence keyword need tightening to preserve the reference progress of the IRC? Or does the compare_values check just need loosening to account for variance after many many optimization cycles? @avcopan, could you investigate?. Energy of last IRC point: computed value (-92.869134) does not match (-92.868907) to 5 decimal places.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/290
https://github.com/psi4/psi4/issues/290:140,Testability,test,testSummary,140,"I've made changes and then had only the opt-irc-2 test case fail. Now I notice that others are having problems: https://testboard.org/cdash/testSummary.php?project=3&name=opt-irc-2&date=2016-02-27 . This is only a slight discrepancies at the end of a long IRC. In my case, at least, the number of IRC steps is the same. Do convergence keyword need tightening to preserve the reference progress of the IRC? Or does the compare_values check just need loosening to account for variance after many many optimization cycles? @avcopan, could you investigate?. Energy of last IRC point: computed value (-92.869134) does not match (-92.868907) to 5 decimal places.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/290
https://github.com/psi4/psi4/issues/291:67,Availability,error,error,67,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:162,Availability,error,error,162,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:821,Energy Efficiency,ENERGY,ENERGY,821,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:73,Integrability,message,message,73,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:88,Performance,Perform,Performing,88,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:390,Performance,optimiz,optimize,390,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:649,Performance,optimiz,optimize,649,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/issues/291:4,Testability,test,test,4,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/291
https://github.com/psi4/psi4/pull/292:49,Energy Efficiency,energy,energy,49,"Previously, this was returning the last computed energy. Now, it returns the energy of the last IRC point. This should fix the test cases, which were failing on some systems.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/292
https://github.com/psi4/psi4/pull/292:77,Energy Efficiency,energy,energy,77,"Previously, this was returning the last computed energy. Now, it returns the energy of the last IRC point. This should fix the test cases, which were failing on some systems.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/292
https://github.com/psi4/psi4/pull/292:127,Testability,test,test,127,"Previously, this was returning the last computed energy. Now, it returns the energy of the last IRC point. This should fix the test cases, which were failing on some systems.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/292
https://github.com/psi4/psi4/issues/293:380,Integrability,wrap,wrapper,380,"- [x] apply decisions from http://forum.psicode.org/t/naming-considerations-for-cepa-0/156/5 to driver, managed methods; - [x] make sure to kill off `CEPA_TYPE`; - [x] adjust tables in occ.rst and fnocc.rst and capabilities table and proc_py.rst; - [x] adjust test cases. make analogous cepa-module to mp2-module for checking up on these things?; - [x] adjust methods dict in cbs wrapper; - [x] notify person I was corresponding with on forum about cepa about calling changes",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/293
https://github.com/psi4/psi4/issues/293:260,Testability,test,test,260,"- [x] apply decisions from http://forum.psicode.org/t/naming-considerations-for-cepa-0/156/5 to driver, managed methods; - [x] make sure to kill off `CEPA_TYPE`; - [x] adjust tables in occ.rst and fnocc.rst and capabilities table and proc_py.rst; - [x] adjust test cases. make analogous cepa-module to mp2-module for checking up on these things?; - [x] adjust methods dict in cbs wrapper; - [x] notify person I was corresponding with on forum about cepa about calling changes",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/293
https://github.com/psi4/psi4/issues/294:116,Testability,test,test,116,Use http://forum.psicode.org/t/is-rohf-bccd-t-possible/154/9 to fix driver to make calc therein run-able. Maybe add test case so we don't break it again.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/294
https://github.com/psi4/psi4/pull/295:352,Availability,redundant,redundant,352,## Description. Allows BCCD with ROHF starting orbitals.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Added BCCD and BCCD_T to the list of ROHF semicanonicalize cases in `src/bin/cc*`.; - [x] Added a BCCD ROHF test case; - [x] Added a BCCD_MAXITER keyword instead of using an arbitrary value; - [x] Removed redundant `proc.py:run_bccdt`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/295
https://github.com/psi4/psi4/pull/295:352,Safety,redund,redundant,352,## Description. Allows BCCD with ROHF starting orbitals.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Added BCCD and BCCD_T to the list of ROHF semicanonicalize cases in `src/bin/cc*`.; - [x] Added a BCCD ROHF test case; - [x] Added a BCCD_MAXITER keyword instead of using an arbitrary value; - [x] Removed redundant `proc.py:run_bccdt`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/295
https://github.com/psi4/psi4/pull/295:255,Testability,test,test,255,## Description. Allows BCCD with ROHF starting orbitals.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Added BCCD and BCCD_T to the list of ROHF semicanonicalize cases in `src/bin/cc*`.; - [x] Added a BCCD ROHF test case; - [x] Added a BCCD_MAXITER keyword instead of using an arbitrary value; - [x] Removed redundant `proc.py:run_bccdt`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/295
https://github.com/psi4/psi4/pull/296:16,Energy Efficiency,Reduce,Reduced,16,"## Description. Reduced memory requirements for MRPT integral presorts.; ## Todos; - [x] Less memory use for MRPT calculations.; - [x] More shorttests and quicktests coverage of PSIMRCC codes.; ## Questions; - [x] Do you think we should also use the DPD buffers to perform the presort for CCSD calculations, instead of IWL, @fevangelista ?; - [x] Also, do you agree with these changes to the MRPT setup code, @fevangelista ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/296
https://github.com/psi4/psi4/pull/296:265,Performance,perform,perform,265,"## Description. Reduced memory requirements for MRPT integral presorts.; ## Todos; - [x] Less memory use for MRPT calculations.; - [x] More shorttests and quicktests coverage of PSIMRCC codes.; ## Questions; - [x] Do you think we should also use the DPD buffers to perform the presort for CCSD calculations, instead of IWL, @fevangelista ?; - [x] Also, do you agree with these changes to the MRPT setup code, @fevangelista ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/296
https://github.com/psi4/psi4/issues/297:155,Modifiability,config,config,155,"We tend to build with all Gnu compilers or all Intel compilers or maybe icpc/gfortran? Sometime, give the other combinations a spin to make sure our CMake config system can handle them. There's evidence (http://forum.psicode.org/t/gcc-and-fort-on-an-el-capitan-mac/165) that it can't. ; - [x] icpc & gfortran on linux; - [ ] g++ & ifort on linux; - [ ] icpc & gfortran on mac; - [ ] g++ & ifort on mac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/297
https://github.com/psi4/psi4/issues/298:142,Performance,optimiz,optimization,142,"Disilylether with scf_type=pk is fine. Without it, the gradients are only c2v-symmetric to 9 decimal places, and after some geometry steps an optimization will fail due to change in point group. Is this noise an inevitable consequence of density-fitting or some other approximation? If so, can we symmetrize the gradient after it is produced? I haven't confirmed this result yet with the very latest psi4. ``` python; memory 2 gb; set {; basis 6-31G*; reference RHF; guess gwh; }. molecule {; 0 1; SI 0.0 -3.03636189 0.1503967744; SI 0.0 3.03636189 0.1503967744; O 0.0 0.00000000 -0.6720662056; H 0.0 -4.54756839 -1.9795468656; H 0.0 4.54756839 -1.9795468656; H 2.12290049 -3.58475023 1.5688329144; H -2.12290049 -3.58475023 1.5688329144; H 2.12290049 3.58475023 1.5688329144; H -2.12290049 3.58475023 1.5688329144; }; gradient('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/298
https://github.com/psi4/psi4/pull/300:181,Performance,Optimiz,Optimizer,181,"## Description. Modified linear bend algorithm in optking to bend, when possible, along cartesian axes. Added SF4 (opt14) test case for which this change was made.; ## Todos; - [x] Optimizer now works for odd cases where linear bend is in a symmetry plane but is not constrained to be linear by the molecular point group. Fixed problem discovered by WebMO use for SF4.; - [x] Added opt14 test case for SF4.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/300
https://github.com/psi4/psi4/pull/300:122,Testability,test,test,122,"## Description. Modified linear bend algorithm in optking to bend, when possible, along cartesian axes. Added SF4 (opt14) test case for which this change was made.; ## Todos; - [x] Optimizer now works for odd cases where linear bend is in a symmetry plane but is not constrained to be linear by the molecular point group. Fixed problem discovered by WebMO use for SF4.; - [x] Added opt14 test case for SF4.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/300
https://github.com/psi4/psi4/pull/300:388,Testability,test,test,388,"## Description. Modified linear bend algorithm in optking to bend, when possible, along cartesian axes. Added SF4 (opt14) test case for which this change was made.; ## Todos; - [x] Optimizer now works for odd cases where linear bend is in a symmetry plane but is not constrained to be linear by the molecular point group. Fixed problem discovered by WebMO use for SF4.; - [x] Added opt14 test case for SF4.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/300
https://github.com/psi4/psi4/pull/301:382,Availability,toler,tolerance,382,"## Description. SCF Gradients are now symmetrized by swiping some code from Andy's Deriv module and placing it in `scfgrad`. Generally we wouldn't want to duplicate code, but there isn't a great way to avoid this at the moment. Discussion in issue #298 for reasoning behind this simple solution.; ## Todos; - [x] SCF Gradient is now symmetrized.; - [x] Fixed the `opt7` convergence tolerance issue the failing cases now does an additional 6 iterations.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/301
https://github.com/psi4/psi4/pull/301:202,Safety,avoid,avoid,202,"## Description. SCF Gradients are now symmetrized by swiping some code from Andy's Deriv module and placing it in `scfgrad`. Generally we wouldn't want to duplicate code, but there isn't a great way to avoid this at the moment. Discussion in issue #298 for reasoning behind this simple solution.; ## Todos; - [x] SCF Gradient is now symmetrized.; - [x] Fixed the `opt7` convergence tolerance issue the failing cases now does an additional 6 iterations.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/301
https://github.com/psi4/psi4/pull/301:279,Usability,simpl,simple,279,"## Description. SCF Gradients are now symmetrized by swiping some code from Andy's Deriv module and placing it in `scfgrad`. Generally we wouldn't want to duplicate code, but there isn't a great way to avoid this at the moment. Discussion in issue #298 for reasoning behind this simple solution.; ## Todos; - [x] SCF Gradient is now symmetrized.; - [x] Fixed the `opt7` convergence tolerance issue the failing cases now does an additional 6 iterations.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/301
https://github.com/psi4/psi4/issues/302:119,Testability,test,tests,119,"Hi everyone,. Two short questions regarding https://github.com/psi4/psi4/blob/a5f51268e0385916830a2065ed34052cf1fab647/tests/props1/input.dat:. Q1: Is there a generalization of. ```; set scf perturb_h true; set scf perturb_with dipole_z; set scf perturb_magnitude 0.001; ```. to specific unit vectors? Or alternatively, can one specify a dipole perturbation as follows. ```; set scf perturb_with dipole_vec; set scf perturb_magnitude [ 0.001 * cos_theta, 0.001 * sin_theta, 0.0 ]; ```. in which a vector can be placed? I do understand that as an alternative I can rotate the geometry, but I'm just wondering. Q2: Are those integrals ( i | T + V_nuc + field . dipole | j ) also present in subsequent calculations (mp2, ccsd, dmrg)?. Thanks!; Seb",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/302
https://github.com/psi4/psi4/issues/303:124,Performance,optimiz,optimizations,124,"Currently the optking binary data is not saved correctly during complex operations like `cbs`, `database`, etc. At present, optimizations will proceed; however, since all previous iteration data is lost the convergence will be very slow.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/303
https://github.com/psi4/psi4/pull/304:362,Energy Efficiency,energy,energy,362,"## Description. General wavefunction cleanup, should fix #259. The other TODO's in that issue have been moved to separate issues or were already flagged elsewhere.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixed py-side Molden writer; - [x] Added a py-side Molden test; - [x] Moved `return_wfn` warnings into the `energy` class. As these can only be called from here I think thats fine for now. Needs to find a better home in the future.; - [x] Modernized a few plugins; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/304
https://github.com/psi4/psi4/pull/304:510,Modifiability,plugin,plugins,510,"## Description. General wavefunction cleanup, should fix #259. The other TODO's in that issue have been moved to separate issues or were already flagged elsewhere.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixed py-side Molden writer; - [x] Added a py-side Molden test; - [x] Moved `return_wfn` warnings into the `energy` class. As these can only be called from here I think thats fine for now. Needs to find a better home in the future.; - [x] Modernized a few plugins; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/304
https://github.com/psi4/psi4/pull/304:312,Testability,test,test,312,"## Description. General wavefunction cleanup, should fix #259. The other TODO's in that issue have been moved to separate issues or were already flagged elsewhere.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixed py-side Molden writer; - [x] Added a py-side Molden test; - [x] Moved `return_wfn` warnings into the `energy` class. As these can only be called from here I think thats fine for now. Needs to find a better home in the future.; - [x] Modernized a few plugins; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/304
https://github.com/psi4/psi4/pull/305:297,Deployability,update,updated,297,## Description. Yearly sync of qcdb. And other issues that cropped up.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] implemented and disabled new -D3 variants. consolidated dftd3-driving code into qcdb; - [x] qcdb synched from upstream and considerably updated for py3k; - [x] added scf5 to quicktests. it's only 20 seconds and was passing unpredictably until I started a fresh objdir; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/305
https://github.com/psi4/psi4/pull/306:653,Availability,avail,availability,653,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/306
https://github.com/psi4/psi4/pull/306:828,Availability,avail,available,828,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/306
https://github.com/psi4/psi4/pull/306:1257,Modifiability,plugin,plugin,1257,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/306
https://github.com/psi4/psi4/pull/306:1301,Security,access,access,1301,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/306
https://github.com/psi4/psi4/pull/306:646,Testability,test,tested,646,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/306
https://github.com/psi4/psi4/pull/306:1224,Testability,test,test,1224,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/306
https://github.com/psi4/psi4/issues/307:906,Availability,error,error,906,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1005,Availability,error,error,1005,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1079,Availability,Error,Error,1079,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1091,Availability,Error,Error,1091,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1098,Availability,Error,Error,1098,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1168,Availability,error,error,1168,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:832,Energy Efficiency,energy,energy,832,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1706,Energy Efficiency,energy,energy,1706,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/307:1732,Energy Efficiency,energy,energy,1732,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/307
https://github.com/psi4/psi4/issues/308:938,Deployability,release,release,938,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:33,Modifiability,plug-in,plug-in,33,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:98,Modifiability,plugin,plugins,98,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:118,Modifiability,plug-in,plug-in,118,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:200,Modifiability,plugin,plugins,200,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:334,Modifiability,plugin,plugin,334,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:404,Modifiability,plugin,plugin,404,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:975,Modifiability,plug-in,plug-in,975,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/issues/308:1057,Usability,simpl,simple,1057,"Hello,. I am trying to compile a plug-in as described in http://www.psicode.org/psi4manual/master/plugins.html .; The plug-in is one of those used as example (https://github.com/psi4/psi4/tree/master/plugins/mointegrals). All I did is: ; 1. Create a directory. ; 2. Copy into it the files from the last link.; 3. Execute: `psi4 --new-plugin myplugin +mointegrals`; 3''. Alternatively I tried `psi4 --new-plugin myplugin mointegrals`; 4. Change dir to the new directory and execute `make`. It returns:; `Makefile:15: /build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars: No existe el archivo o el directorio; make: *** No hay ninguna regla para construir el objetivo «/build/buildd/psi4-4.0~beta5+dfsg/builddir/src/bin/MakeVars». Alto.`; (The file or directory doesn't exist. There is no rule to build the target. Stop.). What I'm doing wrong?. My work station is running linux Ubuntu LTS 14.04. The psi4 version is the last stable release. . I'm trying to compile the plug-in with the hope it helps me to build the full CI matrix. If Psi4 provides a simple way to generate the Hamiltonian matrix elements it would be even more useful to me. Thank you very much for your time and the opportunity of using your software.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/308
https://github.com/psi4/psi4/pull/309:30,Modifiability,plugin,plugin,30,## Description. fixed up some plugin templates that escaped the wavefunction pass; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Make [asm]ointegrals plugin templates wavefunction-pass (and basis-building) compliant; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/309
https://github.com/psi4/psi4/pull/309:193,Modifiability,plugin,plugin,193,## Description. fixed up some plugin templates that escaped the wavefunction pass; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Make [asm]ointegrals plugin templates wavefunction-pass (and basis-building) compliant; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/309
https://github.com/psi4/psi4/issues/310:1333,Energy Efficiency,Energy,Energy,1333,"u_verytight; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core false. # the gradient that any fully optimized molecule should match, more or less. zerograd = psi4.Matrix(5,3); refgrad = [; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0]]; zerograd.set(refgrad). # this is the first system, a fluoromethane that looks pretty good to the eye; # zmat version, normz. molecule normz {; C; H 1 1.2; H 1 1.2 2 104; H 1 1.2 2 105 3 120; F 1 1.3 2 106 4 121; }. # reference start NRE, E, G. norm_nre_start = 37.6824945882 # Q-Chem; norm_e_start = -139.5307182946 # Q-Chem; norm_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:1718,Energy Efficiency,Energy,Energy,1718,"ooks pretty good to the eye; # zmat version, normz. molecule normz {; C; H 1 1.2; H 1 1.2 2 104; H 1 1.2 2 105 3 120; F 1 1.3 2 106 4 121; }. # reference start NRE, E, G. norm_nre_start = 37.6824945882 # Q-Chem; norm_e_start = -139.5307182946 # Q-Chem; norm_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:2130,Energy Efficiency,ENERGY,ENERGY,2130,"0240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogoo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:2507,Energy Efficiency,ENERGY,ENERGY,2507,"50 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre...................",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:2774,Energy Efficiency,ENERGY,ENERGY,2774,"00025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad..............................................",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:3166,Energy Efficiency,ENERGY,ENERGY,3166,"t ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad........................................................PASSED; #Optimizer: Optimization complete!; # opt nre...........................................................PASSED; # opt ene...........................................................PASSED; # opt ZERO grad.....................................................PASSED. # ------------------------------------------------------------------------------------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:4169,Energy Efficiency,Energy,Energy,4169,"'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad........................................................PASSED; #Optimizer: Optimization complete!; # opt nre...........................................................PASSED; # opt ene...........................................................PASSED; # opt ZERO grad.....................................................PASSED. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.530718293045 -139.530718293045 0.05695995 0.03625240 0.19767161 0.12159384 ~; # 2 -139.555614729326 -0.024896436281 0.02341593 0.00968824 0.06857406 0.03977721 ~; # 3 -139.556998324542 -0.001383595215 0.00950087 0.00516674 0.02878292 0.01662559 ~; # 4 -139.557349947407 -0.000351622866 0.00371412 0.00163364 0.01005622 0.00527025 ~; # 5 -139.557391640737 -0.000041693330 0.00051457 0.00018711 0.00138018 0.00067210 ~; # 6 -139.557392223903 -0.000000583166 0.00004140 0.00002031 0.00028542 0.00012144 ~; # 7 -139.557392234146 -0.000000010243 0.00001186 0.00000566 0.00004411 0.00002377 ~; # 8 -139.557392234594 -0.000000000448 0.00000420 0.00000194 0.00001643 0.00000834 ~; # 9 -139.557392234645 -0.000000000051 0.00000176 0.00000074 0.00000686 0.00000306 ~; # 10 -139.557392234661 -0.000000000016 0.00000071 0.00000029 0.00000278 0.00000118 ~; ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:5653,Energy Efficiency,Energy,Energy,5653,"2866 0.00371412 0.00163364 0.01005622 0.00527025 ~; # 5 -139.557391640737 -0.000041693330 0.00051457 0.00018711 0.00138018 0.00067210 ~; # 6 -139.557392223903 -0.000000583166 0.00004140 0.00002031 0.00028542 0.00012144 ~; # 7 -139.557392234146 -0.000000010243 0.00001186 0.00000566 0.00004411 0.00002377 ~; # 8 -139.557392234594 -0.000000000448 0.00000420 0.00000194 0.00001643 0.00000834 ~; # 9 -139.557392234645 -0.000000000051 0.00000176 0.00000074 0.00000686 0.00000306 ~; # 10 -139.557392234661 -0.000000000016 0.00000071 0.00000029 0.00000278 0.00000118 ~; # --------------------------------------------------------------------------------------------------------------- ~. # Second system, a not-right by eye but still plausible geometry, oddz. molecule oddz {; C; H 1 1.792; H 1 1.792 2 59.4; H 1 1.089 2 136.7 3 -127.3; F 1 2.089 2 101.7 4 -135.9; }. # reference start NRE, E, G for this geometry. odd_nre_start = 25.7790014493 # Q-Chem; odd_e_start = -139.1749807824 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.06704124 0.03019136 0.05220334 -0.00529778 -0.01005568; # 2 0.09718540 -0.00309814 -0.00309734 -0.00009178 -0.09089814; # 3 -0.11760428 0.07849561 0.06595344 -0.00926729 -0.01757747; odd_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.09718540, 0.00309814, 0.00309734, 0.00009178, 0.09089814],; [ -0.06704124, 0.03019136, 0.05220334, -0.00529778, -0.01005568],; [ -0.11760428, 0.07849561, 0.06595344, -0.00926729, -0.01757747]]; odd_g_start.set(zip(*contents)); odd_rmsg_start = 0.058156. # optimized reference should be same as norm, but in practice is this. odd_nre_opt = 33.838291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:7840,Energy Efficiency,Energy,Energy,7840,"e orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416; # -139.174980786; # 0.0581560524872; # Optimizer: Optimization complete!; # opt; # 33.8382916197; # -139.301327453; # 0.0422103431176; #gradient = [; # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; # [ 0.00215642675781, 0.04114952366672, 0.07824201651882],; # [ 0.00563414370780, -0.03413386327141, -0.06481576207381],; # [ 0.00140205171291, -0.01943458532669, -0.03688613326736]]. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.174980785934 -139.174980785934 0.08977532 0.06906505 0.39164409 0.25000003 ~; # 2 -139.237253751032 -0.062272965098 0.08963832 0.05551392 0.44053120 0.25000000 ~; # 3 -139.282037341604 -0.044783590572 0.06072927 0.03180855 0.57480436 0.30215430 ~; # 4 -139.291415380240 -0.009378038636 0.07020602 0.04747338 0.40870734 0.23074492 ~; # 5 -139.289103767764 0.002311612476 0.06272061 0.03636254 0.31265835 0.16807142 ~; # 6 -139.299937489944 -0.010833722180 0.02206926 0.01444069 0.08604223 0.05017704 ~; # 7 -139.301130513523 -0.001193023579 0.00601199 0.00414213 0.03851787 0.02297290 ~; # 8 -139.301272108227 -0.000141594704 0.00392137 0.00273882 0.01100483 0.00820114 ~; # 9 -139.301322123849 -0.000050015621 0.00099031 0.00070170 0.00667642 0.00454418 ~; # 10 -139.301327446273 -0.000005322424 0.00004217 0.00002303 0.00027466 0.00017580 ~; #",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:76,Performance,optimiz,optimization,76,"@psi-rking, why is my gradient non-zero at the end of a successful geometry optimization, please? Below is runable input file with details of problem. ```; # these are the conditions, a purely conventional (we're going to be; # comparing to Q-Chem) MP2/cc-pVTZ optimization. set basis cc-pvtz; set g_convergence gau_verytight; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core false. # the gradient that any fully optimized molecule should match, more or less. zerograd = psi4.Matrix(5,3); refgrad = [; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0]]; zerograd.set(refgrad). # this is the first system, a fluoromethane that looks pretty good to the eye; # zmat version, normz. molecule normz {; C; H 1 1.2; H 1 1.2 2 104; H 1 1.2 2 105 3 120; F 1 1.3 2 106 4 121; }. # reference start NRE, E, G. norm_nre_start = 37.6824945882 # Q-Chem; norm_e_start = -139.5307182946 # Q-Chem; norm_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); co",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:261,Performance,optimiz,optimization,261,"@psi-rking, why is my gradient non-zero at the end of a successful geometry optimization, please? Below is runable input file with details of problem. ```; # these are the conditions, a purely conventional (we're going to be; # comparing to Q-Chem) MP2/cc-pVTZ optimization. set basis cc-pvtz; set g_convergence gau_verytight; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core false. # the gradient that any fully optimized molecule should match, more or less. zerograd = psi4.Matrix(5,3); refgrad = [; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0]]; zerograd.set(refgrad). # this is the first system, a fluoromethane that looks pretty good to the eye; # zmat version, normz. molecule normz {; C; H 1 1.2; H 1 1.2 2 104; H 1 1.2 2 105 3 120; F 1 1.3 2 106 4 121; }. # reference start NRE, E, G. norm_nre_start = 37.6824945882 # Q-Chem; norm_e_start = -139.5307182946 # Q-Chem; norm_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); co",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:431,Performance,optimiz,optimized,431,"@psi-rking, why is my gradient non-zero at the end of a successful geometry optimization, please? Below is runable input file with details of problem. ```; # these are the conditions, a purely conventional (we're going to be; # comparing to Q-Chem) MP2/cc-pVTZ optimization. set basis cc-pvtz; set g_convergence gau_verytight; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core false. # the gradient that any fully optimized molecule should match, more or less. zerograd = psi4.Matrix(5,3); refgrad = [; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0]]; zerograd.set(refgrad). # this is the first system, a fluoromethane that looks pretty good to the eye; # zmat version, normz. molecule normz {; C; H 1 1.2; H 1 1.2 2 104; H 1 1.2 2 105 3 120; F 1 1.3 2 106 4 121; }. # reference start NRE, E, G. norm_nre_start = 37.6824945882 # Q-Chem; norm_e_start = -139.5307182946 # Q-Chem; norm_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); co",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:1563,Performance,optimiz,optimized,1563,"],; [ 0.0, 0.0, 0.0],; [ 0.0, 0.0, 0.0]]; zerograd.set(refgrad). # this is the first system, a fluoromethane that looks pretty good to the eye; # zmat version, normz. molecule normz {; C; H 1 1.2; H 1 1.2 2 104; H 1 1.2 2 105 3 120; F 1 1.3 2 106 4 121; }. # reference start NRE, E, G. norm_nre_start = 37.6824945882 # Q-Chem; norm_e_start = -139.5307182946 # Q-Chem; norm_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.07990533, -0.00642920, -0.00348020, 0.04874047, 0.04107426],; [ -0.04900557, -0.00240633, 0.05677652, -0.03006882, 0.02470420],; [ -0.06715450, 0.05113530, -0.00508959, -0.00643364, 0.02754243]]; norm_g_start.set(zip(*contents)); norm_rmsg_start = 0.041309 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZER",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:2309,Performance,optimiz,optimize,2309,"adient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.04900557 -0.00240633 0.05677652 -0.03006882 0.02470420; # 2 0.07990533 0.00642920 0.00348020 -0.04874047 -0.04107426; # 3 -0.06715450 0.05113530 -0.00508959 -0.00643364 0.02754243. # reference optimized NRE, E (G should be 0). nre_opt = 37.5276022922 # Q-Chem; e_opt = -139.5573922 # Q-Chem; #norm_g_opt # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 0.00000025 -0.00000001 -0.00000021 -0.00000007 0.00000005; # 2 0.00000010 0.00000008 0.00000000 0.00000001 -0.00000020; # 3 0.00000038 -0.00000005 -0.00000006 -0.00000023 -0.00000003. def test_norm_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:2953,Performance,optimiz,optimize,2953," g0 = gradient('mp2', molecule=mol); compare_values(norm_nre_start, mol.nuclear_repulsion_energy(), 3, 'start nre'); compare_values(norm_e_start, get_variable('CURRENT ENERGY'), 5, 'start ene'); compare_values(norm_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(norm_g_start, g0, 3, 'start grad'). def test_zero_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad........................................................PASSED; #Optimizer: Optimization complete!; # opt nre...........................................................PASSED; # opt ene...........................................................PASSED;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:3361,Performance,optimiz,optimization,3361,"t(); compare_values(nre_opt, mol.nuclear_repulsion_energy(), 3, 'opt nre'); compare_values(e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene'); compare_matrices(zerograd, g, 3, 'opt ZERO grad'). def test_odd_start(mol):; g0 = gradient('mp2', molecule=mol); compare_values(odd_nre_start, mol.nuclear_repulsion_energy(), 1, 'start nre'); compare_values(odd_e_start, get_variable('CURRENT ENERGY'), 3, 'start ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad........................................................PASSED; #Optimizer: Optimization complete!; # opt nre...........................................................PASSED; # opt ene...........................................................PASSED; # opt ZERO grad.....................................................PASSED. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.530718293045 -139.530718293045 0.0569",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:3776,Performance,Optimiz,Optimizer,3776,"ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad........................................................PASSED; #Optimizer: Optimization complete!; # opt nre...........................................................PASSED; # opt ene...........................................................PASSED; # opt ZERO grad.....................................................PASSED. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.530718293045 -139.530718293045 0.05695995 0.03625240 0.19767161 0.12159384 ~; # 2 -139.555614729326 -0.024896436281 0.02341593 0.00968824 0.06857406 0.03977721 ~; # 3 -139.556998324542 -0.001383595215 0.00950087 0.00516674 0.02878292 0.01662559 ~; # 4 -139.557349947407 -0.000351622866 0.00371412 0.00163364 0.01005622 0.00527025 ~; # 5 -139.557391640737 -0.000041693330 0.00051457 0.00018711 0.00138018 0.00067210 ~; # 6 -139.557392223903 -0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:3787,Performance,Optimiz,Optimization,3787,"ene'); compare_values(odd_rmsg_start, g0.rms(), 4, 'start rms grad'); compare_matrices(odd_g_start, g0, 3, 'start grad'). def test_badodd_grad(mol):; e, wfn = optimize('mp2', return_wfn=True, molecule=mol); g = wfn.gradient(); g.print_out(); compare_values(odd_nre_opt, mol.nuclear_repulsion_energy(), 2, 'opt nre nogood'); compare_values(odd_e_opt, get_variable('CURRENT ENERGY'), 5, 'opt ene nogood'); compare_values(odd_rmsg_opt, g.rms(), 4, 'opt grad nogood'). test_norm_start(normz); test_zero_grad(normz). # And behold, the initial gradient matches Q-Chem, the optimization; # progresses nicely, the RMS Force column goes to zero, and the gradient; # at the end is zero. # start nre.........................................................PASSED; # start ene.........................................................PASSED; # start rms grad....................................................PASSED; # start grad........................................................PASSED; #Optimizer: Optimization complete!; # opt nre...........................................................PASSED; # opt ene...........................................................PASSED; # opt ZERO grad.....................................................PASSED. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.530718293045 -139.530718293045 0.05695995 0.03625240 0.19767161 0.12159384 ~; # 2 -139.555614729326 -0.024896436281 0.02341593 0.00968824 0.06857406 0.03977721 ~; # 3 -139.556998324542 -0.001383595215 0.00950087 0.00516674 0.02878292 0.01662559 ~; # 4 -139.557349947407 -0.000351622866 0.00371412 0.00163364 0.01005622 0.00527025 ~; # 5 -139.557391640737 -0.000041693330 0.00051457 0.00018711 0.00138018 0.00067210 ~; # 6 -139.557392223903 -0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:6219,Performance,optimiz,optimized,6219,"--------------------------------------------------------- ~. # Second system, a not-right by eye but still plausible geometry, oddz. molecule oddz {; C; H 1 1.792; H 1 1.792 2 59.4; H 1 1.089 2 136.7 3 -127.3; F 1 2.089 2 101.7 4 -135.9; }. # reference start NRE, E, G for this geometry. odd_nre_start = 25.7790014493 # Q-Chem; odd_e_start = -139.1749807824 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.06704124 0.03019136 0.05220334 -0.00529778 -0.01005568; # 2 0.09718540 -0.00309814 -0.00309734 -0.00009178 -0.09089814; # 3 -0.11760428 0.07849561 0.06595344 -0.00926729 -0.01757747; odd_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.09718540, 0.00309814, 0.00309734, 0.00009178, 0.09089814],; [ -0.06704124, 0.03019136, 0.05220334, -0.00529778, -0.01005568],; [ -0.11760428, 0.07849561, 0.06595344, -0.00926729, -0.01757747]]; odd_g_start.set(zip(*contents)); odd_rmsg_start = 0.058156. # optimized reference should be same as norm, but in practice is this. odd_nre_opt = 33.838291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By RMS Force the optimization looks to proceed ; # nicely. But look at that final gradient with unmoveable large gradient; # components. It's not orientation, as input is zmat and it's the same with cartesian ; # coordinates in a couple orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:6647,Performance,optimiz,optimization,6647,"f MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.06704124 0.03019136 0.05220334 -0.00529778 -0.01005568; # 2 0.09718540 -0.00309814 -0.00309734 -0.00009178 -0.09089814; # 3 -0.11760428 0.07849561 0.06595344 -0.00926729 -0.01757747; odd_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.09718540, 0.00309814, 0.00309734, 0.00009178, 0.09089814],; [ -0.06704124, 0.03019136, 0.05220334, -0.00529778, -0.01005568],; [ -0.11760428, 0.07849561, 0.06595344, -0.00926729, -0.01757747]]; odd_g_start.set(zip(*contents)); odd_rmsg_start = 0.058156. # optimized reference should be same as norm, but in practice is this. odd_nre_opt = 33.838291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By RMS Force the optimization looks to proceed ; # nicely. But look at that final gradient with unmoveable large gradient; # components. It's not orientation, as input is zmat and it's the same with cartesian ; # coordinates in a couple orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416; # -139.174980786; # 0.0581560524872; # Optimizer: Optimization complete!; # opt; # 33.8382916197; # -139.301327453; # 0.0422103431176; #gradient = [; # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; # [ 0.00215642675781, 0.04114952366672, 0.07824201651882],; # [ 0.00563414370780, -0.03413386327141, -0.06481576207381],;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:7292,Performance,Optimiz,Optimizer,7292,"8291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By RMS Force the optimization looks to proceed ; # nicely. But look at that final gradient with unmoveable large gradient; # components. It's not orientation, as input is zmat and it's the same with cartesian ; # coordinates in a couple orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416; # -139.174980786; # 0.0581560524872; # Optimizer: Optimization complete!; # opt; # 33.8382916197; # -139.301327453; # 0.0422103431176; #gradient = [; # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; # [ 0.00215642675781, 0.04114952366672, 0.07824201651882],; # [ 0.00563414370780, -0.03413386327141, -0.06481576207381],; # [ 0.00140205171291, -0.01943458532669, -0.03688613326736]]. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.174980785934 -139.174980785934 0.08977532 0.06906505 0.39164409 0.25000003 ~; # 2 -139.237253751032 -0.062272965098 0.08963832 0.05551392 0.44053120 0.25000000 ~; # 3 -139.282037341604 -0.044783590572 0.06072927 0.03180855 0.57480436 0.30215430 ~; # 4 -139.291415380240 -0.009378038636",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:7303,Performance,Optimiz,Optimization,7303,"8291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By RMS Force the optimization looks to proceed ; # nicely. But look at that final gradient with unmoveable large gradient; # components. It's not orientation, as input is zmat and it's the same with cartesian ; # coordinates in a couple orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416; # -139.174980786; # 0.0581560524872; # Optimizer: Optimization complete!; # opt; # 33.8382916197; # -139.301327453; # 0.0422103431176; #gradient = [; # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; # [ 0.00215642675781, 0.04114952366672, 0.07824201651882],; # [ 0.00563414370780, -0.03413386327141, -0.06481576207381],; # [ 0.00140205171291, -0.01943458532669, -0.03688613326736]]. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # --------------------------------------------------------------------------------------------------------------- ~; # 1 -139.174980785934 -139.174980785934 0.08977532 0.06906505 0.39164409 0.25000003 ~; # 2 -139.237253751032 -0.062272965098 0.08963832 0.05551392 0.44053120 0.25000000 ~; # 3 -139.282037341604 -0.044783590572 0.06072927 0.03180855 0.57480436 0.30215430 ~; # 4 -139.291415380240 -0.009378038636",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:6574,Testability,test,testing,6574,"y. odd_nre_start = 25.7790014493 # Q-Chem; odd_e_start = -139.1749807824 # Q-Chem; # Full Analytical Gradient of MP2 Energy (in au.); # 1 2 3 4 5; # 1 -0.06704124 0.03019136 0.05220334 -0.00529778 -0.01005568; # 2 0.09718540 -0.00309814 -0.00309734 -0.00009178 -0.09089814; # 3 -0.11760428 0.07849561 0.06595344 -0.00926729 -0.01757747; odd_g_start = psi4.Matrix(5, 3) # Q-Chem; contents = [ # have to swap x & y, and -x; [ -0.09718540, 0.00309814, 0.00309734, 0.00009178, 0.09089814],; [ -0.06704124, 0.03019136, 0.05220334, -0.00529778, -0.01005568],; [ -0.11760428, 0.07849561, 0.06595344, -0.00926729, -0.01757747]]; odd_g_start.set(zip(*contents)); odd_rmsg_start = 0.058156. # optimized reference should be same as norm, but in practice is this. odd_nre_opt = 33.838291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By RMS Force the optimization looks to proceed ; # nicely. But look at that final gradient with unmoveable large gradient; # components. It's not orientation, as input is zmat and it's the same with cartesian ; # coordinates in a couple orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416; # -139.174980786; # 0.0581560524872; # Optimizer: Optimization complete!; # opt; # 33.8382916197; # -139.301327453; # 0.0422103431176; #gradient = [; # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; # [ 0.00215",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/310:6947,Testability,test,tested,6947," [ # have to swap x & y, and -x; [ -0.09718540, 0.00309814, 0.00309734, 0.00009178, 0.09089814],; [ -0.06704124, 0.03019136, 0.05220334, -0.00529778, -0.01005568],; [ -0.11760428, 0.07849561, 0.06595344, -0.00926729, -0.01757747]]; odd_g_start.set(zip(*contents)); odd_rmsg_start = 0.058156. # optimized reference should be same as norm, but in practice is this. odd_nre_opt = 33.838291620; odd_e_opt = -139.301327453; odd_rmsg_opt = 0.0422103431176. # should be able to pass starting gradient at new geometry, then zero grad final structure. test_odd_start(oddz) # works; #test_zero_grad(oddz) # should work; test_badodd_grad(oddz) # works b/c I'm testing against the bad results. # qu-est-ce que c-est? By RMS Force the optimization looks to proceed ; # nicely. But look at that final gradient with unmoveable large gradient; # components. It's not orientation, as input is zmat and it's the same with cartesian ; # coordinates in a couple orientations. It's not corruption associated; # with wavefunction pass, as I've tested an older version. It's not a local ; # minimum as the total gradient wouldn't be so large. It's not too distorted a ; # starting structure, as q-chem and molpro converge to the real minimum promptly. It's not; # symmetry constrained, as it's c1. I'm at a loss. # for oddz; # start; # 25.7790013416; # -139.174980786; # 0.0581560524872; # Optimizer: Optimization complete!; # opt; # 33.8382916197; # -139.301327453; # 0.0422103431176; #gradient = [; # [ -0.01135649578523, -0.02871892445843, -0.05475995417434],; # [ 0.00216387360216, 0.04113784938512, 0.07821983299617],; # [ 0.00215642675781, 0.04114952366672, 0.07824201651882],; # [ 0.00563414370780, -0.03413386327141, -0.06481576207381],; # [ 0.00140205171291, -0.01943458532669, -0.03688613326736]]. # --------------------------------------------------------------------------------------------------------------- ~; # Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; # ----------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/310
https://github.com/psi4/psi4/issues/311:1580,Deployability,toggle,toggle,1580,"@CDSherrill, here's the rohf mp2 results from a few programs. Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound. | program | fc | scf | singles | mp2corl | mp2tot |; | --- | --- | --- | --- | --- | --- |; | occ | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | detci | fc | -25.94361432 | | -0.06094168 | -26.00455600 |; | qchem | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | molpro | fc | -25.94361432 | -0.00054735 | -0.05936497 | -26.00297929 |. ```; $molecule; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; $end. $rem; JOBTYPE sp; unrestricted false; n_frozen_core fc; scf_guess sad; BASIS cc-pVdZ; basis2 6-31g; correlation mp2; THRESH 12; SCF_CONVERGENCE 8; SYM_IGNORE TRUE; SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end; ```. ```; molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7; set reference rohf. set qc_module detci # toggle detci/occ; energy('mp2'); ```. ```; memory,200,m; nosym; noorient; angstrom; geometry={; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9. SET,CHARGE=1; SET,SPIN=1. basis=cc-pVDZ. rhf; rccsd; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/311
https://github.com/psi4/psi4/issues/311:1598,Energy Efficiency,energy,energy,1598,"@CDSherrill, here's the rohf mp2 results from a few programs. Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound. | program | fc | scf | singles | mp2corl | mp2tot |; | --- | --- | --- | --- | --- | --- |; | occ | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | detci | fc | -25.94361432 | | -0.06094168 | -26.00455600 |; | qchem | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | molpro | fc | -25.94361432 | -0.00054735 | -0.05936497 | -26.00297929 |. ```; $molecule; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; $end. $rem; JOBTYPE sp; unrestricted false; n_frozen_core fc; scf_guess sad; BASIS cc-pVdZ; basis2 6-31g; correlation mp2; THRESH 12; SCF_CONVERGENCE 8; SYM_IGNORE TRUE; SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end; ```. ```; molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7; set reference rohf. set qc_module detci # toggle detci/occ; energy('mp2'); ```. ```; memory,200,m; nosym; noorient; angstrom; geometry={; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9. SET,CHARGE=1; SET,SPIN=1. basis=cc-pVDZ. rhf; rccsd; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/311
https://github.com/psi4/psi4/issues/311:1873,Energy Efficiency,ENERGY,ENERGY,1873,"@CDSherrill, here's the rohf mp2 results from a few programs. Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound. | program | fc | scf | singles | mp2corl | mp2tot |; | --- | --- | --- | --- | --- | --- |; | occ | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | detci | fc | -25.94361432 | | -0.06094168 | -26.00455600 |; | qchem | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | molpro | fc | -25.94361432 | -0.00054735 | -0.05936497 | -26.00297929 |. ```; $molecule; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; $end. $rem; JOBTYPE sp; unrestricted false; n_frozen_core fc; scf_guess sad; BASIS cc-pVdZ; basis2 6-31g; correlation mp2; THRESH 12; SCF_CONVERGENCE 8; SYM_IGNORE TRUE; SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end; ```. ```; molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7; set reference rohf. set qc_module detci # toggle detci/occ; energy('mp2'); ```. ```; memory,200,m; nosym; noorient; angstrom; geometry={; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9. SET,CHARGE=1; SET,SPIN=1. basis=cc-pVDZ. rhf; rccsd; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/311
https://github.com/psi4/psi4/issues/311:1891,Energy Efficiency,CHARGE,CHARGE,1891,"@CDSherrill, here's the rohf mp2 results from a few programs. Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound. | program | fc | scf | singles | mp2corl | mp2tot |; | --- | --- | --- | --- | --- | --- |; | occ | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | detci | fc | -25.94361432 | | -0.06094168 | -26.00455600 |; | qchem | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | molpro | fc | -25.94361432 | -0.00054735 | -0.05936497 | -26.00297929 |. ```; $molecule; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; $end. $rem; JOBTYPE sp; unrestricted false; n_frozen_core fc; scf_guess sad; BASIS cc-pVdZ; basis2 6-31g; correlation mp2; THRESH 12; SCF_CONVERGENCE 8; SYM_IGNORE TRUE; SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end; ```. ```; molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7; set reference rohf. set qc_module detci # toggle detci/occ; energy('mp2'); ```. ```; memory,200,m; nosym; noorient; angstrom; geometry={; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9. SET,CHARGE=1; SET,SPIN=1. basis=cc-pVDZ. rhf; rccsd; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/311
https://github.com/psi4/psi4/issues/311:263,Integrability,rout,route,263,"@CDSherrill, here's the rohf mp2 results from a few programs. Ugur matches Q-Chem. Molpro is fairly close to Q-Chem, though I'm really not sure about that input. ""rccsd"" ""calls spin-restricted open-shell coupled cluster program"" according to the manual, but this route through the code is not labeled enough for me to be confident of it. So detci is the odd one out, but good news is that its reference is sound. | program | fc | scf | singles | mp2corl | mp2tot |; | --- | --- | --- | --- | --- | --- |; | occ | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | detci | fc | -25.94361432 | | -0.06094168 | -26.00455600 |; | qchem | fc | -25.94361432 | -0.00068837 | -0.05940725 | -26.00302157 |; | molpro | fc | -25.94361432 | -0.00054735 | -0.05936497 | -26.00297929 |. ```; $molecule; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; $end. $rem; JOBTYPE sp; unrestricted false; n_frozen_core fc; scf_guess sad; BASIS cc-pVdZ; basis2 6-31g; correlation mp2; THRESH 12; SCF_CONVERGENCE 8; SYM_IGNORE TRUE; SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end; ```. ```; molecule bh_h2p {; 1 2; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. set basis cc-pvdz; set scf_type pk; set mp2_type conv; set guess sad; set freeze_core true; set e_convergence 8; set d_convergence 7; set reference rohf. set qc_module detci # toggle detci/occ; energy('mp2'); ```. ```; memory,200,m; nosym; noorient; angstrom; geometry={; B 0.10369114 0.00000000 0.00000000; H -1.13269886 0.00000000 0.00000000; H 3.00000000 0.37149000 0.00000000; H 3.00000000 -0.37149000 0.00000000; }. GTHRESH,ZERO=1.e-14,ONEINT=1.e-14,TWOINT=1.e-14,ENERGY=1.e-9. SET,CHARGE=1; SET,SPIN=1. basis=cc-pVDZ. rhf; rccsd; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/311
https://github.com/psi4/psi4/issues/312:276,Availability,error,error,276,"Hello!. I'm trying to compile Psi4 on my laptop and I have a problem. As described here [https://github.com/psi4/psi4/wiki/3_Building#builddetailed], I've run setup script, then I've entered $top/objdir and typed 'make -j8'. Compilation was successful, but I've got a linking error. Operating system is ArchLinux 4.2.5. I have Python2.7 and Python3.5 both installed on my computer, LAPACK, BLAS, boost, perl are also installed. It seems like ld cannot link psi4 with boost::regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:575,Availability,error,errors,575,"Hello!. I'm trying to compile Psi4 on my laptop and I have a problem. As described here [https://github.com/psi4/psi4/wiki/3_Building#builddetailed], I've run setup script, then I've entered $top/objdir and typed 'make -j8'. Compilation was successful, but I've got a linking error. Operating system is ArchLinux 4.2.5. I have Python2.7 and Python3.5 both installed on my computer, LAPACK, BLAS, boost, perl are also installed. It seems like ld cannot link psi4 with boost::regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:5422,Availability,Error,Error,5422,"ib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python2 (found version ""2.7.11"") ; -- Found Python: /usr/lib64/libpython2.7.so ; -- Boost version: 1.60.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /home/piton/gitdir/psi4/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. Error message:. [100%] Linking CXX executable ../../../bin/psi4; CMakeFiles/psi4_objlib.dir/create_new_plugin.cc.o: In function `boost::re_detail_106000::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_imp()':; create_new_plugin.cc:(.text._ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv[_ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv]+0x42d): undefined reference to`boost::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::maybe_assign(boost::match_results<__gnu_cxx::__normal_itera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:356,Deployability,install,installed,356,"Hello!. I'm trying to compile Psi4 on my laptop and I have a problem. As described here [https://github.com/psi4/psi4/wiki/3_Building#builddetailed], I've run setup script, then I've entered $top/objdir and typed 'make -j8'. Compilation was successful, but I've got a linking error. Operating system is ArchLinux 4.2.5. I have Python2.7 and Python3.5 both installed on my computer, LAPACK, BLAS, boost, perl are also installed. It seems like ld cannot link psi4 with boost::regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:417,Deployability,install,installed,417,"Hello!. I'm trying to compile Psi4 on my laptop and I have a problem. As described here [https://github.com/psi4/psi4/wiki/3_Building#builddetailed], I've run setup script, then I've entered $top/objdir and typed 'make -j8'. Compilation was successful, but I've got a linking error. Operating system is ArchLinux 4.2.5. I have Python2.7 and Python3.5 both installed on my computer, LAPACK, BLAS, boost, perl are also installed. It seems like ld cannot link psi4 with boost::regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:1707,Deployability,release,release,1707,":regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3; -- Libraries : /lib64/libblas.so;/lib64/liblapack.so; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_SYSTEM_NATIVE_BLAS;HAVE_SYSTEM_NATIVE_LAPACK;FC_SYMBOL",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:2584,Deployability,install,install,2584,"I_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3; -- Libraries : /lib64/libblas.so;/lib64/liblapack.so; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_SYSTEM_NATIVE_BLAS;HAVE_SYSTEM_NATIVE_LAPACK;FC_SYMBOL=2;HAVE_MM_MALLOC_H; WARNING: Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:5428,Integrability,message,message,5428,"ib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python2 (found version ""2.7.11"") ; -- Found Python: /usr/lib64/libpython2.7.so ; -- Boost version: 1.60.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /home/piton/gitdir/psi4/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. Error message:. [100%] Linking CXX executable ../../../bin/psi4; CMakeFiles/psi4_objlib.dir/create_new_plugin.cc.o: In function `boost::re_detail_106000::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_imp()':; create_new_plugin.cc:(.text._ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv[_ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv]+0x42d): undefined reference to`boost::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::maybe_assign(boost::match_results<__gnu_cxx::__normal_itera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:5224,Modifiability,Config,Configuring,5224,".so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python2 (found version ""2.7.11"") ; -- Found Python: /usr/lib64/libpython2.7.so ; -- Boost version: 1.60.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /home/piton/gitdir/psi4/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. Error message:. [100%] Linking CXX executable ../../../bin/psi4; CMakeFiles/psi4_objlib.dir/create_new_plugin.cc.o: In function `boost::re_detail_106000::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_imp()':; create_new_plugin.cc:(.text._ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv[_ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv]+0x42d): undefined reference to`boost::match_results<__gnu_cxx::__normal",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:5331,Modifiability,config,configure,5331,"s.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python2 (found version ""2.7.11"") ; -- Found Python: /usr/lib64/libpython2.7.so ; -- Boost version: 1.60.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /home/piton/gitdir/psi4/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. Error message:. [100%] Linking CXX executable ../../../bin/psi4; CMakeFiles/psi4_objlib.dir/create_new_plugin.cc.o: In function `boost::re_detail_106000::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_imp()':; create_new_plugin.cc:(.text._ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv[_ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv]+0x42d): undefined reference to`boost::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3283,Performance,Perform,Performing,3283,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3319,Performance,Perform,Performing,3319,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3741,Performance,Perform,Performing,3741,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3782,Performance,Perform,Performing,3782,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3870,Performance,Perform,Performing,3870,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3911,Performance,Perform,Performing,3911,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:762,Safety,detect,detecting,762,"Hello!. I'm trying to compile Psi4 on my laptop and I have a problem. As described here [https://github.com/psi4/psi4/wiki/3_Building#builddetailed], I've run setup script, then I've entered $top/objdir and typed 'make -j8'. Compilation was successful, but I've got a linking error. Operating system is ArchLinux 4.2.5. I have Python2.7 and Python3.5 both installed on my computer, LAPACK, BLAS, boost, perl are also installed. It seems like ld cannot link psi4 with boost::regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:2876,Safety,Detect,Detecting,2876,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:2912,Safety,Detect,Detecting,2912,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:2955,Safety,Detect,Detecting,2955,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:2990,Safety,Detect,Detecting,2990,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3135,Safety,Detect,Detecting,3135,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3169,Safety,Detect,Detecting,3169,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3210,Safety,Detect,Detecting,3210,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3243,Safety,Detect,Detecting,3243,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3294,Testability,Test,Test,3294,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3330,Testability,Test,Test,3330,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3752,Testability,Test,Test,3752,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3793,Testability,Test,Test,3793,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3881,Testability,Test,Test,3881,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/312:3922,Testability,Test,Test,3922,": Target ""psi4so"" has EXCLUDE_FROM_ALL set and will not be built by default but an install rule has been provided for it. CMake does not define behavior for this case.; -- The CXX compiler identification is GNU 5.2.0; -- The C compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /usr/bin/g++; -- Check for working CXX compiler: /usr/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Performing Test _HAS_CXX11_FLAG; -- Performing Test _HAS_CXX11_FLAG - Success; -- Found following supported C++11 features:; -- __func__; -- auto; -- auto_ret_type; -- constexpr; -- cstdint; -- decltype; -- initializer_list; -- lambda; -- long_long; -- nullptr; -- regex; -- rvalue-references; -- sizeof_member; -- static_assert; -- variadic_templates; -- Checking for restrict keyword; -- keyword found : **restrict**; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- Found BLAS: SYSTEM_NATIVE (/lib64/libblas.so); -- Found LAPACK: SYSTEM_NATIVE (/lib64/liblapack.so); -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/312
https://github.com/psi4/psi4/issues/313:762,Availability,error,errors,762,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:1545,Availability,error,errors,1545,"ir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:10793,Availability,error,errors,10793,":1001 ] Searching for CHRONO_LIBRARY_RELEASE: boost_chrono-mt-1_59;boost_chrono-mt;boost_chrono-mt-1_59;boost_chrono-mt;boost_chrono; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1037 ] Searching for CHRONO_LIBRARY_DEBUG: boost_chrono-mt-d-1_59;boost_chrono-mt-d;boost_chrono-mt-d-1_59;boost_chrono-mt-d;boost_chrono-mt;boost_chrono; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1001 ] Searching for THREAD_LIBRARY_RELEASE: boost_thread-mt-1_59;boost_thread-mt;boost_thread-mt-1_59;boost_thread-mt;boost_thread; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1037 ] Searching for THREAD_LIBRARY_DEBUG: boost_thread-mt-d-1_59;boost_thread-mt-d;boost_thread-mt-d-1_59;boost_thread-mt-d;boost_thread-mt;boost_thread; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1088 ] Boost_FOUND = 1; ```. ... after this point if hombrew boost _is unlinked_:. ```; -- Could NOT find Boost ; Could not find the following static Boost libraries:; boost_filesystem; boost_regex; boost_serialization; boost_system; boost_timer; boost_chrono; boost_thread; ```. ... and if hombrew boost _is linked_: . ```; Boost version: 1.59.0 ; Boost include path: /Users/admin/anaconda/envs/psi4-py2.7/include; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; ```. My main concern is CMake reporting Boost version 1.59.0, but then using library paths that point to a different version. I don't know if I would have been able to figure out what was going on if I didn't recognize the linker errors as the boost 1.60.0 incompatibility issue. ; (Good thing I have been reading the issues I guess! :tongue: ). But since `Boost_FOUND = 1` is set in both cases, why is the prepackaged boost being built? ; ### Temporary workaround. Using `-DBUILD_CUSTOM_BOOST=ON` will avoid the issue completely and still build successfully.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:46,Deployability,install,installed,46,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:76,Deployability,install,installed,76,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:290,Deployability,upgrade,upgraded,290,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:311,Deployability,Install,Installed,311,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:382,Deployability,install,installed,382,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:1079,Deployability,install,install,1079,"9 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:1812,Deployability,install,install,1812,"ew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet, if boost 1.60.0 is linked it reports it found the correct libraries version 1.59.0, and if those links are removed it reports they are not found. In both cases it sets `Boost_FOUND = 1` but with the boost 1.60.0 links removed the pre-packaged boost is configured to bui",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:910,Modifiability,variab,variable,910,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:965,Modifiability,config,configured,965,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:2199,Modifiability,config,configured,2199,"RARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet, if boost 1.60.0 is linked it reports it found the correct libraries version 1.59.0, and if those links are removed it reports they are not found. In both cases it sets `Boost_FOUND = 1` but with the boost 1.60.0 links removed the pre-packaged boost is configured to build anyway. . It is also interesting that `_boost_TEST_VERSIONS` includes 1.55.0-1.58.0. (Both 1.59.0 and 1.60.0 aren't included) I am not sure if that is related to this problem though. FindBoost.cmake debuting output : . ```; -- Found Python: /Users/admin/anaconda/lib/libpython2.7.dylib ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cma",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:2787,Modifiability,config,configured,2787,"ave been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet, if boost 1.60.0 is linked it reports it found the correct libraries version 1.59.0, and if those links are removed it reports they are not found. In both cases it sets `Boost_FOUND = 1` but with the boost 1.60.0 links removed the pre-packaged boost is configured to build anyway. . It is also interesting that `_boost_TEST_VERSIONS` includes 1.55.0-1.58.0. (Both 1.59.0 and 1.60.0 aren't included) I am not sure if that is related to this problem though. FindBoost.cmake debuting output : . ```; -- Found Python: /Users/admin/anaconda/lib/libpython2.7.dylib ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:515 ] _boost_TEST_VERSIONS = 1.58.0;1.58;1.57.0;1.57;1.56.0;1.56;1.55.0;1.55; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:517 ] Boost_USE_MULTITHREADED = ON; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:519 ] Boost_USE_STATIC_LIBS = ON; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:521 ] Boost_USE_STATIC_RUNTIME = OFF; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:523 ] Boost_ADDITIONAL_VERSIONS = ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:525 ] Boost_NO_SYSTEM_PATHS = ; -- [ ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:3887,Modifiability,Variab,Variables,3887,.58.0. (Both 1.59.0 and 1.60.0 aren't included) I am not sure if that is related to this problem though. FindBoost.cmake debuting output : . ```; -- Found Python: /Users/admin/anaconda/lib/libpython2.7.dylib ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:515 ] _boost_TEST_VERSIONS = 1.58.0;1.58;1.57.0;1.57;1.56.0;1.56;1.55.0;1.55; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:517 ] Boost_USE_MULTITHREADED = ON; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:519 ] Boost_USE_STATIC_LIBS = ON; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:521 ] Boost_USE_STATIC_RUNTIME = OFF; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:523 ] Boost_ADDITIONAL_VERSIONS = ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:525 ] Boost_NO_SYSTEM_PATHS = ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:577 ] Declared as CMake or Environmental Variables:; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:579 ] BOOST_ROOT = ; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:581 ] BOOST_INCLUDEDIR = /Users/admin/anaconda/envs/psi4-py2.7/include; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:583 ] BOOST_LIBRARYDIR = /Users/admin/anaconda/envs/psi4-py2.7/lib; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:585 ] _boost_TEST_VERSIONS = 1.58.0;1.58;1.57.0;1.57;1.56.0;1.56;1.55.0;1.55; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:654 ] Include debugging info:; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:656 ] _boost_INCLUDE_SEARCH_DIRS = /Users/admin/anaconda/envs/psi4-py2.7/include;PATHS;C:/boost/include;C:/boost;/sw/local/include; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:658 ] _boost_PATH_SUFFIXES = boost-1_58_0;boost_1_58_0;boost/boost-1_58_0;boost/boost_1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:1244,Safety,detect,detected,1244,"recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoos",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/issues/313:11066,Safety,avoid,avoid,11066,":1001 ] Searching for CHRONO_LIBRARY_RELEASE: boost_chrono-mt-1_59;boost_chrono-mt;boost_chrono-mt-1_59;boost_chrono-mt;boost_chrono; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1037 ] Searching for CHRONO_LIBRARY_DEBUG: boost_chrono-mt-d-1_59;boost_chrono-mt-d;boost_chrono-mt-d-1_59;boost_chrono-mt-d;boost_chrono-mt;boost_chrono; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1001 ] Searching for THREAD_LIBRARY_RELEASE: boost_thread-mt-1_59;boost_thread-mt;boost_thread-mt-1_59;boost_thread-mt;boost_thread; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1037 ] Searching for THREAD_LIBRARY_DEBUG: boost_thread-mt-d-1_59;boost_thread-mt-d;boost_thread-mt-d-1_59;boost_thread-mt-d;boost_thread-mt;boost_thread; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1088 ] Boost_FOUND = 1; ```. ... after this point if hombrew boost _is unlinked_:. ```; -- Could NOT find Boost ; Could not find the following static Boost libraries:; boost_filesystem; boost_regex; boost_serialization; boost_system; boost_timer; boost_chrono; boost_thread; ```. ... and if hombrew boost _is linked_: . ```; Boost version: 1.59.0 ; Boost include path: /Users/admin/anaconda/envs/psi4-py2.7/include; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; ```. My main concern is CMake reporting Boost version 1.59.0, but then using library paths that point to a different version. I don't know if I would have been able to figure out what was going on if I didn't recognize the linker errors as the boost 1.60.0 incompatibility issue. ; (Good thing I have been reading the issues I guess! :tongue: ). But since `Boost_FOUND = 1` is set in both cases, why is the prepackaged boost being built? ; ### Temporary workaround. Using `-DBUILD_CUSTOM_BOOST=ON` will avoid the issue completely and still build successfully.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/313
https://github.com/psi4/psi4/pull/314:53,Performance,optimiz,optimizing,53,## Description. Fixing issue #310 CH3F was not fully optimizing due to missing internal coordinates. This issue led to the discovery that the code joining separated fragments had significant problems (basically atom reindexing/ordering).; ## Todos; ## Questions. None; ## Status. Ready to go. All optimization tests passed.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/314
https://github.com/psi4/psi4/pull/314:297,Performance,optimiz,optimization,297,## Description. Fixing issue #310 CH3F was not fully optimizing due to missing internal coordinates. This issue led to the discovery that the code joining separated fragments had significant problems (basically atom reindexing/ordering).; ## Todos; ## Questions. None; ## Status. Ready to go. All optimization tests passed.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/314
https://github.com/psi4/psi4/pull/314:310,Testability,test,tests,310,## Description. Fixing issue #310 CH3F was not fully optimizing due to missing internal coordinates. This issue led to the discovery that the code joining separated fragments had significant problems (basically atom reindexing/ordering).; ## Todos; ## Questions. None; ## Status. Ready to go. All optimization tests passed.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/314
https://github.com/psi4/psi4/pull/315:1114,Availability,down,download,1114,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/315:496,Deployability,Update,Update,496,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/315:50,Testability,test,tests,50,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/315:528,Testability,test,test,528,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/315:754,Testability,test,tests,754,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/315:844,Testability,test,testing,844,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/315
https://github.com/psi4/psi4/pull/316:578,Performance,optimiz,optimization,578,"## Description. With ICC 2015 and `XHOST` turned off the changed loop will fail. You can either turn `XHOST` on, set `#prama novector` for the inner loops, or unroll the loop as shown to fix the problem. I would consider this a compiler bug, but I was curious if anyone had other opinions. A bit scary that we are running into this kind of thing. A few details:; - `TPDMp` and `actMOp` are both `double**`'s with shapes of `nact*nact` by `nact*nact`.; - All indices are within bounds.; - Very excited for everyone to review the most neglected piece of code in the MCSCF orbital optimization.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/316
https://github.com/psi4/psi4/issues/317:801,Availability,failure,failure,801,"For fitting basis sets, SAPT mostly uses `DF_BASIS_SAPT`, which defaults to RI (http://psicode.org/psi4manual/master/sapt.html#df-basis-sapt). The Elst10 and Exch10 are governed by `DF_BASIS_ELST`, which defaults to `DF_BASIS_SAPT` (which defaults to RI). However, this can go awry for heavy elements, whereupon it is recommended to use JK for `DF_BASIS_ELST`. An important bit of the reasoning behind this is that for the small basis sets used for SAPT0, RI is smaller than JK (for cc-pVDZ, 28 to 46). If we're going to change the defaults so that everything works at its best without intervention, now is the time to do it.; - [ ] Run a A·T 0/jadz with SAPT/ELST RI/RI, RI/JK, JK/JK to see if there's significant time penalties; - [ ] If that's not significant, should ELST always be JK to suppress failure mode?; - [ ] Do we want consistent fitting basis used across all terms?; - [ ] If any changes made, update Note in docs about changes in Spring 2016. sapt2 is the most relevant test case",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/317
https://github.com/psi4/psi4/issues/317:909,Deployability,update,update,909,"For fitting basis sets, SAPT mostly uses `DF_BASIS_SAPT`, which defaults to RI (http://psicode.org/psi4manual/master/sapt.html#df-basis-sapt). The Elst10 and Exch10 are governed by `DF_BASIS_ELST`, which defaults to `DF_BASIS_SAPT` (which defaults to RI). However, this can go awry for heavy elements, whereupon it is recommended to use JK for `DF_BASIS_ELST`. An important bit of the reasoning behind this is that for the small basis sets used for SAPT0, RI is smaller than JK (for cc-pVDZ, 28 to 46). If we're going to change the defaults so that everything works at its best without intervention, now is the time to do it.; - [ ] Run a A·T 0/jadz with SAPT/ELST RI/RI, RI/JK, JK/JK to see if there's significant time penalties; - [ ] If that's not significant, should ELST always be JK to suppress failure mode?; - [ ] Do we want consistent fitting basis used across all terms?; - [ ] If any changes made, update Note in docs about changes in Spring 2016. sapt2 is the most relevant test case",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/317
https://github.com/psi4/psi4/issues/317:986,Testability,test,test,986,"For fitting basis sets, SAPT mostly uses `DF_BASIS_SAPT`, which defaults to RI (http://psicode.org/psi4manual/master/sapt.html#df-basis-sapt). The Elst10 and Exch10 are governed by `DF_BASIS_ELST`, which defaults to `DF_BASIS_SAPT` (which defaults to RI). However, this can go awry for heavy elements, whereupon it is recommended to use JK for `DF_BASIS_ELST`. An important bit of the reasoning behind this is that for the small basis sets used for SAPT0, RI is smaller than JK (for cc-pVDZ, 28 to 46). If we're going to change the defaults so that everything works at its best without intervention, now is the time to do it.; - [ ] Run a A·T 0/jadz with SAPT/ELST RI/RI, RI/JK, JK/JK to see if there's significant time penalties; - [ ] If that's not significant, should ELST always be JK to suppress failure mode?; - [ ] Do we want consistent fitting basis used across all terms?; - [ ] If any changes made, update Note in docs about changes in Spring 2016. sapt2 is the most relevant test case",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/317
https://github.com/psi4/psi4/pull/318:404,Availability,error,errors,404,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/318
https://github.com/psi4/psi4/pull/318:50,Deployability,upgrade,upgrade,50,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/318
https://github.com/psi4/psi4/pull/318:273,Performance,optimiz,optimization,273,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/318
https://github.com/psi4/psi4/pull/318:422,Performance,optimiz,optimizations,422,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/318
https://github.com/psi4/psi4/pull/318:363,Testability,test,testing,363,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/318
https://github.com/psi4/psi4/pull/319:488,Testability,test,test,488,"## Description. So `name_`, `description_`, and `citation_` for functionals and superfunctionals default to empty std::string s, `""""`. Something about the mpi printing changeover did not like empty strings one bit, so the printing gave up whenever description & citation weren't set in functional.py . This occurs for the functionals B97-D (Grimme's) and HTCH and DLDF superfunctional. But that printing only gets called when print level >=2 (which it is for the dft1, dft1-alt, and dft2 test cases). Thus certain dft jobs have been giving not much output for a year and a half. A string with standard indentation fixes the problem. Kudos to @dgasmith for actually looking at a test case output and noticing.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/319
https://github.com/psi4/psi4/pull/319:678,Testability,test,test,678,"## Description. So `name_`, `description_`, and `citation_` for functionals and superfunctionals default to empty std::string s, `""""`. Something about the mpi printing changeover did not like empty strings one bit, so the printing gave up whenever description & citation weren't set in functional.py . This occurs for the functionals B97-D (Grimme's) and HTCH and DLDF superfunctional. But that printing only gets called when print level >=2 (which it is for the dft1, dft1-alt, and dft2 test cases). Thus certain dft jobs have been giving not much output for a year and a half. A string with standard indentation fixes the problem. Kudos to @dgasmith for actually looking at a test case output and noticing.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/319
https://github.com/psi4/psi4/pull/320:16,Deployability,Update,Update,16,## Description. Update the list of additional contributors printed at the top of the Psi4 output; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/320
https://github.com/psi4/psi4/issues/321:124,Deployability,release,release,124,"What single function in psi4 would you wish compiler optimization not to break? At first testing, it seems that the latest (release 2, Feb 2016) Intel compilers break `C_DGEMM`. The code compiles fine, but not much runs. Below are three dgemm calls that break. Not all dgemm calls break. Possibly 'N'/'T' are fine but 'N'/'N' break. If anyone wants to investigate, you can start with my ""dftfix"" branch (https://github.com/loriab/psi4/tree/dftfix). By commenting out Mulliken analysis and File 180 printing, I've gotten the jk & out_of_core algorithms in test case scf5 working on that branch. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-e30bd7727a15aa5a70e322a84a385291R2903. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-ada70c1f1cf0a80abbdbacbfb7716abbR690. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-be25444186a5073fb47c3ac4667533baR473",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/321
https://github.com/psi4/psi4/issues/321:53,Performance,optimiz,optimization,53,"What single function in psi4 would you wish compiler optimization not to break? At first testing, it seems that the latest (release 2, Feb 2016) Intel compilers break `C_DGEMM`. The code compiles fine, but not much runs. Below are three dgemm calls that break. Not all dgemm calls break. Possibly 'N'/'T' are fine but 'N'/'N' break. If anyone wants to investigate, you can start with my ""dftfix"" branch (https://github.com/loriab/psi4/tree/dftfix). By commenting out Mulliken analysis and File 180 printing, I've gotten the jk & out_of_core algorithms in test case scf5 working on that branch. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-e30bd7727a15aa5a70e322a84a385291R2903. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-ada70c1f1cf0a80abbdbacbfb7716abbR690. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-be25444186a5073fb47c3ac4667533baR473",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/321
https://github.com/psi4/psi4/issues/321:89,Testability,test,testing,89,"What single function in psi4 would you wish compiler optimization not to break? At first testing, it seems that the latest (release 2, Feb 2016) Intel compilers break `C_DGEMM`. The code compiles fine, but not much runs. Below are three dgemm calls that break. Not all dgemm calls break. Possibly 'N'/'T' are fine but 'N'/'N' break. If anyone wants to investigate, you can start with my ""dftfix"" branch (https://github.com/loriab/psi4/tree/dftfix). By commenting out Mulliken analysis and File 180 printing, I've gotten the jk & out_of_core algorithms in test case scf5 working on that branch. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-e30bd7727a15aa5a70e322a84a385291R2903. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-ada70c1f1cf0a80abbdbacbfb7716abbR690. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-be25444186a5073fb47c3ac4667533baR473",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/321
https://github.com/psi4/psi4/issues/321:555,Testability,test,test,555,"What single function in psi4 would you wish compiler optimization not to break? At first testing, it seems that the latest (release 2, Feb 2016) Intel compilers break `C_DGEMM`. The code compiles fine, but not much runs. Below are three dgemm calls that break. Not all dgemm calls break. Possibly 'N'/'T' are fine but 'N'/'N' break. If anyone wants to investigate, you can start with my ""dftfix"" branch (https://github.com/loriab/psi4/tree/dftfix). By commenting out Mulliken analysis and File 180 printing, I've gotten the jk & out_of_core algorithms in test case scf5 working on that branch. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-e30bd7727a15aa5a70e322a84a385291R2903. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-ada70c1f1cf0a80abbdbacbfb7716abbR690. https://github.com/loriab/psi4/commit/9bcd03959d1901e89ecea0274e0c086b0da397fa#diff-be25444186a5073fb47c3ac4667533baR473",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/321
https://github.com/psi4/psi4/issues/322:95,Energy Efficiency,monitor,monitor,95,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:563,Energy Efficiency,energy,energy,563,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:672,Energy Efficiency,energy,energy,672,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:154,Testability,test,testboard,154,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:174,Testability,test,testDetails,174,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:190,Testability,test,test,190,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:264,Testability,test,testboard,264,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:284,Testability,test,testDetails,284,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/issues/322:300,Testability,test,test,300,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/322
https://github.com/psi4/psi4/pull/323:102,Availability,checkpoint,checkpoint,102,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/323
https://github.com/psi4/psi4/pull/323:554,Deployability,release,released,554,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/323
https://github.com/psi4/psi4/pull/323:644,Deployability,release,release,644,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/323
https://github.com/psi4/psi4/pull/323:436,Modifiability,variab,variables,436,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/323
https://github.com/psi4/psi4/pull/323:467,Testability,test,test,467,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/323
https://github.com/psi4/psi4/pull/323:764,Usability,simpl,simply,764,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/323
https://github.com/psi4/psi4/pull/324:16,Deployability,Update,Updates,16,"## Description. Updates the FNOCC documentation so that it includes a disclaimer about running in parallel on i7-5930 processors when compiling with Intel 15 and MKL 15.0.2; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Has not introduced further Fortran; - [x] Has warned the world of an impending evil lurking in their somewhat homely appearing CCSD correlation energy, caused by an apparent Intel bug; ## Questions; - [ ] Is the placement of the disclaimer satisfactory?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/324
https://github.com/psi4/psi4/pull/324:407,Energy Efficiency,energy,energy,407,"## Description. Updates the FNOCC documentation so that it includes a disclaimer about running in parallel on i7-5930 processors when compiling with Intel 15 and MKL 15.0.2; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Has not introduced further Fortran; - [x] Has warned the world of an impending evil lurking in their somewhat homely appearing CCSD correlation energy, caused by an apparent Intel bug; ## Questions; - [ ] Is the placement of the disclaimer satisfactory?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/324
https://github.com/psi4/psi4/pull/325:96,Modifiability,variab,variables,96,"## Description. The `setup` script was not honoring the user's `CC`, `CXX`, or `FC` environment variables as it claimed to do. Also, if compiler options were not set then allow CMake to decide.; ## Todos; - [x] Honor environment variables.; - [x] Allow CMake to decide which compilers to use.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/325
https://github.com/psi4/psi4/pull/325:229,Modifiability,variab,variables,229,"## Description. The `setup` script was not honoring the user's `CC`, `CXX`, or `FC` environment variables as it claimed to do. Also, if compiler options were not set then allow CMake to decide.; ## Todos; - [x] Honor environment variables.; - [x] Allow CMake to decide which compilers to use.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/325
https://github.com/psi4/psi4/pull/328:42,Performance,optimiz,optimizations,42,"## Description. Improved fixed-coordinate optimizations. Test opt7 still works, as does a full dihedral scan of HOOH in C2 symmetry. Resolves issue #10 (there are no longer any nonsymmetric displacements). A new keyword `FIXED_COORD_FORCE_CONSTANT` allows tweaking for softer or firmer constraints, if necessary. The code does interpret fixed dihedrals <-180 or >180. However, the code does NOT currently deduce the most direct way through the dihedral discontinuity at 180. So it's a bad idea to give an input geometry with a dihedral of, say 178, and assign a target value of -178. Also, I've turned off dynamic trust radius sizing for optimizations with fixed coordinate targets by default.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/328
https://github.com/psi4/psi4/pull/328:638,Performance,optimiz,optimizations,638,"## Description. Improved fixed-coordinate optimizations. Test opt7 still works, as does a full dihedral scan of HOOH in C2 symmetry. Resolves issue #10 (there are no longer any nonsymmetric displacements). A new keyword `FIXED_COORD_FORCE_CONSTANT` allows tweaking for softer or firmer constraints, if necessary. The code does interpret fixed dihedrals <-180 or >180. However, the code does NOT currently deduce the most direct way through the dihedral discontinuity at 180. So it's a bad idea to give an input geometry with a dihedral of, say 178, and assign a target value of -178. Also, I've turned off dynamic trust radius sizing for optimizations with fixed coordinate targets by default.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/328
https://github.com/psi4/psi4/pull/328:57,Testability,Test,Test,57,"## Description. Improved fixed-coordinate optimizations. Test opt7 still works, as does a full dihedral scan of HOOH in C2 symmetry. Resolves issue #10 (there are no longer any nonsymmetric displacements). A new keyword `FIXED_COORD_FORCE_CONSTANT` allows tweaking for softer or firmer constraints, if necessary. The code does interpret fixed dihedrals <-180 or >180. However, the code does NOT currently deduce the most direct way through the dihedral discontinuity at 180. So it's a bad idea to give an input geometry with a dihedral of, say 178, and assign a target value of -178. Also, I've turned off dynamic trust radius sizing for optimizations with fixed coordinate targets by default.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/328
https://github.com/psi4/psi4/pull/329:133,Modifiability,variab,variables,133,## Description. Fixes the os.environ KeyError in setup with compilers are not provided to the setup script and CC/CXX/FC environment variables are not set.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes setup.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/329
https://github.com/psi4/psi4/pull/330:524,Deployability,Update,Updated,524,"## Description. Minor mods to gdma docs, commas in basis sets, and kJ/mol; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Make GDMA manual pdf linkable from sphinx docs, autodoc gdma setting of array variables, small other GDMA documentation tweaks; - [x] Add the warning about 5930 processors + fnocc + Intel 2015 compilers composed by @ryanmrichard ; - [x] Process basis sets in input parser a little differently so that can use commas in `6-311G(2d,2p)` mentioned in #43 ; - [x] Updated SAPT output format (@jgonthier & @andysim, note); - added third column in kJ/mol ; - realigned output columns (Total SAPT were off) and between SAPT levels; - changed `scal.` to `sc.` to save space; - adjusted fisapt formatting accordingly; - added `[]` around units; - [x] added kJ/mol in `cp()`, `n_body()`, `database()`; ## Questions; - [x] @andysim, I think you were the one who set it up in the input parser so that comma was always signal for python list. Do you foresee any trouble with the scheme here?; ## Status; - [x] Ready to go, though changes to thermo aren't in yet",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/330
https://github.com/psi4/psi4/pull/330:242,Modifiability,variab,variables,242,"## Description. Minor mods to gdma docs, commas in basis sets, and kJ/mol; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Make GDMA manual pdf linkable from sphinx docs, autodoc gdma setting of array variables, small other GDMA documentation tweaks; - [x] Add the warning about 5930 processors + fnocc + Intel 2015 compilers composed by @ryanmrichard ; - [x] Process basis sets in input parser a little differently so that can use commas in `6-311G(2d,2p)` mentioned in #43 ; - [x] Updated SAPT output format (@jgonthier & @andysim, note); - added third column in kJ/mol ; - realigned output columns (Total SAPT were off) and between SAPT levels; - changed `scal.` to `sc.` to save space; - adjusted fisapt formatting accordingly; - added `[]` around units; - [x] added kJ/mol in `cp()`, `n_body()`, `database()`; ## Questions; - [x] @andysim, I think you were the one who set it up in the input parser so that comma was always signal for python list. Do you foresee any trouble with the scheme here?; ## Status; - [x] Ready to go, though changes to thermo aren't in yet",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/330
https://github.com/psi4/psi4/issues/332:114,Availability,error,error,114,"Attempting frequency() for atomic species fails irrespective of charge, multiplicity, and reference type. Typical error message:. > 1 displacements needed.; > 1; > ; > An error has occurred. Traceback:; > <type 'exceptions.IndexError'>: basic_string::replace: File ""<string>"", line 26, in <module>; > ; > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in frequency; > psi4.thermo(wfn, wfn.frequencies()). Thanks,; -drhaney, -- that's ""D. R."", not Doctor. Typical input file attached (C atom, neutral triplet).; [C.txt](https://github.com/psi4/psi4/files/198782/C.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/332
https://github.com/psi4/psi4/issues/332:171,Availability,error,error,171,"Attempting frequency() for atomic species fails irrespective of charge, multiplicity, and reference type. Typical error message:. > 1 displacements needed.; > 1; > ; > An error has occurred. Traceback:; > <type 'exceptions.IndexError'>: basic_string::replace: File ""<string>"", line 26, in <module>; > ; > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in frequency; > psi4.thermo(wfn, wfn.frequencies()). Thanks,; -drhaney, -- that's ""D. R."", not Doctor. Typical input file attached (C atom, neutral triplet).; [C.txt](https://github.com/psi4/psi4/files/198782/C.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/332
https://github.com/psi4/psi4/issues/332:64,Energy Efficiency,charge,charge,64,"Attempting frequency() for atomic species fails irrespective of charge, multiplicity, and reference type. Typical error message:. > 1 displacements needed.; > 1; > ; > An error has occurred. Traceback:; > <type 'exceptions.IndexError'>: basic_string::replace: File ""<string>"", line 26, in <module>; > ; > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in frequency; > psi4.thermo(wfn, wfn.frequencies()). Thanks,; -drhaney, -- that's ""D. R."", not Doctor. Typical input file attached (C atom, neutral triplet).; [C.txt](https://github.com/psi4/psi4/files/198782/C.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/332
https://github.com/psi4/psi4/issues/332:120,Integrability,message,message,120,"Attempting frequency() for atomic species fails irrespective of charge, multiplicity, and reference type. Typical error message:. > 1 displacements needed.; > 1; > ; > An error has occurred. Traceback:; > <type 'exceptions.IndexError'>: basic_string::replace: File ""<string>"", line 26, in <module>; > ; > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in frequency; > psi4.thermo(wfn, wfn.frequencies()). Thanks,; -drhaney, -- that's ""D. R."", not Doctor. Typical input file attached (C atom, neutral triplet).; [C.txt](https://github.com/psi4/psi4/files/198782/C.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/332
https://github.com/psi4/psi4/pull/334:117,Deployability,update,update,117,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:323,Deployability,Update,Updated,323,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:76,Energy Efficiency,charge,charge,76,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:189,Energy Efficiency,charge,charges,189,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:242,Energy Efficiency,Charge,Charges,242,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:294,Energy Efficiency,Charge,Charges,294,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:366,Energy Efficiency,Charge,Charges,366,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:414,Energy Efficiency,Charge,Charges,414,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/334:482,Energy Efficiency,charge,charge,482,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/334
https://github.com/psi4/psi4/pull/335:16,Deployability,Update,Update,16,## Description. Update 6-31G\* basis set; ## Todos; - [ ] Add Ga-Kr atoms to complete 3rd row; ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/335
https://github.com/psi4/psi4/pull/338:16,Deployability,Update,Update,16,## Description. Update PCMSolver to v1.1.1; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Update PCMSolver to v1.1.1; - [x] Make sure that PCMSolver uses Boost version bundled with Psi4; - [x] Re-tighten thresholds in `compare_values`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/338
https://github.com/psi4/psi4/pull/338:133,Deployability,Update,Update,133,## Description. Update PCMSolver to v1.1.1; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Update PCMSolver to v1.1.1; - [x] Make sure that PCMSolver uses Boost version bundled with Psi4; - [x] Re-tighten thresholds in `compare_values`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/338
https://github.com/psi4/psi4/pull/339:2108,Energy Efficiency,energy,energy,2108,"c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R654) when it was just defined up above [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R603). Ok to delete 2nd definition as done in this PR?; - [x] minor ?: why is `bp86d1` building upon b3lyp as [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turb",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:2361,Energy Efficiency,energy,energy,2361,"lete 2nd definition as done in this PR?; - [x] minor ?: why is `bp86d1` building upon b3lyp as [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turbomole ""B3LYP_Gaussian""); ### #-76.46290355576 (psi4 energy('b3lyp')); ### #-76.46290344335 (nwchem default vnw-1-rpa); ### #VNW-1-rpa in nwchem seems to be VWN3 in Turbomole/Gaussian; ### ; ### e = energy('b3lyp5'); ### compare_values(-76.42582290565, e",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:2604,Energy Efficiency,energy,energy,2604,"f69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turbomole ""B3LYP_Gaussian""); ### #-76.46290355576 (psi4 energy('b3lyp')); ### #-76.46290344335 (nwchem default vnw-1-rpa); ### #VNW-1-rpa in nwchem seems to be VWN3 in Turbomole/Gaussian; ### ; ### e = energy('b3lyp5'); ### compare_values(-76.42582290565, e, 5, 'b3lyp5 vs Turbomole'); ### #and VWN5; ### #-76.42582290565 (Turbomole default ); ### #-76.42582303608 (psi4 energy('b3lyp5') with VWN5_C not VWN5RPA_C , needs to be changed!); ### #-76.42582292329 (nwchem VWN_5); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:2975,Energy Efficiency,energy,energy,2975,"f69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turbomole ""B3LYP_Gaussian""); ### #-76.46290355576 (psi4 energy('b3lyp')); ### #-76.46290344335 (nwchem default vnw-1-rpa); ### #VNW-1-rpa in nwchem seems to be VWN3 in Turbomole/Gaussian; ### ; ### e = energy('b3lyp5'); ### compare_values(-76.42582290565, e, 5, 'b3lyp5 vs Turbomole'); ### #and VWN5; ### #-76.42582290565 (Turbomole default ); ### #-76.42582303608 (psi4 energy('b3lyp5') with VWN5_C not VWN5RPA_C , needs to be changed!); ### #-76.42582292329 (nwchem VWN_5); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:3176,Energy Efficiency,energy,energy,3176,"f69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turbomole ""B3LYP_Gaussian""); ### #-76.46290355576 (psi4 energy('b3lyp')); ### #-76.46290344335 (nwchem default vnw-1-rpa); ### #VNW-1-rpa in nwchem seems to be VWN3 in Turbomole/Gaussian; ### ; ### e = energy('b3lyp5'); ### compare_values(-76.42582290565, e, 5, 'b3lyp5 vs Turbomole'); ### #and VWN5; ### #-76.42582290565 (Turbomole default ); ### #-76.42582303608 (psi4 energy('b3lyp5') with VWN5_C not VWN5RPA_C , needs to be changed!); ### #-76.42582292329 (nwchem VWN_5); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:3322,Energy Efficiency,energy,energy,3322,"f69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turbomole ""B3LYP_Gaussian""); ### #-76.46290355576 (psi4 energy('b3lyp')); ### #-76.46290344335 (nwchem default vnw-1-rpa); ### #VNW-1-rpa in nwchem seems to be VWN3 in Turbomole/Gaussian; ### ; ### e = energy('b3lyp5'); ### compare_values(-76.42582290565, e, 5, 'b3lyp5 vs Turbomole'); ### #and VWN5; ### #-76.42582290565 (Turbomole default ); ### #-76.42582303608 (psi4 energy('b3lyp5') with VWN5_C not VWN5RPA_C , needs to be changed!); ### #-76.42582292329 (nwchem VWN_5); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:3491,Energy Efficiency,energy,energy,3491,"f69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922 0295 70; # Nchem-VWN_3 -76.3922 1287 ; # Psi4-VWN_3 -76.3922 2551 29; # LAB psi4 -76.3922 1237 09 # large grid VWN3_C VWN5_C. clean(). # @hokru conditions. molecule {; O -1.769142 -0.076181 0.000000; H -2.065745 0.837492 0.000000; H -0.809034 0.001317 0.000000; }. ### e = energy('b3lyp'); ### compare_values(-76.46290368244, e, 5, 'b3lyp3 vs Turbomole'); ### #For VWN3 (same as Gaussian) I get; ### #-76.46290368244 (Turbomole ""B3LYP_Gaussian""); ### #-76.46290355576 (psi4 energy('b3lyp')); ### #-76.46290344335 (nwchem default vnw-1-rpa); ### #VNW-1-rpa in nwchem seems to be VWN3 in Turbomole/Gaussian; ### ; ### e = energy('b3lyp5'); ### compare_values(-76.42582290565, e, 5, 'b3lyp5 vs Turbomole'); ### #and VWN5; ### #-76.42582290565 (Turbomole default ); ### #-76.42582303608 (psi4 energy('b3lyp5') with VWN5_C not VWN5RPA_C , needs to be changed!); ### #-76.42582292329 (nwchem VWN_5); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:1700,Testability,test,test,1700," justification? This PR keeps default B3LYP at `VWN3RPA_C` and [switches](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R1314) B3LYP5 to `VWN5_C` and re-enables it. So the input file below works, yet that redefinition is disturbing.; - [x] minor ?: why is `wB88_X` being redefined [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R654) when it was just defined up above [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R603). Ok to delete 2nd definition as done in this PR?; - [x] minor ?: why is `bp86d1` building upon b3lyp as [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 rOH 2 aHOH. rOH = 0.9622; aHOH = 103.84; }. set basis 6-311g(d); set scf_type pk; set e_convergence 9. e = energy('b3lyp'); compare_values(-76.4338100903, e, 7, 'b3lyp3 vs Gaussian'); compare_values(-76.4338100577, e, 7, 'b3lyp3 vs Gamess'). clean(). # @drhaney conditions. set basis 6-31G(2df,p); #set dft_spherical_points 590; #set dft_radial_points 99. e = energy('b3lyp'); compare_values(-76.4293315991, e, 5, 'b3lyp3 vs Gamess'); # GAMESS-VWNrpa_1 -76.4293 3159 91; # Psi4-VWNrpa_3 -76.4293 5426 98; # Gaussian-09 -76.4256 2566 74; # LAB psi4 -76.4293 4111 93 # large grid VWN3RPA_C VWN5RPA_C. e = energy('b3lyp5'); compare_values(-76.39221287, e, 5, 'b3lyp5 vs NWChem'); # GAMESS-VWN_5 -76.3922",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/pull/339:20,Usability,feedback,feedback,20,"## Description. Get feedback on functional.py oddities and justifiy b3lyp5 fix; ## Todos; - [x] if agreed upon, this will get us B3LYP5 back; - [background](http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193); - [deeper background](http://verahill.blogspot.com/2013/06/446-b3lyp-and-wah-confusion.html); ## Questions; - [x] major ?: if you vary the vwn in plain b3lyp superfunctional [here](https://github.com/loriab/psi4/blob/b3lyp35/share/python/functional.py#L1243), it matches other programs' B3LYP3 when `VWN3RPA_C` or `VWN5RPA_C` is used but matches other programs' B3LYP5 when `VWN3_C` or `VWN5_C` is used. Naming-wise, this makes no sense. Anyone have a better justification? This PR keeps default B3LYP at `VWN3RPA_C` and [switches](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R1314) B3LYP5 to `VWN5_C` and re-enables it. So the input file below works, yet that redefinition is disturbing.; - [x] minor ?: why is `wB88_X` being redefined [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R654) when it was just defined up above [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R603). Ok to delete 2nd definition as done in this PR?; - [x] minor ?: why is `bp86d1` building upon b3lyp as [here](https://github.com/psi4/psi4/pull/339/commits/cfcbf085305c8033186fb3c68c1b96f19688a939#diff-9e8e3243e87430585c59e5a407f6bf69R2114)? Ok to make it build upon bp86 as done in this PR?; ## Status; - [x] Ready to go. B3LYP3/5 test input. You'll need [this](https://raw.githubusercontent.com/drhaney/psi4/master/share/basis/6-31g_2df_p_.gbs) basis set. ```; # all non-psi4 references from http://forum.psicode.org/t/b3lyp-defect-compatibility-with-gamess-and-gaussian/193. # @jamont conditions. molecule {; 0 1; O; H 1 rOH; H 1 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/339
https://github.com/psi4/psi4/issues/340:728,Availability,avail,available,728,"Fails on methyl chloride, succeeds on diatomic chlorine.; Did not test larger alkyl groups.; CH3Cl was pre-optimized at HF/6-31G(d). ; Attempted RHF single point energy failed to converge with these basis sets:. > 6-311g(3df); > 6-311g(3df,p); > 6-311g(3df,2p); > 6-311g(3df,2pd); > 6-311g(3df,3pd); > aug-cc-pV(D+d)Z; > aug-cc-pV(Q+d)Z; > aug-cc-pV(T+d)Z; > g3mp2large. They all have at least 3df polarization, some more. Not all heavily polarized 6-311G(*) basis sets contain both C, Cl so these basis sets are only 5 of the 51 6-311?G(etc) sets. Doubtless, the other 10 sets with diffuse functions (e.g., 6-311++G(3df)) will fail but take longer at it. Though large, the 7152 Mb memory allocation requirement did not exhaust available shared memory. G3(MP2) method requires the g3mp2large basis set and the Wilson Group's cc-CA methods require the aug-cc-pV([DQT]+d)Z basis sets. Minimal test case attached.; [CH3Cl-3df-fail.zip](https://github.com/psi4/psi4/files/214171/CH3Cl-3df-fail.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/340
https://github.com/psi4/psi4/issues/340:162,Energy Efficiency,energy,energy,162,"Fails on methyl chloride, succeeds on diatomic chlorine.; Did not test larger alkyl groups.; CH3Cl was pre-optimized at HF/6-31G(d). ; Attempted RHF single point energy failed to converge with these basis sets:. > 6-311g(3df); > 6-311g(3df,p); > 6-311g(3df,2p); > 6-311g(3df,2pd); > 6-311g(3df,3pd); > aug-cc-pV(D+d)Z; > aug-cc-pV(Q+d)Z; > aug-cc-pV(T+d)Z; > g3mp2large. They all have at least 3df polarization, some more. Not all heavily polarized 6-311G(*) basis sets contain both C, Cl so these basis sets are only 5 of the 51 6-311?G(etc) sets. Doubtless, the other 10 sets with diffuse functions (e.g., 6-311++G(3df)) will fail but take longer at it. Though large, the 7152 Mb memory allocation requirement did not exhaust available shared memory. G3(MP2) method requires the g3mp2large basis set and the Wilson Group's cc-CA methods require the aug-cc-pV([DQT]+d)Z basis sets. Minimal test case attached.; [CH3Cl-3df-fail.zip](https://github.com/psi4/psi4/files/214171/CH3Cl-3df-fail.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/340
https://github.com/psi4/psi4/issues/340:107,Performance,optimiz,optimized,107,"Fails on methyl chloride, succeeds on diatomic chlorine.; Did not test larger alkyl groups.; CH3Cl was pre-optimized at HF/6-31G(d). ; Attempted RHF single point energy failed to converge with these basis sets:. > 6-311g(3df); > 6-311g(3df,p); > 6-311g(3df,2p); > 6-311g(3df,2pd); > 6-311g(3df,3pd); > aug-cc-pV(D+d)Z; > aug-cc-pV(Q+d)Z; > aug-cc-pV(T+d)Z; > g3mp2large. They all have at least 3df polarization, some more. Not all heavily polarized 6-311G(*) basis sets contain both C, Cl so these basis sets are only 5 of the 51 6-311?G(etc) sets. Doubtless, the other 10 sets with diffuse functions (e.g., 6-311++G(3df)) will fail but take longer at it. Though large, the 7152 Mb memory allocation requirement did not exhaust available shared memory. G3(MP2) method requires the g3mp2large basis set and the Wilson Group's cc-CA methods require the aug-cc-pV([DQT]+d)Z basis sets. Minimal test case attached.; [CH3Cl-3df-fail.zip](https://github.com/psi4/psi4/files/214171/CH3Cl-3df-fail.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/340
https://github.com/psi4/psi4/issues/340:66,Testability,test,test,66,"Fails on methyl chloride, succeeds on diatomic chlorine.; Did not test larger alkyl groups.; CH3Cl was pre-optimized at HF/6-31G(d). ; Attempted RHF single point energy failed to converge with these basis sets:. > 6-311g(3df); > 6-311g(3df,p); > 6-311g(3df,2p); > 6-311g(3df,2pd); > 6-311g(3df,3pd); > aug-cc-pV(D+d)Z; > aug-cc-pV(Q+d)Z; > aug-cc-pV(T+d)Z; > g3mp2large. They all have at least 3df polarization, some more. Not all heavily polarized 6-311G(*) basis sets contain both C, Cl so these basis sets are only 5 of the 51 6-311?G(etc) sets. Doubtless, the other 10 sets with diffuse functions (e.g., 6-311++G(3df)) will fail but take longer at it. Though large, the 7152 Mb memory allocation requirement did not exhaust available shared memory. G3(MP2) method requires the g3mp2large basis set and the Wilson Group's cc-CA methods require the aug-cc-pV([DQT]+d)Z basis sets. Minimal test case attached.; [CH3Cl-3df-fail.zip](https://github.com/psi4/psi4/files/214171/CH3Cl-3df-fail.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/340
https://github.com/psi4/psi4/issues/340:891,Testability,test,test,891,"Fails on methyl chloride, succeeds on diatomic chlorine.; Did not test larger alkyl groups.; CH3Cl was pre-optimized at HF/6-31G(d). ; Attempted RHF single point energy failed to converge with these basis sets:. > 6-311g(3df); > 6-311g(3df,p); > 6-311g(3df,2p); > 6-311g(3df,2pd); > 6-311g(3df,3pd); > aug-cc-pV(D+d)Z; > aug-cc-pV(Q+d)Z; > aug-cc-pV(T+d)Z; > g3mp2large. They all have at least 3df polarization, some more. Not all heavily polarized 6-311G(*) basis sets contain both C, Cl so these basis sets are only 5 of the 51 6-311?G(etc) sets. Doubtless, the other 10 sets with diffuse functions (e.g., 6-311++G(3df)) will fail but take longer at it. Though large, the 7152 Mb memory allocation requirement did not exhaust available shared memory. G3(MP2) method requires the g3mp2large basis set and the Wilson Group's cc-CA methods require the aug-cc-pV([DQT]+d)Z basis sets. Minimal test case attached.; [CH3Cl-3df-fail.zip](https://github.com/psi4/psi4/files/214171/CH3Cl-3df-fail.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/340
https://github.com/psi4/psi4/issues/342:49,Deployability,update,update,49,"I assume you already know, but you might want to update/disable the links on github at least.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/342
https://github.com/psi4/psi4/pull/343:159,Availability,error,errors,159,## Description. Make docs look nice again; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] clean up a lot of warnings/errors generated by sphinx-build; - [x] regenerate `_static`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/343
https://github.com/psi4/psi4/issues/345:1572,Deployability,update,updated,1572," isotope and different temperatures and nonstandard isotopes and for nonstandard isotopes up through vibrations and enthalpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:1639,Deployability,update,update,1639,"alpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186 [mEh/K] (mol. weight = 18.0106, P = 101325.00 [Pa]); Rotational S 10.673 [cal/(mol K)] 44.654 [J/(mol K)] 0.01700786 [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:1737,Deployability,update,update,1737,"alpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186 [mEh/K] (mol. weight = 18.0106, P = 101325.00 [Pa]); Rotational S 10.673 [cal/(mol K)] 44.654 [J/(mol K)] 0.01700786 [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:7647,Energy Efficiency,energy,energy,7647,"34.593 cal/mol-K (mol. weight = 18.0106); - Rotational = 10.668 cal/mol-K (symmetry # = 2); - Vibrational = 0.014 cal/mol-K; ```. Q-Chem Input. ```; $molecule; 0 1; O 0.00000000 0.00000000 0.00000000; H 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; $end. $rem; INPUT_BOHR true; BASIS STO-3G; JOBTYPE opt; METHOD hf; $end. @@@. $molecule; read; $end. $rem; INPUT_BOHR true; BASIS STO-3G; JOBTYPE freq; METHOD hf; SCF_GUESS read; ISOTOPES 1; VIBMAN_PRINT 4; THRESH 12; SCF_CONVERGENCE 7; !SYM_IGNORE TRUE; !SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end. $isotopes; 3 0 ! three loops, both at std temp and pressure; 2; 2 2.014101779; 3 2.014101779; 1; 2 2.014101779; 2; 2 2.014101779; 3 3.01604927; $end; ```. Molpro Input. ```; ***,HCl; memory,100,M; geomtyp=zmat; geometry; O,, 0.00000000 , 0.00000000 , 0.00000000; H2,, 0.00000000 , 1.93042809 , -1.10715266; H3,, 0.00000000 , -1.93042809 , -1.10715266; end. basis=sto-3g; GTHRESH,energy=1.d-8. {HF}; {OPTG}. {frequencies,analytic; thermo,; print,thermo}. mass,init,H=2.014101779,O=15.994914619560; {frequencies,analytic; thermo,; print,thermo}. mass,init,O=15.994914619560,H2=2.014101779,H3=1.007825032070; {frequencies,analytic; thermo,; print,thermo}. mass,init,O=15.994914619560,H2=2.014101779,H3=3.01604927; {frequencies,analytic; thermo,; print,thermo}; ```. NW-Chem Input. ```; start h2o; title Water . memory total 1600 mb noverify. geometry units au autosym; O 0.00000000 0.00000000 0.00000000; H 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; end; basis noprint; H library sto-3g ; O library sto-3g; end; scf; thresh 1e-6; end; driver; tight; end; task scf optimize. scf; thresh 1e-8; print none; end; task scf freq . freq; reuse; temp 4 298.15 300.0 350.0 400.0; end; task scf freq. freq ; reuse; mass H 2.014101779; temp 1 298.15; end; task scf freq. freq; reuse; mass 2 2.014101779; end; task scf freq. freq; reuse; mass 2 2.014101779 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:26,Integrability,depend,depends,26,"So the rotational entropy depends on the rotational symmetry factor (from full symmetry, not computational symmetry) and moments of inertia. And the translational entropy depends on the molecular weight. Now when one does isotopic substitutions, the molecular mass, moments of inertia, and potentially (if an asymmetric substitution) the rotational symmetry factor change. Psi4 uses these changed values to recompute the translational and rotational partition functions. I'm pleased to report that we agree nicely with other programs for standard isotope and different temperatures and nonstandard isotopes and for nonstandard isotopes up through vibrations and enthalpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.000000000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:171,Integrability,depend,depends,171,"So the rotational entropy depends on the rotational symmetry factor (from full symmetry, not computational symmetry) and moments of inertia. And the translational entropy depends on the molecular weight. Now when one does isotopic substitutions, the molecular mass, moments of inertia, and potentially (if an asymmetric substitution) the rotational symmetry factor change. Psi4 uses these changed values to recompute the translational and rotational partition functions. I'm pleased to report that we agree nicely with other programs for standard isotope and different temperatures and nonstandard isotopes and for nonstandard isotopes up through vibrations and enthalpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.000000000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:8359,Performance,optimiz,optimize,8359,"Rotational = 10.668 cal/mol-K (symmetry # = 2); - Vibrational = 0.014 cal/mol-K; ```. Q-Chem Input. ```; $molecule; 0 1; O 0.00000000 0.00000000 0.00000000; H 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; $end. $rem; INPUT_BOHR true; BASIS STO-3G; JOBTYPE opt; METHOD hf; $end. @@@. $molecule; read; $end. $rem; INPUT_BOHR true; BASIS STO-3G; JOBTYPE freq; METHOD hf; SCF_GUESS read; ISOTOPES 1; VIBMAN_PRINT 4; THRESH 12; SCF_CONVERGENCE 7; !SYM_IGNORE TRUE; !SYMMETRY FALSE; MEM_TOTAL 1600; MEM_STATIC 512; INTEGRALS_BUFFER 512; MAX_SCF_CYCLES 200; $end. $isotopes; 3 0 ! three loops, both at std temp and pressure; 2; 2 2.014101779; 3 2.014101779; 1; 2 2.014101779; 2; 2 2.014101779; 3 3.01604927; $end; ```. Molpro Input. ```; ***,HCl; memory,100,M; geomtyp=zmat; geometry; O,, 0.00000000 , 0.00000000 , 0.00000000; H2,, 0.00000000 , 1.93042809 , -1.10715266; H3,, 0.00000000 , -1.93042809 , -1.10715266; end. basis=sto-3g; GTHRESH,energy=1.d-8. {HF}; {OPTG}. {frequencies,analytic; thermo,; print,thermo}. mass,init,H=2.014101779,O=15.994914619560; {frequencies,analytic; thermo,; print,thermo}. mass,init,O=15.994914619560,H2=2.014101779,H3=1.007825032070; {frequencies,analytic; thermo,; print,thermo}. mass,init,O=15.994914619560,H2=2.014101779,H3=3.01604927; {frequencies,analytic; thermo,; print,thermo}; ```. NW-Chem Input. ```; start h2o; title Water . memory total 1600 mb noverify. geometry units au autosym; O 0.00000000 0.00000000 0.00000000; H 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; end; basis noprint; H library sto-3g ; O library sto-3g; end; scf; thresh 1e-6; end; driver; tight; end; task scf optimize. scf; thresh 1e-8; print none; end; task scf freq . freq; reuse; temp 4 298.15 300.0 350.0 400.0; end; task scf freq. freq ; reuse; mass H 2.014101779; temp 1 298.15; end; task scf freq. freq; reuse; mass 2 2.014101779; end; task scf freq. freq; reuse; mass 2 2.014101779 ; mass 3 3.01604927; end; task scf freq; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/345:2328,Safety,detect,detector,2328,"tropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186 [mEh/K] (mol. weight = 18.0106, P = 101325.00 [Pa]); Rotational S 10.673 [cal/(mol K)] 44.654 [J/(mol K)] 0.01700786 [mEh/K] (symmetry no. = 2); Vibrational S 0.001 [cal/(mol K)] 0.003 [J/(mol K)] 0.00000103 [mEh/K]; Total S 45.282 [cal/(mol K)] 189.458 [J/(mol K)] 0.07216074 [mEh/K]. Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.924 [cal/(mol K)] 146.122 [J/(mol K)] 0.05565504 [mEh/K] (mol. weight = 20.0231, P = 101325.00 [Pa]); Rotational S 12.592 [cal/(mol K)] 52.685 [J/(mol K)] 0.02006667 [mEh/K] (symmetry no. = 2); Vibrational S 0.008 [cal/(mol K)] 0.034 [J/(mol K)] 0.00001311 [mEh/K]; Total S 47.524 [cal/(mol K)] 198.842 [J/(mol K)] 0.07573483 [mEh/K]. Electronic S 0.000 [cal/(m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/345
https://github.com/psi4/psi4/issues/346:349,Energy Efficiency,energy,energy,349,"The two below should give the same freq analysis. They don't because though the `Molecule.set_mass()` _does_ reset the mass, it doesn't reset the symmetry. ```; molecule hdo {; units au; O 0.00000000 0.00000000 0.00000000; H@2.014101779 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; }. set basis cc-pvdz; set print 3. e = energy('hf'); print 'mass in input string'; print e; print hdo.schoenflies_symbol(). frequency('hf'); ```. ```; molecule h2o {; units au; O 0.00000000 0.00000000 0.00000000; H 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; }. set basis cc-pvdz; set print 3. hdo = h2o.clone(); hdo.set_mass(1, 2.014101779); print hdo.schoenflies_symbol(); hdo.update_geometry(); print hdo.schoenflies_symbol(). e = energy('hf', molecule=hdo); print 'mass through setter'; print e; print hdo.schoenflies_symbol(). frequency('hf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/346
https://github.com/psi4/psi4/issues/346:773,Energy Efficiency,energy,energy,773,"The two below should give the same freq analysis. They don't because though the `Molecule.set_mass()` _does_ reset the mass, it doesn't reset the symmetry. ```; molecule hdo {; units au; O 0.00000000 0.00000000 0.00000000; H@2.014101779 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; }. set basis cc-pvdz; set print 3. e = energy('hf'); print 'mass in input string'; print e; print hdo.schoenflies_symbol(). frequency('hf'); ```. ```; molecule h2o {; units au; O 0.00000000 0.00000000 0.00000000; H 0.00000000 1.93042809 -1.10715266; H 0.00000000 -1.93042809 -1.10715266; }. set basis cc-pvdz; set print 3. hdo = h2o.clone(); hdo.set_mass(1, 2.014101779); print hdo.schoenflies_symbol(); hdo.update_geometry(); print hdo.schoenflies_symbol(). e = energy('hf', molecule=hdo); print 'mass through setter'; print e; print hdo.schoenflies_symbol(). frequency('hf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/346
https://github.com/psi4/psi4/issues/347:3068,Energy Efficiency,reduce,reduced,3068," @psi-rking, I don't remember seeing any projection of rot/trans out of Hessian. Is this just because by using SALCs you're assured of only displacements in vib-active directions? Assuming we someday get an analytic Hessian mtd, projection would be needed, right? I'm inclined to group projection with the vib analysis for comparison of proj and unproj freqs, so psi4.fd module needn't be involved.; - [ ] signature `SharedMatrix fd_freq_1(boost::shared_ptr<Molecule> mol, Options &options, const boost::python::list& grad_list, int freq_irrep_only)` (just like at present); - [ ] remove communication with globals (`Process`); - [ ] return nmw H (just like at present). vibrational analysis; - should move to python; - possibly already drafted/ready by Addison/Brandon; - [ ] tentative signature `normalmode(molecule, hessian, gradient=None, **kwargs)` where the arrays are `psi4.Matrix` or numpy arrays, gradient defaults to None (just there to project out of Hessian), and I don't care about the function name; - [ ] mass-weights by masses in molecule; - [ ] does H = 1 – R – T projection; - should dress up printing w/reduced masses IR intensities (if get dipder) someday but that's beyond the scope of this issue; - [ ] returns freq & normco arrays (or OrderedDict w/symm, force constant, etc. info). thermo analysis; - should move to python; - already ready by Addison/Brandon; - [ ] needs printing and Cp additions backported from forthcoming C++ version; - [ ] tentative signature `thermo(molecule, frequencies, E0=None, **kwargs); - [ ] stash all those energy pieces in a dict or psivars; - should review anharm analysis so harm readily subcases it; - [ ] tentatively returns Total Gibbs Energy in E_h. application; - [ ] take freq-isotope test case (not checked in yet) and rewrite it (and the `driver.frequency()` fn) so that wfn (containing mol & H) from first H2O 2nd deriv calc can be passed into vib and thermo analyses w/o ever recomputing H. All the compare_values should still pass.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/347
https://github.com/psi4/psi4/issues/347:3508,Energy Efficiency,energy,energy,3508," @psi-rking, I don't remember seeing any projection of rot/trans out of Hessian. Is this just because by using SALCs you're assured of only displacements in vib-active directions? Assuming we someday get an analytic Hessian mtd, projection would be needed, right? I'm inclined to group projection with the vib analysis for comparison of proj and unproj freqs, so psi4.fd module needn't be involved.; - [ ] signature `SharedMatrix fd_freq_1(boost::shared_ptr<Molecule> mol, Options &options, const boost::python::list& grad_list, int freq_irrep_only)` (just like at present); - [ ] remove communication with globals (`Process`); - [ ] return nmw H (just like at present). vibrational analysis; - should move to python; - possibly already drafted/ready by Addison/Brandon; - [ ] tentative signature `normalmode(molecule, hessian, gradient=None, **kwargs)` where the arrays are `psi4.Matrix` or numpy arrays, gradient defaults to None (just there to project out of Hessian), and I don't care about the function name; - [ ] mass-weights by masses in molecule; - [ ] does H = 1 – R – T projection; - should dress up printing w/reduced masses IR intensities (if get dipder) someday but that's beyond the scope of this issue; - [ ] returns freq & normco arrays (or OrderedDict w/symm, force constant, etc. info). thermo analysis; - should move to python; - already ready by Addison/Brandon; - [ ] needs printing and Cp additions backported from forthcoming C++ version; - [ ] tentative signature `thermo(molecule, frequencies, E0=None, **kwargs); - [ ] stash all those energy pieces in a dict or psivars; - should review anharm analysis so harm readily subcases it; - [ ] tentatively returns Total Gibbs Energy in E_h. application; - [ ] take freq-isotope test case (not checked in yet) and rewrite it (and the `driver.frequency()` fn) so that wfn (containing mol & H) from first H2O 2nd deriv calc can be passed into vib and thermo analyses w/o ever recomputing H. All the compare_values should still pass.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/347
https://github.com/psi4/psi4/issues/347:3643,Energy Efficiency,Energy,Energy,3643," @psi-rking, I don't remember seeing any projection of rot/trans out of Hessian. Is this just because by using SALCs you're assured of only displacements in vib-active directions? Assuming we someday get an analytic Hessian mtd, projection would be needed, right? I'm inclined to group projection with the vib analysis for comparison of proj and unproj freqs, so psi4.fd module needn't be involved.; - [ ] signature `SharedMatrix fd_freq_1(boost::shared_ptr<Molecule> mol, Options &options, const boost::python::list& grad_list, int freq_irrep_only)` (just like at present); - [ ] remove communication with globals (`Process`); - [ ] return nmw H (just like at present). vibrational analysis; - should move to python; - possibly already drafted/ready by Addison/Brandon; - [ ] tentative signature `normalmode(molecule, hessian, gradient=None, **kwargs)` where the arrays are `psi4.Matrix` or numpy arrays, gradient defaults to None (just there to project out of Hessian), and I don't care about the function name; - [ ] mass-weights by masses in molecule; - [ ] does H = 1 – R – T projection; - should dress up printing w/reduced masses IR intensities (if get dipder) someday but that's beyond the scope of this issue; - [ ] returns freq & normco arrays (or OrderedDict w/symm, force constant, etc. info). thermo analysis; - should move to python; - already ready by Addison/Brandon; - [ ] needs printing and Cp additions backported from forthcoming C++ version; - [ ] tentative signature `thermo(molecule, frequencies, E0=None, **kwargs); - [ ] stash all those energy pieces in a dict or psivars; - should review anharm analysis so harm readily subcases it; - [ ] tentatively returns Total Gibbs Energy in E_h. application; - [ ] take freq-isotope test case (not checked in yet) and rewrite it (and the `driver.frequency()` fn) so that wfn (containing mol & H) from first H2O 2nd deriv calc can be passed into vib and thermo analyses w/o ever recomputing H. All the compare_values should still pass.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/347
https://github.com/psi4/psi4/issues/347:1498,Integrability,depend,dependent,1498," in Wfn. Then `driver.frequency()`; - extracts the frequencies from Wfn; - passes Wfn and Wfn.frequencies into thermo. Then `psi4.thermo()`; - extracts Molecule and E0 from Wfn; - uses those and frequencies to do the thermodynamic analysis. Key lines from driver below (note order of execution). ```; 1 frequency(name):; 2 H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs) # send away for hessian; 7 psi4.thermo(wfn, wfn.frequencies()) # pass frequencies into thermo analysis. 3 hessian(name): ; 4 H = psi4.fd_freq_1(molecule, gradients, irrep) # stores freq in global psi4.frequencies(), returns H; 5 wfn.set_hessian(H) # store H in fresh wfn; 6 wfn.set_frequencies(psi4.get_frequencies()) # store freq in fresh wfn; ```. So there are three stages: ""assemble H"", ""vibrational analysis"", & ""thermo analysis"". Keeping in mind that the nmw Hessian is isotope-independent while freqs are isotope-dependent, you'll notice that the present arrangement of groups (1, 2) and (3) with frequencies as intermediate are such that can't reuse H for vibrational analysis of different isotopes (though it does allow for reuse of freq for thermo analysis at diff T, P).; ### Future. assemble H; - this is doing just fine c-side in `psi4.fd_freq_0/1`; - should focus on returning nmw Hessian (as currently) does and trim out the vibrational analysis part; - @psi-rking, I don't remember seeing any projection of rot/trans out of Hessian. Is this just because by using SALCs you're assured of only displacements in vib-active directions? Assuming we someday get an analytic Hessian mtd, projection would be needed, right? I'm inclined to group projection with the vib analysis for comparison of proj and unproj freqs, so psi4.fd module needn't be involved.; - [ ] signature `SharedMatrix fd_freq_1(boost::shared_ptr<Molecule> mol, Options &options, const boost::python::list& grad_list, int freq_irrep_only)` (just like at present); - [ ] remove communication with globals (`Process`); - [ ] return",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/347
https://github.com/psi4/psi4/issues/347:3730,Modifiability,rewrite,rewrite,3730," @psi-rking, I don't remember seeing any projection of rot/trans out of Hessian. Is this just because by using SALCs you're assured of only displacements in vib-active directions? Assuming we someday get an analytic Hessian mtd, projection would be needed, right? I'm inclined to group projection with the vib analysis for comparison of proj and unproj freqs, so psi4.fd module needn't be involved.; - [ ] signature `SharedMatrix fd_freq_1(boost::shared_ptr<Molecule> mol, Options &options, const boost::python::list& grad_list, int freq_irrep_only)` (just like at present); - [ ] remove communication with globals (`Process`); - [ ] return nmw H (just like at present). vibrational analysis; - should move to python; - possibly already drafted/ready by Addison/Brandon; - [ ] tentative signature `normalmode(molecule, hessian, gradient=None, **kwargs)` where the arrays are `psi4.Matrix` or numpy arrays, gradient defaults to None (just there to project out of Hessian), and I don't care about the function name; - [ ] mass-weights by masses in molecule; - [ ] does H = 1 – R – T projection; - should dress up printing w/reduced masses IR intensities (if get dipder) someday but that's beyond the scope of this issue; - [ ] returns freq & normco arrays (or OrderedDict w/symm, force constant, etc. info). thermo analysis; - should move to python; - already ready by Addison/Brandon; - [ ] needs printing and Cp additions backported from forthcoming C++ version; - [ ] tentative signature `thermo(molecule, frequencies, E0=None, **kwargs); - [ ] stash all those energy pieces in a dict or psivars; - should review anharm analysis so harm readily subcases it; - [ ] tentatively returns Total Gibbs Energy in E_h. application; - [ ] take freq-isotope test case (not checked in yet) and rewrite it (and the `driver.frequency()` fn) so that wfn (containing mol & H) from first H2O 2nd deriv calc can be passed into vib and thermo analyses w/o ever recomputing H. All the compare_values should still pass.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/347
https://github.com/psi4/psi4/issues/347:3695,Testability,test,test,3695," @psi-rking, I don't remember seeing any projection of rot/trans out of Hessian. Is this just because by using SALCs you're assured of only displacements in vib-active directions? Assuming we someday get an analytic Hessian mtd, projection would be needed, right? I'm inclined to group projection with the vib analysis for comparison of proj and unproj freqs, so psi4.fd module needn't be involved.; - [ ] signature `SharedMatrix fd_freq_1(boost::shared_ptr<Molecule> mol, Options &options, const boost::python::list& grad_list, int freq_irrep_only)` (just like at present); - [ ] remove communication with globals (`Process`); - [ ] return nmw H (just like at present). vibrational analysis; - should move to python; - possibly already drafted/ready by Addison/Brandon; - [ ] tentative signature `normalmode(molecule, hessian, gradient=None, **kwargs)` where the arrays are `psi4.Matrix` or numpy arrays, gradient defaults to None (just there to project out of Hessian), and I don't care about the function name; - [ ] mass-weights by masses in molecule; - [ ] does H = 1 – R – T projection; - should dress up printing w/reduced masses IR intensities (if get dipder) someday but that's beyond the scope of this issue; - [ ] returns freq & normco arrays (or OrderedDict w/symm, force constant, etc. info). thermo analysis; - should move to python; - already ready by Addison/Brandon; - [ ] needs printing and Cp additions backported from forthcoming C++ version; - [ ] tentative signature `thermo(molecule, frequencies, E0=None, **kwargs); - [ ] stash all those energy pieces in a dict or psivars; - should review anharm analysis so harm readily subcases it; - [ ] tentatively returns Total Gibbs Energy in E_h. application; - [ ] take freq-isotope test case (not checked in yet) and rewrite it (and the `driver.frequency()` fn) so that wfn (containing mol & H) from first H2O 2nd deriv calc can be passed into vib and thermo analyses w/o ever recomputing H. All the compare_values should still pass.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/347
https://github.com/psi4/psi4/pull/348:267,Deployability,update,updated,267,"## Description. Thermo and isotope improvements; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fixed bug whereby mass specification in `molecule {...}` through `C@14.0` led to no basis fns being placed on those atoms; - [x] updated thermo printing to include kJ, Cp, and hopefully be easier to orient oneself in; - [x] compared our thermo output for isotopes to other programs' in new test case freq-isotope; ## Questions; - [x] Would be good to get #345 resolved; - [x] @psi-rking may want to look over new thermo printing (example [here](https://github.com/loriab/psi4/blob/b3lyp35/tests/freq-isotope/output.ref)); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/348
https://github.com/psi4/psi4/pull/348:428,Testability,test,test,428,"## Description. Thermo and isotope improvements; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fixed bug whereby mass specification in `molecule {...}` through `C@14.0` led to no basis fns being placed on those atoms; - [x] updated thermo printing to include kJ, Cp, and hopefully be easier to orient oneself in; - [x] compared our thermo output for isotopes to other programs' in new test case freq-isotope; ## Questions; - [x] Would be good to get #345 resolved; - [x] @psi-rking may want to look over new thermo printing (example [here](https://github.com/loriab/psi4/blob/b3lyp35/tests/freq-isotope/output.ref)); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/348
https://github.com/psi4/psi4/pull/348:627,Testability,test,tests,627,"## Description. Thermo and isotope improvements; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fixed bug whereby mass specification in `molecule {...}` through `C@14.0` led to no basis fns being placed on those atoms; - [x] updated thermo printing to include kJ, Cp, and hopefully be easier to orient oneself in; - [x] compared our thermo output for isotopes to other programs' in new test case freq-isotope; ## Questions; - [x] Would be good to get #345 resolved; - [x] @psi-rking may want to look over new thermo printing (example [here](https://github.com/loriab/psi4/blob/b3lyp35/tests/freq-isotope/output.ref)); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/348
https://github.com/psi4/psi4/issues/349:61,Energy Efficiency,energy,energy,61,"- [x] search docs and driver for 'df-', 'conv-' and 'cd-' in energy(), etc. names. kill them off, substituting if relevant. e.g., ""energy('df-fno-ccsd(t)')"" becomes ""set cc_type df\nenergy('fno-ccsd(t)')"". Leave alone any offenders in the reST tables in the driver.py docstrings, as that's someone else's task, and changing them would be confusing.; - [x] change 2015 to 2016, particularly in copyright. I did psicode.org; - [x] look in docs and test cases for ""set global"" or ""set globals"" and kill the global(s); - [x] in source code (primarily in doc/sphinxman/source), grep for psi4/psi4public and change to psi4/psi4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/349
https://github.com/psi4/psi4/issues/349:131,Energy Efficiency,energy,energy,131,"- [x] search docs and driver for 'df-', 'conv-' and 'cd-' in energy(), etc. names. kill them off, substituting if relevant. e.g., ""energy('df-fno-ccsd(t)')"" becomes ""set cc_type df\nenergy('fno-ccsd(t)')"". Leave alone any offenders in the reST tables in the driver.py docstrings, as that's someone else's task, and changing them would be confusing.; - [x] change 2015 to 2016, particularly in copyright. I did psicode.org; - [x] look in docs and test cases for ""set global"" or ""set globals"" and kill the global(s); - [x] in source code (primarily in doc/sphinxman/source), grep for psi4/psi4public and change to psi4/psi4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/349
https://github.com/psi4/psi4/issues/349:446,Testability,test,test,446,"- [x] search docs and driver for 'df-', 'conv-' and 'cd-' in energy(), etc. names. kill them off, substituting if relevant. e.g., ""energy('df-fno-ccsd(t)')"" becomes ""set cc_type df\nenergy('fno-ccsd(t)')"". Leave alone any offenders in the reST tables in the driver.py docstrings, as that's someone else's task, and changing them would be confusing.; - [x] change 2015 to 2016, particularly in copyright. I did psicode.org; - [x] look in docs and test cases for ""set global"" or ""set globals"" and kill the global(s); - [x] in source code (primarily in doc/sphinxman/source), grep for psi4/psi4public and change to psi4/psi4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/349
https://github.com/psi4/psi4/issues/350:311,Testability,test,test,311,"There's a new file doc/sphinxman/thermo.rst for the written docs part of the vibrational and thermochemical analysis. Fill it in as you see fit including at least:; - [ ] psivars defined by thermo; - [ ] also add the psivars to glossary_psivariables.rst if they're not already there; - [ ] a sample output (see test case freq-isotope if you don't want to make one up); - [ ] the WRITE_HESSIAN keyword; - [ ] note that defaults aren't iupac stp but do match other programs; - [ ] note that our handling of rot symm const differs from other programs (so our isotope S vs other programs). refer to paper in #345 and to |thermo__rotational_symmetry_constant| to match other progs.; - [x] closes psi4/psi4#345; - [ ] specify what we can do with hessian reuse at present and how (diff t, p, sigma); - [ ] specify what we can't do with hessian reuse at preset (isotopic subst); - [ ] show how to get isotopic substit (freq-isotope again); - [ ] include some examples (optking.rst good model); - [ ] include any vib and thermo equations you like",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/350
https://github.com/psi4/psi4/issues/352:516,Availability,failure,failure,516,"- [ ] Examine the autofunction signatures in energy, opt, freq, prop.rst in doc/sphinxman/source. These have arguments in the correct order. Rearrange the argument order in the docstrings of the respective functions in share/python/driver.py; - [ ] modify section ""PSI variables & return values"" in doc/sphinxman/source/psithoninput.rst; - separate out the last paragraph into a new section ""return values""; - include in it the gist of the signatures description at http://forum.psicode.org/t/detecting-optimization-failure/203/4?u=loriab .; - also mention getting G & H back as return values or extracting them from Wavefunction and a couple things you can do with them like print_out(), rms(), convert to np.array",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/352
https://github.com/psi4/psi4/issues/352:45,Energy Efficiency,energy,energy,45,"- [ ] Examine the autofunction signatures in energy, opt, freq, prop.rst in doc/sphinxman/source. These have arguments in the correct order. Rearrange the argument order in the docstrings of the respective functions in share/python/driver.py; - [ ] modify section ""PSI variables & return values"" in doc/sphinxman/source/psithoninput.rst; - separate out the last paragraph into a new section ""return values""; - include in it the gist of the signatures description at http://forum.psicode.org/t/detecting-optimization-failure/203/4?u=loriab .; - also mention getting G & H back as return values or extracting them from Wavefunction and a couple things you can do with them like print_out(), rms(), convert to np.array",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/352
https://github.com/psi4/psi4/issues/352:269,Modifiability,variab,variables,269,"- [ ] Examine the autofunction signatures in energy, opt, freq, prop.rst in doc/sphinxman/source. These have arguments in the correct order. Rearrange the argument order in the docstrings of the respective functions in share/python/driver.py; - [ ] modify section ""PSI variables & return values"" in doc/sphinxman/source/psithoninput.rst; - separate out the last paragraph into a new section ""return values""; - include in it the gist of the signatures description at http://forum.psicode.org/t/detecting-optimization-failure/203/4?u=loriab .; - also mention getting G & H back as return values or extracting them from Wavefunction and a couple things you can do with them like print_out(), rms(), convert to np.array",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/352
https://github.com/psi4/psi4/issues/352:503,Performance,optimiz,optimization-failure,503,"- [ ] Examine the autofunction signatures in energy, opt, freq, prop.rst in doc/sphinxman/source. These have arguments in the correct order. Rearrange the argument order in the docstrings of the respective functions in share/python/driver.py; - [ ] modify section ""PSI variables & return values"" in doc/sphinxman/source/psithoninput.rst; - separate out the last paragraph into a new section ""return values""; - include in it the gist of the signatures description at http://forum.psicode.org/t/detecting-optimization-failure/203/4?u=loriab .; - also mention getting G & H back as return values or extracting them from Wavefunction and a couple things you can do with them like print_out(), rms(), convert to np.array",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/352
https://github.com/psi4/psi4/issues/352:493,Safety,detect,detecting-optimization-failure,493,"- [ ] Examine the autofunction signatures in energy, opt, freq, prop.rst in doc/sphinxman/source. These have arguments in the correct order. Rearrange the argument order in the docstrings of the respective functions in share/python/driver.py; - [ ] modify section ""PSI variables & return values"" in doc/sphinxman/source/psithoninput.rst; - separate out the last paragraph into a new section ""return values""; - include in it the gist of the signatures description at http://forum.psicode.org/t/detecting-optimization-failure/203/4?u=loriab .; - also mention getting G & H back as return values or extracting them from Wavefunction and a couple things you can do with them like print_out(), rms(), convert to np.array",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/352
https://github.com/psi4/psi4/issues/353:28,Energy Efficiency,energy,energy,28,"- [ ] Strongly suspect ""def energy"" examples 4 & 5 in share/python/driver.py don't work or don't work as advertized. test. if fail, see if can get working by wfn-passing; - [ ] depending on previous findings, either document (example in previous would do) what used to be ""bypass_scf"" in action or purge it from docs and driver and create new ticket to make it work again.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/353
https://github.com/psi4/psi4/issues/353:177,Integrability,depend,depending,177,"- [ ] Strongly suspect ""def energy"" examples 4 & 5 in share/python/driver.py don't work or don't work as advertized. test. if fail, see if can get working by wfn-passing; - [ ] depending on previous findings, either document (example in previous would do) what used to be ""bypass_scf"" in action or purge it from docs and driver and create new ticket to make it work again.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/353
https://github.com/psi4/psi4/issues/353:117,Testability,test,test,117,"- [ ] Strongly suspect ""def energy"" examples 4 & 5 in share/python/driver.py don't work or don't work as advertized. test. if fail, see if can get working by wfn-passing; - [ ] depending on previous findings, either document (example in previous would do) what used to be ""bypass_scf"" in action or purge it from docs and driver and create new ticket to make it work again.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/353
https://github.com/psi4/psi4/pull/354:16,Deployability,update,update,16,## Description. update docs and driver in prep for psiworkday; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/354
https://github.com/psi4/psi4/issues/355:339,Energy Efficiency,green,green,339,"It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!. Who dares to decouple libint from our build system such that it could become a detectable `ExternalProject_Add` CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/355
https://github.com/psi4/psi4/issues/355:374,Energy Efficiency,energy,energy,374,"It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!. Who dares to decouple libint from our build system such that it could become a detectable `ExternalProject_Add` CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/355
https://github.com/psi4/psi4/issues/355:470,Safety,detect,detectable,470,"It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!. Who dares to decouple libint from our build system such that it could become a detectable `ExternalProject_Add` CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/355
https://github.com/psi4/psi4/issues/355:59,Testability,test,testing,59,"It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!. Who dares to decouple libint from our build system such that it could become a detectable `ExternalProject_Add` CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/355
https://github.com/psi4/psi4/issues/355:265,Testability,test,test,265,"It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!. Who dares to decouple libint from our build system such that it could become a detectable `ExternalProject_Add` CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/355
https://github.com/psi4/psi4/issues/357:91,Modifiability,extend,extend,91,"Search the code for units. Modify as needed accordint to principles below. Don't forget to extend table lines if needed; - [x] `[Eh]` _may_ go unlabeled, but not recommended (future pass).; - [x] If more than one units is printed or unit is _not_ `[Eh]` it must have a label.; - [x] `[Eh]`, not `[Ha]` or `[H]`; - [x] all units in square brackets; - [x] use parentheses if needed and space for multiplication, e.g., `[kJ/(mol K)]`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/357
https://github.com/psi4/psi4/pull/358:45,Modifiability,plugin,plugin,45,## Description. With this change `psi4 --new-plugin` now creates `Makefile.conda`.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] Add `Makefile.conda` and fetch CMAKE_INSTALL_PREFIX; ## Status; - [X] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/358
https://github.com/psi4/psi4/pull/360:440,Deployability,update,updated,440,"## Description. This PR addresses psi4/#249 in that it makes the docsctrings consistent with the procedures dict.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] The manual now reflects all energy() procedures; - [ ] Some procedures don't have explicit manual entries (DMRG, CASSCF, etc). I understand this is not a top priority, but when they are done, the links in the docstrings table should be updated.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/360
https://github.com/psi4/psi4/pull/360:232,Energy Efficiency,energy,energy,232,"## Description. This PR addresses psi4/#249 in that it makes the docsctrings consistent with the procedures dict.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] The manual now reflects all energy() procedures; - [ ] Some procedures don't have explicit manual entries (DMRG, CASSCF, etc). I understand this is not a top priority, but when they are done, the links in the docstrings table should be updated.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/360
https://github.com/psi4/psi4/pull/361:16,Deployability,Update,Update,16,"## Description. Update of the scratch directory documentation.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch; - [x] csh/bash example of setting PSI_SCRATCH; - [x] Example of a threaded job (needs approval); - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.; ## Questions; - [x] @loriab, @dgasmith : Could you have a look at the PBS job file example section and tell me if that looks convenient ?; - [x] @loriab : I actually don't understand what you mean by your last point. Does https://github.com/psi4/psi4/blob/master/samples/tu1-h2o-energy/input.dat need an update ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/361
https://github.com/psi4/psi4/pull/361:872,Deployability,update,update,872,"## Description. Update of the scratch directory documentation.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch; - [x] csh/bash example of setting PSI_SCRATCH; - [x] Example of a threaded job (needs approval); - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.; ## Questions; - [x] @loriab, @dgasmith : Could you have a look at the PBS job file example section and tell me if that looks convenient ?; - [x] @loriab : I actually don't understand what you mean by your last point. Does https://github.com/psi4/psi4/blob/master/samples/tu1-h2o-energy/input.dat need an update ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/361
https://github.com/psi4/psi4/pull/361:847,Energy Efficiency,energy,energy,847,"## Description. Update of the scratch directory documentation.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch; - [x] csh/bash example of setting PSI_SCRATCH; - [x] Example of a threaded job (needs approval); - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.; ## Questions; - [x] @loriab, @dgasmith : Could you have a look at the PBS job file example section and tell me if that looks convenient ?; - [x] @loriab : I actually don't understand what you mean by your last point. Does https://github.com/psi4/psi4/blob/master/samples/tu1-h2o-energy/input.dat need an update ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/361
https://github.com/psi4/psi4/pull/363:104,Deployability,Update,Update,104,"## Description. License and unit printing overhaul from the Psi4 Meeting on 4/19/2016.; ## Todos; - [x] Update the GNU license for every file, finishes and closes #213 ; - [x] Adds script to always in /share/scripts to update these headers; - [x] Also contains the unit handling update, closes #357; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/363
https://github.com/psi4/psi4/pull/363:219,Deployability,update,update,219,"## Description. License and unit printing overhaul from the Psi4 Meeting on 4/19/2016.; ## Todos; - [x] Update the GNU license for every file, finishes and closes #213 ; - [x] Adds script to always in /share/scripts to update these headers; - [x] Also contains the unit handling update, closes #357; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/363
https://github.com/psi4/psi4/pull/363:279,Deployability,update,update,279,"## Description. License and unit printing overhaul from the Psi4 Meeting on 4/19/2016.; ## Todos; - [x] Update the GNU license for every file, finishes and closes #213 ; - [x] Adds script to always in /share/scripts to update these headers; - [x] Also contains the unit handling update, closes #357; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/363
https://github.com/psi4/psi4/pull/364:260,Deployability,update,update,260,"## Description. docs and licenses and castup, oh my; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] few tweaks to the energy/grad docstring tables, #249 ; - [x] improve molecule and fn return docs, #351 & #352 ; - [x] update licenses in plugin template dir, since those are mixed py/c++ and awkward to do by script; - [x] hesitant replacement of cast-up with pyconstruct basis machinery. no differences detected in relevant output files (castup1/2/3, sapt2/4/5, pywrap-all), #285 ; - [x] do `[s]` on seconds in sapt; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/364
https://github.com/psi4/psi4/pull/364:160,Energy Efficiency,energy,energy,160,"## Description. docs and licenses and castup, oh my; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] few tweaks to the energy/grad docstring tables, #249 ; - [x] improve molecule and fn return docs, #351 & #352 ; - [x] update licenses in plugin template dir, since those are mixed py/c++ and awkward to do by script; - [x] hesitant replacement of cast-up with pyconstruct basis machinery. no differences detected in relevant output files (castup1/2/3, sapt2/4/5, pywrap-all), #285 ; - [x] do `[s]` on seconds in sapt; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/364
https://github.com/psi4/psi4/pull/364:279,Modifiability,plugin,plugin,279,"## Description. docs and licenses and castup, oh my; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] few tweaks to the energy/grad docstring tables, #249 ; - [x] improve molecule and fn return docs, #351 & #352 ; - [x] update licenses in plugin template dir, since those are mixed py/c++ and awkward to do by script; - [x] hesitant replacement of cast-up with pyconstruct basis machinery. no differences detected in relevant output files (castup1/2/3, sapt2/4/5, pywrap-all), #285 ; - [x] do `[s]` on seconds in sapt; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/364
https://github.com/psi4/psi4/pull/364:445,Safety,detect,detected,445,"## Description. docs and licenses and castup, oh my; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] few tweaks to the energy/grad docstring tables, #249 ; - [x] improve molecule and fn return docs, #351 & #352 ; - [x] update licenses in plugin template dir, since those are mixed py/c++ and awkward to do by script; - [x] hesitant replacement of cast-up with pyconstruct basis machinery. no differences detected in relevant output files (castup1/2/3, sapt2/4/5, pywrap-all), #285 ; - [x] do `[s]` on seconds in sapt; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/364
https://github.com/psi4/psi4/pull/365:529,Availability,error,error,529,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/365
https://github.com/psi4/psi4/pull/365:28,Deployability,update,updates,28,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/365
https://github.com/psi4/psi4/pull/365:401,Integrability,wrap,wrappers,401,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/365
https://github.com/psi4/psi4/pull/365:622,Safety,avoid,avoid,622,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/365
https://github.com/psi4/psi4/pull/365:845,Testability,test,test,845,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/365
https://github.com/psi4/psi4/pull/366:270,Deployability,update,updates,270,"## Description. Documentation for plugin creation using binary distribution (on linux only).; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] Documents setup of conda envs (w gcc and openblas), compilation of Makefile.conda, and updates documentation of --new-plugin with `+ambit` keyword.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/366
https://github.com/psi4/psi4/pull/366:34,Modifiability,plugin,plugin,34,"## Description. Documentation for plugin creation using binary distribution (on linux only).; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] Documents setup of conda envs (w gcc and openblas), compilation of Makefile.conda, and updates documentation of --new-plugin with `+ambit` keyword.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/366
https://github.com/psi4/psi4/pull/366:301,Modifiability,plugin,plugin,301,"## Description. Documentation for plugin creation using binary distribution (on linux only).; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] Documents setup of conda envs (w gcc and openblas), compilation of Makefile.conda, and updates documentation of --new-plugin with `+ambit` keyword.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/366
https://github.com/psi4/psi4/issues/367:818,Availability,error,error,818,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3051,Availability,robust,robust,3051,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:4063,Availability,avail,available,4063,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:38,Deployability,release,release,38,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:84,Deployability,update,update,84,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:207,Deployability,release,release,207,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:240,Deployability,release,release,240,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:1897,Deployability,upgrade,upgrades,1897,"ser input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:2096,Deployability,continuous,continuous,2096,"ction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:2107,Deployability,integrat,integration,2107,"ction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:390,Energy Efficiency,energy,energy,390,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:633,Energy Efficiency,energy,energy,633,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:647,Energy Efficiency,energy,energy,647,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:2413,Energy Efficiency,charge,charges,2413,"ction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3522,Energy Efficiency,energy,energy,3522,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:468,Integrability,wrap,wrapper,468,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:550,Integrability,wrap,wrapper,550,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:1293,Integrability,interface,interface,1293,"Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scala",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:2107,Integrability,integrat,integration,2107,"ction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3442,Integrability,interface,interface,3442,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3549,Integrability,interface,interface,3549,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:4315,Integrability,depend,dependencies,4315,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:1178,Modifiability,enhance,enhancements,1178,"nt, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quali",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:1536,Modifiability,refactor,refactored,1536,"ser input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:422,Performance,optimiz,optimize,422,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:2695,Performance,optimiz,optimized,2695,"ction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - All code improvements now go through a review process on `github.com/psi4/psi4` in addition to a continuous integration server to ensure code quality; ## New methods; - Added quadratic convergence algorithms for RHF, UHF, ROHF; - Added DF-CCSD gradients (RHF references); - Added conventional and DF RASSCF and CASSCF energies; - Added X2C scalar relativistic corrections; - Added QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:2927,Performance,optimiz,optimization,2927,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3058,Performance,optimiz,optimization,3058,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3134,Performance,optimiz,optimizations,3134,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3259,Performance,optimiz,optimizations,3259,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3314,Performance,optimiz,optimizations,3314,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3563,Performance,Perform,Performance,3563,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3575,Performance,optimiz,optimization,3575,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3624,Performance,optimiz,optimizing,3624,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3697,Performance,perform,performance,3697,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:3859,Performance,optimiz,optimizer,3859,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:4253,Performance,optimiz,optimization,4253,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/issues/367:804,Usability,user-friendly,user-friendly,804,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/367
https://github.com/psi4/psi4/pull/369:49,Integrability,depend,dependence,49,## Description. Removes `sointegral_twobody.h`'s dependence on `mpi_wrapper.h` and `local.h`. Also removes some MADNESS stuff that was missed originally.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/369
https://github.com/psi4/psi4/pull/370:168,Deployability,configurat,configuration,168,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:198,Deployability,update,updated,198,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:235,Deployability,update,updated,235,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:379,Energy Efficiency,energy,energy,379,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:16,Modifiability,plugin,plugins,16,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:64,Modifiability,plugin,plugin,64,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:168,Modifiability,config,configuration,168,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:216,Modifiability,plugin,plugin,216,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/pull/370:369,Usability,clear,clear,369,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/370
https://github.com/psi4/psi4/issues/371:271,Availability,error,error,271,"The following either gives `NaN` energy or (positive) 60,000 [Eh] depending on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ seem to check out, did not try larger. Other guesses, `s_tolerence`, or fitting basis appear to have no effect on this error. UHF works fine. ```; molecule mol {; 0 2; C -2.83891 -0.84747 -0.20778; N -2.06959 -0.27604 0.77905; C -0.85937 -0.82512 0.74757; N -0.82980 -1.74677 -0.21226; C -2.05910 -1.77487 -0.83179; C -2.45490 0.86620 1.59959; C 0.35903 -2.49473 -0.61265; F -1.01767 1.46174 -1.11980; B 0.28985 1.63764 -0.63648; F 0.23738 1.82826 0.77419; F 0.89453 2.73957 -1.24020; F 1.05039 0.46734 -0.88673; H -0.02604 -0.54755 1.38339; H -2.27287 -2.45330 -1.64959; H -3.86751 -0.55086 -0.37733; H -3.45079 0.68580 2.01748; H -1.72185 0.98138 2.40249; H -2.44673 1.75972 0.96603; H 0.98379 -1.85263 -1.24323; H 0.91655 -2.78676 0.28358; H 0.03922 -3.39046 -1.15377; C 2.81822 0.12352 1.52490; C 3.26768 -0.78277 0.56145; H 3.28632 0.11977 2.50813; H 2.01109 0.81253 1.27433; N 3.64537 -1.55240 -0.23308; }. set {; basis aug-cc-pVQZ; scf_type df; guess gwh; reference rohf; }. energy('SCF'); ```. An example of initial convergence can be seen for UHF/aQZ:. ```; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -716.29320215568873 -7.16293e+02 1.25967e-02; @DF-UHF iter 2: 27.48017620380119 7.43773e+02 1.97120e-02 DIIS; @DF-UHF iter 3: -561.81810445462588 -5.89298e+02 9.53326e-03 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/371
https://github.com/psi4/psi4/issues/371:33,Energy Efficiency,energy,energy,33,"The following either gives `NaN` energy or (positive) 60,000 [Eh] depending on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ seem to check out, did not try larger. Other guesses, `s_tolerence`, or fitting basis appear to have no effect on this error. UHF works fine. ```; molecule mol {; 0 2; C -2.83891 -0.84747 -0.20778; N -2.06959 -0.27604 0.77905; C -0.85937 -0.82512 0.74757; N -0.82980 -1.74677 -0.21226; C -2.05910 -1.77487 -0.83179; C -2.45490 0.86620 1.59959; C 0.35903 -2.49473 -0.61265; F -1.01767 1.46174 -1.11980; B 0.28985 1.63764 -0.63648; F 0.23738 1.82826 0.77419; F 0.89453 2.73957 -1.24020; F 1.05039 0.46734 -0.88673; H -0.02604 -0.54755 1.38339; H -2.27287 -2.45330 -1.64959; H -3.86751 -0.55086 -0.37733; H -3.45079 0.68580 2.01748; H -1.72185 0.98138 2.40249; H -2.44673 1.75972 0.96603; H 0.98379 -1.85263 -1.24323; H 0.91655 -2.78676 0.28358; H 0.03922 -3.39046 -1.15377; C 2.81822 0.12352 1.52490; C 3.26768 -0.78277 0.56145; H 3.28632 0.11977 2.50813; H 2.01109 0.81253 1.27433; N 3.64537 -1.55240 -0.23308; }. set {; basis aug-cc-pVQZ; scf_type df; guess gwh; reference rohf; }. energy('SCF'); ```. An example of initial convergence can be seen for UHF/aQZ:. ```; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -716.29320215568873 -7.16293e+02 1.25967e-02; @DF-UHF iter 2: 27.48017620380119 7.43773e+02 1.97120e-02 DIIS; @DF-UHF iter 3: -561.81810445462588 -5.89298e+02 9.53326e-03 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/371
https://github.com/psi4/psi4/issues/371:1134,Energy Efficiency,energy,energy,1134,"The following either gives `NaN` energy or (positive) 60,000 [Eh] depending on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ seem to check out, did not try larger. Other guesses, `s_tolerence`, or fitting basis appear to have no effect on this error. UHF works fine. ```; molecule mol {; 0 2; C -2.83891 -0.84747 -0.20778; N -2.06959 -0.27604 0.77905; C -0.85937 -0.82512 0.74757; N -0.82980 -1.74677 -0.21226; C -2.05910 -1.77487 -0.83179; C -2.45490 0.86620 1.59959; C 0.35903 -2.49473 -0.61265; F -1.01767 1.46174 -1.11980; B 0.28985 1.63764 -0.63648; F 0.23738 1.82826 0.77419; F 0.89453 2.73957 -1.24020; F 1.05039 0.46734 -0.88673; H -0.02604 -0.54755 1.38339; H -2.27287 -2.45330 -1.64959; H -3.86751 -0.55086 -0.37733; H -3.45079 0.68580 2.01748; H -1.72185 0.98138 2.40249; H -2.44673 1.75972 0.96603; H 0.98379 -1.85263 -1.24323; H 0.91655 -2.78676 0.28358; H 0.03922 -3.39046 -1.15377; C 2.81822 0.12352 1.52490; C 3.26768 -0.78277 0.56145; H 3.28632 0.11977 2.50813; H 2.01109 0.81253 1.27433; N 3.64537 -1.55240 -0.23308; }. set {; basis aug-cc-pVQZ; scf_type df; guess gwh; reference rohf; }. energy('SCF'); ```. An example of initial convergence can be seen for UHF/aQZ:. ```; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -716.29320215568873 -7.16293e+02 1.25967e-02; @DF-UHF iter 2: 27.48017620380119 7.43773e+02 1.97120e-02 DIIS; @DF-UHF iter 3: -561.81810445462588 -5.89298e+02 9.53326e-03 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/371
https://github.com/psi4/psi4/issues/371:1225,Energy Efficiency,Energy,Energy,1225,"The following either gives `NaN` energy or (positive) 60,000 [Eh] depending on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ seem to check out, did not try larger. Other guesses, `s_tolerence`, or fitting basis appear to have no effect on this error. UHF works fine. ```; molecule mol {; 0 2; C -2.83891 -0.84747 -0.20778; N -2.06959 -0.27604 0.77905; C -0.85937 -0.82512 0.74757; N -0.82980 -1.74677 -0.21226; C -2.05910 -1.77487 -0.83179; C -2.45490 0.86620 1.59959; C 0.35903 -2.49473 -0.61265; F -1.01767 1.46174 -1.11980; B 0.28985 1.63764 -0.63648; F 0.23738 1.82826 0.77419; F 0.89453 2.73957 -1.24020; F 1.05039 0.46734 -0.88673; H -0.02604 -0.54755 1.38339; H -2.27287 -2.45330 -1.64959; H -3.86751 -0.55086 -0.37733; H -3.45079 0.68580 2.01748; H -1.72185 0.98138 2.40249; H -2.44673 1.75972 0.96603; H 0.98379 -1.85263 -1.24323; H 0.91655 -2.78676 0.28358; H 0.03922 -3.39046 -1.15377; C 2.81822 0.12352 1.52490; C 3.26768 -0.78277 0.56145; H 3.28632 0.11977 2.50813; H 2.01109 0.81253 1.27433; N 3.64537 -1.55240 -0.23308; }. set {; basis aug-cc-pVQZ; scf_type df; guess gwh; reference rohf; }. energy('SCF'); ```. An example of initial convergence can be seen for UHF/aQZ:. ```; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -716.29320215568873 -7.16293e+02 1.25967e-02; @DF-UHF iter 2: 27.48017620380119 7.43773e+02 1.97120e-02 DIIS; @DF-UHF iter 3: -561.81810445462588 -5.89298e+02 9.53326e-03 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/371
https://github.com/psi4/psi4/issues/371:66,Integrability,depend,depending,66,"The following either gives `NaN` energy or (positive) 60,000 [Eh] depending on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ seem to check out, did not try larger. Other guesses, `s_tolerence`, or fitting basis appear to have no effect on this error. UHF works fine. ```; molecule mol {; 0 2; C -2.83891 -0.84747 -0.20778; N -2.06959 -0.27604 0.77905; C -0.85937 -0.82512 0.74757; N -0.82980 -1.74677 -0.21226; C -2.05910 -1.77487 -0.83179; C -2.45490 0.86620 1.59959; C 0.35903 -2.49473 -0.61265; F -1.01767 1.46174 -1.11980; B 0.28985 1.63764 -0.63648; F 0.23738 1.82826 0.77419; F 0.89453 2.73957 -1.24020; F 1.05039 0.46734 -0.88673; H -0.02604 -0.54755 1.38339; H -2.27287 -2.45330 -1.64959; H -3.86751 -0.55086 -0.37733; H -3.45079 0.68580 2.01748; H -1.72185 0.98138 2.40249; H -2.44673 1.75972 0.96603; H 0.98379 -1.85263 -1.24323; H 0.91655 -2.78676 0.28358; H 0.03922 -3.39046 -1.15377; C 2.81822 0.12352 1.52490; C 3.26768 -0.78277 0.56145; H 3.28632 0.11977 2.50813; H 2.01109 0.81253 1.27433; N 3.64537 -1.55240 -0.23308; }. set {; basis aug-cc-pVQZ; scf_type df; guess gwh; reference rohf; }. energy('SCF'); ```. An example of initial convergence can be seen for UHF/aQZ:. ```; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -716.29320215568873 -7.16293e+02 1.25967e-02; @DF-UHF iter 2: 27.48017620380119 7.43773e+02 1.97120e-02 DIIS; @DF-UHF iter 3: -561.81810445462588 -5.89298e+02 9.53326e-03 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/371
https://github.com/psi4/psi4/pull/372:317,Deployability,update,updated,317,"## Description. Modernization, efficiency, and flexibility improvements for the CI code.; ## Todos; - [x] RSP Diagonalization now writes out CIVectors for OPDM, TPDM, etc uses. Fixes #83.; - [x] Removes several deprecated features such as exporting of CI Vectors in an old format.; - [x] The Numpy interface has been updated. Now uses a single `std::vector` instead of a `double *`. This change has been propagated throughout the entire code.; - [x] More CI routines have been exported to the python layer allowing the creation of complex python-based CI methods.; - [x] Adds a new Matrix routine that removes irreps.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/372
https://github.com/psi4/psi4/pull/372:298,Integrability,interface,interface,298,"## Description. Modernization, efficiency, and flexibility improvements for the CI code.; ## Todos; - [x] RSP Diagonalization now writes out CIVectors for OPDM, TPDM, etc uses. Fixes #83.; - [x] Removes several deprecated features such as exporting of CI Vectors in an old format.; - [x] The Numpy interface has been updated. Now uses a single `std::vector` instead of a `double *`. This change has been propagated throughout the entire code.; - [x] More CI routines have been exported to the python layer allowing the creation of complex python-based CI methods.; - [x] Adds a new Matrix routine that removes irreps.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/372
https://github.com/psi4/psi4/pull/372:458,Integrability,rout,routines,458,"## Description. Modernization, efficiency, and flexibility improvements for the CI code.; ## Todos; - [x] RSP Diagonalization now writes out CIVectors for OPDM, TPDM, etc uses. Fixes #83.; - [x] Removes several deprecated features such as exporting of CI Vectors in an old format.; - [x] The Numpy interface has been updated. Now uses a single `std::vector` instead of a `double *`. This change has been propagated throughout the entire code.; - [x] More CI routines have been exported to the python layer allowing the creation of complex python-based CI methods.; - [x] Adds a new Matrix routine that removes irreps.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/372
https://github.com/psi4/psi4/pull/372:589,Integrability,rout,routine,589,"## Description. Modernization, efficiency, and flexibility improvements for the CI code.; ## Todos; - [x] RSP Diagonalization now writes out CIVectors for OPDM, TPDM, etc uses. Fixes #83.; - [x] Removes several deprecated features such as exporting of CI Vectors in an old format.; - [x] The Numpy interface has been updated. Now uses a single `std::vector` instead of a `double *`. This change has been propagated throughout the entire code.; - [x] More CI routines have been exported to the python layer allowing the creation of complex python-based CI methods.; - [x] Adds a new Matrix routine that removes irreps.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/372
https://github.com/psi4/psi4/pull/373:59,Integrability,interface,interfaces,59,"## Description. Attaches `to_array` and `from_array` NumPy interfaces to the `Matrix` and `Vector` class and includes irrep support. ; ## Questions; - [x] NumPy does not handle ""irreps"" well as all internal dimensions of nd-array's must have the same shape. Best solution that I have come up with is to convert a Psi4 object with irreps to a list of NumPy arrays. Zero dimensional irreps are support by empty NumPy arrays so that circular converting works. This does make things somewhat awkward as your return datatype depends on the irreps of the Psi4 object. The other option is to remove the irreps from the Psi4 object so that all Psi4 Matrices are dense 2D and all Vectors are dense 1D. Wastes some space, but anything handled by NumPy should be small anyways.; - [x] Adds `to_array` and `from_array` to `Matrix` and `Vector` objects.; - [x] Adds `to_list` and `from_list` to `Dimension` objects.; - [x] Looks like CI Natural orbitals from user densities was accidentally here as well.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/373
https://github.com/psi4/psi4/pull/373:520,Integrability,depend,depends,520,"## Description. Attaches `to_array` and `from_array` NumPy interfaces to the `Matrix` and `Vector` class and includes irrep support. ; ## Questions; - [x] NumPy does not handle ""irreps"" well as all internal dimensions of nd-array's must have the same shape. Best solution that I have come up with is to convert a Psi4 object with irreps to a list of NumPy arrays. Zero dimensional irreps are support by empty NumPy arrays so that circular converting works. This does make things somewhat awkward as your return datatype depends on the irreps of the Psi4 object. The other option is to remove the irreps from the Psi4 object so that all Psi4 Matrices are dense 2D and all Vectors are dense 1D. Wastes some space, but anything handled by NumPy should be small anyways.; - [x] Adds `to_array` and `from_array` to `Matrix` and `Vector` objects.; - [x] Adds `to_list` and `from_list` to `Dimension` objects.; - [x] Looks like CI Natural orbitals from user densities was accidentally here as well.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/373
https://github.com/psi4/psi4/pull/374:151,Energy Efficiency,energy,energy,151,"## Description. Adds the ability to use delta corrections for the CBS Wrapper's string-based input. For example, the following now works:. ``` python; energy('MP2/cc-pV[TQ]Z + D:CCSD(T)/cc-pVDZ'); gradient('MP2/cc-pV[TQ]Z + D:MP3/cc-pV[DT]Z'); opt('CISD/cc-pV[TQ]Z + D:CISDTQ/cc-pVDZ'); etc; ```. Note that only a single delta is currently supported. We can consider multiple delta's in a string representation if there is an obvious way to do it. Ultimately, there is some notion that the string based parser should be fairly bare bones due to the relative inflexibility of the input. If required, the user can always use the `cbs` function directly for exactly control over the computation.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/374
https://github.com/psi4/psi4/pull/374:70,Integrability,Wrap,Wrapper,70,"## Description. Adds the ability to use delta corrections for the CBS Wrapper's string-based input. For example, the following now works:. ``` python; energy('MP2/cc-pV[TQ]Z + D:CCSD(T)/cc-pVDZ'); gradient('MP2/cc-pV[TQ]Z + D:MP3/cc-pV[DT]Z'); opt('CISD/cc-pV[TQ]Z + D:CISDTQ/cc-pVDZ'); etc; ```. Note that only a single delta is currently supported. We can consider multiple delta's in a string representation if there is an obvious way to do it. Ultimately, there is some notion that the string based parser should be fairly bare bones due to the relative inflexibility of the input. If required, the user can always use the `cbs` function directly for exactly control over the computation.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/374
https://github.com/psi4/psi4/pull/375:21,Usability,clear,clearing,21,## Description. Just clearing up old changes in a branch; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/375
https://github.com/psi4/psi4/pull/377:297,Integrability,wrap,wrappers,297,"## Description. housekeeping; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] enables plugins to access wfn python only (w/o `psi4.wavefunction()`), if they're not needing it c-side; - [x] removes pyparsing.py that was pcmsolver legacy and cleans up a few wrappers refs; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/377
https://github.com/psi4/psi4/pull/377:127,Modifiability,plugin,plugins,127,"## Description. housekeeping; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] enables plugins to access wfn python only (w/o `psi4.wavefunction()`), if they're not needing it c-side; - [x] removes pyparsing.py that was pcmsolver legacy and cleans up a few wrappers refs; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/377
https://github.com/psi4/psi4/pull/377:138,Security,access,access,138,"## Description. housekeeping; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] enables plugins to access wfn python only (w/o `psi4.wavefunction()`), if they're not needing it c-side; - [x] removes pyparsing.py that was pcmsolver legacy and cleans up a few wrappers refs; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/377
https://github.com/psi4/psi4/pull/378:21,Modifiability,config,config,21,## Description. psi4-config had PYTHON_INTERPRETER rather than PYTHON_EXECUTABLE. I need this for my v2rdm plugin to compile with @loriab 's fancy configure script.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/378
https://github.com/psi4/psi4/pull/378:107,Modifiability,plugin,plugin,107,## Description. psi4-config had PYTHON_INTERPRETER rather than PYTHON_EXECUTABLE. I need this for my v2rdm plugin to compile with @loriab 's fancy configure script.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/378
https://github.com/psi4/psi4/pull/378:147,Modifiability,config,configure,147,## Description. psi4-config had PYTHON_INTERPRETER rather than PYTHON_EXECUTABLE. I need this for my v2rdm plugin to compile with @loriab 's fancy configure script.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/378
https://github.com/psi4/psi4/pull/383:372,Availability,error,error,372,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/pull/383:474,Availability,error,error,474,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/pull/383:623,Deployability,install,installed,623,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/pull/383:818,Deployability,install,installation,818,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/pull/383:935,Deployability,install,install,935,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/pull/383:1078,Deployability,patch,patch,1078,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/pull/383:449,Testability,test,test,449,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/383
https://github.com/psi4/psi4/issues/384:52,Deployability,release,release,52,"Are you interested in having DMRG-CASPT2 in the 1.0 release or do you want to stick to DMRG-SCF?. If you would like to, I can release an intermediate version v1.7, and you can use the plugin (or copy parts of) https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrg.cc to run the CASPT2 calculations...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/384
https://github.com/psi4/psi4/issues/384:126,Deployability,release,release,126,"Are you interested in having DMRG-CASPT2 in the 1.0 release or do you want to stick to DMRG-SCF?. If you would like to, I can release an intermediate version v1.7, and you can use the plugin (or copy parts of) https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrg.cc to run the CASPT2 calculations...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/384
https://github.com/psi4/psi4/issues/384:184,Modifiability,plugin,plugin,184,"Are you interested in having DMRG-CASPT2 in the 1.0 release or do you want to stick to DMRG-SCF?. If you would like to, I can release an intermediate version v1.7, and you can use the plugin (or copy parts of) https://github.com/SebWouters/CheMPS2/blob/master/integrals/psi4plugins/dmrg.cc to run the CASPT2 calculations...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/384
https://github.com/psi4/psi4/issues/385:224,Availability,down,down,224,"We've seen this a couple times on TravisCI, then I got it last night on psinet (unreproducible, of course), now @polikw reports it with the binary 1.0rc3 . No rush, just someone should get to cross a ticket off when tracked down.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/385
https://github.com/psi4/psi4/pull/386:247,Testability,log,logic,247,"## Description. Adds flag to tell deriv() that I've already backtranformed the opdm/tpdm. Also, I can't figure out how to keep deriv() from trying to evaluate reference contributions to the gradient, even though I have none, so I added additional logic to check if the pointers to the reference containers are null. ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/386
https://github.com/psi4/psi4/pull/387:705,Availability,avail,available,705,"## Description. Finally, some modernization of the PK JK object. I coded everything trying to maximize code reuse and using polymorphism where it would be good, but if you have any suggestions on the code organization please let me know.; Traditionally, PK denotes the integral supermatrices stored on disk. Here I use it more generally for the class of algorithm storing integrals somewhere instead of recomputing them.; ## Caution:. Some older commits contain additional attempts at algorithms that were deleted since (for being inefficient). You may want to review the most recent commits only.; ## Todos. Notable points that this PR has accomplished:; - [x] In-core PK algorithm when enough memory is available; - [x] ""Reorder"" PK algorithm: the PK supermatrices are directly written on file without any intermediates by reordering the integral computation (thanks to @dgasmith for discussion), good for large to medium memory; - [x] ""Yoshimine"" PK algorithm: pre-sorts integrals on disk, similar to more traditional algorithm. Best for low memory, otherwise quite slow.; - [x] Automatic selection of the algorithm depending on available memory; - [x] wK long-range integrals are also handled; - [x] Non-symmetric density matrices are handled ; ## Questions; - [x] I'd like this pull request to stay unmerged for a few days so everyone who wants to have a look at it has some time to do so. (@andysim, @jturney ?); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/387
https://github.com/psi4/psi4/pull/387:1132,Availability,avail,available,1132,"## Description. Finally, some modernization of the PK JK object. I coded everything trying to maximize code reuse and using polymorphism where it would be good, but if you have any suggestions on the code organization please let me know.; Traditionally, PK denotes the integral supermatrices stored on disk. Here I use it more generally for the class of algorithm storing integrals somewhere instead of recomputing them.; ## Caution:. Some older commits contain additional attempts at algorithms that were deleted since (for being inefficient). You may want to review the most recent commits only.; ## Todos. Notable points that this PR has accomplished:; - [x] In-core PK algorithm when enough memory is available; - [x] ""Reorder"" PK algorithm: the PK supermatrices are directly written on file without any intermediates by reordering the integral computation (thanks to @dgasmith for discussion), good for large to medium memory; - [x] ""Yoshimine"" PK algorithm: pre-sorts integrals on disk, similar to more traditional algorithm. Best for low memory, otherwise quite slow.; - [x] Automatic selection of the algorithm depending on available memory; - [x] wK long-range integrals are also handled; - [x] Non-symmetric density matrices are handled ; ## Questions; - [x] I'd like this pull request to stay unmerged for a few days so everyone who wants to have a look at it has some time to do so. (@andysim, @jturney ?); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/387
https://github.com/psi4/psi4/pull/387:1119,Integrability,depend,depending,1119,"## Description. Finally, some modernization of the PK JK object. I coded everything trying to maximize code reuse and using polymorphism where it would be good, but if you have any suggestions on the code organization please let me know.; Traditionally, PK denotes the integral supermatrices stored on disk. Here I use it more generally for the class of algorithm storing integrals somewhere instead of recomputing them.; ## Caution:. Some older commits contain additional attempts at algorithms that were deleted since (for being inefficient). You may want to review the most recent commits only.; ## Todos. Notable points that this PR has accomplished:; - [x] In-core PK algorithm when enough memory is available; - [x] ""Reorder"" PK algorithm: the PK supermatrices are directly written on file without any intermediates by reordering the integral computation (thanks to @dgasmith for discussion), good for large to medium memory; - [x] ""Yoshimine"" PK algorithm: pre-sorts integrals on disk, similar to more traditional algorithm. Best for low memory, otherwise quite slow.; - [x] Automatic selection of the algorithm depending on available memory; - [x] wK long-range integrals are also handled; - [x] Non-symmetric density matrices are handled ; ## Questions; - [x] I'd like this pull request to stay unmerged for a few days so everyone who wants to have a look at it has some time to do so. (@andysim, @jturney ?); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/387
https://github.com/psi4/psi4/pull/387:124,Modifiability,polymorphi,polymorphism,124,"## Description. Finally, some modernization of the PK JK object. I coded everything trying to maximize code reuse and using polymorphism where it would be good, but if you have any suggestions on the code organization please let me know.; Traditionally, PK denotes the integral supermatrices stored on disk. Here I use it more generally for the class of algorithm storing integrals somewhere instead of recomputing them.; ## Caution:. Some older commits contain additional attempts at algorithms that were deleted since (for being inefficient). You may want to review the most recent commits only.; ## Todos. Notable points that this PR has accomplished:; - [x] In-core PK algorithm when enough memory is available; - [x] ""Reorder"" PK algorithm: the PK supermatrices are directly written on file without any intermediates by reordering the integral computation (thanks to @dgasmith for discussion), good for large to medium memory; - [x] ""Yoshimine"" PK algorithm: pre-sorts integrals on disk, similar to more traditional algorithm. Best for low memory, otherwise quite slow.; - [x] Automatic selection of the algorithm depending on available memory; - [x] wK long-range integrals are also handled; - [x] Non-symmetric density matrices are handled ; ## Questions; - [x] I'd like this pull request to stay unmerged for a few days so everyone who wants to have a look at it has some time to do so. (@andysim, @jturney ?); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/387
https://github.com/psi4/psi4/pull/388:65,Deployability,update,updates,65,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/pull/388:400,Deployability,Update,Updated,400,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/pull/388:970,Modifiability,plugin,plugin,970,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/pull/388:470,Testability,test,test,470,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/pull/388:843,Testability,test,testing,843,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/pull/388:1117,Testability,test,test,1117,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/pull/388:266,Usability,clear,clear,266,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/388
https://github.com/psi4/psi4/issues/391:1772,Availability,error,error,1772,"ation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(bo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:2317,Availability,Error,Error,2317,"nergy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(boost::shared_ptr<psi::Wavefunction>, psi::Options&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:2357,Availability,Error,Error,2357,"nergy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(boost::shared_ptr<psi::Wavefunction>, psi::Options&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:84,Energy Efficiency,energy,energy,84,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:219,Energy Efficiency,Energy,Energy,219,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:260,Energy Efficiency,Energy,Energy,260,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:301,Energy Efficiency,Energy,Energy,301,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:516,Energy Efficiency,Energy,Energy,516,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:572,Energy Efficiency,Energy,Energy,572,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:623,Energy Efficiency,Energy,Energy,623,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:677,Energy Efficiency,Energy,Energy,677,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:732,Energy Efficiency,Energy,Energy,732,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:788,Energy Efficiency,Energy,Energy,788,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:836,Energy Efficiency,Energy,Energy,836,"I'm seeing a crash in cdomp2-2 for 1.0rc on Debian unstable:. ```; Computing CD-MP2 energy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:1954,Energy Efficiency,energy,energy,1954,"nergy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(boost::shared_ptr<psi::Wavefunction>, psi::Options&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:1980,Energy Efficiency,energy,energy,1980,"nergy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(boost::shared_ptr<psi::Wavefunction>, psi::Options&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/391:1121,Performance,Perform,Performing,1121,"rgy using SCF MOs (Canonical CD-MP2)...; =======================================================================; Nuclear Repulsion Energy (a.u.) : 25.59060766929188; CD-HF Energy (a.u.) : -129.25927206477397; REF Energy (a.u.) : -129.25927206477397; Alpha-Alpha Contribution (a.u.) : -0.03921205696199; Alpha-Beta Contribution (a.u.) : -0.20476196654188; Beta-Beta Contribution (a.u.) : -0.03692010667753; Scaled_SS Correlation Energy (a.u.): -0.02537738787984; Scaled_OS Correlation Energy (a.u.): -0.24571435985026; CD-SCS-MP2 Total Energy (a.u.) : -129.53036381250408; CD-SOS-MP2 Total Energy (a.u.) : -129.52546262127842; CD-SCSN-MP2 Total Energy (a.u.) : -129.39326467277954; CD-MP2 Correlation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/pyt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/391
https://github.com/psi4/psi4/issues/392:217,Availability,avail,available,217,"The `samples/example_psi4rc_file` file has. ```; psi4_io.set_default_path('/scratch/parrish/'); ```. as default, not commented out. Even though this is a sample file, it should maybe use `/tmp` or something generally available as default scratch directory, not a directory with a developer's name on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/392
https://github.com/psi4/psi4/issues/394:1336,Availability,failure,failure,1336,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/394:51,Energy Efficiency,energy,energy,51,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/394:393,Energy Efficiency,energy,energy,393,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/394:874,Energy Efficiency,energy,energy,874,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/394:930,Energy Efficiency,energy,energy,930,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/394:1015,Energy Efficiency,energy,energy,1015,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/issues/394:1282,Energy Efficiency,energy,energy,1282,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/394
https://github.com/psi4/psi4/pull/395:530,Availability,error,error,530,"## Description. Code used in the roa driver has been re-organized into a module `findif_response_utils`. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - ROA driver functions the same as it does currently.; - New drivers (in the works) will use this module rather than c+p functions from roa.py . _RE comments by @dgasmith_; - [x] Change naming scheme in tensor_helpers.py to clarify return types are not proper matrix/tensor objects; - [x] Change Exceptions raised to `PsiException` so that error information is printed to screen and the output files ; ## Questions; - [x] @lothian thoughts on the `registered_props` dict? It isn't very flexible, but I don't know if this kind of driver _needs_ to be flexible. The hard-coded `registerd_props` dict has been removed in favor of a solution that allows each driver to choose the arguments to the `property()` function in each sub-dir. The module doesn't need to know anything except what the calling driver tells it :).; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/395
https://github.com/psi4/psi4/pull/395:676,Modifiability,flexible,flexible,676,"## Description. Code used in the roa driver has been re-organized into a module `findif_response_utils`. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - ROA driver functions the same as it does currently.; - New drivers (in the works) will use this module rather than c+p functions from roa.py . _RE comments by @dgasmith_; - [x] Change naming scheme in tensor_helpers.py to clarify return types are not proper matrix/tensor objects; - [x] Change Exceptions raised to `PsiException` so that error information is printed to screen and the output files ; ## Questions; - [x] @lothian thoughts on the `registered_props` dict? It isn't very flexible, but I don't know if this kind of driver _needs_ to be flexible. The hard-coded `registerd_props` dict has been removed in favor of a solution that allows each driver to choose the arguments to the `property()` function in each sub-dir. The module doesn't need to know anything except what the calling driver tells it :).; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/395
https://github.com/psi4/psi4/pull/395:740,Modifiability,flexible,flexible,740,"## Description. Code used in the roa driver has been re-organized into a module `findif_response_utils`. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - ROA driver functions the same as it does currently.; - New drivers (in the works) will use this module rather than c+p functions from roa.py . _RE comments by @dgasmith_; - [x] Change naming scheme in tensor_helpers.py to clarify return types are not proper matrix/tensor objects; - [x] Change Exceptions raised to `PsiException` so that error information is printed to screen and the output files ; ## Questions; - [x] @lothian thoughts on the `registered_props` dict? It isn't very flexible, but I don't know if this kind of driver _needs_ to be flexible. The hard-coded `registerd_props` dict has been removed in favor of a solution that allows each driver to choose the arguments to the `property()` function in each sub-dir. The module doesn't need to know anything except what the calling driver tells it :).; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/395
https://github.com/psi4/psi4/issues/396:374,Availability,error,error,374,"I have recently bought a new MacBook Air, and I have homebrew for my developing environment (on my old mac I had MacPorts: I never managed to compile and I finally gave up). I cloned the psi4 repo and went for the simplest build (./setup build; cd build; make -j). Once I had all required packages the setup worked smoothly.; Unfortunately, ""make -j"" gives me the following error:. > clang: error: unable to execute command: posix_spawn failed: Resource temporarily unavailable. which from a simple minded ""LMGTFY"" search seems to be a problem with too many child processes spawned by make. removing the ""-j"" seems to work: 70% done and running so far...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/396
https://github.com/psi4/psi4/issues/396:391,Availability,error,error,391,"I have recently bought a new MacBook Air, and I have homebrew for my developing environment (on my old mac I had MacPorts: I never managed to compile and I finally gave up). I cloned the psi4 repo and went for the simplest build (./setup build; cd build; make -j). Once I had all required packages the setup worked smoothly.; Unfortunately, ""make -j"" gives me the following error:. > clang: error: unable to execute command: posix_spawn failed: Resource temporarily unavailable. which from a simple minded ""LMGTFY"" search seems to be a problem with too many child processes spawned by make. removing the ""-j"" seems to work: 70% done and running so far...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/396
https://github.com/psi4/psi4/issues/396:214,Usability,simpl,simplest,214,"I have recently bought a new MacBook Air, and I have homebrew for my developing environment (on my old mac I had MacPorts: I never managed to compile and I finally gave up). I cloned the psi4 repo and went for the simplest build (./setup build; cd build; make -j). Once I had all required packages the setup worked smoothly.; Unfortunately, ""make -j"" gives me the following error:. > clang: error: unable to execute command: posix_spawn failed: Resource temporarily unavailable. which from a simple minded ""LMGTFY"" search seems to be a problem with too many child processes spawned by make. removing the ""-j"" seems to work: 70% done and running so far...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/396
https://github.com/psi4/psi4/issues/396:492,Usability,simpl,simple,492,"I have recently bought a new MacBook Air, and I have homebrew for my developing environment (on my old mac I had MacPorts: I never managed to compile and I finally gave up). I cloned the psi4 repo and went for the simplest build (./setup build; cd build; make -j). Once I had all required packages the setup worked smoothly.; Unfortunately, ""make -j"" gives me the following error:. > clang: error: unable to execute command: posix_spawn failed: Resource temporarily unavailable. which from a simple minded ""LMGTFY"" search seems to be a problem with too many child processes spawned by make. removing the ""-j"" seems to work: 70% done and running so far...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/396
https://github.com/psi4/psi4/issues/398:70,Availability,error,error,70,"I was trying to compile psi4 using the Intel 14 compiler and I got an error:; PK_workers.cc(755): error: no instance of constructor ""psi::pk::PKWorker::PKWorker"" matches the argument list; argument types are: (boost::shared_ptrpsi::BasisSet, psi::pk::SharedSieve, long, int, size_t); PKWorker(primary,sieve, NULL,0,buf_size) {. I changed NULL to std:shared_ptr<AIOHandler>() and it fixed the compiler error. Do you think this may have a side effect?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/398
https://github.com/psi4/psi4/issues/398:98,Availability,error,error,98,"I was trying to compile psi4 using the Intel 14 compiler and I got an error:; PK_workers.cc(755): error: no instance of constructor ""psi::pk::PKWorker::PKWorker"" matches the argument list; argument types are: (boost::shared_ptrpsi::BasisSet, psi::pk::SharedSieve, long, int, size_t); PKWorker(primary,sieve, NULL,0,buf_size) {. I changed NULL to std:shared_ptr<AIOHandler>() and it fixed the compiler error. Do you think this may have a side effect?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/398
https://github.com/psi4/psi4/issues/398:401,Availability,error,error,401,"I was trying to compile psi4 using the Intel 14 compiler and I got an error:; PK_workers.cc(755): error: no instance of constructor ""psi::pk::PKWorker::PKWorker"" matches the argument list; argument types are: (boost::shared_ptrpsi::BasisSet, psi::pk::SharedSieve, long, int, size_t); PKWorker(primary,sieve, NULL,0,buf_size) {. I changed NULL to std:shared_ptr<AIOHandler>() and it fixed the compiler error. Do you think this may have a side effect?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/issues/398
https://github.com/psi4/psi4/pull/400:1203,Availability,failover,failover,1203,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/400:109,Energy Efficiency,reduce,reduce,109,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/400:449,Energy Efficiency,Reduce,Reduced,449,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/400:559,Testability,test,test,559,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/400:752,Testability,test,tests,752,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/400:869,Testability,test,test,869,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/400:1430,Usability,Feedback,Feedback,1430,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/400
https://github.com/psi4/psi4/pull/401:305,Deployability,install,installed,305,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:705,Deployability,configurat,configuration,705,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:603,Modifiability,config,config,603,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:675,Modifiability,config,config,675,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:698,Modifiability,plugin,plugin,698,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:705,Modifiability,config,configuration,705,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:27,Testability,test,test,27,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:147,Testability,test,test,147,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:178,Testability,test,test,178,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
https://github.com/psi4/psi4/pull/401:200,Testability,TEST,TEST,200,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://psicode.org,https://github.com/psi4/psi4/pull/401
